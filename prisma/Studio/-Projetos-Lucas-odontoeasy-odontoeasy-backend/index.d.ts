import {
  DMMF,
  DMMFClass,
  Engine,
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  sqltag as sql,
  empty,
  join,
  raw,
} from './runtime';

export { PrismaClientKnownRequestError }
export { PrismaClientUnknownRequestError }
export { PrismaClientRustPanicError }
export { PrismaClientInitializationError }
export { PrismaClientValidationError }

/**
 * Re-export of sql-template-tag
 */
export { sql, empty, join, raw }

/**
 * Prisma Client JS version: 2.2.0
 * Query Engine version: 45c4da4dd3ccd6a322796b228bdf937c7ce884e8
 */
export declare type PrismaVersion = {
  client: string
}

export declare const prismaVersion: PrismaVersion 

/**
 * Utility Types
 */

/**
 * From https://github.com/sindresorhus/type-fest/
 * Matches a JSON object.
 * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
 */
export declare type JsonObject = {[Key in string]?: JsonValue}
 
/**
 * From https://github.com/sindresorhus/type-fest/
 * Matches a JSON array.
 */
export declare interface JsonArray extends Array<JsonValue> {}
 
/**
 * From https://github.com/sindresorhus/type-fest/
 * Matches any valid JSON value.
 */
export declare type JsonValue = string | number | boolean | null | JsonObject | JsonArray

/**
 * Same as JsonObject, but allows undefined
 */
export declare type InputJsonObject = {[Key in string]?: JsonValue}
 
export declare interface InputJsonArray extends Array<JsonValue> {}
 
export declare type InputJsonValue = undefined |  string | number | boolean | null | InputJsonObject | InputJsonArray

declare type SelectAndInclude = {
  select: any
  include: any
}

declare type HasSelect = {
  select: any
}

declare type HasInclude = {
  include: any
}

declare type CheckSelect<T, S, U> = T extends SelectAndInclude
  ? 'Please either choose `select` or `include`'
  : T extends HasSelect
  ? U
  : T extends HasInclude
  ? U
  : S

/**
 * Get the type of the value, that the Promise holds.
 */
export declare type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

/**
 * Get the return type of a function which returns a Promise.
 */
export declare type PromiseReturnType<T extends (...args: any) => Promise<any>> = PromiseType<ReturnType<T>>


export declare type Enumerable<T> = T | Array<T>;

export declare type TrueKeys<T> = {
  [key in keyof T]: T[key] extends false | undefined | null ? never : key
}[keyof T]

/**
 * Subset
 * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
 */
export declare type Subset<T, U> = {
  [key in keyof T]: key extends keyof U ? T[key] : never;
};
declare class PrismaClientFetcher {
  private readonly prisma;
  private readonly debug;
  private readonly hooks?;
  constructor(prisma: PrismaClient<any, any>, debug?: boolean, hooks?: Hooks | undefined);
  request<T>(document: any, dataPath?: string[], rootField?: string, typeName?: string, isList?: boolean, callsite?: string, collectTimestamps?: any): Promise<T>;
  sanitizeMessage(message: string): string;
  protected unpack(document: any, data: any, path: string[], rootField?: string, isList?: boolean): any;
}


/**
 * Client
**/

export declare type Datasource = {
  url?: string
}

export type Datasources = {
  db?: Datasource
}

export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'

export interface PrismaClientOptions {
  /**
   * Overwrites the datasource url from your prisma.schema file
   */
  datasources?: Datasources

  /**
   * @default "colorless"
   */
  errorFormat?: ErrorFormat

  /**
   * @example
   * ```
   * // Defaults to stdout
   * log: ['query', 'info', 'warn', 'error']
   * 
   * // Emit as events
   * log: [
   *  { emit: 'stdout', level: 'query' },
   *  { emit: 'stdout', level: 'info' },
   *  { emit: 'stdout', level: 'warn' }
   *  { emit: 'stdout', level: 'error' }
   * ]
   * ```
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
   */
  log?: Array<LogLevel | LogDefinition>
}

export type Hooks = {
  beforeRequest?: (options: {query: string, path: string[], rootField?: string, typeName?: string, document: any}) => any
}

/* Types for Logging */
export type LogLevel = 'info' | 'query' | 'warn' | 'error'
export type LogDefinition = {
  level: LogLevel
  emit: 'stdout' | 'event'
}

export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
export type GetEvents<T extends Array<LogLevel | LogDefinition>> = GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]> 

export type QueryEvent = {
  timestamp: Date
  query: string
  params: string
  duration: number
  target: string
}

export type LogEvent = {
  timestamp: Date
  message: string
  target: string
}
/* End Types for Logging */

// tested in getLogLevel.test.ts
export declare function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js (ORM replacement)
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Clinics
 * const clinics = await prisma.clinic.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://github.com/prisma/prisma/blob/master/docs/prisma-client-js/api.md).
 */
export declare class PrismaClient<
  T extends PrismaClientOptions = PrismaClientOptions,
  U = keyof T extends 'log' ? T['log'] extends Array<LogLevel | LogDefinition> ? GetEvents<T['log']> : never : never
> {
  /**
   * @private
   */
  private fetcher;
  /**
   * @private
   */
  private readonly dmmf;
  /**
   * @private
   */
  private connectionPromise?;
  /**
   * @private
   */
  private disconnectionPromise?;
  /**
   * @private
   */
  private readonly engineConfig;
  /**
   * @private
   */
  private readonly measurePerformance;
  /**
   * @private
   */
  private engine: Engine;
  /**
   * @private
   */
  private errorFormat: ErrorFormat;

  /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js (ORM replacement)
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Clinics
   * const clinics = await prisma.clinic.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://github.com/prisma/prisma/blob/master/docs/prisma-client-js/api.md).
   */
  constructor(optionsArg?: T);
  on<V extends U>(eventType: V, callback: (event: V extends 'query' ? QueryEvent : LogEvent) => void): void;
  /**
   * Connect with the database
   */
  connect(): Promise<void>;
  /**
   * @private
   */
  private runDisconnect;
  /**
   * Disconnect from the database
   */
  disconnect(): Promise<any>;

  /**
   * Executes a raw query and returns the number of affected rows
   * @example
   * ```
   * // With parameters use prisma.executeRaw``, values will be escaped automatically
   * const result = await prisma.executeRaw`UPDATE User SET cool = ${true} WHERE id = ${1};`
   * // Or
   * const result = await prisma.executeRaw('UPDATE User SET cool = $1 WHERE id = $2 ;', true, 1)
  * ```
  * 
  * Read more in our [docs](https://github.com/prisma/prisma/blob/master/docs/prisma-client-js/api.md#raw-database-access).
  */
  executeRaw<T = any>(query: string | TemplateStringsArray, ...values: any[]): Promise<number>;

  /**
   * Performs a raw query and returns the SELECT data
   * @example
   * ```
   * // With parameters use prisma.queryRaw``, values will be escaped automatically
   * const result = await prisma.queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'ema.il'};`
   * // Or
   * const result = await prisma.queryRaw('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'ema.il')
  * ```
  * 
  * Read more in our [docs](https://github.com/prisma/prisma/blob/master/docs/prisma-client-js/api.md#raw-database-access).
  */
  queryRaw<T = any>(query: string | TemplateStringsArray, ...values: any[]): Promise<T>;

  /**
   * `prisma.clinic`: Exposes CRUD operations for the **Clinic** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Clinics
    * const clinics = await prisma.clinic.findMany()
    * ```
    */
  get clinic(): ClinicDelegate;

  /**
   * `prisma.clinic_payment_information`: Exposes CRUD operations for the **Clinic_payment_information** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Clinic_payment_informations
    * const clinic_payment_informations = await prisma.clinic_payment_information.findMany()
    * ```
    */
  get clinic_payment_information(): Clinic_payment_informationDelegate;

  /**
   * `prisma.clinic_finance_options`: Exposes CRUD operations for the **Clinic_finance_options** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Clinic_finance_options
    * const clinic_finance_options = await prisma.clinic_finance_options.findMany()
    * ```
    */
  get clinic_finance_options(): Clinic_finance_optionsDelegate;

  /**
   * `prisma.clinic_finance_month`: Exposes CRUD operations for the **Clinic_finance_month** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Clinic_finance_months
    * const clinic_finance_months = await prisma.clinic_finance_month.findMany()
    * ```
    */
  get clinic_finance_month(): Clinic_finance_monthDelegate;

  /**
   * `prisma.clinic_finance_day`: Exposes CRUD operations for the **Clinic_finance_day** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Clinic_finance_days
    * const clinic_finance_days = await prisma.clinic_finance_day.findMany()
    * ```
    */
  get clinic_finance_day(): Clinic_finance_dayDelegate;

  /**
   * `prisma.chairs`: Exposes CRUD operations for the **Chairs** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Chairs
    * const chairs = await prisma.chairs.findMany()
    * ```
    */
  get chairs(): ChairsDelegate;

  /**
   * `prisma.chair_finance_day`: Exposes CRUD operations for the **Chair_finance_day** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Chair_finance_days
    * const chair_finance_days = await prisma.chair_finance_day.findMany()
    * ```
    */
  get chair_finance_day(): Chair_finance_dayDelegate;

  /**
   * `prisma.clinic_finance_procedure`: Exposes CRUD operations for the **Clinic_finance_procedure** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Clinic_finance_procedures
    * const clinic_finance_procedures = await prisma.clinic_finance_procedure.findMany()
    * ```
    */
  get clinic_finance_procedure(): Clinic_finance_procedureDelegate;

  /**
   * `prisma.email`: Exposes CRUD operations for the **Email** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Emails
    * const emails = await prisma.email.findMany()
    * ```
    */
  get email(): EmailDelegate;

  /**
   * `prisma.logs`: Exposes CRUD operations for the **Logs** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Logs
    * const logs = await prisma.logs.findMany()
    * ```
    */
  get logs(): LogsDelegate;

  /**
   * `prisma.clinic_phones`: Exposes CRUD operations for the **Clinic_phones** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Clinic_phones
    * const clinic_phones = await prisma.clinic_phones.findMany()
    * ```
    */
  get clinic_phones(): Clinic_phonesDelegate;

  /**
   * `prisma.clinic_procedures_particular_values`: Exposes CRUD operations for the **Clinic_procedures_particular_values** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Clinic_procedures_particular_values
    * const clinic_procedures_particular_values = await prisma.clinic_procedures_particular_values.findMany()
    * ```
    */
  get clinic_procedures_particular_values(): Clinic_procedures_particular_valuesDelegate;

  /**
   * `prisma.clinic_procedures_insurance_values`: Exposes CRUD operations for the **Clinic_procedures_insurance_values** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Clinic_procedures_insurance_values
    * const clinic_procedures_insurance_values = await prisma.clinic_procedures_insurance_values.findMany()
    * ```
    */
  get clinic_procedures_insurance_values(): Clinic_procedures_insurance_valuesDelegate;

  /**
   * `prisma.schedule`: Exposes CRUD operations for the **Schedule** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Schedules
    * const schedules = await prisma.schedule.findMany()
    * ```
    */
  get schedule(): ScheduleDelegate;

  /**
   * `prisma.treatment_evolution`: Exposes CRUD operations for the **Treatment_evolution** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Treatment_evolutions
    * const treatment_evolutions = await prisma.treatment_evolution.findMany()
    * ```
    */
  get treatment_evolution(): Treatment_evolutionDelegate;

  /**
   * `prisma.procedures`: Exposes CRUD operations for the **Procedures** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Procedures
    * const procedures = await prisma.procedures.findMany()
    * ```
    */
  get procedures(): ProceduresDelegate;

  /**
   * `prisma.technicalmanager`: Exposes CRUD operations for the **Technicalmanager** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Technicalmanagers
    * const technicalmanagers = await prisma.technicalmanager.findMany()
    * ```
    */
  get technicalmanager(): TechnicalmanagerDelegate;

  /**
   * `prisma.legalresponsible`: Exposes CRUD operations for the **Legalresponsible** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Legalresponsibles
    * const legalresponsibles = await prisma.legalresponsible.findMany()
    * ```
    */
  get legalresponsible(): LegalresponsibleDelegate;

  /**
   * `prisma.patient`: Exposes CRUD operations for the **Patient** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Patients
    * const patients = await prisma.patient.findMany()
    * ```
    */
  get patient(): PatientDelegate;

  /**
   * `prisma.odontogram`: Exposes CRUD operations for the **Odontogram** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Odontograms
    * const odontograms = await prisma.odontogram.findMany()
    * ```
    */
  get odontogram(): OdontogramDelegate;

  /**
   * `prisma.unit11`: Exposes CRUD operations for the **Unit11** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit11s
    * const unit11s = await prisma.unit11.findMany()
    * ```
    */
  get unit11(): Unit11Delegate;

  /**
   * `prisma.unit12`: Exposes CRUD operations for the **Unit12** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit12s
    * const unit12s = await prisma.unit12.findMany()
    * ```
    */
  get unit12(): Unit12Delegate;

  /**
   * `prisma.unit13`: Exposes CRUD operations for the **Unit13** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit13s
    * const unit13s = await prisma.unit13.findMany()
    * ```
    */
  get unit13(): Unit13Delegate;

  /**
   * `prisma.unit14`: Exposes CRUD operations for the **Unit14** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit14s
    * const unit14s = await prisma.unit14.findMany()
    * ```
    */
  get unit14(): Unit14Delegate;

  /**
   * `prisma.unit15`: Exposes CRUD operations for the **Unit15** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit15s
    * const unit15s = await prisma.unit15.findMany()
    * ```
    */
  get unit15(): Unit15Delegate;

  /**
   * `prisma.unit16`: Exposes CRUD operations for the **Unit16** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit16s
    * const unit16s = await prisma.unit16.findMany()
    * ```
    */
  get unit16(): Unit16Delegate;

  /**
   * `prisma.unit17`: Exposes CRUD operations for the **Unit17** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit17s
    * const unit17s = await prisma.unit17.findMany()
    * ```
    */
  get unit17(): Unit17Delegate;

  /**
   * `prisma.unit18`: Exposes CRUD operations for the **Unit18** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit18s
    * const unit18s = await prisma.unit18.findMany()
    * ```
    */
  get unit18(): Unit18Delegate;

  /**
   * `prisma.unit21`: Exposes CRUD operations for the **Unit21** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit21s
    * const unit21s = await prisma.unit21.findMany()
    * ```
    */
  get unit21(): Unit21Delegate;

  /**
   * `prisma.unit22`: Exposes CRUD operations for the **Unit22** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit22s
    * const unit22s = await prisma.unit22.findMany()
    * ```
    */
  get unit22(): Unit22Delegate;

  /**
   * `prisma.unit23`: Exposes CRUD operations for the **Unit23** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit23s
    * const unit23s = await prisma.unit23.findMany()
    * ```
    */
  get unit23(): Unit23Delegate;

  /**
   * `prisma.unit24`: Exposes CRUD operations for the **Unit24** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit24s
    * const unit24s = await prisma.unit24.findMany()
    * ```
    */
  get unit24(): Unit24Delegate;

  /**
   * `prisma.unit25`: Exposes CRUD operations for the **Unit25** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit25s
    * const unit25s = await prisma.unit25.findMany()
    * ```
    */
  get unit25(): Unit25Delegate;

  /**
   * `prisma.unit26`: Exposes CRUD operations for the **Unit26** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit26s
    * const unit26s = await prisma.unit26.findMany()
    * ```
    */
  get unit26(): Unit26Delegate;

  /**
   * `prisma.unit27`: Exposes CRUD operations for the **Unit27** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit27s
    * const unit27s = await prisma.unit27.findMany()
    * ```
    */
  get unit27(): Unit27Delegate;

  /**
   * `prisma.unit28`: Exposes CRUD operations for the **Unit28** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit28s
    * const unit28s = await prisma.unit28.findMany()
    * ```
    */
  get unit28(): Unit28Delegate;

  /**
   * `prisma.unit31`: Exposes CRUD operations for the **Unit31** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit31s
    * const unit31s = await prisma.unit31.findMany()
    * ```
    */
  get unit31(): Unit31Delegate;

  /**
   * `prisma.unit32`: Exposes CRUD operations for the **Unit32** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit32s
    * const unit32s = await prisma.unit32.findMany()
    * ```
    */
  get unit32(): Unit32Delegate;

  /**
   * `prisma.unit33`: Exposes CRUD operations for the **Unit33** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit33s
    * const unit33s = await prisma.unit33.findMany()
    * ```
    */
  get unit33(): Unit33Delegate;

  /**
   * `prisma.unit34`: Exposes CRUD operations for the **Unit34** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit34s
    * const unit34s = await prisma.unit34.findMany()
    * ```
    */
  get unit34(): Unit34Delegate;

  /**
   * `prisma.unit35`: Exposes CRUD operations for the **Unit35** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit35s
    * const unit35s = await prisma.unit35.findMany()
    * ```
    */
  get unit35(): Unit35Delegate;

  /**
   * `prisma.unit36`: Exposes CRUD operations for the **Unit36** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit36s
    * const unit36s = await prisma.unit36.findMany()
    * ```
    */
  get unit36(): Unit36Delegate;

  /**
   * `prisma.unit37`: Exposes CRUD operations for the **Unit37** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit37s
    * const unit37s = await prisma.unit37.findMany()
    * ```
    */
  get unit37(): Unit37Delegate;

  /**
   * `prisma.unit38`: Exposes CRUD operations for the **Unit38** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit38s
    * const unit38s = await prisma.unit38.findMany()
    * ```
    */
  get unit38(): Unit38Delegate;

  /**
   * `prisma.unit41`: Exposes CRUD operations for the **Unit41** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit41s
    * const unit41s = await prisma.unit41.findMany()
    * ```
    */
  get unit41(): Unit41Delegate;

  /**
   * `prisma.unit42`: Exposes CRUD operations for the **Unit42** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit42s
    * const unit42s = await prisma.unit42.findMany()
    * ```
    */
  get unit42(): Unit42Delegate;

  /**
   * `prisma.unit43`: Exposes CRUD operations for the **Unit43** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit43s
    * const unit43s = await prisma.unit43.findMany()
    * ```
    */
  get unit43(): Unit43Delegate;

  /**
   * `prisma.unit44`: Exposes CRUD operations for the **Unit44** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit44s
    * const unit44s = await prisma.unit44.findMany()
    * ```
    */
  get unit44(): Unit44Delegate;

  /**
   * `prisma.unit45`: Exposes CRUD operations for the **Unit45** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit45s
    * const unit45s = await prisma.unit45.findMany()
    * ```
    */
  get unit45(): Unit45Delegate;

  /**
   * `prisma.unit46`: Exposes CRUD operations for the **Unit46** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit46s
    * const unit46s = await prisma.unit46.findMany()
    * ```
    */
  get unit46(): Unit46Delegate;

  /**
   * `prisma.unit47`: Exposes CRUD operations for the **Unit47** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit47s
    * const unit47s = await prisma.unit47.findMany()
    * ```
    */
  get unit47(): Unit47Delegate;

  /**
   * `prisma.unit48`: Exposes CRUD operations for the **Unit48** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit48s
    * const unit48s = await prisma.unit48.findMany()
    * ```
    */
  get unit48(): Unit48Delegate;

  /**
   * `prisma.unit51`: Exposes CRUD operations for the **Unit51** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit51s
    * const unit51s = await prisma.unit51.findMany()
    * ```
    */
  get unit51(): Unit51Delegate;

  /**
   * `prisma.unit52`: Exposes CRUD operations for the **Unit52** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit52s
    * const unit52s = await prisma.unit52.findMany()
    * ```
    */
  get unit52(): Unit52Delegate;

  /**
   * `prisma.unit53`: Exposes CRUD operations for the **Unit53** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit53s
    * const unit53s = await prisma.unit53.findMany()
    * ```
    */
  get unit53(): Unit53Delegate;

  /**
   * `prisma.unit54`: Exposes CRUD operations for the **Unit54** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit54s
    * const unit54s = await prisma.unit54.findMany()
    * ```
    */
  get unit54(): Unit54Delegate;

  /**
   * `prisma.unit55`: Exposes CRUD operations for the **Unit55** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit55s
    * const unit55s = await prisma.unit55.findMany()
    * ```
    */
  get unit55(): Unit55Delegate;

  /**
   * `prisma.unit61`: Exposes CRUD operations for the **Unit61** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit61s
    * const unit61s = await prisma.unit61.findMany()
    * ```
    */
  get unit61(): Unit61Delegate;

  /**
   * `prisma.unit62`: Exposes CRUD operations for the **Unit62** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit62s
    * const unit62s = await prisma.unit62.findMany()
    * ```
    */
  get unit62(): Unit62Delegate;

  /**
   * `prisma.unit63`: Exposes CRUD operations for the **Unit63** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit63s
    * const unit63s = await prisma.unit63.findMany()
    * ```
    */
  get unit63(): Unit63Delegate;

  /**
   * `prisma.unit64`: Exposes CRUD operations for the **Unit64** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit64s
    * const unit64s = await prisma.unit64.findMany()
    * ```
    */
  get unit64(): Unit64Delegate;

  /**
   * `prisma.unit65`: Exposes CRUD operations for the **Unit65** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit65s
    * const unit65s = await prisma.unit65.findMany()
    * ```
    */
  get unit65(): Unit65Delegate;

  /**
   * `prisma.unit71`: Exposes CRUD operations for the **Unit71** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit71s
    * const unit71s = await prisma.unit71.findMany()
    * ```
    */
  get unit71(): Unit71Delegate;

  /**
   * `prisma.unit72`: Exposes CRUD operations for the **Unit72** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit72s
    * const unit72s = await prisma.unit72.findMany()
    * ```
    */
  get unit72(): Unit72Delegate;

  /**
   * `prisma.unit73`: Exposes CRUD operations for the **Unit73** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit73s
    * const unit73s = await prisma.unit73.findMany()
    * ```
    */
  get unit73(): Unit73Delegate;

  /**
   * `prisma.unit74`: Exposes CRUD operations for the **Unit74** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit74s
    * const unit74s = await prisma.unit74.findMany()
    * ```
    */
  get unit74(): Unit74Delegate;

  /**
   * `prisma.unit75`: Exposes CRUD operations for the **Unit75** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit75s
    * const unit75s = await prisma.unit75.findMany()
    * ```
    */
  get unit75(): Unit75Delegate;

  /**
   * `prisma.unit81`: Exposes CRUD operations for the **Unit81** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit81s
    * const unit81s = await prisma.unit81.findMany()
    * ```
    */
  get unit81(): Unit81Delegate;

  /**
   * `prisma.unit82`: Exposes CRUD operations for the **Unit82** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit82s
    * const unit82s = await prisma.unit82.findMany()
    * ```
    */
  get unit82(): Unit82Delegate;

  /**
   * `prisma.unit83`: Exposes CRUD operations for the **Unit83** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit83s
    * const unit83s = await prisma.unit83.findMany()
    * ```
    */
  get unit83(): Unit83Delegate;

  /**
   * `prisma.unit84`: Exposes CRUD operations for the **Unit84** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit84s
    * const unit84s = await prisma.unit84.findMany()
    * ```
    */
  get unit84(): Unit84Delegate;

  /**
   * `prisma.unit85`: Exposes CRUD operations for the **Unit85** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unit85s
    * const unit85s = await prisma.unit85.findMany()
    * ```
    */
  get unit85(): Unit85Delegate;

  /**
   * `prisma.anamnesis`: Exposes CRUD operations for the **Anamnesis** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Anamneses
    * const anamneses = await prisma.anamnesis.findMany()
    * ```
    */
  get anamnesis(): AnamnesisDelegate;

  /**
   * `prisma.implantology`: Exposes CRUD operations for the **Implantology** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Implantologies
    * const implantologies = await prisma.implantology.findMany()
    * ```
    */
  get implantology(): ImplantologyDelegate;

  /**
   * `prisma.implantology_questionnaire`: Exposes CRUD operations for the **Implantology_questionnaire** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Implantology_questionnaires
    * const implantology_questionnaires = await prisma.implantology_questionnaire.findMany()
    * ```
    */
  get implantology_questionnaire(): Implantology_questionnaireDelegate;

  /**
   * `prisma.ortodontics`: Exposes CRUD operations for the **Ortodontics** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ortodontics
    * const ortodontics = await prisma.ortodontics.findMany()
    * ```
    */
  get ortodontics(): OrtodonticsDelegate;

  /**
   * `prisma.ortodontics_questionnaire`: Exposes CRUD operations for the **Ortodontics_questionnaire** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ortodontics_questionnaires
    * const ortodontics_questionnaires = await prisma.ortodontics_questionnaire.findMany()
    * ```
    */
  get ortodontics_questionnaire(): Ortodontics_questionnaireDelegate;

  /**
   * `prisma.oral_health_questionnaire`: Exposes CRUD operations for the **Oral_health_questionnaire** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Oral_health_questionnaires
    * const oral_health_questionnaires = await prisma.oral_health_questionnaire.findMany()
    * ```
    */
  get oral_health_questionnaire(): Oral_health_questionnaireDelegate;

  /**
   * `prisma.tMJ_problems_questionnaire`: Exposes CRUD operations for the **TMJ_problems_questionnaire** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TMJ_problems_questionnaires
    * const tMJ_problems_questionnaires = await prisma.tMJ_problems_questionnaire.findMany()
    * ```
    */
  get tMJ_problems_questionnaire(): TMJ_problems_questionnaireDelegate;

  /**
   * `prisma.vital_signs_questionnaire`: Exposes CRUD operations for the **Vital_signs_questionnaire** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Vital_signs_questionnaires
    * const vital_signs_questionnaires = await prisma.vital_signs_questionnaire.findMany()
    * ```
    */
  get vital_signs_questionnaire(): Vital_signs_questionnaireDelegate;

  /**
   * `prisma.diet_questionnaire`: Exposes CRUD operations for the **Diet_questionnaire** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Diet_questionnaires
    * const diet_questionnaires = await prisma.diet_questionnaire.findMany()
    * ```
    */
  get diet_questionnaire(): Diet_questionnaireDelegate;

  /**
   * `prisma.main_anamnesis_questionnaire`: Exposes CRUD operations for the **Main_anamnesis_questionnaire** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Main_anamnesis_questionnaires
    * const main_anamnesis_questionnaires = await prisma.main_anamnesis_questionnaire.findMany()
    * ```
    */
  get main_anamnesis_questionnaire(): Main_anamnesis_questionnaireDelegate;

  /**
   * `prisma.dont_know_questions`: Exposes CRUD operations for the **Dont_know_questions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Dont_know_questions
    * const dont_know_questions = await prisma.dont_know_questions.findMany()
    * ```
    */
  get dont_know_questions(): Dont_know_questionsDelegate;

  /**
   * `prisma.dentist`: Exposes CRUD operations for the **Dentist** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Dentists
    * const dentists = await prisma.dentist.findMany()
    * ```
    */
  get dentist(): DentistDelegate;

  /**
   * `prisma.clinic_specializations`: Exposes CRUD operations for the **Clinic_specializations** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Clinic_specializations
    * const clinic_specializations = await prisma.clinic_specializations.findMany()
    * ```
    */
  get clinic_specializations(): Clinic_specializationsDelegate;

  /**
   * `prisma.employeer`: Exposes CRUD operations for the **Employeer** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Employeers
    * const employeers = await prisma.employeer.findMany()
    * ```
    */
  get employeer(): EmployeerDelegate;

  /**
   * `prisma.clinic_Roles`: Exposes CRUD operations for the **Clinic_Roles** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Clinic_Roles
    * const clinic_Roles = await prisma.clinic_Roles.findMany()
    * ```
    */
  get clinic_Roles(): Clinic_RolesDelegate;

  /**
   * `prisma.dental_insurance`: Exposes CRUD operations for the **Dental_insurance** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Dental_insurances
    * const dental_insurances = await prisma.dental_insurance.findMany()
    * ```
    */
  get dental_insurance(): Dental_insuranceDelegate;
}



/**
 * Enums
 */

// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275

export declare const OrderByArg: {
  asc: 'asc',
  desc: 'desc'
};

export declare type OrderByArg = (typeof OrderByArg)[keyof typeof OrderByArg]


export declare const Language: {
  ENGLISH: 'ENGLISH',
  PORTUGUESE: 'PORTUGUESE'
};

export declare type Language = (typeof Language)[keyof typeof Language]


export declare const Contact_means: {
  WHATTSAPP_message: 'WHATTSAPP_message',
  WHATTSAPP_call: 'WHATTSAPP_call',
  CALL: 'CALL',
  SMS: 'SMS'
};

export declare type Contact_means = (typeof Contact_means)[keyof typeof Contact_means]


export declare const Gender: {
  MALE: 'MALE',
  FEMALE: 'FEMALE'
};

export declare type Gender = (typeof Gender)[keyof typeof Gender]


export declare const yes_no: {
  Yes: 'Yes',
  No: 'No'
};

export declare type yes_no = (typeof yes_no)[keyof typeof yes_no]


export declare const How_often: {
  EVERYDAY: 'EVERYDAY',
  NEVER: 'NEVER',
  OCASIONALLY: 'OCASIONALLY',
  MULTIPLE_TIMES_EVERYDAY: 'MULTIPLE_TIMES_EVERYDAY'
};

export declare type How_often = (typeof How_often)[keyof typeof How_often]


export declare const Implant_types: {
  UNITARY: 'UNITARY',
  MULTIPLE_UNITS_SUPPORT: 'MULTIPLE_UNITS_SUPPORT',
  NONE: 'NONE'
};

export declare type Implant_types = (typeof Implant_types)[keyof typeof Implant_types]


export declare const Ortodontic_treatment_type: {
  FIXED_METAL_APPLIANCE: 'FIXED_METAL_APPLIANCE',
  AESTHETIC_FIXED_APPLIANCE: 'AESTHETIC_FIXED_APPLIANCE',
  SELF_CONNECTED_DEVICE: 'SELF_CONNECTED_DEVICE',
  LINGUAL_APPLIANCE: 'LINGUAL_APPLIANCE',
  TRANSPARENT_ALIGNERS: 'TRANSPARENT_ALIGNERS',
  PALATAL_EXPANDER: 'PALATAL_EXPANDER',
  MOBILE_DEVICE: 'MOBILE_DEVICE',
  HEADGEAR: 'HEADGEAR'
};

export declare type Ortodontic_treatment_type = (typeof Ortodontic_treatment_type)[keyof typeof Ortodontic_treatment_type]


export declare const Restorations_types: {
  INLAY: 'INLAY',
  ONLAY: 'ONLAY',
  OVERLAY: 'OVERLAY'
};

export declare type Restorations_types = (typeof Restorations_types)[keyof typeof Restorations_types]


export declare const Pulp_states: {
  NECROSED: 'NECROSED',
  VITAL: 'VITAL',
  PULPITE: 'PULPITE'
};

export declare type Pulp_states = (typeof Pulp_states)[keyof typeof Pulp_states]


export declare const Payment_status: {
  PAID: 'PAID',
  NOT_PAID: 'NOT_PAID',
  PARCIAL_PAYMENT: 'PARCIAL_PAYMENT'
};

export declare type Payment_status = (typeof Payment_status)[keyof typeof Payment_status]


export declare const Payment_method: {
  CREDIT_CARD: 'CREDIT_CARD',
  DEBIT_CARD: 'DEBIT_CARD',
  DEPOSIT: 'DEPOSIT'
};

export declare type Payment_method = (typeof Payment_method)[keyof typeof Payment_method]


export declare const Specializations: {
  ORAL_MAXILLOFACIAL_SURGERY_AND_TRAUMATOLOGY: 'ORAL_MAXILLOFACIAL_SURGERY_AND_TRAUMATOLOGY',
  DENTISTRY: 'DENTISTRY',
  TEMPORO_MANDIBULAR_AND_OROFACIAL_PAIN_DYSFUNCTION: 'TEMPORO_MANDIBULAR_AND_OROFACIAL_PAIN_DYSFUNCTION',
  ENDODONTICS: 'ENDODONTICS',
  IMPLANTOLOGY: 'IMPLANTOLOGY',
  PEDIATRIC_DENTISTRY: 'PEDIATRIC_DENTISTRY',
  ORTHODONTICS: 'ORTHODONTICS',
  PERIODONTICS: 'PERIODONTICS',
  RADIOLOGY: 'RADIOLOGY',
  COLLECTIVE_HEALTH: 'COLLECTIVE_HEALTH',
  STOMATOLOGY: 'STOMATOLOGY',
  ELDERLY_DENTIST: 'ELDERLY_DENTIST',
  FORENSIC_DENTISTRY: 'FORENSIC_DENTISTRY',
  PATIENTS_WITH_SPECIAL_NEEDS: 'PATIENTS_WITH_SPECIAL_NEEDS',
  OCCUPATIONAL_DENTISTRY: 'OCCUPATIONAL_DENTISTRY',
  DENTAL_PROSTHESIS: 'DENTAL_PROSTHESIS',
  ORAL_AND_MAXILLOFACIAL_PROSTHESIS: 'ORAL_AND_MAXILLOFACIAL_PROSTHESIS',
  ORAL_PATHOLOGY: 'ORAL_PATHOLOGY'
};

export declare type Specializations = (typeof Specializations)[keyof typeof Specializations]


export declare const Phonetypes: {
  BRASILIAN_CELLPHONE_NUMBER: 'BRASILIAN_CELLPHONE_NUMBER',
  BRASILIAN_FIX_NUMBER: 'BRASILIAN_FIX_NUMBER',
  EUA_NUMBER: 'EUA_NUMBER',
  NONE: 'NONE'
};

export declare type Phonetypes = (typeof Phonetypes)[keyof typeof Phonetypes]


export declare const Questionnaires: {
  Main_anamnesis_questionnaire: 'Main_anamnesis_questionnaire',
  Vital_signs_questionnaire: 'Vital_signs_questionnaire',
  Oral_health_questionnaire: 'Oral_health_questionnaire',
  Diet_questionnaire: 'Diet_questionnaire'
};

export declare type Questionnaires = (typeof Questionnaires)[keyof typeof Questionnaires]



/**
 * Model Clinic
 */

export type Clinic = {
  registered_id: string
  cnpj: string
  socialreason: string
  fantasy_name: string
  multipleclinics: boolean
  numberofbranches: number
  dentalchairs: number | null
  averagepatientsperday: number | null
  country: string | null
  state: string | null
  city: string | null
  neighborhood: string | null
  CEP: string | null
  website: string | null
  password: string | null
  ssl_enabled: boolean | null
  two_factor_autentication: boolean | null
  access_blocked: boolean | null
  free_trial: boolean
  free_trial_days_left: number
  language: Language
  createdAt: Date
  updatedAt: Date
}



export type ClinicSelect = {
  registered_id?: boolean
  cnpj?: boolean
  socialreason?: boolean
  fantasy_name?: boolean
  multipleclinics?: boolean
  numberofbranches?: boolean
  dentalchairs?: boolean
  averagepatientsperday?: boolean
  country?: boolean
  state?: boolean
  city?: boolean
  neighborhood?: boolean
  CEP?: boolean
  website?: boolean
  emails?: boolean | FindManyEmailArgs
  clinic_phones?: boolean | FindManyClinic_phonesArgs
  patients?: boolean | FindManyPatientArgs
  destists?: boolean | FindManyDentistArgs
  employeers?: boolean | FindManyEmployeerArgs
  technicalmanager?: boolean | TechnicalmanagerArgs
  legalresponsible?: boolean | LegalresponsibleArgs
  password?: boolean
  ssl_enabled?: boolean
  two_factor_autentication?: boolean
  insuranses?: boolean | FindManyDental_insuranceArgs
  access_blocked?: boolean
  free_trial?: boolean
  free_trial_days_left?: boolean
  language?: boolean
  logs?: boolean | FindManyLogsArgs
  createdAt?: boolean
  updatedAt?: boolean
  Clinic_payment_information?: boolean | FindManyClinic_payment_informationArgs
  Clinic_finance_options?: boolean | FindManyClinic_finance_optionsArgs
  Clinic_finance_month?: boolean | FindManyClinic_finance_monthArgs
  Clinic_finance_day?: boolean | FindManyClinic_finance_dayArgs
  Chairs?: boolean | FindManyChairsArgs
  Chair_finance_day?: boolean | FindManyChair_finance_dayArgs
  Clinic_finance_procedure?: boolean | FindManyClinic_finance_procedureArgs
  Patient?: boolean | FindManyPatientArgs
  Dentist?: boolean | FindManyDentistArgs
}

export type ClinicInclude = {
  emails?: boolean | FindManyEmailArgs
  clinic_phones?: boolean | FindManyClinic_phonesArgs
  patients?: boolean | FindManyPatientArgs
  destists?: boolean | FindManyDentistArgs
  employeers?: boolean | FindManyEmployeerArgs
  technicalmanager?: boolean | TechnicalmanagerArgs
  legalresponsible?: boolean | LegalresponsibleArgs
  insuranses?: boolean | FindManyDental_insuranceArgs
  logs?: boolean | FindManyLogsArgs
  Clinic_payment_information?: boolean | FindManyClinic_payment_informationArgs
  Clinic_finance_options?: boolean | FindManyClinic_finance_optionsArgs
  Clinic_finance_month?: boolean | FindManyClinic_finance_monthArgs
  Clinic_finance_day?: boolean | FindManyClinic_finance_dayArgs
  Chairs?: boolean | FindManyChairsArgs
  Chair_finance_day?: boolean | FindManyChair_finance_dayArgs
  Clinic_finance_procedure?: boolean | FindManyClinic_finance_procedureArgs
  Patient?: boolean | FindManyPatientArgs
  Dentist?: boolean | FindManyDentistArgs
}

export type ClinicGetPayload<
  S extends boolean | null | undefined | ClinicArgs,
  U = keyof S
> = S extends true
  ? Clinic
  : S extends undefined
  ? never
  : S extends ClinicArgs | FindManyClinicArgs
  ? 'include' extends U
    ? Clinic  & {
      [P in TrueKeys<S['include']>]:
      P extends 'emails'
      ? Array<EmailGetPayload<S['include'][P]>> :
      P extends 'clinic_phones'
      ? Array<Clinic_phonesGetPayload<S['include'][P]>> :
      P extends 'patients'
      ? Array<PatientGetPayload<S['include'][P]>> :
      P extends 'destists'
      ? Array<DentistGetPayload<S['include'][P]>> :
      P extends 'employeers'
      ? Array<EmployeerGetPayload<S['include'][P]>> :
      P extends 'technicalmanager'
      ? TechnicalmanagerGetPayload<S['include'][P]> | null :
      P extends 'legalresponsible'
      ? LegalresponsibleGetPayload<S['include'][P]> | null :
      P extends 'insuranses'
      ? Array<Dental_insuranceGetPayload<S['include'][P]>> :
      P extends 'logs'
      ? Array<LogsGetPayload<S['include'][P]>> :
      P extends 'Clinic_payment_information'
      ? Array<Clinic_payment_informationGetPayload<S['include'][P]>> :
      P extends 'Clinic_finance_options'
      ? Array<Clinic_finance_optionsGetPayload<S['include'][P]>> :
      P extends 'Clinic_finance_month'
      ? Array<Clinic_finance_monthGetPayload<S['include'][P]>> :
      P extends 'Clinic_finance_day'
      ? Array<Clinic_finance_dayGetPayload<S['include'][P]>> :
      P extends 'Chairs'
      ? Array<ChairsGetPayload<S['include'][P]>> :
      P extends 'Chair_finance_day'
      ? Array<Chair_finance_dayGetPayload<S['include'][P]>> :
      P extends 'Clinic_finance_procedure'
      ? Array<Clinic_finance_procedureGetPayload<S['include'][P]>> :
      P extends 'Patient'
      ? Array<PatientGetPayload<S['include'][P]>> :
      P extends 'Dentist'
      ? Array<DentistGetPayload<S['include'][P]>> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Clinic ? Clinic[P]
: 
      P extends 'emails'
      ? Array<EmailGetPayload<S['select'][P]>> :
      P extends 'clinic_phones'
      ? Array<Clinic_phonesGetPayload<S['select'][P]>> :
      P extends 'patients'
      ? Array<PatientGetPayload<S['select'][P]>> :
      P extends 'destists'
      ? Array<DentistGetPayload<S['select'][P]>> :
      P extends 'employeers'
      ? Array<EmployeerGetPayload<S['select'][P]>> :
      P extends 'technicalmanager'
      ? TechnicalmanagerGetPayload<S['select'][P]> | null :
      P extends 'legalresponsible'
      ? LegalresponsibleGetPayload<S['select'][P]> | null :
      P extends 'insuranses'
      ? Array<Dental_insuranceGetPayload<S['select'][P]>> :
      P extends 'logs'
      ? Array<LogsGetPayload<S['select'][P]>> :
      P extends 'Clinic_payment_information'
      ? Array<Clinic_payment_informationGetPayload<S['select'][P]>> :
      P extends 'Clinic_finance_options'
      ? Array<Clinic_finance_optionsGetPayload<S['select'][P]>> :
      P extends 'Clinic_finance_month'
      ? Array<Clinic_finance_monthGetPayload<S['select'][P]>> :
      P extends 'Clinic_finance_day'
      ? Array<Clinic_finance_dayGetPayload<S['select'][P]>> :
      P extends 'Chairs'
      ? Array<ChairsGetPayload<S['select'][P]>> :
      P extends 'Chair_finance_day'
      ? Array<Chair_finance_dayGetPayload<S['select'][P]>> :
      P extends 'Clinic_finance_procedure'
      ? Array<Clinic_finance_procedureGetPayload<S['select'][P]>> :
      P extends 'Patient'
      ? Array<PatientGetPayload<S['select'][P]>> :
      P extends 'Dentist'
      ? Array<DentistGetPayload<S['select'][P]>> : never
    }
  : Clinic
: Clinic


export interface ClinicDelegate {
  /**
   * Find zero or one Clinic.
   * @param {FindOneClinicArgs} args - Arguments to find a Clinic
   * @example
   * // Get one Clinic
   * const clinic = await prisma.clinic.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneClinicArgs>(
    args: Subset<T, FindOneClinicArgs>
  ): CheckSelect<T, Prisma__ClinicClient<Clinic | null>, Prisma__ClinicClient<ClinicGetPayload<T> | null>>
  /**
   * Find zero or more Clinics.
   * @param {FindManyClinicArgs=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Clinics
   * const clinics = await prisma.clinic.findMany()
   * 
   * // Get first 10 Clinics
   * const clinics = await prisma.clinic.findMany({ take: 10 })
   * 
   * // Only select the `registered_id`
   * const clinicWithRegistered_idOnly = await prisma.clinic.findMany({ select: { registered_id: true } })
   * 
  **/
  findMany<T extends FindManyClinicArgs>(
    args?: Subset<T, FindManyClinicArgs>
  ): CheckSelect<T, Promise<Array<Clinic>>, Promise<Array<ClinicGetPayload<T>>>>
  /**
   * Create a Clinic.
   * @param {ClinicCreateArgs} args - Arguments to create a Clinic.
   * @example
   * // Create one Clinic
   * const Clinic = await prisma.clinic.create({
   *   data: {
   *     // ... data to create a Clinic
   *   }
   * })
   * 
  **/
  create<T extends ClinicCreateArgs>(
    args: Subset<T, ClinicCreateArgs>
  ): CheckSelect<T, Prisma__ClinicClient<Clinic>, Prisma__ClinicClient<ClinicGetPayload<T>>>
  /**
   * Delete a Clinic.
   * @param {ClinicDeleteArgs} args - Arguments to delete one Clinic.
   * @example
   * // Delete one Clinic
   * const Clinic = await prisma.clinic.delete({
   *   where: {
   *     // ... filter to delete one Clinic
   *   }
   * })
   * 
  **/
  delete<T extends ClinicDeleteArgs>(
    args: Subset<T, ClinicDeleteArgs>
  ): CheckSelect<T, Prisma__ClinicClient<Clinic>, Prisma__ClinicClient<ClinicGetPayload<T>>>
  /**
   * Update one Clinic.
   * @param {ClinicUpdateArgs} args - Arguments to update one Clinic.
   * @example
   * // Update one Clinic
   * const clinic = await prisma.clinic.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends ClinicUpdateArgs>(
    args: Subset<T, ClinicUpdateArgs>
  ): CheckSelect<T, Prisma__ClinicClient<Clinic>, Prisma__ClinicClient<ClinicGetPayload<T>>>
  /**
   * Delete zero or more Clinics.
   * @param {ClinicDeleteManyArgs} args - Arguments to filter Clinics to delete.
   * @example
   * // Delete a few Clinics
   * const { count } = await prisma.clinic.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends ClinicDeleteManyArgs>(
    args: Subset<T, ClinicDeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Clinics.
   * @param {ClinicUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Clinics
   * const clinic = await prisma.clinic.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends ClinicUpdateManyArgs>(
    args: Subset<T, ClinicUpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Clinic.
   * @param {ClinicUpsertArgs} args - Arguments to update or create a Clinic.
   * @example
   * // Update or create a Clinic
   * const clinic = await prisma.clinic.upsert({
   *   create: {
   *     // ... data to create a Clinic
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Clinic we want to update
   *   }
   * })
  **/
  upsert<T extends ClinicUpsertArgs>(
    args: Subset<T, ClinicUpsertArgs>
  ): CheckSelect<T, Prisma__ClinicClient<Clinic>, Prisma__ClinicClient<ClinicGetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyClinicArgs, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Clinic.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__ClinicClient<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  emails<T extends FindManyEmailArgs = {}>(args?: Subset<T, FindManyEmailArgs>): CheckSelect<T, Promise<Array<Email>>, Promise<Array<EmailGetPayload<T>>>>;

  clinic_phones<T extends FindManyClinic_phonesArgs = {}>(args?: Subset<T, FindManyClinic_phonesArgs>): CheckSelect<T, Promise<Array<Clinic_phones>>, Promise<Array<Clinic_phonesGetPayload<T>>>>;

  patients<T extends FindManyPatientArgs = {}>(args?: Subset<T, FindManyPatientArgs>): CheckSelect<T, Promise<Array<Patient>>, Promise<Array<PatientGetPayload<T>>>>;

  destists<T extends FindManyDentistArgs = {}>(args?: Subset<T, FindManyDentistArgs>): CheckSelect<T, Promise<Array<Dentist>>, Promise<Array<DentistGetPayload<T>>>>;

  employeers<T extends FindManyEmployeerArgs = {}>(args?: Subset<T, FindManyEmployeerArgs>): CheckSelect<T, Promise<Array<Employeer>>, Promise<Array<EmployeerGetPayload<T>>>>;

  technicalmanager<T extends TechnicalmanagerArgs = {}>(args?: Subset<T, TechnicalmanagerArgs>): CheckSelect<T, Prisma__TechnicalmanagerClient<Technicalmanager | null>, Prisma__TechnicalmanagerClient<TechnicalmanagerGetPayload<T> | null>>;

  legalresponsible<T extends LegalresponsibleArgs = {}>(args?: Subset<T, LegalresponsibleArgs>): CheckSelect<T, Prisma__LegalresponsibleClient<Legalresponsible | null>, Prisma__LegalresponsibleClient<LegalresponsibleGetPayload<T> | null>>;

  insuranses<T extends FindManyDental_insuranceArgs = {}>(args?: Subset<T, FindManyDental_insuranceArgs>): CheckSelect<T, Promise<Array<Dental_insurance>>, Promise<Array<Dental_insuranceGetPayload<T>>>>;

  logs<T extends FindManyLogsArgs = {}>(args?: Subset<T, FindManyLogsArgs>): CheckSelect<T, Promise<Array<Logs>>, Promise<Array<LogsGetPayload<T>>>>;

  Clinic_payment_information<T extends FindManyClinic_payment_informationArgs = {}>(args?: Subset<T, FindManyClinic_payment_informationArgs>): CheckSelect<T, Promise<Array<Clinic_payment_information>>, Promise<Array<Clinic_payment_informationGetPayload<T>>>>;

  Clinic_finance_options<T extends FindManyClinic_finance_optionsArgs = {}>(args?: Subset<T, FindManyClinic_finance_optionsArgs>): CheckSelect<T, Promise<Array<Clinic_finance_options>>, Promise<Array<Clinic_finance_optionsGetPayload<T>>>>;

  Clinic_finance_month<T extends FindManyClinic_finance_monthArgs = {}>(args?: Subset<T, FindManyClinic_finance_monthArgs>): CheckSelect<T, Promise<Array<Clinic_finance_month>>, Promise<Array<Clinic_finance_monthGetPayload<T>>>>;

  Clinic_finance_day<T extends FindManyClinic_finance_dayArgs = {}>(args?: Subset<T, FindManyClinic_finance_dayArgs>): CheckSelect<T, Promise<Array<Clinic_finance_day>>, Promise<Array<Clinic_finance_dayGetPayload<T>>>>;

  Chairs<T extends FindManyChairsArgs = {}>(args?: Subset<T, FindManyChairsArgs>): CheckSelect<T, Promise<Array<Chairs>>, Promise<Array<ChairsGetPayload<T>>>>;

  Chair_finance_day<T extends FindManyChair_finance_dayArgs = {}>(args?: Subset<T, FindManyChair_finance_dayArgs>): CheckSelect<T, Promise<Array<Chair_finance_day>>, Promise<Array<Chair_finance_dayGetPayload<T>>>>;

  Clinic_finance_procedure<T extends FindManyClinic_finance_procedureArgs = {}>(args?: Subset<T, FindManyClinic_finance_procedureArgs>): CheckSelect<T, Promise<Array<Clinic_finance_procedure>>, Promise<Array<Clinic_finance_procedureGetPayload<T>>>>;

  Patient<T extends FindManyPatientArgs = {}>(args?: Subset<T, FindManyPatientArgs>): CheckSelect<T, Promise<Array<Patient>>, Promise<Array<PatientGetPayload<T>>>>;

  Dentist<T extends FindManyDentistArgs = {}>(args?: Subset<T, FindManyDentistArgs>): CheckSelect<T, Promise<Array<Dentist>>, Promise<Array<DentistGetPayload<T>>>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Clinic findOne
 */
export type FindOneClinicArgs = {
  /**
   * Select specific fields to fetch from the Clinic
  **/
  select?: ClinicSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: ClinicInclude | null
  /**
   * Filter, which Clinic to fetch.
  **/
  where: ClinicWhereUniqueInput
}


/**
 * Clinic findMany
 */
export type FindManyClinicArgs = {
  /**
   * Select specific fields to fetch from the Clinic
  **/
  select?: ClinicSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: ClinicInclude | null
  /**
   * Filter, which Clinics to fetch.
  **/
  where?: ClinicWhereInput
  /**
   * Determine the order of the Clinics to fetch.
  **/
  orderBy?: ClinicOrderByInput
  /**
   * Sets the position for listing Clinics.
  **/
  cursor?: ClinicWhereUniqueInput
  /**
   * The number of Clinics to fetch. If negative number, it will take Clinics before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Clinics.
  **/
  skip?: number
}


/**
 * Clinic create
 */
export type ClinicCreateArgs = {
  /**
   * Select specific fields to fetch from the Clinic
  **/
  select?: ClinicSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: ClinicInclude | null
  /**
   * The data needed to create a Clinic.
  **/
  data: ClinicCreateInput
}


/**
 * Clinic update
 */
export type ClinicUpdateArgs = {
  /**
   * Select specific fields to fetch from the Clinic
  **/
  select?: ClinicSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: ClinicInclude | null
  /**
   * The data needed to update a Clinic.
  **/
  data: ClinicUpdateInput
  /**
   * Choose, which Clinic to update.
  **/
  where: ClinicWhereUniqueInput
}


/**
 * Clinic updateMany
 */
export type ClinicUpdateManyArgs = {
  data: ClinicUpdateManyMutationInput
  where?: ClinicWhereInput
}


/**
 * Clinic upsert
 */
export type ClinicUpsertArgs = {
  /**
   * Select specific fields to fetch from the Clinic
  **/
  select?: ClinicSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: ClinicInclude | null
  /**
   * The filter to search for the Clinic to update in case it exists.
  **/
  where: ClinicWhereUniqueInput
  /**
   * In case the Clinic found by the `where` argument doesn't exist, create a new Clinic with this data.
  **/
  create: ClinicCreateInput
  /**
   * In case the Clinic was found with the provided `where` argument, update it with this data.
  **/
  update: ClinicUpdateInput
}


/**
 * Clinic delete
 */
export type ClinicDeleteArgs = {
  /**
   * Select specific fields to fetch from the Clinic
  **/
  select?: ClinicSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: ClinicInclude | null
  /**
   * Filter which Clinic to delete.
  **/
  where: ClinicWhereUniqueInput
}


/**
 * Clinic deleteMany
 */
export type ClinicDeleteManyArgs = {
  where?: ClinicWhereInput
}


/**
 * Clinic without action
 */
export type ClinicArgs = {
  /**
   * Select specific fields to fetch from the Clinic
  **/
  select?: ClinicSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: ClinicInclude | null
}



/**
 * Model Clinic_payment_information
 */

export type Clinic_payment_information = {
  id: string
  clinic_id: string
  payment_method: Payment_method
  registered_credit_card: boolean
  registered_debit_card: boolean
  payment_day: number | null
  next_payment: Date | null
  credit_card_number: string | null
  credit_card_CCV: string | null
  credit_card_name: string | null
  debit_card_number: string | null
  debit_card_CCV: string | null
  debit_card_name: string | null
  delayed_payment: boolean | null
  delayed_days: number | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Clinic_payment_informationSelect = {
  id?: boolean
  clinic?: boolean | ClinicArgs
  clinic_id?: boolean
  payment_method?: boolean
  registered_credit_card?: boolean
  registered_debit_card?: boolean
  payment_day?: boolean
  next_payment?: boolean
  credit_card_number?: boolean
  credit_card_CCV?: boolean
  credit_card_name?: boolean
  debit_card_number?: boolean
  debit_card_CCV?: boolean
  debit_card_name?: boolean
  delayed_payment?: boolean
  delayed_days?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Clinic_payment_informationInclude = {
  clinic?: boolean | ClinicArgs
}

export type Clinic_payment_informationGetPayload<
  S extends boolean | null | undefined | Clinic_payment_informationArgs,
  U = keyof S
> = S extends true
  ? Clinic_payment_information
  : S extends undefined
  ? never
  : S extends Clinic_payment_informationArgs | FindManyClinic_payment_informationArgs
  ? 'include' extends U
    ? Clinic_payment_information  & {
      [P in TrueKeys<S['include']>]:
      P extends 'clinic'
      ? ClinicGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Clinic_payment_information ? Clinic_payment_information[P]
: 
      P extends 'clinic'
      ? ClinicGetPayload<S['select'][P]> : never
    }
  : Clinic_payment_information
: Clinic_payment_information


export interface Clinic_payment_informationDelegate {
  /**
   * Find zero or one Clinic_payment_information.
   * @param {FindOneClinic_payment_informationArgs} args - Arguments to find a Clinic_payment_information
   * @example
   * // Get one Clinic_payment_information
   * const clinic_payment_information = await prisma.clinic_payment_information.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneClinic_payment_informationArgs>(
    args: Subset<T, FindOneClinic_payment_informationArgs>
  ): CheckSelect<T, Prisma__Clinic_payment_informationClient<Clinic_payment_information | null>, Prisma__Clinic_payment_informationClient<Clinic_payment_informationGetPayload<T> | null>>
  /**
   * Find zero or more Clinic_payment_informations.
   * @param {FindManyClinic_payment_informationArgs=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Clinic_payment_informations
   * const clinic_payment_informations = await prisma.clinic_payment_information.findMany()
   * 
   * // Get first 10 Clinic_payment_informations
   * const clinic_payment_informations = await prisma.clinic_payment_information.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const clinic_payment_informationWithIdOnly = await prisma.clinic_payment_information.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyClinic_payment_informationArgs>(
    args?: Subset<T, FindManyClinic_payment_informationArgs>
  ): CheckSelect<T, Promise<Array<Clinic_payment_information>>, Promise<Array<Clinic_payment_informationGetPayload<T>>>>
  /**
   * Create a Clinic_payment_information.
   * @param {Clinic_payment_informationCreateArgs} args - Arguments to create a Clinic_payment_information.
   * @example
   * // Create one Clinic_payment_information
   * const Clinic_payment_information = await prisma.clinic_payment_information.create({
   *   data: {
   *     // ... data to create a Clinic_payment_information
   *   }
   * })
   * 
  **/
  create<T extends Clinic_payment_informationCreateArgs>(
    args: Subset<T, Clinic_payment_informationCreateArgs>
  ): CheckSelect<T, Prisma__Clinic_payment_informationClient<Clinic_payment_information>, Prisma__Clinic_payment_informationClient<Clinic_payment_informationGetPayload<T>>>
  /**
   * Delete a Clinic_payment_information.
   * @param {Clinic_payment_informationDeleteArgs} args - Arguments to delete one Clinic_payment_information.
   * @example
   * // Delete one Clinic_payment_information
   * const Clinic_payment_information = await prisma.clinic_payment_information.delete({
   *   where: {
   *     // ... filter to delete one Clinic_payment_information
   *   }
   * })
   * 
  **/
  delete<T extends Clinic_payment_informationDeleteArgs>(
    args: Subset<T, Clinic_payment_informationDeleteArgs>
  ): CheckSelect<T, Prisma__Clinic_payment_informationClient<Clinic_payment_information>, Prisma__Clinic_payment_informationClient<Clinic_payment_informationGetPayload<T>>>
  /**
   * Update one Clinic_payment_information.
   * @param {Clinic_payment_informationUpdateArgs} args - Arguments to update one Clinic_payment_information.
   * @example
   * // Update one Clinic_payment_information
   * const clinic_payment_information = await prisma.clinic_payment_information.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Clinic_payment_informationUpdateArgs>(
    args: Subset<T, Clinic_payment_informationUpdateArgs>
  ): CheckSelect<T, Prisma__Clinic_payment_informationClient<Clinic_payment_information>, Prisma__Clinic_payment_informationClient<Clinic_payment_informationGetPayload<T>>>
  /**
   * Delete zero or more Clinic_payment_informations.
   * @param {Clinic_payment_informationDeleteManyArgs} args - Arguments to filter Clinic_payment_informations to delete.
   * @example
   * // Delete a few Clinic_payment_informations
   * const { count } = await prisma.clinic_payment_information.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Clinic_payment_informationDeleteManyArgs>(
    args: Subset<T, Clinic_payment_informationDeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Clinic_payment_informations.
   * @param {Clinic_payment_informationUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Clinic_payment_informations
   * const clinic_payment_information = await prisma.clinic_payment_information.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Clinic_payment_informationUpdateManyArgs>(
    args: Subset<T, Clinic_payment_informationUpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Clinic_payment_information.
   * @param {Clinic_payment_informationUpsertArgs} args - Arguments to update or create a Clinic_payment_information.
   * @example
   * // Update or create a Clinic_payment_information
   * const clinic_payment_information = await prisma.clinic_payment_information.upsert({
   *   create: {
   *     // ... data to create a Clinic_payment_information
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Clinic_payment_information we want to update
   *   }
   * })
  **/
  upsert<T extends Clinic_payment_informationUpsertArgs>(
    args: Subset<T, Clinic_payment_informationUpsertArgs>
  ): CheckSelect<T, Prisma__Clinic_payment_informationClient<Clinic_payment_information>, Prisma__Clinic_payment_informationClient<Clinic_payment_informationGetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyClinic_payment_informationArgs, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Clinic_payment_information.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Clinic_payment_informationClient<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  clinic<T extends ClinicArgs = {}>(args?: Subset<T, ClinicArgs>): CheckSelect<T, Prisma__ClinicClient<Clinic | null>, Prisma__ClinicClient<ClinicGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Clinic_payment_information findOne
 */
export type FindOneClinic_payment_informationArgs = {
  /**
   * Select specific fields to fetch from the Clinic_payment_information
  **/
  select?: Clinic_payment_informationSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_payment_informationInclude | null
  /**
   * Filter, which Clinic_payment_information to fetch.
  **/
  where: Clinic_payment_informationWhereUniqueInput
}


/**
 * Clinic_payment_information findMany
 */
export type FindManyClinic_payment_informationArgs = {
  /**
   * Select specific fields to fetch from the Clinic_payment_information
  **/
  select?: Clinic_payment_informationSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_payment_informationInclude | null
  /**
   * Filter, which Clinic_payment_informations to fetch.
  **/
  where?: Clinic_payment_informationWhereInput
  /**
   * Determine the order of the Clinic_payment_informations to fetch.
  **/
  orderBy?: Clinic_payment_informationOrderByInput
  /**
   * Sets the position for listing Clinic_payment_informations.
  **/
  cursor?: Clinic_payment_informationWhereUniqueInput
  /**
   * The number of Clinic_payment_informations to fetch. If negative number, it will take Clinic_payment_informations before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Clinic_payment_informations.
  **/
  skip?: number
}


/**
 * Clinic_payment_information create
 */
export type Clinic_payment_informationCreateArgs = {
  /**
   * Select specific fields to fetch from the Clinic_payment_information
  **/
  select?: Clinic_payment_informationSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_payment_informationInclude | null
  /**
   * The data needed to create a Clinic_payment_information.
  **/
  data: Clinic_payment_informationCreateInput
}


/**
 * Clinic_payment_information update
 */
export type Clinic_payment_informationUpdateArgs = {
  /**
   * Select specific fields to fetch from the Clinic_payment_information
  **/
  select?: Clinic_payment_informationSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_payment_informationInclude | null
  /**
   * The data needed to update a Clinic_payment_information.
  **/
  data: Clinic_payment_informationUpdateInput
  /**
   * Choose, which Clinic_payment_information to update.
  **/
  where: Clinic_payment_informationWhereUniqueInput
}


/**
 * Clinic_payment_information updateMany
 */
export type Clinic_payment_informationUpdateManyArgs = {
  data: Clinic_payment_informationUpdateManyMutationInput
  where?: Clinic_payment_informationWhereInput
}


/**
 * Clinic_payment_information upsert
 */
export type Clinic_payment_informationUpsertArgs = {
  /**
   * Select specific fields to fetch from the Clinic_payment_information
  **/
  select?: Clinic_payment_informationSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_payment_informationInclude | null
  /**
   * The filter to search for the Clinic_payment_information to update in case it exists.
  **/
  where: Clinic_payment_informationWhereUniqueInput
  /**
   * In case the Clinic_payment_information found by the `where` argument doesn't exist, create a new Clinic_payment_information with this data.
  **/
  create: Clinic_payment_informationCreateInput
  /**
   * In case the Clinic_payment_information was found with the provided `where` argument, update it with this data.
  **/
  update: Clinic_payment_informationUpdateInput
}


/**
 * Clinic_payment_information delete
 */
export type Clinic_payment_informationDeleteArgs = {
  /**
   * Select specific fields to fetch from the Clinic_payment_information
  **/
  select?: Clinic_payment_informationSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_payment_informationInclude | null
  /**
   * Filter which Clinic_payment_information to delete.
  **/
  where: Clinic_payment_informationWhereUniqueInput
}


/**
 * Clinic_payment_information deleteMany
 */
export type Clinic_payment_informationDeleteManyArgs = {
  where?: Clinic_payment_informationWhereInput
}


/**
 * Clinic_payment_information without action
 */
export type Clinic_payment_informationArgs = {
  /**
   * Select specific fields to fetch from the Clinic_payment_information
  **/
  select?: Clinic_payment_informationSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_payment_informationInclude | null
}



/**
 * Model Clinic_finance_options
 */

export type Clinic_finance_options = {
  id: string
  calculation_hour_of_day: number
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Clinic_finance_optionsSelect = {
  clinic?: boolean | ClinicArgs
  id?: boolean
  calculation_hour_of_day?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Clinic_finance_optionsInclude = {
  clinic?: boolean | ClinicArgs
}

export type Clinic_finance_optionsGetPayload<
  S extends boolean | null | undefined | Clinic_finance_optionsArgs,
  U = keyof S
> = S extends true
  ? Clinic_finance_options
  : S extends undefined
  ? never
  : S extends Clinic_finance_optionsArgs | FindManyClinic_finance_optionsArgs
  ? 'include' extends U
    ? Clinic_finance_options  & {
      [P in TrueKeys<S['include']>]:
      P extends 'clinic'
      ? ClinicGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Clinic_finance_options ? Clinic_finance_options[P]
: 
      P extends 'clinic'
      ? ClinicGetPayload<S['select'][P]> : never
    }
  : Clinic_finance_options
: Clinic_finance_options


export interface Clinic_finance_optionsDelegate {
  /**
   * Find zero or one Clinic_finance_options.
   * @param {FindOneClinic_finance_optionsArgs} args - Arguments to find a Clinic_finance_options
   * @example
   * // Get one Clinic_finance_options
   * const clinic_finance_options = await prisma.clinic_finance_options.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneClinic_finance_optionsArgs>(
    args: Subset<T, FindOneClinic_finance_optionsArgs>
  ): CheckSelect<T, Prisma__Clinic_finance_optionsClient<Clinic_finance_options | null>, Prisma__Clinic_finance_optionsClient<Clinic_finance_optionsGetPayload<T> | null>>
  /**
   * Find zero or more Clinic_finance_options.
   * @param {FindManyClinic_finance_optionsArgs=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Clinic_finance_options
   * const clinic_finance_options = await prisma.clinic_finance_options.findMany()
   * 
   * // Get first 10 Clinic_finance_options
   * const clinic_finance_options = await prisma.clinic_finance_options.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const clinic_finance_optionsWithIdOnly = await prisma.clinic_finance_options.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyClinic_finance_optionsArgs>(
    args?: Subset<T, FindManyClinic_finance_optionsArgs>
  ): CheckSelect<T, Promise<Array<Clinic_finance_options>>, Promise<Array<Clinic_finance_optionsGetPayload<T>>>>
  /**
   * Create a Clinic_finance_options.
   * @param {Clinic_finance_optionsCreateArgs} args - Arguments to create a Clinic_finance_options.
   * @example
   * // Create one Clinic_finance_options
   * const Clinic_finance_options = await prisma.clinic_finance_options.create({
   *   data: {
   *     // ... data to create a Clinic_finance_options
   *   }
   * })
   * 
  **/
  create<T extends Clinic_finance_optionsCreateArgs>(
    args: Subset<T, Clinic_finance_optionsCreateArgs>
  ): CheckSelect<T, Prisma__Clinic_finance_optionsClient<Clinic_finance_options>, Prisma__Clinic_finance_optionsClient<Clinic_finance_optionsGetPayload<T>>>
  /**
   * Delete a Clinic_finance_options.
   * @param {Clinic_finance_optionsDeleteArgs} args - Arguments to delete one Clinic_finance_options.
   * @example
   * // Delete one Clinic_finance_options
   * const Clinic_finance_options = await prisma.clinic_finance_options.delete({
   *   where: {
   *     // ... filter to delete one Clinic_finance_options
   *   }
   * })
   * 
  **/
  delete<T extends Clinic_finance_optionsDeleteArgs>(
    args: Subset<T, Clinic_finance_optionsDeleteArgs>
  ): CheckSelect<T, Prisma__Clinic_finance_optionsClient<Clinic_finance_options>, Prisma__Clinic_finance_optionsClient<Clinic_finance_optionsGetPayload<T>>>
  /**
   * Update one Clinic_finance_options.
   * @param {Clinic_finance_optionsUpdateArgs} args - Arguments to update one Clinic_finance_options.
   * @example
   * // Update one Clinic_finance_options
   * const clinic_finance_options = await prisma.clinic_finance_options.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Clinic_finance_optionsUpdateArgs>(
    args: Subset<T, Clinic_finance_optionsUpdateArgs>
  ): CheckSelect<T, Prisma__Clinic_finance_optionsClient<Clinic_finance_options>, Prisma__Clinic_finance_optionsClient<Clinic_finance_optionsGetPayload<T>>>
  /**
   * Delete zero or more Clinic_finance_options.
   * @param {Clinic_finance_optionsDeleteManyArgs} args - Arguments to filter Clinic_finance_options to delete.
   * @example
   * // Delete a few Clinic_finance_options
   * const { count } = await prisma.clinic_finance_options.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Clinic_finance_optionsDeleteManyArgs>(
    args: Subset<T, Clinic_finance_optionsDeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Clinic_finance_options.
   * @param {Clinic_finance_optionsUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Clinic_finance_options
   * const clinic_finance_options = await prisma.clinic_finance_options.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Clinic_finance_optionsUpdateManyArgs>(
    args: Subset<T, Clinic_finance_optionsUpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Clinic_finance_options.
   * @param {Clinic_finance_optionsUpsertArgs} args - Arguments to update or create a Clinic_finance_options.
   * @example
   * // Update or create a Clinic_finance_options
   * const clinic_finance_options = await prisma.clinic_finance_options.upsert({
   *   create: {
   *     // ... data to create a Clinic_finance_options
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Clinic_finance_options we want to update
   *   }
   * })
  **/
  upsert<T extends Clinic_finance_optionsUpsertArgs>(
    args: Subset<T, Clinic_finance_optionsUpsertArgs>
  ): CheckSelect<T, Prisma__Clinic_finance_optionsClient<Clinic_finance_options>, Prisma__Clinic_finance_optionsClient<Clinic_finance_optionsGetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyClinic_finance_optionsArgs, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Clinic_finance_options.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Clinic_finance_optionsClient<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  clinic<T extends ClinicArgs = {}>(args?: Subset<T, ClinicArgs>): CheckSelect<T, Prisma__ClinicClient<Clinic | null>, Prisma__ClinicClient<ClinicGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Clinic_finance_options findOne
 */
export type FindOneClinic_finance_optionsArgs = {
  /**
   * Select specific fields to fetch from the Clinic_finance_options
  **/
  select?: Clinic_finance_optionsSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_finance_optionsInclude | null
  /**
   * Filter, which Clinic_finance_options to fetch.
  **/
  where: Clinic_finance_optionsWhereUniqueInput
}


/**
 * Clinic_finance_options findMany
 */
export type FindManyClinic_finance_optionsArgs = {
  /**
   * Select specific fields to fetch from the Clinic_finance_options
  **/
  select?: Clinic_finance_optionsSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_finance_optionsInclude | null
  /**
   * Filter, which Clinic_finance_options to fetch.
  **/
  where?: Clinic_finance_optionsWhereInput
  /**
   * Determine the order of the Clinic_finance_options to fetch.
  **/
  orderBy?: Clinic_finance_optionsOrderByInput
  /**
   * Sets the position for listing Clinic_finance_options.
  **/
  cursor?: Clinic_finance_optionsWhereUniqueInput
  /**
   * The number of Clinic_finance_options to fetch. If negative number, it will take Clinic_finance_options before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Clinic_finance_options.
  **/
  skip?: number
}


/**
 * Clinic_finance_options create
 */
export type Clinic_finance_optionsCreateArgs = {
  /**
   * Select specific fields to fetch from the Clinic_finance_options
  **/
  select?: Clinic_finance_optionsSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_finance_optionsInclude | null
  /**
   * The data needed to create a Clinic_finance_options.
  **/
  data: Clinic_finance_optionsCreateInput
}


/**
 * Clinic_finance_options update
 */
export type Clinic_finance_optionsUpdateArgs = {
  /**
   * Select specific fields to fetch from the Clinic_finance_options
  **/
  select?: Clinic_finance_optionsSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_finance_optionsInclude | null
  /**
   * The data needed to update a Clinic_finance_options.
  **/
  data: Clinic_finance_optionsUpdateInput
  /**
   * Choose, which Clinic_finance_options to update.
  **/
  where: Clinic_finance_optionsWhereUniqueInput
}


/**
 * Clinic_finance_options updateMany
 */
export type Clinic_finance_optionsUpdateManyArgs = {
  data: Clinic_finance_optionsUpdateManyMutationInput
  where?: Clinic_finance_optionsWhereInput
}


/**
 * Clinic_finance_options upsert
 */
export type Clinic_finance_optionsUpsertArgs = {
  /**
   * Select specific fields to fetch from the Clinic_finance_options
  **/
  select?: Clinic_finance_optionsSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_finance_optionsInclude | null
  /**
   * The filter to search for the Clinic_finance_options to update in case it exists.
  **/
  where: Clinic_finance_optionsWhereUniqueInput
  /**
   * In case the Clinic_finance_options found by the `where` argument doesn't exist, create a new Clinic_finance_options with this data.
  **/
  create: Clinic_finance_optionsCreateInput
  /**
   * In case the Clinic_finance_options was found with the provided `where` argument, update it with this data.
  **/
  update: Clinic_finance_optionsUpdateInput
}


/**
 * Clinic_finance_options delete
 */
export type Clinic_finance_optionsDeleteArgs = {
  /**
   * Select specific fields to fetch from the Clinic_finance_options
  **/
  select?: Clinic_finance_optionsSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_finance_optionsInclude | null
  /**
   * Filter which Clinic_finance_options to delete.
  **/
  where: Clinic_finance_optionsWhereUniqueInput
}


/**
 * Clinic_finance_options deleteMany
 */
export type Clinic_finance_optionsDeleteManyArgs = {
  where?: Clinic_finance_optionsWhereInput
}


/**
 * Clinic_finance_options without action
 */
export type Clinic_finance_optionsArgs = {
  /**
   * Select specific fields to fetch from the Clinic_finance_options
  **/
  select?: Clinic_finance_optionsSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_finance_optionsInclude | null
}



/**
 * Model Clinic_finance_month
 */

export type Clinic_finance_month = {
  id: string
  clinid_id: string
  month: number
  year: number
  wage_payment_day: number | null
  wages_paid: boolean | null
  total_wage: number | null
  dentists_comissions: number | null
  month_all_profit: number | null
  month_discounts: number | null
  month_brute_profit: number | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Clinic_finance_monthSelect = {
  id?: boolean
  clinic?: boolean | ClinicArgs
  clinid_id?: boolean
  month?: boolean
  year?: boolean
  wage_payment_day?: boolean
  wages_paid?: boolean
  total_wage?: boolean
  dentists_comissions?: boolean
  month_all_profit?: boolean
  month_discounts?: boolean
  month_brute_profit?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Clinic_finance_monthInclude = {
  clinic?: boolean | ClinicArgs
}

export type Clinic_finance_monthGetPayload<
  S extends boolean | null | undefined | Clinic_finance_monthArgs,
  U = keyof S
> = S extends true
  ? Clinic_finance_month
  : S extends undefined
  ? never
  : S extends Clinic_finance_monthArgs | FindManyClinic_finance_monthArgs
  ? 'include' extends U
    ? Clinic_finance_month  & {
      [P in TrueKeys<S['include']>]:
      P extends 'clinic'
      ? ClinicGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Clinic_finance_month ? Clinic_finance_month[P]
: 
      P extends 'clinic'
      ? ClinicGetPayload<S['select'][P]> : never
    }
  : Clinic_finance_month
: Clinic_finance_month


export interface Clinic_finance_monthDelegate {
  /**
   * Find zero or one Clinic_finance_month.
   * @param {FindOneClinic_finance_monthArgs} args - Arguments to find a Clinic_finance_month
   * @example
   * // Get one Clinic_finance_month
   * const clinic_finance_month = await prisma.clinic_finance_month.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneClinic_finance_monthArgs>(
    args: Subset<T, FindOneClinic_finance_monthArgs>
  ): CheckSelect<T, Prisma__Clinic_finance_monthClient<Clinic_finance_month | null>, Prisma__Clinic_finance_monthClient<Clinic_finance_monthGetPayload<T> | null>>
  /**
   * Find zero or more Clinic_finance_months.
   * @param {FindManyClinic_finance_monthArgs=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Clinic_finance_months
   * const clinic_finance_months = await prisma.clinic_finance_month.findMany()
   * 
   * // Get first 10 Clinic_finance_months
   * const clinic_finance_months = await prisma.clinic_finance_month.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const clinic_finance_monthWithIdOnly = await prisma.clinic_finance_month.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyClinic_finance_monthArgs>(
    args?: Subset<T, FindManyClinic_finance_monthArgs>
  ): CheckSelect<T, Promise<Array<Clinic_finance_month>>, Promise<Array<Clinic_finance_monthGetPayload<T>>>>
  /**
   * Create a Clinic_finance_month.
   * @param {Clinic_finance_monthCreateArgs} args - Arguments to create a Clinic_finance_month.
   * @example
   * // Create one Clinic_finance_month
   * const Clinic_finance_month = await prisma.clinic_finance_month.create({
   *   data: {
   *     // ... data to create a Clinic_finance_month
   *   }
   * })
   * 
  **/
  create<T extends Clinic_finance_monthCreateArgs>(
    args: Subset<T, Clinic_finance_monthCreateArgs>
  ): CheckSelect<T, Prisma__Clinic_finance_monthClient<Clinic_finance_month>, Prisma__Clinic_finance_monthClient<Clinic_finance_monthGetPayload<T>>>
  /**
   * Delete a Clinic_finance_month.
   * @param {Clinic_finance_monthDeleteArgs} args - Arguments to delete one Clinic_finance_month.
   * @example
   * // Delete one Clinic_finance_month
   * const Clinic_finance_month = await prisma.clinic_finance_month.delete({
   *   where: {
   *     // ... filter to delete one Clinic_finance_month
   *   }
   * })
   * 
  **/
  delete<T extends Clinic_finance_monthDeleteArgs>(
    args: Subset<T, Clinic_finance_monthDeleteArgs>
  ): CheckSelect<T, Prisma__Clinic_finance_monthClient<Clinic_finance_month>, Prisma__Clinic_finance_monthClient<Clinic_finance_monthGetPayload<T>>>
  /**
   * Update one Clinic_finance_month.
   * @param {Clinic_finance_monthUpdateArgs} args - Arguments to update one Clinic_finance_month.
   * @example
   * // Update one Clinic_finance_month
   * const clinic_finance_month = await prisma.clinic_finance_month.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Clinic_finance_monthUpdateArgs>(
    args: Subset<T, Clinic_finance_monthUpdateArgs>
  ): CheckSelect<T, Prisma__Clinic_finance_monthClient<Clinic_finance_month>, Prisma__Clinic_finance_monthClient<Clinic_finance_monthGetPayload<T>>>
  /**
   * Delete zero or more Clinic_finance_months.
   * @param {Clinic_finance_monthDeleteManyArgs} args - Arguments to filter Clinic_finance_months to delete.
   * @example
   * // Delete a few Clinic_finance_months
   * const { count } = await prisma.clinic_finance_month.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Clinic_finance_monthDeleteManyArgs>(
    args: Subset<T, Clinic_finance_monthDeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Clinic_finance_months.
   * @param {Clinic_finance_monthUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Clinic_finance_months
   * const clinic_finance_month = await prisma.clinic_finance_month.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Clinic_finance_monthUpdateManyArgs>(
    args: Subset<T, Clinic_finance_monthUpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Clinic_finance_month.
   * @param {Clinic_finance_monthUpsertArgs} args - Arguments to update or create a Clinic_finance_month.
   * @example
   * // Update or create a Clinic_finance_month
   * const clinic_finance_month = await prisma.clinic_finance_month.upsert({
   *   create: {
   *     // ... data to create a Clinic_finance_month
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Clinic_finance_month we want to update
   *   }
   * })
  **/
  upsert<T extends Clinic_finance_monthUpsertArgs>(
    args: Subset<T, Clinic_finance_monthUpsertArgs>
  ): CheckSelect<T, Prisma__Clinic_finance_monthClient<Clinic_finance_month>, Prisma__Clinic_finance_monthClient<Clinic_finance_monthGetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyClinic_finance_monthArgs, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Clinic_finance_month.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Clinic_finance_monthClient<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  clinic<T extends ClinicArgs = {}>(args?: Subset<T, ClinicArgs>): CheckSelect<T, Prisma__ClinicClient<Clinic | null>, Prisma__ClinicClient<ClinicGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Clinic_finance_month findOne
 */
export type FindOneClinic_finance_monthArgs = {
  /**
   * Select specific fields to fetch from the Clinic_finance_month
  **/
  select?: Clinic_finance_monthSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_finance_monthInclude | null
  /**
   * Filter, which Clinic_finance_month to fetch.
  **/
  where: Clinic_finance_monthWhereUniqueInput
}


/**
 * Clinic_finance_month findMany
 */
export type FindManyClinic_finance_monthArgs = {
  /**
   * Select specific fields to fetch from the Clinic_finance_month
  **/
  select?: Clinic_finance_monthSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_finance_monthInclude | null
  /**
   * Filter, which Clinic_finance_months to fetch.
  **/
  where?: Clinic_finance_monthWhereInput
  /**
   * Determine the order of the Clinic_finance_months to fetch.
  **/
  orderBy?: Clinic_finance_monthOrderByInput
  /**
   * Sets the position for listing Clinic_finance_months.
  **/
  cursor?: Clinic_finance_monthWhereUniqueInput
  /**
   * The number of Clinic_finance_months to fetch. If negative number, it will take Clinic_finance_months before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Clinic_finance_months.
  **/
  skip?: number
}


/**
 * Clinic_finance_month create
 */
export type Clinic_finance_monthCreateArgs = {
  /**
   * Select specific fields to fetch from the Clinic_finance_month
  **/
  select?: Clinic_finance_monthSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_finance_monthInclude | null
  /**
   * The data needed to create a Clinic_finance_month.
  **/
  data: Clinic_finance_monthCreateInput
}


/**
 * Clinic_finance_month update
 */
export type Clinic_finance_monthUpdateArgs = {
  /**
   * Select specific fields to fetch from the Clinic_finance_month
  **/
  select?: Clinic_finance_monthSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_finance_monthInclude | null
  /**
   * The data needed to update a Clinic_finance_month.
  **/
  data: Clinic_finance_monthUpdateInput
  /**
   * Choose, which Clinic_finance_month to update.
  **/
  where: Clinic_finance_monthWhereUniqueInput
}


/**
 * Clinic_finance_month updateMany
 */
export type Clinic_finance_monthUpdateManyArgs = {
  data: Clinic_finance_monthUpdateManyMutationInput
  where?: Clinic_finance_monthWhereInput
}


/**
 * Clinic_finance_month upsert
 */
export type Clinic_finance_monthUpsertArgs = {
  /**
   * Select specific fields to fetch from the Clinic_finance_month
  **/
  select?: Clinic_finance_monthSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_finance_monthInclude | null
  /**
   * The filter to search for the Clinic_finance_month to update in case it exists.
  **/
  where: Clinic_finance_monthWhereUniqueInput
  /**
   * In case the Clinic_finance_month found by the `where` argument doesn't exist, create a new Clinic_finance_month with this data.
  **/
  create: Clinic_finance_monthCreateInput
  /**
   * In case the Clinic_finance_month was found with the provided `where` argument, update it with this data.
  **/
  update: Clinic_finance_monthUpdateInput
}


/**
 * Clinic_finance_month delete
 */
export type Clinic_finance_monthDeleteArgs = {
  /**
   * Select specific fields to fetch from the Clinic_finance_month
  **/
  select?: Clinic_finance_monthSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_finance_monthInclude | null
  /**
   * Filter which Clinic_finance_month to delete.
  **/
  where: Clinic_finance_monthWhereUniqueInput
}


/**
 * Clinic_finance_month deleteMany
 */
export type Clinic_finance_monthDeleteManyArgs = {
  where?: Clinic_finance_monthWhereInput
}


/**
 * Clinic_finance_month without action
 */
export type Clinic_finance_monthArgs = {
  /**
   * Select specific fields to fetch from the Clinic_finance_month
  **/
  select?: Clinic_finance_monthSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_finance_monthInclude | null
}



/**
 * Model Clinic_finance_day
 */

export type Clinic_finance_day = {
  id: string
  clinid_id: string
  day: number
  month: number
  year: number
  total_income: number | null
  dentists_part: number | null
  clinic_income: number | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Clinic_finance_daySelect = {
  id?: boolean
  clinic?: boolean | ClinicArgs
  clinid_id?: boolean
  day?: boolean
  month?: boolean
  year?: boolean
  total_income?: boolean
  dentists_part?: boolean
  clinic_income?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Clinic_finance_dayInclude = {
  clinic?: boolean | ClinicArgs
}

export type Clinic_finance_dayGetPayload<
  S extends boolean | null | undefined | Clinic_finance_dayArgs,
  U = keyof S
> = S extends true
  ? Clinic_finance_day
  : S extends undefined
  ? never
  : S extends Clinic_finance_dayArgs | FindManyClinic_finance_dayArgs
  ? 'include' extends U
    ? Clinic_finance_day  & {
      [P in TrueKeys<S['include']>]:
      P extends 'clinic'
      ? ClinicGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Clinic_finance_day ? Clinic_finance_day[P]
: 
      P extends 'clinic'
      ? ClinicGetPayload<S['select'][P]> : never
    }
  : Clinic_finance_day
: Clinic_finance_day


export interface Clinic_finance_dayDelegate {
  /**
   * Find zero or one Clinic_finance_day.
   * @param {FindOneClinic_finance_dayArgs} args - Arguments to find a Clinic_finance_day
   * @example
   * // Get one Clinic_finance_day
   * const clinic_finance_day = await prisma.clinic_finance_day.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneClinic_finance_dayArgs>(
    args: Subset<T, FindOneClinic_finance_dayArgs>
  ): CheckSelect<T, Prisma__Clinic_finance_dayClient<Clinic_finance_day | null>, Prisma__Clinic_finance_dayClient<Clinic_finance_dayGetPayload<T> | null>>
  /**
   * Find zero or more Clinic_finance_days.
   * @param {FindManyClinic_finance_dayArgs=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Clinic_finance_days
   * const clinic_finance_days = await prisma.clinic_finance_day.findMany()
   * 
   * // Get first 10 Clinic_finance_days
   * const clinic_finance_days = await prisma.clinic_finance_day.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const clinic_finance_dayWithIdOnly = await prisma.clinic_finance_day.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyClinic_finance_dayArgs>(
    args?: Subset<T, FindManyClinic_finance_dayArgs>
  ): CheckSelect<T, Promise<Array<Clinic_finance_day>>, Promise<Array<Clinic_finance_dayGetPayload<T>>>>
  /**
   * Create a Clinic_finance_day.
   * @param {Clinic_finance_dayCreateArgs} args - Arguments to create a Clinic_finance_day.
   * @example
   * // Create one Clinic_finance_day
   * const Clinic_finance_day = await prisma.clinic_finance_day.create({
   *   data: {
   *     // ... data to create a Clinic_finance_day
   *   }
   * })
   * 
  **/
  create<T extends Clinic_finance_dayCreateArgs>(
    args: Subset<T, Clinic_finance_dayCreateArgs>
  ): CheckSelect<T, Prisma__Clinic_finance_dayClient<Clinic_finance_day>, Prisma__Clinic_finance_dayClient<Clinic_finance_dayGetPayload<T>>>
  /**
   * Delete a Clinic_finance_day.
   * @param {Clinic_finance_dayDeleteArgs} args - Arguments to delete one Clinic_finance_day.
   * @example
   * // Delete one Clinic_finance_day
   * const Clinic_finance_day = await prisma.clinic_finance_day.delete({
   *   where: {
   *     // ... filter to delete one Clinic_finance_day
   *   }
   * })
   * 
  **/
  delete<T extends Clinic_finance_dayDeleteArgs>(
    args: Subset<T, Clinic_finance_dayDeleteArgs>
  ): CheckSelect<T, Prisma__Clinic_finance_dayClient<Clinic_finance_day>, Prisma__Clinic_finance_dayClient<Clinic_finance_dayGetPayload<T>>>
  /**
   * Update one Clinic_finance_day.
   * @param {Clinic_finance_dayUpdateArgs} args - Arguments to update one Clinic_finance_day.
   * @example
   * // Update one Clinic_finance_day
   * const clinic_finance_day = await prisma.clinic_finance_day.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Clinic_finance_dayUpdateArgs>(
    args: Subset<T, Clinic_finance_dayUpdateArgs>
  ): CheckSelect<T, Prisma__Clinic_finance_dayClient<Clinic_finance_day>, Prisma__Clinic_finance_dayClient<Clinic_finance_dayGetPayload<T>>>
  /**
   * Delete zero or more Clinic_finance_days.
   * @param {Clinic_finance_dayDeleteManyArgs} args - Arguments to filter Clinic_finance_days to delete.
   * @example
   * // Delete a few Clinic_finance_days
   * const { count } = await prisma.clinic_finance_day.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Clinic_finance_dayDeleteManyArgs>(
    args: Subset<T, Clinic_finance_dayDeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Clinic_finance_days.
   * @param {Clinic_finance_dayUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Clinic_finance_days
   * const clinic_finance_day = await prisma.clinic_finance_day.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Clinic_finance_dayUpdateManyArgs>(
    args: Subset<T, Clinic_finance_dayUpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Clinic_finance_day.
   * @param {Clinic_finance_dayUpsertArgs} args - Arguments to update or create a Clinic_finance_day.
   * @example
   * // Update or create a Clinic_finance_day
   * const clinic_finance_day = await prisma.clinic_finance_day.upsert({
   *   create: {
   *     // ... data to create a Clinic_finance_day
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Clinic_finance_day we want to update
   *   }
   * })
  **/
  upsert<T extends Clinic_finance_dayUpsertArgs>(
    args: Subset<T, Clinic_finance_dayUpsertArgs>
  ): CheckSelect<T, Prisma__Clinic_finance_dayClient<Clinic_finance_day>, Prisma__Clinic_finance_dayClient<Clinic_finance_dayGetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyClinic_finance_dayArgs, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Clinic_finance_day.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Clinic_finance_dayClient<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  clinic<T extends ClinicArgs = {}>(args?: Subset<T, ClinicArgs>): CheckSelect<T, Prisma__ClinicClient<Clinic | null>, Prisma__ClinicClient<ClinicGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Clinic_finance_day findOne
 */
export type FindOneClinic_finance_dayArgs = {
  /**
   * Select specific fields to fetch from the Clinic_finance_day
  **/
  select?: Clinic_finance_daySelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_finance_dayInclude | null
  /**
   * Filter, which Clinic_finance_day to fetch.
  **/
  where: Clinic_finance_dayWhereUniqueInput
}


/**
 * Clinic_finance_day findMany
 */
export type FindManyClinic_finance_dayArgs = {
  /**
   * Select specific fields to fetch from the Clinic_finance_day
  **/
  select?: Clinic_finance_daySelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_finance_dayInclude | null
  /**
   * Filter, which Clinic_finance_days to fetch.
  **/
  where?: Clinic_finance_dayWhereInput
  /**
   * Determine the order of the Clinic_finance_days to fetch.
  **/
  orderBy?: Clinic_finance_dayOrderByInput
  /**
   * Sets the position for listing Clinic_finance_days.
  **/
  cursor?: Clinic_finance_dayWhereUniqueInput
  /**
   * The number of Clinic_finance_days to fetch. If negative number, it will take Clinic_finance_days before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Clinic_finance_days.
  **/
  skip?: number
}


/**
 * Clinic_finance_day create
 */
export type Clinic_finance_dayCreateArgs = {
  /**
   * Select specific fields to fetch from the Clinic_finance_day
  **/
  select?: Clinic_finance_daySelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_finance_dayInclude | null
  /**
   * The data needed to create a Clinic_finance_day.
  **/
  data: Clinic_finance_dayCreateInput
}


/**
 * Clinic_finance_day update
 */
export type Clinic_finance_dayUpdateArgs = {
  /**
   * Select specific fields to fetch from the Clinic_finance_day
  **/
  select?: Clinic_finance_daySelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_finance_dayInclude | null
  /**
   * The data needed to update a Clinic_finance_day.
  **/
  data: Clinic_finance_dayUpdateInput
  /**
   * Choose, which Clinic_finance_day to update.
  **/
  where: Clinic_finance_dayWhereUniqueInput
}


/**
 * Clinic_finance_day updateMany
 */
export type Clinic_finance_dayUpdateManyArgs = {
  data: Clinic_finance_dayUpdateManyMutationInput
  where?: Clinic_finance_dayWhereInput
}


/**
 * Clinic_finance_day upsert
 */
export type Clinic_finance_dayUpsertArgs = {
  /**
   * Select specific fields to fetch from the Clinic_finance_day
  **/
  select?: Clinic_finance_daySelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_finance_dayInclude | null
  /**
   * The filter to search for the Clinic_finance_day to update in case it exists.
  **/
  where: Clinic_finance_dayWhereUniqueInput
  /**
   * In case the Clinic_finance_day found by the `where` argument doesn't exist, create a new Clinic_finance_day with this data.
  **/
  create: Clinic_finance_dayCreateInput
  /**
   * In case the Clinic_finance_day was found with the provided `where` argument, update it with this data.
  **/
  update: Clinic_finance_dayUpdateInput
}


/**
 * Clinic_finance_day delete
 */
export type Clinic_finance_dayDeleteArgs = {
  /**
   * Select specific fields to fetch from the Clinic_finance_day
  **/
  select?: Clinic_finance_daySelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_finance_dayInclude | null
  /**
   * Filter which Clinic_finance_day to delete.
  **/
  where: Clinic_finance_dayWhereUniqueInput
}


/**
 * Clinic_finance_day deleteMany
 */
export type Clinic_finance_dayDeleteManyArgs = {
  where?: Clinic_finance_dayWhereInput
}


/**
 * Clinic_finance_day without action
 */
export type Clinic_finance_dayArgs = {
  /**
   * Select specific fields to fetch from the Clinic_finance_day
  **/
  select?: Clinic_finance_daySelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_finance_dayInclude | null
}



/**
 * Model Chairs
 */

export type Chairs = {
  id: string
  name: string
  clinid_id: string
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type ChairsSelect = {
  id?: boolean
  name?: boolean
  clinic?: boolean | ClinicArgs
  clinid_id?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
  Chair_finance_day?: boolean | FindManyChair_finance_dayArgs
}

export type ChairsInclude = {
  clinic?: boolean | ClinicArgs
  Chair_finance_day?: boolean | FindManyChair_finance_dayArgs
}

export type ChairsGetPayload<
  S extends boolean | null | undefined | ChairsArgs,
  U = keyof S
> = S extends true
  ? Chairs
  : S extends undefined
  ? never
  : S extends ChairsArgs | FindManyChairsArgs
  ? 'include' extends U
    ? Chairs  & {
      [P in TrueKeys<S['include']>]:
      P extends 'clinic'
      ? ClinicGetPayload<S['include'][P]> :
      P extends 'Chair_finance_day'
      ? Array<Chair_finance_dayGetPayload<S['include'][P]>> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Chairs ? Chairs[P]
: 
      P extends 'clinic'
      ? ClinicGetPayload<S['select'][P]> :
      P extends 'Chair_finance_day'
      ? Array<Chair_finance_dayGetPayload<S['select'][P]>> : never
    }
  : Chairs
: Chairs


export interface ChairsDelegate {
  /**
   * Find zero or one Chairs.
   * @param {FindOneChairsArgs} args - Arguments to find a Chairs
   * @example
   * // Get one Chairs
   * const chairs = await prisma.chairs.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneChairsArgs>(
    args: Subset<T, FindOneChairsArgs>
  ): CheckSelect<T, Prisma__ChairsClient<Chairs | null>, Prisma__ChairsClient<ChairsGetPayload<T> | null>>
  /**
   * Find zero or more Chairs.
   * @param {FindManyChairsArgs=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Chairs
   * const chairs = await prisma.chairs.findMany()
   * 
   * // Get first 10 Chairs
   * const chairs = await prisma.chairs.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const chairsWithIdOnly = await prisma.chairs.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyChairsArgs>(
    args?: Subset<T, FindManyChairsArgs>
  ): CheckSelect<T, Promise<Array<Chairs>>, Promise<Array<ChairsGetPayload<T>>>>
  /**
   * Create a Chairs.
   * @param {ChairsCreateArgs} args - Arguments to create a Chairs.
   * @example
   * // Create one Chairs
   * const Chairs = await prisma.chairs.create({
   *   data: {
   *     // ... data to create a Chairs
   *   }
   * })
   * 
  **/
  create<T extends ChairsCreateArgs>(
    args: Subset<T, ChairsCreateArgs>
  ): CheckSelect<T, Prisma__ChairsClient<Chairs>, Prisma__ChairsClient<ChairsGetPayload<T>>>
  /**
   * Delete a Chairs.
   * @param {ChairsDeleteArgs} args - Arguments to delete one Chairs.
   * @example
   * // Delete one Chairs
   * const Chairs = await prisma.chairs.delete({
   *   where: {
   *     // ... filter to delete one Chairs
   *   }
   * })
   * 
  **/
  delete<T extends ChairsDeleteArgs>(
    args: Subset<T, ChairsDeleteArgs>
  ): CheckSelect<T, Prisma__ChairsClient<Chairs>, Prisma__ChairsClient<ChairsGetPayload<T>>>
  /**
   * Update one Chairs.
   * @param {ChairsUpdateArgs} args - Arguments to update one Chairs.
   * @example
   * // Update one Chairs
   * const chairs = await prisma.chairs.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends ChairsUpdateArgs>(
    args: Subset<T, ChairsUpdateArgs>
  ): CheckSelect<T, Prisma__ChairsClient<Chairs>, Prisma__ChairsClient<ChairsGetPayload<T>>>
  /**
   * Delete zero or more Chairs.
   * @param {ChairsDeleteManyArgs} args - Arguments to filter Chairs to delete.
   * @example
   * // Delete a few Chairs
   * const { count } = await prisma.chairs.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends ChairsDeleteManyArgs>(
    args: Subset<T, ChairsDeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Chairs.
   * @param {ChairsUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Chairs
   * const chairs = await prisma.chairs.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends ChairsUpdateManyArgs>(
    args: Subset<T, ChairsUpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Chairs.
   * @param {ChairsUpsertArgs} args - Arguments to update or create a Chairs.
   * @example
   * // Update or create a Chairs
   * const chairs = await prisma.chairs.upsert({
   *   create: {
   *     // ... data to create a Chairs
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Chairs we want to update
   *   }
   * })
  **/
  upsert<T extends ChairsUpsertArgs>(
    args: Subset<T, ChairsUpsertArgs>
  ): CheckSelect<T, Prisma__ChairsClient<Chairs>, Prisma__ChairsClient<ChairsGetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyChairsArgs, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Chairs.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__ChairsClient<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  clinic<T extends ClinicArgs = {}>(args?: Subset<T, ClinicArgs>): CheckSelect<T, Prisma__ClinicClient<Clinic | null>, Prisma__ClinicClient<ClinicGetPayload<T> | null>>;

  Chair_finance_day<T extends FindManyChair_finance_dayArgs = {}>(args?: Subset<T, FindManyChair_finance_dayArgs>): CheckSelect<T, Promise<Array<Chair_finance_day>>, Promise<Array<Chair_finance_dayGetPayload<T>>>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Chairs findOne
 */
export type FindOneChairsArgs = {
  /**
   * Select specific fields to fetch from the Chairs
  **/
  select?: ChairsSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: ChairsInclude | null
  /**
   * Filter, which Chairs to fetch.
  **/
  where: ChairsWhereUniqueInput
}


/**
 * Chairs findMany
 */
export type FindManyChairsArgs = {
  /**
   * Select specific fields to fetch from the Chairs
  **/
  select?: ChairsSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: ChairsInclude | null
  /**
   * Filter, which Chairs to fetch.
  **/
  where?: ChairsWhereInput
  /**
   * Determine the order of the Chairs to fetch.
  **/
  orderBy?: ChairsOrderByInput
  /**
   * Sets the position for listing Chairs.
  **/
  cursor?: ChairsWhereUniqueInput
  /**
   * The number of Chairs to fetch. If negative number, it will take Chairs before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Chairs.
  **/
  skip?: number
}


/**
 * Chairs create
 */
export type ChairsCreateArgs = {
  /**
   * Select specific fields to fetch from the Chairs
  **/
  select?: ChairsSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: ChairsInclude | null
  /**
   * The data needed to create a Chairs.
  **/
  data: ChairsCreateInput
}


/**
 * Chairs update
 */
export type ChairsUpdateArgs = {
  /**
   * Select specific fields to fetch from the Chairs
  **/
  select?: ChairsSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: ChairsInclude | null
  /**
   * The data needed to update a Chairs.
  **/
  data: ChairsUpdateInput
  /**
   * Choose, which Chairs to update.
  **/
  where: ChairsWhereUniqueInput
}


/**
 * Chairs updateMany
 */
export type ChairsUpdateManyArgs = {
  data: ChairsUpdateManyMutationInput
  where?: ChairsWhereInput
}


/**
 * Chairs upsert
 */
export type ChairsUpsertArgs = {
  /**
   * Select specific fields to fetch from the Chairs
  **/
  select?: ChairsSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: ChairsInclude | null
  /**
   * The filter to search for the Chairs to update in case it exists.
  **/
  where: ChairsWhereUniqueInput
  /**
   * In case the Chairs found by the `where` argument doesn't exist, create a new Chairs with this data.
  **/
  create: ChairsCreateInput
  /**
   * In case the Chairs was found with the provided `where` argument, update it with this data.
  **/
  update: ChairsUpdateInput
}


/**
 * Chairs delete
 */
export type ChairsDeleteArgs = {
  /**
   * Select specific fields to fetch from the Chairs
  **/
  select?: ChairsSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: ChairsInclude | null
  /**
   * Filter which Chairs to delete.
  **/
  where: ChairsWhereUniqueInput
}


/**
 * Chairs deleteMany
 */
export type ChairsDeleteManyArgs = {
  where?: ChairsWhereInput
}


/**
 * Chairs without action
 */
export type ChairsArgs = {
  /**
   * Select specific fields to fetch from the Chairs
  **/
  select?: ChairsSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: ChairsInclude | null
}



/**
 * Model Chair_finance_day
 */

export type Chair_finance_day = {
  chair_id: string
  clinid_id: string
  day: number
  month: number
  year: number
  total_income: number | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Chair_finance_daySelect = {
  chair?: boolean | ChairsArgs
  chair_id?: boolean
  clinic?: boolean | ClinicArgs
  clinid_id?: boolean
  day?: boolean
  month?: boolean
  year?: boolean
  total_income?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Chair_finance_dayInclude = {
  chair?: boolean | ChairsArgs
  clinic?: boolean | ClinicArgs
}

export type Chair_finance_dayGetPayload<
  S extends boolean | null | undefined | Chair_finance_dayArgs,
  U = keyof S
> = S extends true
  ? Chair_finance_day
  : S extends undefined
  ? never
  : S extends Chair_finance_dayArgs | FindManyChair_finance_dayArgs
  ? 'include' extends U
    ? Chair_finance_day  & {
      [P in TrueKeys<S['include']>]:
      P extends 'chair'
      ? ChairsGetPayload<S['include'][P]> :
      P extends 'clinic'
      ? ClinicGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Chair_finance_day ? Chair_finance_day[P]
: 
      P extends 'chair'
      ? ChairsGetPayload<S['select'][P]> :
      P extends 'clinic'
      ? ClinicGetPayload<S['select'][P]> : never
    }
  : Chair_finance_day
: Chair_finance_day


export interface Chair_finance_dayDelegate {
  /**
   * Find zero or one Chair_finance_day.
   * @param {FindOneChair_finance_dayArgs} args - Arguments to find a Chair_finance_day
   * @example
   * // Get one Chair_finance_day
   * const chair_finance_day = await prisma.chair_finance_day.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneChair_finance_dayArgs>(
    args: Subset<T, FindOneChair_finance_dayArgs>
  ): CheckSelect<T, Prisma__Chair_finance_dayClient<Chair_finance_day | null>, Prisma__Chair_finance_dayClient<Chair_finance_dayGetPayload<T> | null>>
  /**
   * Find zero or more Chair_finance_days.
   * @param {FindManyChair_finance_dayArgs=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Chair_finance_days
   * const chair_finance_days = await prisma.chair_finance_day.findMany()
   * 
   * // Get first 10 Chair_finance_days
   * const chair_finance_days = await prisma.chair_finance_day.findMany({ take: 10 })
   * 
   * // Only select the `chair_id`
   * const chair_finance_dayWithChair_idOnly = await prisma.chair_finance_day.findMany({ select: { chair_id: true } })
   * 
  **/
  findMany<T extends FindManyChair_finance_dayArgs>(
    args?: Subset<T, FindManyChair_finance_dayArgs>
  ): CheckSelect<T, Promise<Array<Chair_finance_day>>, Promise<Array<Chair_finance_dayGetPayload<T>>>>
  /**
   * Create a Chair_finance_day.
   * @param {Chair_finance_dayCreateArgs} args - Arguments to create a Chair_finance_day.
   * @example
   * // Create one Chair_finance_day
   * const Chair_finance_day = await prisma.chair_finance_day.create({
   *   data: {
   *     // ... data to create a Chair_finance_day
   *   }
   * })
   * 
  **/
  create<T extends Chair_finance_dayCreateArgs>(
    args: Subset<T, Chair_finance_dayCreateArgs>
  ): CheckSelect<T, Prisma__Chair_finance_dayClient<Chair_finance_day>, Prisma__Chair_finance_dayClient<Chair_finance_dayGetPayload<T>>>
  /**
   * Delete a Chair_finance_day.
   * @param {Chair_finance_dayDeleteArgs} args - Arguments to delete one Chair_finance_day.
   * @example
   * // Delete one Chair_finance_day
   * const Chair_finance_day = await prisma.chair_finance_day.delete({
   *   where: {
   *     // ... filter to delete one Chair_finance_day
   *   }
   * })
   * 
  **/
  delete<T extends Chair_finance_dayDeleteArgs>(
    args: Subset<T, Chair_finance_dayDeleteArgs>
  ): CheckSelect<T, Prisma__Chair_finance_dayClient<Chair_finance_day>, Prisma__Chair_finance_dayClient<Chair_finance_dayGetPayload<T>>>
  /**
   * Update one Chair_finance_day.
   * @param {Chair_finance_dayUpdateArgs} args - Arguments to update one Chair_finance_day.
   * @example
   * // Update one Chair_finance_day
   * const chair_finance_day = await prisma.chair_finance_day.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Chair_finance_dayUpdateArgs>(
    args: Subset<T, Chair_finance_dayUpdateArgs>
  ): CheckSelect<T, Prisma__Chair_finance_dayClient<Chair_finance_day>, Prisma__Chair_finance_dayClient<Chair_finance_dayGetPayload<T>>>
  /**
   * Delete zero or more Chair_finance_days.
   * @param {Chair_finance_dayDeleteManyArgs} args - Arguments to filter Chair_finance_days to delete.
   * @example
   * // Delete a few Chair_finance_days
   * const { count } = await prisma.chair_finance_day.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Chair_finance_dayDeleteManyArgs>(
    args: Subset<T, Chair_finance_dayDeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Chair_finance_days.
   * @param {Chair_finance_dayUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Chair_finance_days
   * const chair_finance_day = await prisma.chair_finance_day.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Chair_finance_dayUpdateManyArgs>(
    args: Subset<T, Chair_finance_dayUpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Chair_finance_day.
   * @param {Chair_finance_dayUpsertArgs} args - Arguments to update or create a Chair_finance_day.
   * @example
   * // Update or create a Chair_finance_day
   * const chair_finance_day = await prisma.chair_finance_day.upsert({
   *   create: {
   *     // ... data to create a Chair_finance_day
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Chair_finance_day we want to update
   *   }
   * })
  **/
  upsert<T extends Chair_finance_dayUpsertArgs>(
    args: Subset<T, Chair_finance_dayUpsertArgs>
  ): CheckSelect<T, Prisma__Chair_finance_dayClient<Chair_finance_day>, Prisma__Chair_finance_dayClient<Chair_finance_dayGetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyChair_finance_dayArgs, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Chair_finance_day.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Chair_finance_dayClient<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  chair<T extends ChairsArgs = {}>(args?: Subset<T, ChairsArgs>): CheckSelect<T, Prisma__ChairsClient<Chairs | null>, Prisma__ChairsClient<ChairsGetPayload<T> | null>>;

  clinic<T extends ClinicArgs = {}>(args?: Subset<T, ClinicArgs>): CheckSelect<T, Prisma__ClinicClient<Clinic | null>, Prisma__ClinicClient<ClinicGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Chair_finance_day findOne
 */
export type FindOneChair_finance_dayArgs = {
  /**
   * Select specific fields to fetch from the Chair_finance_day
  **/
  select?: Chair_finance_daySelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Chair_finance_dayInclude | null
  /**
   * Filter, which Chair_finance_day to fetch.
  **/
  where: Chair_finance_dayWhereUniqueInput
}


/**
 * Chair_finance_day findMany
 */
export type FindManyChair_finance_dayArgs = {
  /**
   * Select specific fields to fetch from the Chair_finance_day
  **/
  select?: Chair_finance_daySelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Chair_finance_dayInclude | null
  /**
   * Filter, which Chair_finance_days to fetch.
  **/
  where?: Chair_finance_dayWhereInput
  /**
   * Determine the order of the Chair_finance_days to fetch.
  **/
  orderBy?: Chair_finance_dayOrderByInput
  /**
   * Sets the position for listing Chair_finance_days.
  **/
  cursor?: Chair_finance_dayWhereUniqueInput
  /**
   * The number of Chair_finance_days to fetch. If negative number, it will take Chair_finance_days before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Chair_finance_days.
  **/
  skip?: number
}


/**
 * Chair_finance_day create
 */
export type Chair_finance_dayCreateArgs = {
  /**
   * Select specific fields to fetch from the Chair_finance_day
  **/
  select?: Chair_finance_daySelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Chair_finance_dayInclude | null
  /**
   * The data needed to create a Chair_finance_day.
  **/
  data: Chair_finance_dayCreateInput
}


/**
 * Chair_finance_day update
 */
export type Chair_finance_dayUpdateArgs = {
  /**
   * Select specific fields to fetch from the Chair_finance_day
  **/
  select?: Chair_finance_daySelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Chair_finance_dayInclude | null
  /**
   * The data needed to update a Chair_finance_day.
  **/
  data: Chair_finance_dayUpdateInput
  /**
   * Choose, which Chair_finance_day to update.
  **/
  where: Chair_finance_dayWhereUniqueInput
}


/**
 * Chair_finance_day updateMany
 */
export type Chair_finance_dayUpdateManyArgs = {
  data: Chair_finance_dayUpdateManyMutationInput
  where?: Chair_finance_dayWhereInput
}


/**
 * Chair_finance_day upsert
 */
export type Chair_finance_dayUpsertArgs = {
  /**
   * Select specific fields to fetch from the Chair_finance_day
  **/
  select?: Chair_finance_daySelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Chair_finance_dayInclude | null
  /**
   * The filter to search for the Chair_finance_day to update in case it exists.
  **/
  where: Chair_finance_dayWhereUniqueInput
  /**
   * In case the Chair_finance_day found by the `where` argument doesn't exist, create a new Chair_finance_day with this data.
  **/
  create: Chair_finance_dayCreateInput
  /**
   * In case the Chair_finance_day was found with the provided `where` argument, update it with this data.
  **/
  update: Chair_finance_dayUpdateInput
}


/**
 * Chair_finance_day delete
 */
export type Chair_finance_dayDeleteArgs = {
  /**
   * Select specific fields to fetch from the Chair_finance_day
  **/
  select?: Chair_finance_daySelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Chair_finance_dayInclude | null
  /**
   * Filter which Chair_finance_day to delete.
  **/
  where: Chair_finance_dayWhereUniqueInput
}


/**
 * Chair_finance_day deleteMany
 */
export type Chair_finance_dayDeleteManyArgs = {
  where?: Chair_finance_dayWhereInput
}


/**
 * Chair_finance_day without action
 */
export type Chair_finance_dayArgs = {
  /**
   * Select specific fields to fetch from the Chair_finance_day
  **/
  select?: Chair_finance_daySelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Chair_finance_dayInclude | null
}



/**
 * Model Clinic_finance_procedure
 */

export type Clinic_finance_procedure = {
  id: string
  clinid_id: string
  treatment_evolution_registry_id: string
  payment_status: Payment_status
  client_payment_type: Payment_method
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Clinic_finance_procedureSelect = {
  id?: boolean
  clinic?: boolean | ClinicArgs
  clinid_id?: boolean
  treatment?: boolean | Treatment_evolutionArgs
  treatment_evolution_registry_id?: boolean
  payment_status?: boolean
  client_payment_type?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Clinic_finance_procedureInclude = {
  clinic?: boolean | ClinicArgs
  treatment?: boolean | Treatment_evolutionArgs
}

export type Clinic_finance_procedureGetPayload<
  S extends boolean | null | undefined | Clinic_finance_procedureArgs,
  U = keyof S
> = S extends true
  ? Clinic_finance_procedure
  : S extends undefined
  ? never
  : S extends Clinic_finance_procedureArgs | FindManyClinic_finance_procedureArgs
  ? 'include' extends U
    ? Clinic_finance_procedure  & {
      [P in TrueKeys<S['include']>]:
      P extends 'clinic'
      ? ClinicGetPayload<S['include'][P]> :
      P extends 'treatment'
      ? Treatment_evolutionGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Clinic_finance_procedure ? Clinic_finance_procedure[P]
: 
      P extends 'clinic'
      ? ClinicGetPayload<S['select'][P]> :
      P extends 'treatment'
      ? Treatment_evolutionGetPayload<S['select'][P]> : never
    }
  : Clinic_finance_procedure
: Clinic_finance_procedure


export interface Clinic_finance_procedureDelegate {
  /**
   * Find zero or one Clinic_finance_procedure.
   * @param {FindOneClinic_finance_procedureArgs} args - Arguments to find a Clinic_finance_procedure
   * @example
   * // Get one Clinic_finance_procedure
   * const clinic_finance_procedure = await prisma.clinic_finance_procedure.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneClinic_finance_procedureArgs>(
    args: Subset<T, FindOneClinic_finance_procedureArgs>
  ): CheckSelect<T, Prisma__Clinic_finance_procedureClient<Clinic_finance_procedure | null>, Prisma__Clinic_finance_procedureClient<Clinic_finance_procedureGetPayload<T> | null>>
  /**
   * Find zero or more Clinic_finance_procedures.
   * @param {FindManyClinic_finance_procedureArgs=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Clinic_finance_procedures
   * const clinic_finance_procedures = await prisma.clinic_finance_procedure.findMany()
   * 
   * // Get first 10 Clinic_finance_procedures
   * const clinic_finance_procedures = await prisma.clinic_finance_procedure.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const clinic_finance_procedureWithIdOnly = await prisma.clinic_finance_procedure.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyClinic_finance_procedureArgs>(
    args?: Subset<T, FindManyClinic_finance_procedureArgs>
  ): CheckSelect<T, Promise<Array<Clinic_finance_procedure>>, Promise<Array<Clinic_finance_procedureGetPayload<T>>>>
  /**
   * Create a Clinic_finance_procedure.
   * @param {Clinic_finance_procedureCreateArgs} args - Arguments to create a Clinic_finance_procedure.
   * @example
   * // Create one Clinic_finance_procedure
   * const Clinic_finance_procedure = await prisma.clinic_finance_procedure.create({
   *   data: {
   *     // ... data to create a Clinic_finance_procedure
   *   }
   * })
   * 
  **/
  create<T extends Clinic_finance_procedureCreateArgs>(
    args: Subset<T, Clinic_finance_procedureCreateArgs>
  ): CheckSelect<T, Prisma__Clinic_finance_procedureClient<Clinic_finance_procedure>, Prisma__Clinic_finance_procedureClient<Clinic_finance_procedureGetPayload<T>>>
  /**
   * Delete a Clinic_finance_procedure.
   * @param {Clinic_finance_procedureDeleteArgs} args - Arguments to delete one Clinic_finance_procedure.
   * @example
   * // Delete one Clinic_finance_procedure
   * const Clinic_finance_procedure = await prisma.clinic_finance_procedure.delete({
   *   where: {
   *     // ... filter to delete one Clinic_finance_procedure
   *   }
   * })
   * 
  **/
  delete<T extends Clinic_finance_procedureDeleteArgs>(
    args: Subset<T, Clinic_finance_procedureDeleteArgs>
  ): CheckSelect<T, Prisma__Clinic_finance_procedureClient<Clinic_finance_procedure>, Prisma__Clinic_finance_procedureClient<Clinic_finance_procedureGetPayload<T>>>
  /**
   * Update one Clinic_finance_procedure.
   * @param {Clinic_finance_procedureUpdateArgs} args - Arguments to update one Clinic_finance_procedure.
   * @example
   * // Update one Clinic_finance_procedure
   * const clinic_finance_procedure = await prisma.clinic_finance_procedure.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Clinic_finance_procedureUpdateArgs>(
    args: Subset<T, Clinic_finance_procedureUpdateArgs>
  ): CheckSelect<T, Prisma__Clinic_finance_procedureClient<Clinic_finance_procedure>, Prisma__Clinic_finance_procedureClient<Clinic_finance_procedureGetPayload<T>>>
  /**
   * Delete zero or more Clinic_finance_procedures.
   * @param {Clinic_finance_procedureDeleteManyArgs} args - Arguments to filter Clinic_finance_procedures to delete.
   * @example
   * // Delete a few Clinic_finance_procedures
   * const { count } = await prisma.clinic_finance_procedure.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Clinic_finance_procedureDeleteManyArgs>(
    args: Subset<T, Clinic_finance_procedureDeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Clinic_finance_procedures.
   * @param {Clinic_finance_procedureUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Clinic_finance_procedures
   * const clinic_finance_procedure = await prisma.clinic_finance_procedure.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Clinic_finance_procedureUpdateManyArgs>(
    args: Subset<T, Clinic_finance_procedureUpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Clinic_finance_procedure.
   * @param {Clinic_finance_procedureUpsertArgs} args - Arguments to update or create a Clinic_finance_procedure.
   * @example
   * // Update or create a Clinic_finance_procedure
   * const clinic_finance_procedure = await prisma.clinic_finance_procedure.upsert({
   *   create: {
   *     // ... data to create a Clinic_finance_procedure
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Clinic_finance_procedure we want to update
   *   }
   * })
  **/
  upsert<T extends Clinic_finance_procedureUpsertArgs>(
    args: Subset<T, Clinic_finance_procedureUpsertArgs>
  ): CheckSelect<T, Prisma__Clinic_finance_procedureClient<Clinic_finance_procedure>, Prisma__Clinic_finance_procedureClient<Clinic_finance_procedureGetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyClinic_finance_procedureArgs, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Clinic_finance_procedure.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Clinic_finance_procedureClient<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  clinic<T extends ClinicArgs = {}>(args?: Subset<T, ClinicArgs>): CheckSelect<T, Prisma__ClinicClient<Clinic | null>, Prisma__ClinicClient<ClinicGetPayload<T> | null>>;

  treatment<T extends Treatment_evolutionArgs = {}>(args?: Subset<T, Treatment_evolutionArgs>): CheckSelect<T, Prisma__Treatment_evolutionClient<Treatment_evolution | null>, Prisma__Treatment_evolutionClient<Treatment_evolutionGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Clinic_finance_procedure findOne
 */
export type FindOneClinic_finance_procedureArgs = {
  /**
   * Select specific fields to fetch from the Clinic_finance_procedure
  **/
  select?: Clinic_finance_procedureSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_finance_procedureInclude | null
  /**
   * Filter, which Clinic_finance_procedure to fetch.
  **/
  where: Clinic_finance_procedureWhereUniqueInput
}


/**
 * Clinic_finance_procedure findMany
 */
export type FindManyClinic_finance_procedureArgs = {
  /**
   * Select specific fields to fetch from the Clinic_finance_procedure
  **/
  select?: Clinic_finance_procedureSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_finance_procedureInclude | null
  /**
   * Filter, which Clinic_finance_procedures to fetch.
  **/
  where?: Clinic_finance_procedureWhereInput
  /**
   * Determine the order of the Clinic_finance_procedures to fetch.
  **/
  orderBy?: Clinic_finance_procedureOrderByInput
  /**
   * Sets the position for listing Clinic_finance_procedures.
  **/
  cursor?: Clinic_finance_procedureWhereUniqueInput
  /**
   * The number of Clinic_finance_procedures to fetch. If negative number, it will take Clinic_finance_procedures before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Clinic_finance_procedures.
  **/
  skip?: number
}


/**
 * Clinic_finance_procedure create
 */
export type Clinic_finance_procedureCreateArgs = {
  /**
   * Select specific fields to fetch from the Clinic_finance_procedure
  **/
  select?: Clinic_finance_procedureSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_finance_procedureInclude | null
  /**
   * The data needed to create a Clinic_finance_procedure.
  **/
  data: Clinic_finance_procedureCreateInput
}


/**
 * Clinic_finance_procedure update
 */
export type Clinic_finance_procedureUpdateArgs = {
  /**
   * Select specific fields to fetch from the Clinic_finance_procedure
  **/
  select?: Clinic_finance_procedureSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_finance_procedureInclude | null
  /**
   * The data needed to update a Clinic_finance_procedure.
  **/
  data: Clinic_finance_procedureUpdateInput
  /**
   * Choose, which Clinic_finance_procedure to update.
  **/
  where: Clinic_finance_procedureWhereUniqueInput
}


/**
 * Clinic_finance_procedure updateMany
 */
export type Clinic_finance_procedureUpdateManyArgs = {
  data: Clinic_finance_procedureUpdateManyMutationInput
  where?: Clinic_finance_procedureWhereInput
}


/**
 * Clinic_finance_procedure upsert
 */
export type Clinic_finance_procedureUpsertArgs = {
  /**
   * Select specific fields to fetch from the Clinic_finance_procedure
  **/
  select?: Clinic_finance_procedureSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_finance_procedureInclude | null
  /**
   * The filter to search for the Clinic_finance_procedure to update in case it exists.
  **/
  where: Clinic_finance_procedureWhereUniqueInput
  /**
   * In case the Clinic_finance_procedure found by the `where` argument doesn't exist, create a new Clinic_finance_procedure with this data.
  **/
  create: Clinic_finance_procedureCreateInput
  /**
   * In case the Clinic_finance_procedure was found with the provided `where` argument, update it with this data.
  **/
  update: Clinic_finance_procedureUpdateInput
}


/**
 * Clinic_finance_procedure delete
 */
export type Clinic_finance_procedureDeleteArgs = {
  /**
   * Select specific fields to fetch from the Clinic_finance_procedure
  **/
  select?: Clinic_finance_procedureSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_finance_procedureInclude | null
  /**
   * Filter which Clinic_finance_procedure to delete.
  **/
  where: Clinic_finance_procedureWhereUniqueInput
}


/**
 * Clinic_finance_procedure deleteMany
 */
export type Clinic_finance_procedureDeleteManyArgs = {
  where?: Clinic_finance_procedureWhereInput
}


/**
 * Clinic_finance_procedure without action
 */
export type Clinic_finance_procedureArgs = {
  /**
   * Select specific fields to fetch from the Clinic_finance_procedure
  **/
  select?: Clinic_finance_procedureSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_finance_procedureInclude | null
}



/**
 * Model Email
 */

export type Email = {
  id: string
  email: string
  clinid_id: string | null
  techinical_mananger_id: string | null
  legal_responsible_id: string | null
  dentist_id: string | null
  patient_id: string | null
  technicalmanagerCpf: string | null
  legalresponsibleCpf: string | null
  patientId: string | null
  dentistId: string | null
}



export type EmailSelect = {
  id?: boolean
  email?: boolean
  clinic?: boolean | ClinicArgs
  clinid_id?: boolean
  techinical_mananger?: boolean | TechnicalmanagerArgs
  techinical_mananger_id?: boolean
  legal_responsible?: boolean | LegalresponsibleArgs
  legal_responsible_id?: boolean
  dentist?: boolean | DentistArgs
  dentist_id?: boolean
  patient?: boolean | PatientArgs
  patient_id?: boolean
  Technicalmanager?: boolean | TechnicalmanagerArgs
  technicalmanagerCpf?: boolean
  Legalresponsible?: boolean | LegalresponsibleArgs
  legalresponsibleCpf?: boolean
  Patient?: boolean | PatientArgs
  patientId?: boolean
  Dentist?: boolean | DentistArgs
  dentistId?: boolean
}

export type EmailInclude = {
  clinic?: boolean | ClinicArgs
  techinical_mananger?: boolean | TechnicalmanagerArgs
  legal_responsible?: boolean | LegalresponsibleArgs
  dentist?: boolean | DentistArgs
  patient?: boolean | PatientArgs
  Technicalmanager?: boolean | TechnicalmanagerArgs
  Legalresponsible?: boolean | LegalresponsibleArgs
  Patient?: boolean | PatientArgs
  Dentist?: boolean | DentistArgs
}

export type EmailGetPayload<
  S extends boolean | null | undefined | EmailArgs,
  U = keyof S
> = S extends true
  ? Email
  : S extends undefined
  ? never
  : S extends EmailArgs | FindManyEmailArgs
  ? 'include' extends U
    ? Email  & {
      [P in TrueKeys<S['include']>]:
      P extends 'clinic'
      ? ClinicGetPayload<S['include'][P]> | null :
      P extends 'techinical_mananger'
      ? TechnicalmanagerGetPayload<S['include'][P]> | null :
      P extends 'legal_responsible'
      ? LegalresponsibleGetPayload<S['include'][P]> | null :
      P extends 'dentist'
      ? DentistGetPayload<S['include'][P]> | null :
      P extends 'patient'
      ? PatientGetPayload<S['include'][P]> | null :
      P extends 'Technicalmanager'
      ? TechnicalmanagerGetPayload<S['include'][P]> | null :
      P extends 'Legalresponsible'
      ? LegalresponsibleGetPayload<S['include'][P]> | null :
      P extends 'Patient'
      ? PatientGetPayload<S['include'][P]> | null :
      P extends 'Dentist'
      ? DentistGetPayload<S['include'][P]> | null : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Email ? Email[P]
: 
      P extends 'clinic'
      ? ClinicGetPayload<S['select'][P]> | null :
      P extends 'techinical_mananger'
      ? TechnicalmanagerGetPayload<S['select'][P]> | null :
      P extends 'legal_responsible'
      ? LegalresponsibleGetPayload<S['select'][P]> | null :
      P extends 'dentist'
      ? DentistGetPayload<S['select'][P]> | null :
      P extends 'patient'
      ? PatientGetPayload<S['select'][P]> | null :
      P extends 'Technicalmanager'
      ? TechnicalmanagerGetPayload<S['select'][P]> | null :
      P extends 'Legalresponsible'
      ? LegalresponsibleGetPayload<S['select'][P]> | null :
      P extends 'Patient'
      ? PatientGetPayload<S['select'][P]> | null :
      P extends 'Dentist'
      ? DentistGetPayload<S['select'][P]> | null : never
    }
  : Email
: Email


export interface EmailDelegate {
  /**
   * Find zero or one Email.
   * @param {FindOneEmailArgs} args - Arguments to find a Email
   * @example
   * // Get one Email
   * const email = await prisma.email.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneEmailArgs>(
    args: Subset<T, FindOneEmailArgs>
  ): CheckSelect<T, Prisma__EmailClient<Email | null>, Prisma__EmailClient<EmailGetPayload<T> | null>>
  /**
   * Find zero or more Emails.
   * @param {FindManyEmailArgs=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Emails
   * const emails = await prisma.email.findMany()
   * 
   * // Get first 10 Emails
   * const emails = await prisma.email.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const emailWithIdOnly = await prisma.email.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyEmailArgs>(
    args?: Subset<T, FindManyEmailArgs>
  ): CheckSelect<T, Promise<Array<Email>>, Promise<Array<EmailGetPayload<T>>>>
  /**
   * Create a Email.
   * @param {EmailCreateArgs} args - Arguments to create a Email.
   * @example
   * // Create one Email
   * const Email = await prisma.email.create({
   *   data: {
   *     // ... data to create a Email
   *   }
   * })
   * 
  **/
  create<T extends EmailCreateArgs>(
    args: Subset<T, EmailCreateArgs>
  ): CheckSelect<T, Prisma__EmailClient<Email>, Prisma__EmailClient<EmailGetPayload<T>>>
  /**
   * Delete a Email.
   * @param {EmailDeleteArgs} args - Arguments to delete one Email.
   * @example
   * // Delete one Email
   * const Email = await prisma.email.delete({
   *   where: {
   *     // ... filter to delete one Email
   *   }
   * })
   * 
  **/
  delete<T extends EmailDeleteArgs>(
    args: Subset<T, EmailDeleteArgs>
  ): CheckSelect<T, Prisma__EmailClient<Email>, Prisma__EmailClient<EmailGetPayload<T>>>
  /**
   * Update one Email.
   * @param {EmailUpdateArgs} args - Arguments to update one Email.
   * @example
   * // Update one Email
   * const email = await prisma.email.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends EmailUpdateArgs>(
    args: Subset<T, EmailUpdateArgs>
  ): CheckSelect<T, Prisma__EmailClient<Email>, Prisma__EmailClient<EmailGetPayload<T>>>
  /**
   * Delete zero or more Emails.
   * @param {EmailDeleteManyArgs} args - Arguments to filter Emails to delete.
   * @example
   * // Delete a few Emails
   * const { count } = await prisma.email.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends EmailDeleteManyArgs>(
    args: Subset<T, EmailDeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Emails.
   * @param {EmailUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Emails
   * const email = await prisma.email.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends EmailUpdateManyArgs>(
    args: Subset<T, EmailUpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Email.
   * @param {EmailUpsertArgs} args - Arguments to update or create a Email.
   * @example
   * // Update or create a Email
   * const email = await prisma.email.upsert({
   *   create: {
   *     // ... data to create a Email
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Email we want to update
   *   }
   * })
  **/
  upsert<T extends EmailUpsertArgs>(
    args: Subset<T, EmailUpsertArgs>
  ): CheckSelect<T, Prisma__EmailClient<Email>, Prisma__EmailClient<EmailGetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyEmailArgs, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Email.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__EmailClient<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  clinic<T extends ClinicArgs = {}>(args?: Subset<T, ClinicArgs>): CheckSelect<T, Prisma__ClinicClient<Clinic | null>, Prisma__ClinicClient<ClinicGetPayload<T> | null>>;

  techinical_mananger<T extends TechnicalmanagerArgs = {}>(args?: Subset<T, TechnicalmanagerArgs>): CheckSelect<T, Prisma__TechnicalmanagerClient<Technicalmanager | null>, Prisma__TechnicalmanagerClient<TechnicalmanagerGetPayload<T> | null>>;

  legal_responsible<T extends LegalresponsibleArgs = {}>(args?: Subset<T, LegalresponsibleArgs>): CheckSelect<T, Prisma__LegalresponsibleClient<Legalresponsible | null>, Prisma__LegalresponsibleClient<LegalresponsibleGetPayload<T> | null>>;

  dentist<T extends DentistArgs = {}>(args?: Subset<T, DentistArgs>): CheckSelect<T, Prisma__DentistClient<Dentist | null>, Prisma__DentistClient<DentistGetPayload<T> | null>>;

  patient<T extends PatientArgs = {}>(args?: Subset<T, PatientArgs>): CheckSelect<T, Prisma__PatientClient<Patient | null>, Prisma__PatientClient<PatientGetPayload<T> | null>>;

  Technicalmanager<T extends TechnicalmanagerArgs = {}>(args?: Subset<T, TechnicalmanagerArgs>): CheckSelect<T, Prisma__TechnicalmanagerClient<Technicalmanager | null>, Prisma__TechnicalmanagerClient<TechnicalmanagerGetPayload<T> | null>>;

  Legalresponsible<T extends LegalresponsibleArgs = {}>(args?: Subset<T, LegalresponsibleArgs>): CheckSelect<T, Prisma__LegalresponsibleClient<Legalresponsible | null>, Prisma__LegalresponsibleClient<LegalresponsibleGetPayload<T> | null>>;

  Patient<T extends PatientArgs = {}>(args?: Subset<T, PatientArgs>): CheckSelect<T, Prisma__PatientClient<Patient | null>, Prisma__PatientClient<PatientGetPayload<T> | null>>;

  Dentist<T extends DentistArgs = {}>(args?: Subset<T, DentistArgs>): CheckSelect<T, Prisma__DentistClient<Dentist | null>, Prisma__DentistClient<DentistGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Email findOne
 */
export type FindOneEmailArgs = {
  /**
   * Select specific fields to fetch from the Email
  **/
  select?: EmailSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: EmailInclude | null
  /**
   * Filter, which Email to fetch.
  **/
  where: EmailWhereUniqueInput
}


/**
 * Email findMany
 */
export type FindManyEmailArgs = {
  /**
   * Select specific fields to fetch from the Email
  **/
  select?: EmailSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: EmailInclude | null
  /**
   * Filter, which Emails to fetch.
  **/
  where?: EmailWhereInput
  /**
   * Determine the order of the Emails to fetch.
  **/
  orderBy?: EmailOrderByInput
  /**
   * Sets the position for listing Emails.
  **/
  cursor?: EmailWhereUniqueInput
  /**
   * The number of Emails to fetch. If negative number, it will take Emails before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Emails.
  **/
  skip?: number
}


/**
 * Email create
 */
export type EmailCreateArgs = {
  /**
   * Select specific fields to fetch from the Email
  **/
  select?: EmailSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: EmailInclude | null
  /**
   * The data needed to create a Email.
  **/
  data: EmailCreateInput
}


/**
 * Email update
 */
export type EmailUpdateArgs = {
  /**
   * Select specific fields to fetch from the Email
  **/
  select?: EmailSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: EmailInclude | null
  /**
   * The data needed to update a Email.
  **/
  data: EmailUpdateInput
  /**
   * Choose, which Email to update.
  **/
  where: EmailWhereUniqueInput
}


/**
 * Email updateMany
 */
export type EmailUpdateManyArgs = {
  data: EmailUpdateManyMutationInput
  where?: EmailWhereInput
}


/**
 * Email upsert
 */
export type EmailUpsertArgs = {
  /**
   * Select specific fields to fetch from the Email
  **/
  select?: EmailSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: EmailInclude | null
  /**
   * The filter to search for the Email to update in case it exists.
  **/
  where: EmailWhereUniqueInput
  /**
   * In case the Email found by the `where` argument doesn't exist, create a new Email with this data.
  **/
  create: EmailCreateInput
  /**
   * In case the Email was found with the provided `where` argument, update it with this data.
  **/
  update: EmailUpdateInput
}


/**
 * Email delete
 */
export type EmailDeleteArgs = {
  /**
   * Select specific fields to fetch from the Email
  **/
  select?: EmailSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: EmailInclude | null
  /**
   * Filter which Email to delete.
  **/
  where: EmailWhereUniqueInput
}


/**
 * Email deleteMany
 */
export type EmailDeleteManyArgs = {
  where?: EmailWhereInput
}


/**
 * Email without action
 */
export type EmailArgs = {
  /**
   * Select specific fields to fetch from the Email
  **/
  select?: EmailSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: EmailInclude | null
}



/**
 * Model Logs
 */

export type Logs = {
  id: number
  clinic_id: string
  description: string
  createdAt: Date
}



export type LogsSelect = {
  id?: boolean
  clinic?: boolean | ClinicArgs
  clinic_id?: boolean
  description?: boolean
  createdAt?: boolean
}

export type LogsInclude = {
  clinic?: boolean | ClinicArgs
}

export type LogsGetPayload<
  S extends boolean | null | undefined | LogsArgs,
  U = keyof S
> = S extends true
  ? Logs
  : S extends undefined
  ? never
  : S extends LogsArgs | FindManyLogsArgs
  ? 'include' extends U
    ? Logs  & {
      [P in TrueKeys<S['include']>]:
      P extends 'clinic'
      ? ClinicGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Logs ? Logs[P]
: 
      P extends 'clinic'
      ? ClinicGetPayload<S['select'][P]> : never
    }
  : Logs
: Logs


export interface LogsDelegate {
  /**
   * Find zero or one Logs.
   * @param {FindOneLogsArgs} args - Arguments to find a Logs
   * @example
   * // Get one Logs
   * const logs = await prisma.logs.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneLogsArgs>(
    args: Subset<T, FindOneLogsArgs>
  ): CheckSelect<T, Prisma__LogsClient<Logs | null>, Prisma__LogsClient<LogsGetPayload<T> | null>>
  /**
   * Find zero or more Logs.
   * @param {FindManyLogsArgs=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Logs
   * const logs = await prisma.logs.findMany()
   * 
   * // Get first 10 Logs
   * const logs = await prisma.logs.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const logsWithIdOnly = await prisma.logs.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyLogsArgs>(
    args?: Subset<T, FindManyLogsArgs>
  ): CheckSelect<T, Promise<Array<Logs>>, Promise<Array<LogsGetPayload<T>>>>
  /**
   * Create a Logs.
   * @param {LogsCreateArgs} args - Arguments to create a Logs.
   * @example
   * // Create one Logs
   * const Logs = await prisma.logs.create({
   *   data: {
   *     // ... data to create a Logs
   *   }
   * })
   * 
  **/
  create<T extends LogsCreateArgs>(
    args: Subset<T, LogsCreateArgs>
  ): CheckSelect<T, Prisma__LogsClient<Logs>, Prisma__LogsClient<LogsGetPayload<T>>>
  /**
   * Delete a Logs.
   * @param {LogsDeleteArgs} args - Arguments to delete one Logs.
   * @example
   * // Delete one Logs
   * const Logs = await prisma.logs.delete({
   *   where: {
   *     // ... filter to delete one Logs
   *   }
   * })
   * 
  **/
  delete<T extends LogsDeleteArgs>(
    args: Subset<T, LogsDeleteArgs>
  ): CheckSelect<T, Prisma__LogsClient<Logs>, Prisma__LogsClient<LogsGetPayload<T>>>
  /**
   * Update one Logs.
   * @param {LogsUpdateArgs} args - Arguments to update one Logs.
   * @example
   * // Update one Logs
   * const logs = await prisma.logs.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends LogsUpdateArgs>(
    args: Subset<T, LogsUpdateArgs>
  ): CheckSelect<T, Prisma__LogsClient<Logs>, Prisma__LogsClient<LogsGetPayload<T>>>
  /**
   * Delete zero or more Logs.
   * @param {LogsDeleteManyArgs} args - Arguments to filter Logs to delete.
   * @example
   * // Delete a few Logs
   * const { count } = await prisma.logs.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends LogsDeleteManyArgs>(
    args: Subset<T, LogsDeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Logs.
   * @param {LogsUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Logs
   * const logs = await prisma.logs.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends LogsUpdateManyArgs>(
    args: Subset<T, LogsUpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Logs.
   * @param {LogsUpsertArgs} args - Arguments to update or create a Logs.
   * @example
   * // Update or create a Logs
   * const logs = await prisma.logs.upsert({
   *   create: {
   *     // ... data to create a Logs
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Logs we want to update
   *   }
   * })
  **/
  upsert<T extends LogsUpsertArgs>(
    args: Subset<T, LogsUpsertArgs>
  ): CheckSelect<T, Prisma__LogsClient<Logs>, Prisma__LogsClient<LogsGetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyLogsArgs, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Logs.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__LogsClient<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  clinic<T extends ClinicArgs = {}>(args?: Subset<T, ClinicArgs>): CheckSelect<T, Prisma__ClinicClient<Clinic | null>, Prisma__ClinicClient<ClinicGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Logs findOne
 */
export type FindOneLogsArgs = {
  /**
   * Select specific fields to fetch from the Logs
  **/
  select?: LogsSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: LogsInclude | null
  /**
   * Filter, which Logs to fetch.
  **/
  where: LogsWhereUniqueInput
}


/**
 * Logs findMany
 */
export type FindManyLogsArgs = {
  /**
   * Select specific fields to fetch from the Logs
  **/
  select?: LogsSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: LogsInclude | null
  /**
   * Filter, which Logs to fetch.
  **/
  where?: LogsWhereInput
  /**
   * Determine the order of the Logs to fetch.
  **/
  orderBy?: LogsOrderByInput
  /**
   * Sets the position for listing Logs.
  **/
  cursor?: LogsWhereUniqueInput
  /**
   * The number of Logs to fetch. If negative number, it will take Logs before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Logs.
  **/
  skip?: number
}


/**
 * Logs create
 */
export type LogsCreateArgs = {
  /**
   * Select specific fields to fetch from the Logs
  **/
  select?: LogsSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: LogsInclude | null
  /**
   * The data needed to create a Logs.
  **/
  data: LogsCreateInput
}


/**
 * Logs update
 */
export type LogsUpdateArgs = {
  /**
   * Select specific fields to fetch from the Logs
  **/
  select?: LogsSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: LogsInclude | null
  /**
   * The data needed to update a Logs.
  **/
  data: LogsUpdateInput
  /**
   * Choose, which Logs to update.
  **/
  where: LogsWhereUniqueInput
}


/**
 * Logs updateMany
 */
export type LogsUpdateManyArgs = {
  data: LogsUpdateManyMutationInput
  where?: LogsWhereInput
}


/**
 * Logs upsert
 */
export type LogsUpsertArgs = {
  /**
   * Select specific fields to fetch from the Logs
  **/
  select?: LogsSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: LogsInclude | null
  /**
   * The filter to search for the Logs to update in case it exists.
  **/
  where: LogsWhereUniqueInput
  /**
   * In case the Logs found by the `where` argument doesn't exist, create a new Logs with this data.
  **/
  create: LogsCreateInput
  /**
   * In case the Logs was found with the provided `where` argument, update it with this data.
  **/
  update: LogsUpdateInput
}


/**
 * Logs delete
 */
export type LogsDeleteArgs = {
  /**
   * Select specific fields to fetch from the Logs
  **/
  select?: LogsSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: LogsInclude | null
  /**
   * Filter which Logs to delete.
  **/
  where: LogsWhereUniqueInput
}


/**
 * Logs deleteMany
 */
export type LogsDeleteManyArgs = {
  where?: LogsWhereInput
}


/**
 * Logs without action
 */
export type LogsArgs = {
  /**
   * Select specific fields to fetch from the Logs
  **/
  select?: LogsSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: LogsInclude | null
}



/**
 * Model Clinic_phones
 */

export type Clinic_phones = {
  id: string
  clinic_id: string
  phonetype: Phonetypes
  phone_number: string
}



export type Clinic_phonesSelect = {
  id?: boolean
  clinic?: boolean | ClinicArgs
  clinic_id?: boolean
  phonetype?: boolean
  phone_number?: boolean
}

export type Clinic_phonesInclude = {
  clinic?: boolean | ClinicArgs
}

export type Clinic_phonesGetPayload<
  S extends boolean | null | undefined | Clinic_phonesArgs,
  U = keyof S
> = S extends true
  ? Clinic_phones
  : S extends undefined
  ? never
  : S extends Clinic_phonesArgs | FindManyClinic_phonesArgs
  ? 'include' extends U
    ? Clinic_phones  & {
      [P in TrueKeys<S['include']>]:
      P extends 'clinic'
      ? ClinicGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Clinic_phones ? Clinic_phones[P]
: 
      P extends 'clinic'
      ? ClinicGetPayload<S['select'][P]> : never
    }
  : Clinic_phones
: Clinic_phones


export interface Clinic_phonesDelegate {
  /**
   * Find zero or one Clinic_phones.
   * @param {FindOneClinic_phonesArgs} args - Arguments to find a Clinic_phones
   * @example
   * // Get one Clinic_phones
   * const clinic_phones = await prisma.clinic_phones.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneClinic_phonesArgs>(
    args: Subset<T, FindOneClinic_phonesArgs>
  ): CheckSelect<T, Prisma__Clinic_phonesClient<Clinic_phones | null>, Prisma__Clinic_phonesClient<Clinic_phonesGetPayload<T> | null>>
  /**
   * Find zero or more Clinic_phones.
   * @param {FindManyClinic_phonesArgs=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Clinic_phones
   * const clinic_phones = await prisma.clinic_phones.findMany()
   * 
   * // Get first 10 Clinic_phones
   * const clinic_phones = await prisma.clinic_phones.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const clinic_phonesWithIdOnly = await prisma.clinic_phones.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyClinic_phonesArgs>(
    args?: Subset<T, FindManyClinic_phonesArgs>
  ): CheckSelect<T, Promise<Array<Clinic_phones>>, Promise<Array<Clinic_phonesGetPayload<T>>>>
  /**
   * Create a Clinic_phones.
   * @param {Clinic_phonesCreateArgs} args - Arguments to create a Clinic_phones.
   * @example
   * // Create one Clinic_phones
   * const Clinic_phones = await prisma.clinic_phones.create({
   *   data: {
   *     // ... data to create a Clinic_phones
   *   }
   * })
   * 
  **/
  create<T extends Clinic_phonesCreateArgs>(
    args: Subset<T, Clinic_phonesCreateArgs>
  ): CheckSelect<T, Prisma__Clinic_phonesClient<Clinic_phones>, Prisma__Clinic_phonesClient<Clinic_phonesGetPayload<T>>>
  /**
   * Delete a Clinic_phones.
   * @param {Clinic_phonesDeleteArgs} args - Arguments to delete one Clinic_phones.
   * @example
   * // Delete one Clinic_phones
   * const Clinic_phones = await prisma.clinic_phones.delete({
   *   where: {
   *     // ... filter to delete one Clinic_phones
   *   }
   * })
   * 
  **/
  delete<T extends Clinic_phonesDeleteArgs>(
    args: Subset<T, Clinic_phonesDeleteArgs>
  ): CheckSelect<T, Prisma__Clinic_phonesClient<Clinic_phones>, Prisma__Clinic_phonesClient<Clinic_phonesGetPayload<T>>>
  /**
   * Update one Clinic_phones.
   * @param {Clinic_phonesUpdateArgs} args - Arguments to update one Clinic_phones.
   * @example
   * // Update one Clinic_phones
   * const clinic_phones = await prisma.clinic_phones.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Clinic_phonesUpdateArgs>(
    args: Subset<T, Clinic_phonesUpdateArgs>
  ): CheckSelect<T, Prisma__Clinic_phonesClient<Clinic_phones>, Prisma__Clinic_phonesClient<Clinic_phonesGetPayload<T>>>
  /**
   * Delete zero or more Clinic_phones.
   * @param {Clinic_phonesDeleteManyArgs} args - Arguments to filter Clinic_phones to delete.
   * @example
   * // Delete a few Clinic_phones
   * const { count } = await prisma.clinic_phones.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Clinic_phonesDeleteManyArgs>(
    args: Subset<T, Clinic_phonesDeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Clinic_phones.
   * @param {Clinic_phonesUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Clinic_phones
   * const clinic_phones = await prisma.clinic_phones.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Clinic_phonesUpdateManyArgs>(
    args: Subset<T, Clinic_phonesUpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Clinic_phones.
   * @param {Clinic_phonesUpsertArgs} args - Arguments to update or create a Clinic_phones.
   * @example
   * // Update or create a Clinic_phones
   * const clinic_phones = await prisma.clinic_phones.upsert({
   *   create: {
   *     // ... data to create a Clinic_phones
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Clinic_phones we want to update
   *   }
   * })
  **/
  upsert<T extends Clinic_phonesUpsertArgs>(
    args: Subset<T, Clinic_phonesUpsertArgs>
  ): CheckSelect<T, Prisma__Clinic_phonesClient<Clinic_phones>, Prisma__Clinic_phonesClient<Clinic_phonesGetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyClinic_phonesArgs, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Clinic_phones.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Clinic_phonesClient<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  clinic<T extends ClinicArgs = {}>(args?: Subset<T, ClinicArgs>): CheckSelect<T, Prisma__ClinicClient<Clinic | null>, Prisma__ClinicClient<ClinicGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Clinic_phones findOne
 */
export type FindOneClinic_phonesArgs = {
  /**
   * Select specific fields to fetch from the Clinic_phones
  **/
  select?: Clinic_phonesSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_phonesInclude | null
  /**
   * Filter, which Clinic_phones to fetch.
  **/
  where: Clinic_phonesWhereUniqueInput
}


/**
 * Clinic_phones findMany
 */
export type FindManyClinic_phonesArgs = {
  /**
   * Select specific fields to fetch from the Clinic_phones
  **/
  select?: Clinic_phonesSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_phonesInclude | null
  /**
   * Filter, which Clinic_phones to fetch.
  **/
  where?: Clinic_phonesWhereInput
  /**
   * Determine the order of the Clinic_phones to fetch.
  **/
  orderBy?: Clinic_phonesOrderByInput
  /**
   * Sets the position for listing Clinic_phones.
  **/
  cursor?: Clinic_phonesWhereUniqueInput
  /**
   * The number of Clinic_phones to fetch. If negative number, it will take Clinic_phones before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Clinic_phones.
  **/
  skip?: number
}


/**
 * Clinic_phones create
 */
export type Clinic_phonesCreateArgs = {
  /**
   * Select specific fields to fetch from the Clinic_phones
  **/
  select?: Clinic_phonesSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_phonesInclude | null
  /**
   * The data needed to create a Clinic_phones.
  **/
  data: Clinic_phonesCreateInput
}


/**
 * Clinic_phones update
 */
export type Clinic_phonesUpdateArgs = {
  /**
   * Select specific fields to fetch from the Clinic_phones
  **/
  select?: Clinic_phonesSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_phonesInclude | null
  /**
   * The data needed to update a Clinic_phones.
  **/
  data: Clinic_phonesUpdateInput
  /**
   * Choose, which Clinic_phones to update.
  **/
  where: Clinic_phonesWhereUniqueInput
}


/**
 * Clinic_phones updateMany
 */
export type Clinic_phonesUpdateManyArgs = {
  data: Clinic_phonesUpdateManyMutationInput
  where?: Clinic_phonesWhereInput
}


/**
 * Clinic_phones upsert
 */
export type Clinic_phonesUpsertArgs = {
  /**
   * Select specific fields to fetch from the Clinic_phones
  **/
  select?: Clinic_phonesSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_phonesInclude | null
  /**
   * The filter to search for the Clinic_phones to update in case it exists.
  **/
  where: Clinic_phonesWhereUniqueInput
  /**
   * In case the Clinic_phones found by the `where` argument doesn't exist, create a new Clinic_phones with this data.
  **/
  create: Clinic_phonesCreateInput
  /**
   * In case the Clinic_phones was found with the provided `where` argument, update it with this data.
  **/
  update: Clinic_phonesUpdateInput
}


/**
 * Clinic_phones delete
 */
export type Clinic_phonesDeleteArgs = {
  /**
   * Select specific fields to fetch from the Clinic_phones
  **/
  select?: Clinic_phonesSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_phonesInclude | null
  /**
   * Filter which Clinic_phones to delete.
  **/
  where: Clinic_phonesWhereUniqueInput
}


/**
 * Clinic_phones deleteMany
 */
export type Clinic_phonesDeleteManyArgs = {
  where?: Clinic_phonesWhereInput
}


/**
 * Clinic_phones without action
 */
export type Clinic_phonesArgs = {
  /**
   * Select specific fields to fetch from the Clinic_phones
  **/
  select?: Clinic_phonesSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_phonesInclude | null
}



/**
 * Model Clinic_procedures_particular_values
 */

export type Clinic_procedures_particular_values = {
  procedure_id: string
  cust: number
  createdAt: Date
  updatedAt: Date
}



export type Clinic_procedures_particular_valuesSelect = {
  procedure_CID?: boolean | ProceduresArgs
  procedure_id?: boolean
  cust?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type Clinic_procedures_particular_valuesInclude = {
  procedure_CID?: boolean | ProceduresArgs
}

export type Clinic_procedures_particular_valuesGetPayload<
  S extends boolean | null | undefined | Clinic_procedures_particular_valuesArgs,
  U = keyof S
> = S extends true
  ? Clinic_procedures_particular_values
  : S extends undefined
  ? never
  : S extends Clinic_procedures_particular_valuesArgs | FindManyClinic_procedures_particular_valuesArgs
  ? 'include' extends U
    ? Clinic_procedures_particular_values  & {
      [P in TrueKeys<S['include']>]:
      P extends 'procedure_CID'
      ? ProceduresGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Clinic_procedures_particular_values ? Clinic_procedures_particular_values[P]
: 
      P extends 'procedure_CID'
      ? ProceduresGetPayload<S['select'][P]> : never
    }
  : Clinic_procedures_particular_values
: Clinic_procedures_particular_values


export interface Clinic_procedures_particular_valuesDelegate {
  /**
   * Find zero or one Clinic_procedures_particular_values.
   * @param {FindOneClinic_procedures_particular_valuesArgs} args - Arguments to find a Clinic_procedures_particular_values
   * @example
   * // Get one Clinic_procedures_particular_values
   * const clinic_procedures_particular_values = await prisma.clinic_procedures_particular_values.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneClinic_procedures_particular_valuesArgs>(
    args: Subset<T, FindOneClinic_procedures_particular_valuesArgs>
  ): CheckSelect<T, Prisma__Clinic_procedures_particular_valuesClient<Clinic_procedures_particular_values | null>, Prisma__Clinic_procedures_particular_valuesClient<Clinic_procedures_particular_valuesGetPayload<T> | null>>
  /**
   * Find zero or more Clinic_procedures_particular_values.
   * @param {FindManyClinic_procedures_particular_valuesArgs=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Clinic_procedures_particular_values
   * const clinic_procedures_particular_values = await prisma.clinic_procedures_particular_values.findMany()
   * 
   * // Get first 10 Clinic_procedures_particular_values
   * const clinic_procedures_particular_values = await prisma.clinic_procedures_particular_values.findMany({ take: 10 })
   * 
   * // Only select the `procedure_id`
   * const clinic_procedures_particular_valuesWithProcedure_idOnly = await prisma.clinic_procedures_particular_values.findMany({ select: { procedure_id: true } })
   * 
  **/
  findMany<T extends FindManyClinic_procedures_particular_valuesArgs>(
    args?: Subset<T, FindManyClinic_procedures_particular_valuesArgs>
  ): CheckSelect<T, Promise<Array<Clinic_procedures_particular_values>>, Promise<Array<Clinic_procedures_particular_valuesGetPayload<T>>>>
  /**
   * Create a Clinic_procedures_particular_values.
   * @param {Clinic_procedures_particular_valuesCreateArgs} args - Arguments to create a Clinic_procedures_particular_values.
   * @example
   * // Create one Clinic_procedures_particular_values
   * const Clinic_procedures_particular_values = await prisma.clinic_procedures_particular_values.create({
   *   data: {
   *     // ... data to create a Clinic_procedures_particular_values
   *   }
   * })
   * 
  **/
  create<T extends Clinic_procedures_particular_valuesCreateArgs>(
    args: Subset<T, Clinic_procedures_particular_valuesCreateArgs>
  ): CheckSelect<T, Prisma__Clinic_procedures_particular_valuesClient<Clinic_procedures_particular_values>, Prisma__Clinic_procedures_particular_valuesClient<Clinic_procedures_particular_valuesGetPayload<T>>>
  /**
   * Delete a Clinic_procedures_particular_values.
   * @param {Clinic_procedures_particular_valuesDeleteArgs} args - Arguments to delete one Clinic_procedures_particular_values.
   * @example
   * // Delete one Clinic_procedures_particular_values
   * const Clinic_procedures_particular_values = await prisma.clinic_procedures_particular_values.delete({
   *   where: {
   *     // ... filter to delete one Clinic_procedures_particular_values
   *   }
   * })
   * 
  **/
  delete<T extends Clinic_procedures_particular_valuesDeleteArgs>(
    args: Subset<T, Clinic_procedures_particular_valuesDeleteArgs>
  ): CheckSelect<T, Prisma__Clinic_procedures_particular_valuesClient<Clinic_procedures_particular_values>, Prisma__Clinic_procedures_particular_valuesClient<Clinic_procedures_particular_valuesGetPayload<T>>>
  /**
   * Update one Clinic_procedures_particular_values.
   * @param {Clinic_procedures_particular_valuesUpdateArgs} args - Arguments to update one Clinic_procedures_particular_values.
   * @example
   * // Update one Clinic_procedures_particular_values
   * const clinic_procedures_particular_values = await prisma.clinic_procedures_particular_values.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Clinic_procedures_particular_valuesUpdateArgs>(
    args: Subset<T, Clinic_procedures_particular_valuesUpdateArgs>
  ): CheckSelect<T, Prisma__Clinic_procedures_particular_valuesClient<Clinic_procedures_particular_values>, Prisma__Clinic_procedures_particular_valuesClient<Clinic_procedures_particular_valuesGetPayload<T>>>
  /**
   * Delete zero or more Clinic_procedures_particular_values.
   * @param {Clinic_procedures_particular_valuesDeleteManyArgs} args - Arguments to filter Clinic_procedures_particular_values to delete.
   * @example
   * // Delete a few Clinic_procedures_particular_values
   * const { count } = await prisma.clinic_procedures_particular_values.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Clinic_procedures_particular_valuesDeleteManyArgs>(
    args: Subset<T, Clinic_procedures_particular_valuesDeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Clinic_procedures_particular_values.
   * @param {Clinic_procedures_particular_valuesUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Clinic_procedures_particular_values
   * const clinic_procedures_particular_values = await prisma.clinic_procedures_particular_values.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Clinic_procedures_particular_valuesUpdateManyArgs>(
    args: Subset<T, Clinic_procedures_particular_valuesUpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Clinic_procedures_particular_values.
   * @param {Clinic_procedures_particular_valuesUpsertArgs} args - Arguments to update or create a Clinic_procedures_particular_values.
   * @example
   * // Update or create a Clinic_procedures_particular_values
   * const clinic_procedures_particular_values = await prisma.clinic_procedures_particular_values.upsert({
   *   create: {
   *     // ... data to create a Clinic_procedures_particular_values
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Clinic_procedures_particular_values we want to update
   *   }
   * })
  **/
  upsert<T extends Clinic_procedures_particular_valuesUpsertArgs>(
    args: Subset<T, Clinic_procedures_particular_valuesUpsertArgs>
  ): CheckSelect<T, Prisma__Clinic_procedures_particular_valuesClient<Clinic_procedures_particular_values>, Prisma__Clinic_procedures_particular_valuesClient<Clinic_procedures_particular_valuesGetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyClinic_procedures_particular_valuesArgs, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Clinic_procedures_particular_values.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Clinic_procedures_particular_valuesClient<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  procedure_CID<T extends ProceduresArgs = {}>(args?: Subset<T, ProceduresArgs>): CheckSelect<T, Prisma__ProceduresClient<Procedures | null>, Prisma__ProceduresClient<ProceduresGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Clinic_procedures_particular_values findOne
 */
export type FindOneClinic_procedures_particular_valuesArgs = {
  /**
   * Select specific fields to fetch from the Clinic_procedures_particular_values
  **/
  select?: Clinic_procedures_particular_valuesSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_procedures_particular_valuesInclude | null
  /**
   * Filter, which Clinic_procedures_particular_values to fetch.
  **/
  where: Clinic_procedures_particular_valuesWhereUniqueInput
}


/**
 * Clinic_procedures_particular_values findMany
 */
export type FindManyClinic_procedures_particular_valuesArgs = {
  /**
   * Select specific fields to fetch from the Clinic_procedures_particular_values
  **/
  select?: Clinic_procedures_particular_valuesSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_procedures_particular_valuesInclude | null
  /**
   * Filter, which Clinic_procedures_particular_values to fetch.
  **/
  where?: Clinic_procedures_particular_valuesWhereInput
  /**
   * Determine the order of the Clinic_procedures_particular_values to fetch.
  **/
  orderBy?: Clinic_procedures_particular_valuesOrderByInput
  /**
   * Sets the position for listing Clinic_procedures_particular_values.
  **/
  cursor?: Clinic_procedures_particular_valuesWhereUniqueInput
  /**
   * The number of Clinic_procedures_particular_values to fetch. If negative number, it will take Clinic_procedures_particular_values before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Clinic_procedures_particular_values.
  **/
  skip?: number
}


/**
 * Clinic_procedures_particular_values create
 */
export type Clinic_procedures_particular_valuesCreateArgs = {
  /**
   * Select specific fields to fetch from the Clinic_procedures_particular_values
  **/
  select?: Clinic_procedures_particular_valuesSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_procedures_particular_valuesInclude | null
  /**
   * The data needed to create a Clinic_procedures_particular_values.
  **/
  data: Clinic_procedures_particular_valuesCreateInput
}


/**
 * Clinic_procedures_particular_values update
 */
export type Clinic_procedures_particular_valuesUpdateArgs = {
  /**
   * Select specific fields to fetch from the Clinic_procedures_particular_values
  **/
  select?: Clinic_procedures_particular_valuesSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_procedures_particular_valuesInclude | null
  /**
   * The data needed to update a Clinic_procedures_particular_values.
  **/
  data: Clinic_procedures_particular_valuesUpdateInput
  /**
   * Choose, which Clinic_procedures_particular_values to update.
  **/
  where: Clinic_procedures_particular_valuesWhereUniqueInput
}


/**
 * Clinic_procedures_particular_values updateMany
 */
export type Clinic_procedures_particular_valuesUpdateManyArgs = {
  data: Clinic_procedures_particular_valuesUpdateManyMutationInput
  where?: Clinic_procedures_particular_valuesWhereInput
}


/**
 * Clinic_procedures_particular_values upsert
 */
export type Clinic_procedures_particular_valuesUpsertArgs = {
  /**
   * Select specific fields to fetch from the Clinic_procedures_particular_values
  **/
  select?: Clinic_procedures_particular_valuesSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_procedures_particular_valuesInclude | null
  /**
   * The filter to search for the Clinic_procedures_particular_values to update in case it exists.
  **/
  where: Clinic_procedures_particular_valuesWhereUniqueInput
  /**
   * In case the Clinic_procedures_particular_values found by the `where` argument doesn't exist, create a new Clinic_procedures_particular_values with this data.
  **/
  create: Clinic_procedures_particular_valuesCreateInput
  /**
   * In case the Clinic_procedures_particular_values was found with the provided `where` argument, update it with this data.
  **/
  update: Clinic_procedures_particular_valuesUpdateInput
}


/**
 * Clinic_procedures_particular_values delete
 */
export type Clinic_procedures_particular_valuesDeleteArgs = {
  /**
   * Select specific fields to fetch from the Clinic_procedures_particular_values
  **/
  select?: Clinic_procedures_particular_valuesSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_procedures_particular_valuesInclude | null
  /**
   * Filter which Clinic_procedures_particular_values to delete.
  **/
  where: Clinic_procedures_particular_valuesWhereUniqueInput
}


/**
 * Clinic_procedures_particular_values deleteMany
 */
export type Clinic_procedures_particular_valuesDeleteManyArgs = {
  where?: Clinic_procedures_particular_valuesWhereInput
}


/**
 * Clinic_procedures_particular_values without action
 */
export type Clinic_procedures_particular_valuesArgs = {
  /**
   * Select specific fields to fetch from the Clinic_procedures_particular_values
  **/
  select?: Clinic_procedures_particular_valuesSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_procedures_particular_valuesInclude | null
}



/**
 * Model Clinic_procedures_insurance_values
 */

export type Clinic_procedures_insurance_values = {
  procedure_id: string
  insurance_id: string
  cust: number
  createdAt: Date
  updatedAt: Date
}



export type Clinic_procedures_insurance_valuesSelect = {
  procedure_CID?: boolean | ProceduresArgs
  procedure_id?: boolean
  insurance?: boolean | Dental_insuranceArgs
  insurance_id?: boolean
  cust?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type Clinic_procedures_insurance_valuesInclude = {
  procedure_CID?: boolean | ProceduresArgs
  insurance?: boolean | Dental_insuranceArgs
}

export type Clinic_procedures_insurance_valuesGetPayload<
  S extends boolean | null | undefined | Clinic_procedures_insurance_valuesArgs,
  U = keyof S
> = S extends true
  ? Clinic_procedures_insurance_values
  : S extends undefined
  ? never
  : S extends Clinic_procedures_insurance_valuesArgs | FindManyClinic_procedures_insurance_valuesArgs
  ? 'include' extends U
    ? Clinic_procedures_insurance_values  & {
      [P in TrueKeys<S['include']>]:
      P extends 'procedure_CID'
      ? ProceduresGetPayload<S['include'][P]> :
      P extends 'insurance'
      ? Dental_insuranceGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Clinic_procedures_insurance_values ? Clinic_procedures_insurance_values[P]
: 
      P extends 'procedure_CID'
      ? ProceduresGetPayload<S['select'][P]> :
      P extends 'insurance'
      ? Dental_insuranceGetPayload<S['select'][P]> : never
    }
  : Clinic_procedures_insurance_values
: Clinic_procedures_insurance_values


export interface Clinic_procedures_insurance_valuesDelegate {
  /**
   * Find zero or one Clinic_procedures_insurance_values.
   * @param {FindOneClinic_procedures_insurance_valuesArgs} args - Arguments to find a Clinic_procedures_insurance_values
   * @example
   * // Get one Clinic_procedures_insurance_values
   * const clinic_procedures_insurance_values = await prisma.clinic_procedures_insurance_values.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneClinic_procedures_insurance_valuesArgs>(
    args: Subset<T, FindOneClinic_procedures_insurance_valuesArgs>
  ): CheckSelect<T, Prisma__Clinic_procedures_insurance_valuesClient<Clinic_procedures_insurance_values | null>, Prisma__Clinic_procedures_insurance_valuesClient<Clinic_procedures_insurance_valuesGetPayload<T> | null>>
  /**
   * Find zero or more Clinic_procedures_insurance_values.
   * @param {FindManyClinic_procedures_insurance_valuesArgs=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Clinic_procedures_insurance_values
   * const clinic_procedures_insurance_values = await prisma.clinic_procedures_insurance_values.findMany()
   * 
   * // Get first 10 Clinic_procedures_insurance_values
   * const clinic_procedures_insurance_values = await prisma.clinic_procedures_insurance_values.findMany({ take: 10 })
   * 
   * // Only select the `procedure_id`
   * const clinic_procedures_insurance_valuesWithProcedure_idOnly = await prisma.clinic_procedures_insurance_values.findMany({ select: { procedure_id: true } })
   * 
  **/
  findMany<T extends FindManyClinic_procedures_insurance_valuesArgs>(
    args?: Subset<T, FindManyClinic_procedures_insurance_valuesArgs>
  ): CheckSelect<T, Promise<Array<Clinic_procedures_insurance_values>>, Promise<Array<Clinic_procedures_insurance_valuesGetPayload<T>>>>
  /**
   * Create a Clinic_procedures_insurance_values.
   * @param {Clinic_procedures_insurance_valuesCreateArgs} args - Arguments to create a Clinic_procedures_insurance_values.
   * @example
   * // Create one Clinic_procedures_insurance_values
   * const Clinic_procedures_insurance_values = await prisma.clinic_procedures_insurance_values.create({
   *   data: {
   *     // ... data to create a Clinic_procedures_insurance_values
   *   }
   * })
   * 
  **/
  create<T extends Clinic_procedures_insurance_valuesCreateArgs>(
    args: Subset<T, Clinic_procedures_insurance_valuesCreateArgs>
  ): CheckSelect<T, Prisma__Clinic_procedures_insurance_valuesClient<Clinic_procedures_insurance_values>, Prisma__Clinic_procedures_insurance_valuesClient<Clinic_procedures_insurance_valuesGetPayload<T>>>
  /**
   * Delete a Clinic_procedures_insurance_values.
   * @param {Clinic_procedures_insurance_valuesDeleteArgs} args - Arguments to delete one Clinic_procedures_insurance_values.
   * @example
   * // Delete one Clinic_procedures_insurance_values
   * const Clinic_procedures_insurance_values = await prisma.clinic_procedures_insurance_values.delete({
   *   where: {
   *     // ... filter to delete one Clinic_procedures_insurance_values
   *   }
   * })
   * 
  **/
  delete<T extends Clinic_procedures_insurance_valuesDeleteArgs>(
    args: Subset<T, Clinic_procedures_insurance_valuesDeleteArgs>
  ): CheckSelect<T, Prisma__Clinic_procedures_insurance_valuesClient<Clinic_procedures_insurance_values>, Prisma__Clinic_procedures_insurance_valuesClient<Clinic_procedures_insurance_valuesGetPayload<T>>>
  /**
   * Update one Clinic_procedures_insurance_values.
   * @param {Clinic_procedures_insurance_valuesUpdateArgs} args - Arguments to update one Clinic_procedures_insurance_values.
   * @example
   * // Update one Clinic_procedures_insurance_values
   * const clinic_procedures_insurance_values = await prisma.clinic_procedures_insurance_values.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Clinic_procedures_insurance_valuesUpdateArgs>(
    args: Subset<T, Clinic_procedures_insurance_valuesUpdateArgs>
  ): CheckSelect<T, Prisma__Clinic_procedures_insurance_valuesClient<Clinic_procedures_insurance_values>, Prisma__Clinic_procedures_insurance_valuesClient<Clinic_procedures_insurance_valuesGetPayload<T>>>
  /**
   * Delete zero or more Clinic_procedures_insurance_values.
   * @param {Clinic_procedures_insurance_valuesDeleteManyArgs} args - Arguments to filter Clinic_procedures_insurance_values to delete.
   * @example
   * // Delete a few Clinic_procedures_insurance_values
   * const { count } = await prisma.clinic_procedures_insurance_values.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Clinic_procedures_insurance_valuesDeleteManyArgs>(
    args: Subset<T, Clinic_procedures_insurance_valuesDeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Clinic_procedures_insurance_values.
   * @param {Clinic_procedures_insurance_valuesUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Clinic_procedures_insurance_values
   * const clinic_procedures_insurance_values = await prisma.clinic_procedures_insurance_values.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Clinic_procedures_insurance_valuesUpdateManyArgs>(
    args: Subset<T, Clinic_procedures_insurance_valuesUpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Clinic_procedures_insurance_values.
   * @param {Clinic_procedures_insurance_valuesUpsertArgs} args - Arguments to update or create a Clinic_procedures_insurance_values.
   * @example
   * // Update or create a Clinic_procedures_insurance_values
   * const clinic_procedures_insurance_values = await prisma.clinic_procedures_insurance_values.upsert({
   *   create: {
   *     // ... data to create a Clinic_procedures_insurance_values
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Clinic_procedures_insurance_values we want to update
   *   }
   * })
  **/
  upsert<T extends Clinic_procedures_insurance_valuesUpsertArgs>(
    args: Subset<T, Clinic_procedures_insurance_valuesUpsertArgs>
  ): CheckSelect<T, Prisma__Clinic_procedures_insurance_valuesClient<Clinic_procedures_insurance_values>, Prisma__Clinic_procedures_insurance_valuesClient<Clinic_procedures_insurance_valuesGetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyClinic_procedures_insurance_valuesArgs, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Clinic_procedures_insurance_values.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Clinic_procedures_insurance_valuesClient<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  procedure_CID<T extends ProceduresArgs = {}>(args?: Subset<T, ProceduresArgs>): CheckSelect<T, Prisma__ProceduresClient<Procedures | null>, Prisma__ProceduresClient<ProceduresGetPayload<T> | null>>;

  insurance<T extends Dental_insuranceArgs = {}>(args?: Subset<T, Dental_insuranceArgs>): CheckSelect<T, Prisma__Dental_insuranceClient<Dental_insurance | null>, Prisma__Dental_insuranceClient<Dental_insuranceGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Clinic_procedures_insurance_values findOne
 */
export type FindOneClinic_procedures_insurance_valuesArgs = {
  /**
   * Select specific fields to fetch from the Clinic_procedures_insurance_values
  **/
  select?: Clinic_procedures_insurance_valuesSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_procedures_insurance_valuesInclude | null
  /**
   * Filter, which Clinic_procedures_insurance_values to fetch.
  **/
  where: Clinic_procedures_insurance_valuesWhereUniqueInput
}


/**
 * Clinic_procedures_insurance_values findMany
 */
export type FindManyClinic_procedures_insurance_valuesArgs = {
  /**
   * Select specific fields to fetch from the Clinic_procedures_insurance_values
  **/
  select?: Clinic_procedures_insurance_valuesSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_procedures_insurance_valuesInclude | null
  /**
   * Filter, which Clinic_procedures_insurance_values to fetch.
  **/
  where?: Clinic_procedures_insurance_valuesWhereInput
  /**
   * Determine the order of the Clinic_procedures_insurance_values to fetch.
  **/
  orderBy?: Clinic_procedures_insurance_valuesOrderByInput
  /**
   * Sets the position for listing Clinic_procedures_insurance_values.
  **/
  cursor?: Clinic_procedures_insurance_valuesWhereUniqueInput
  /**
   * The number of Clinic_procedures_insurance_values to fetch. If negative number, it will take Clinic_procedures_insurance_values before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Clinic_procedures_insurance_values.
  **/
  skip?: number
}


/**
 * Clinic_procedures_insurance_values create
 */
export type Clinic_procedures_insurance_valuesCreateArgs = {
  /**
   * Select specific fields to fetch from the Clinic_procedures_insurance_values
  **/
  select?: Clinic_procedures_insurance_valuesSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_procedures_insurance_valuesInclude | null
  /**
   * The data needed to create a Clinic_procedures_insurance_values.
  **/
  data: Clinic_procedures_insurance_valuesCreateInput
}


/**
 * Clinic_procedures_insurance_values update
 */
export type Clinic_procedures_insurance_valuesUpdateArgs = {
  /**
   * Select specific fields to fetch from the Clinic_procedures_insurance_values
  **/
  select?: Clinic_procedures_insurance_valuesSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_procedures_insurance_valuesInclude | null
  /**
   * The data needed to update a Clinic_procedures_insurance_values.
  **/
  data: Clinic_procedures_insurance_valuesUpdateInput
  /**
   * Choose, which Clinic_procedures_insurance_values to update.
  **/
  where: Clinic_procedures_insurance_valuesWhereUniqueInput
}


/**
 * Clinic_procedures_insurance_values updateMany
 */
export type Clinic_procedures_insurance_valuesUpdateManyArgs = {
  data: Clinic_procedures_insurance_valuesUpdateManyMutationInput
  where?: Clinic_procedures_insurance_valuesWhereInput
}


/**
 * Clinic_procedures_insurance_values upsert
 */
export type Clinic_procedures_insurance_valuesUpsertArgs = {
  /**
   * Select specific fields to fetch from the Clinic_procedures_insurance_values
  **/
  select?: Clinic_procedures_insurance_valuesSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_procedures_insurance_valuesInclude | null
  /**
   * The filter to search for the Clinic_procedures_insurance_values to update in case it exists.
  **/
  where: Clinic_procedures_insurance_valuesWhereUniqueInput
  /**
   * In case the Clinic_procedures_insurance_values found by the `where` argument doesn't exist, create a new Clinic_procedures_insurance_values with this data.
  **/
  create: Clinic_procedures_insurance_valuesCreateInput
  /**
   * In case the Clinic_procedures_insurance_values was found with the provided `where` argument, update it with this data.
  **/
  update: Clinic_procedures_insurance_valuesUpdateInput
}


/**
 * Clinic_procedures_insurance_values delete
 */
export type Clinic_procedures_insurance_valuesDeleteArgs = {
  /**
   * Select specific fields to fetch from the Clinic_procedures_insurance_values
  **/
  select?: Clinic_procedures_insurance_valuesSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_procedures_insurance_valuesInclude | null
  /**
   * Filter which Clinic_procedures_insurance_values to delete.
  **/
  where: Clinic_procedures_insurance_valuesWhereUniqueInput
}


/**
 * Clinic_procedures_insurance_values deleteMany
 */
export type Clinic_procedures_insurance_valuesDeleteManyArgs = {
  where?: Clinic_procedures_insurance_valuesWhereInput
}


/**
 * Clinic_procedures_insurance_values without action
 */
export type Clinic_procedures_insurance_valuesArgs = {
  /**
   * Select specific fields to fetch from the Clinic_procedures_insurance_values
  **/
  select?: Clinic_procedures_insurance_valuesSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_procedures_insurance_valuesInclude | null
}



/**
 * Model Schedule
 */

export type Schedule = {
  date: Date
  hour: Date
  dentist_id: string
  patient_id: string | null
  createdAt: Date
  updatedAt: Date
}



export type ScheduleSelect = {
  date?: boolean
  hour?: boolean
  dentist?: boolean | DentistArgs
  dentist_id?: boolean
  patient?: boolean | PatientArgs
  patient_id?: boolean
  treatment_evolution?: boolean | Treatment_evolutionArgs
  createdAt?: boolean
  updatedAt?: boolean
}

export type ScheduleInclude = {
  dentist?: boolean | DentistArgs
  patient?: boolean | PatientArgs
  treatment_evolution?: boolean | Treatment_evolutionArgs
}

export type ScheduleGetPayload<
  S extends boolean | null | undefined | ScheduleArgs,
  U = keyof S
> = S extends true
  ? Schedule
  : S extends undefined
  ? never
  : S extends ScheduleArgs | FindManyScheduleArgs
  ? 'include' extends U
    ? Schedule  & {
      [P in TrueKeys<S['include']>]:
      P extends 'dentist'
      ? DentistGetPayload<S['include'][P]> :
      P extends 'patient'
      ? PatientGetPayload<S['include'][P]> | null :
      P extends 'treatment_evolution'
      ? Treatment_evolutionGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Schedule ? Schedule[P]
: 
      P extends 'dentist'
      ? DentistGetPayload<S['select'][P]> :
      P extends 'patient'
      ? PatientGetPayload<S['select'][P]> | null :
      P extends 'treatment_evolution'
      ? Treatment_evolutionGetPayload<S['select'][P]> : never
    }
  : Schedule
: Schedule


export interface ScheduleDelegate {
  /**
   * Find zero or one Schedule.
   * @param {FindOneScheduleArgs} args - Arguments to find a Schedule
   * @example
   * // Get one Schedule
   * const schedule = await prisma.schedule.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneScheduleArgs>(
    args: Subset<T, FindOneScheduleArgs>
  ): CheckSelect<T, Prisma__ScheduleClient<Schedule | null>, Prisma__ScheduleClient<ScheduleGetPayload<T> | null>>
  /**
   * Find zero or more Schedules.
   * @param {FindManyScheduleArgs=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Schedules
   * const schedules = await prisma.schedule.findMany()
   * 
   * // Get first 10 Schedules
   * const schedules = await prisma.schedule.findMany({ take: 10 })
   * 
   * // Only select the `date`
   * const scheduleWithDateOnly = await prisma.schedule.findMany({ select: { date: true } })
   * 
  **/
  findMany<T extends FindManyScheduleArgs>(
    args?: Subset<T, FindManyScheduleArgs>
  ): CheckSelect<T, Promise<Array<Schedule>>, Promise<Array<ScheduleGetPayload<T>>>>
  /**
   * Create a Schedule.
   * @param {ScheduleCreateArgs} args - Arguments to create a Schedule.
   * @example
   * // Create one Schedule
   * const Schedule = await prisma.schedule.create({
   *   data: {
   *     // ... data to create a Schedule
   *   }
   * })
   * 
  **/
  create<T extends ScheduleCreateArgs>(
    args: Subset<T, ScheduleCreateArgs>
  ): CheckSelect<T, Prisma__ScheduleClient<Schedule>, Prisma__ScheduleClient<ScheduleGetPayload<T>>>
  /**
   * Delete a Schedule.
   * @param {ScheduleDeleteArgs} args - Arguments to delete one Schedule.
   * @example
   * // Delete one Schedule
   * const Schedule = await prisma.schedule.delete({
   *   where: {
   *     // ... filter to delete one Schedule
   *   }
   * })
   * 
  **/
  delete<T extends ScheduleDeleteArgs>(
    args: Subset<T, ScheduleDeleteArgs>
  ): CheckSelect<T, Prisma__ScheduleClient<Schedule>, Prisma__ScheduleClient<ScheduleGetPayload<T>>>
  /**
   * Update one Schedule.
   * @param {ScheduleUpdateArgs} args - Arguments to update one Schedule.
   * @example
   * // Update one Schedule
   * const schedule = await prisma.schedule.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends ScheduleUpdateArgs>(
    args: Subset<T, ScheduleUpdateArgs>
  ): CheckSelect<T, Prisma__ScheduleClient<Schedule>, Prisma__ScheduleClient<ScheduleGetPayload<T>>>
  /**
   * Delete zero or more Schedules.
   * @param {ScheduleDeleteManyArgs} args - Arguments to filter Schedules to delete.
   * @example
   * // Delete a few Schedules
   * const { count } = await prisma.schedule.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends ScheduleDeleteManyArgs>(
    args: Subset<T, ScheduleDeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Schedules.
   * @param {ScheduleUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Schedules
   * const schedule = await prisma.schedule.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends ScheduleUpdateManyArgs>(
    args: Subset<T, ScheduleUpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Schedule.
   * @param {ScheduleUpsertArgs} args - Arguments to update or create a Schedule.
   * @example
   * // Update or create a Schedule
   * const schedule = await prisma.schedule.upsert({
   *   create: {
   *     // ... data to create a Schedule
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Schedule we want to update
   *   }
   * })
  **/
  upsert<T extends ScheduleUpsertArgs>(
    args: Subset<T, ScheduleUpsertArgs>
  ): CheckSelect<T, Prisma__ScheduleClient<Schedule>, Prisma__ScheduleClient<ScheduleGetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyScheduleArgs, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Schedule.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__ScheduleClient<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  dentist<T extends DentistArgs = {}>(args?: Subset<T, DentistArgs>): CheckSelect<T, Prisma__DentistClient<Dentist | null>, Prisma__DentistClient<DentistGetPayload<T> | null>>;

  patient<T extends PatientArgs = {}>(args?: Subset<T, PatientArgs>): CheckSelect<T, Prisma__PatientClient<Patient | null>, Prisma__PatientClient<PatientGetPayload<T> | null>>;

  treatment_evolution<T extends Treatment_evolutionArgs = {}>(args?: Subset<T, Treatment_evolutionArgs>): CheckSelect<T, Prisma__Treatment_evolutionClient<Treatment_evolution | null>, Prisma__Treatment_evolutionClient<Treatment_evolutionGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Schedule findOne
 */
export type FindOneScheduleArgs = {
  /**
   * Select specific fields to fetch from the Schedule
  **/
  select?: ScheduleSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: ScheduleInclude | null
  /**
   * Filter, which Schedule to fetch.
  **/
  where: ScheduleWhereUniqueInput
}


/**
 * Schedule findMany
 */
export type FindManyScheduleArgs = {
  /**
   * Select specific fields to fetch from the Schedule
  **/
  select?: ScheduleSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: ScheduleInclude | null
  /**
   * Filter, which Schedules to fetch.
  **/
  where?: ScheduleWhereInput
  /**
   * Determine the order of the Schedules to fetch.
  **/
  orderBy?: ScheduleOrderByInput
  /**
   * Sets the position for listing Schedules.
  **/
  cursor?: ScheduleWhereUniqueInput
  /**
   * The number of Schedules to fetch. If negative number, it will take Schedules before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Schedules.
  **/
  skip?: number
}


/**
 * Schedule create
 */
export type ScheduleCreateArgs = {
  /**
   * Select specific fields to fetch from the Schedule
  **/
  select?: ScheduleSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: ScheduleInclude | null
  /**
   * The data needed to create a Schedule.
  **/
  data: ScheduleCreateInput
}


/**
 * Schedule update
 */
export type ScheduleUpdateArgs = {
  /**
   * Select specific fields to fetch from the Schedule
  **/
  select?: ScheduleSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: ScheduleInclude | null
  /**
   * The data needed to update a Schedule.
  **/
  data: ScheduleUpdateInput
  /**
   * Choose, which Schedule to update.
  **/
  where: ScheduleWhereUniqueInput
}


/**
 * Schedule updateMany
 */
export type ScheduleUpdateManyArgs = {
  data: ScheduleUpdateManyMutationInput
  where?: ScheduleWhereInput
}


/**
 * Schedule upsert
 */
export type ScheduleUpsertArgs = {
  /**
   * Select specific fields to fetch from the Schedule
  **/
  select?: ScheduleSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: ScheduleInclude | null
  /**
   * The filter to search for the Schedule to update in case it exists.
  **/
  where: ScheduleWhereUniqueInput
  /**
   * In case the Schedule found by the `where` argument doesn't exist, create a new Schedule with this data.
  **/
  create: ScheduleCreateInput
  /**
   * In case the Schedule was found with the provided `where` argument, update it with this data.
  **/
  update: ScheduleUpdateInput
}


/**
 * Schedule delete
 */
export type ScheduleDeleteArgs = {
  /**
   * Select specific fields to fetch from the Schedule
  **/
  select?: ScheduleSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: ScheduleInclude | null
  /**
   * Filter which Schedule to delete.
  **/
  where: ScheduleWhereUniqueInput
}


/**
 * Schedule deleteMany
 */
export type ScheduleDeleteManyArgs = {
  where?: ScheduleWhereInput
}


/**
 * Schedule without action
 */
export type ScheduleArgs = {
  /**
   * Select specific fields to fetch from the Schedule
  **/
  select?: ScheduleSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: ScheduleInclude | null
}



/**
 * Model Treatment_evolution
 */

export type Treatment_evolution = {
  id: string
  hour: Date
  date: Date
  dentist_id: string
  treatment_procedures_ids: string[]
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Treatment_evolutionSelect = {
  id?: boolean
  shedule?: boolean | ScheduleArgs
  hour?: boolean
  date?: boolean
  dentist_id?: boolean
  treatment?: boolean | FindManyProceduresArgs
  treatment_procedures_ids?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
  Clinic_finance_procedure?: boolean | FindManyClinic_finance_procedureArgs
  Patient?: boolean | FindManyPatientArgs
}

export type Treatment_evolutionInclude = {
  shedule?: boolean | ScheduleArgs
  treatment?: boolean | FindManyProceduresArgs
  Clinic_finance_procedure?: boolean | FindManyClinic_finance_procedureArgs
  Patient?: boolean | FindManyPatientArgs
}

export type Treatment_evolutionGetPayload<
  S extends boolean | null | undefined | Treatment_evolutionArgs,
  U = keyof S
> = S extends true
  ? Treatment_evolution
  : S extends undefined
  ? never
  : S extends Treatment_evolutionArgs | FindManyTreatment_evolutionArgs
  ? 'include' extends U
    ? Treatment_evolution  & {
      [P in TrueKeys<S['include']>]:
      P extends 'shedule'
      ? ScheduleGetPayload<S['include'][P]> :
      P extends 'treatment'
      ? Array<ProceduresGetPayload<S['include'][P]>> :
      P extends 'Clinic_finance_procedure'
      ? Array<Clinic_finance_procedureGetPayload<S['include'][P]>> :
      P extends 'Patient'
      ? Array<PatientGetPayload<S['include'][P]>> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Treatment_evolution ? Treatment_evolution[P]
: 
      P extends 'shedule'
      ? ScheduleGetPayload<S['select'][P]> :
      P extends 'treatment'
      ? Array<ProceduresGetPayload<S['select'][P]>> :
      P extends 'Clinic_finance_procedure'
      ? Array<Clinic_finance_procedureGetPayload<S['select'][P]>> :
      P extends 'Patient'
      ? Array<PatientGetPayload<S['select'][P]>> : never
    }
  : Treatment_evolution
: Treatment_evolution


export interface Treatment_evolutionDelegate {
  /**
   * Find zero or one Treatment_evolution.
   * @param {FindOneTreatment_evolutionArgs} args - Arguments to find a Treatment_evolution
   * @example
   * // Get one Treatment_evolution
   * const treatment_evolution = await prisma.treatment_evolution.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneTreatment_evolutionArgs>(
    args: Subset<T, FindOneTreatment_evolutionArgs>
  ): CheckSelect<T, Prisma__Treatment_evolutionClient<Treatment_evolution | null>, Prisma__Treatment_evolutionClient<Treatment_evolutionGetPayload<T> | null>>
  /**
   * Find zero or more Treatment_evolutions.
   * @param {FindManyTreatment_evolutionArgs=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Treatment_evolutions
   * const treatment_evolutions = await prisma.treatment_evolution.findMany()
   * 
   * // Get first 10 Treatment_evolutions
   * const treatment_evolutions = await prisma.treatment_evolution.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const treatment_evolutionWithIdOnly = await prisma.treatment_evolution.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyTreatment_evolutionArgs>(
    args?: Subset<T, FindManyTreatment_evolutionArgs>
  ): CheckSelect<T, Promise<Array<Treatment_evolution>>, Promise<Array<Treatment_evolutionGetPayload<T>>>>
  /**
   * Create a Treatment_evolution.
   * @param {Treatment_evolutionCreateArgs} args - Arguments to create a Treatment_evolution.
   * @example
   * // Create one Treatment_evolution
   * const Treatment_evolution = await prisma.treatment_evolution.create({
   *   data: {
   *     // ... data to create a Treatment_evolution
   *   }
   * })
   * 
  **/
  create<T extends Treatment_evolutionCreateArgs>(
    args: Subset<T, Treatment_evolutionCreateArgs>
  ): CheckSelect<T, Prisma__Treatment_evolutionClient<Treatment_evolution>, Prisma__Treatment_evolutionClient<Treatment_evolutionGetPayload<T>>>
  /**
   * Delete a Treatment_evolution.
   * @param {Treatment_evolutionDeleteArgs} args - Arguments to delete one Treatment_evolution.
   * @example
   * // Delete one Treatment_evolution
   * const Treatment_evolution = await prisma.treatment_evolution.delete({
   *   where: {
   *     // ... filter to delete one Treatment_evolution
   *   }
   * })
   * 
  **/
  delete<T extends Treatment_evolutionDeleteArgs>(
    args: Subset<T, Treatment_evolutionDeleteArgs>
  ): CheckSelect<T, Prisma__Treatment_evolutionClient<Treatment_evolution>, Prisma__Treatment_evolutionClient<Treatment_evolutionGetPayload<T>>>
  /**
   * Update one Treatment_evolution.
   * @param {Treatment_evolutionUpdateArgs} args - Arguments to update one Treatment_evolution.
   * @example
   * // Update one Treatment_evolution
   * const treatment_evolution = await prisma.treatment_evolution.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Treatment_evolutionUpdateArgs>(
    args: Subset<T, Treatment_evolutionUpdateArgs>
  ): CheckSelect<T, Prisma__Treatment_evolutionClient<Treatment_evolution>, Prisma__Treatment_evolutionClient<Treatment_evolutionGetPayload<T>>>
  /**
   * Delete zero or more Treatment_evolutions.
   * @param {Treatment_evolutionDeleteManyArgs} args - Arguments to filter Treatment_evolutions to delete.
   * @example
   * // Delete a few Treatment_evolutions
   * const { count } = await prisma.treatment_evolution.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Treatment_evolutionDeleteManyArgs>(
    args: Subset<T, Treatment_evolutionDeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Treatment_evolutions.
   * @param {Treatment_evolutionUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Treatment_evolutions
   * const treatment_evolution = await prisma.treatment_evolution.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Treatment_evolutionUpdateManyArgs>(
    args: Subset<T, Treatment_evolutionUpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Treatment_evolution.
   * @param {Treatment_evolutionUpsertArgs} args - Arguments to update or create a Treatment_evolution.
   * @example
   * // Update or create a Treatment_evolution
   * const treatment_evolution = await prisma.treatment_evolution.upsert({
   *   create: {
   *     // ... data to create a Treatment_evolution
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Treatment_evolution we want to update
   *   }
   * })
  **/
  upsert<T extends Treatment_evolutionUpsertArgs>(
    args: Subset<T, Treatment_evolutionUpsertArgs>
  ): CheckSelect<T, Prisma__Treatment_evolutionClient<Treatment_evolution>, Prisma__Treatment_evolutionClient<Treatment_evolutionGetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyTreatment_evolutionArgs, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Treatment_evolution.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Treatment_evolutionClient<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  shedule<T extends ScheduleArgs = {}>(args?: Subset<T, ScheduleArgs>): CheckSelect<T, Prisma__ScheduleClient<Schedule | null>, Prisma__ScheduleClient<ScheduleGetPayload<T> | null>>;

  treatment<T extends FindManyProceduresArgs = {}>(args?: Subset<T, FindManyProceduresArgs>): CheckSelect<T, Promise<Array<Procedures>>, Promise<Array<ProceduresGetPayload<T>>>>;

  Clinic_finance_procedure<T extends FindManyClinic_finance_procedureArgs = {}>(args?: Subset<T, FindManyClinic_finance_procedureArgs>): CheckSelect<T, Promise<Array<Clinic_finance_procedure>>, Promise<Array<Clinic_finance_procedureGetPayload<T>>>>;

  Patient<T extends FindManyPatientArgs = {}>(args?: Subset<T, FindManyPatientArgs>): CheckSelect<T, Promise<Array<Patient>>, Promise<Array<PatientGetPayload<T>>>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Treatment_evolution findOne
 */
export type FindOneTreatment_evolutionArgs = {
  /**
   * Select specific fields to fetch from the Treatment_evolution
  **/
  select?: Treatment_evolutionSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Treatment_evolutionInclude | null
  /**
   * Filter, which Treatment_evolution to fetch.
  **/
  where: Treatment_evolutionWhereUniqueInput
}


/**
 * Treatment_evolution findMany
 */
export type FindManyTreatment_evolutionArgs = {
  /**
   * Select specific fields to fetch from the Treatment_evolution
  **/
  select?: Treatment_evolutionSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Treatment_evolutionInclude | null
  /**
   * Filter, which Treatment_evolutions to fetch.
  **/
  where?: Treatment_evolutionWhereInput
  /**
   * Determine the order of the Treatment_evolutions to fetch.
  **/
  orderBy?: Treatment_evolutionOrderByInput
  /**
   * Sets the position for listing Treatment_evolutions.
  **/
  cursor?: Treatment_evolutionWhereUniqueInput
  /**
   * The number of Treatment_evolutions to fetch. If negative number, it will take Treatment_evolutions before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Treatment_evolutions.
  **/
  skip?: number
}


/**
 * Treatment_evolution create
 */
export type Treatment_evolutionCreateArgs = {
  /**
   * Select specific fields to fetch from the Treatment_evolution
  **/
  select?: Treatment_evolutionSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Treatment_evolutionInclude | null
  /**
   * The data needed to create a Treatment_evolution.
  **/
  data: Treatment_evolutionCreateInput
}


/**
 * Treatment_evolution update
 */
export type Treatment_evolutionUpdateArgs = {
  /**
   * Select specific fields to fetch from the Treatment_evolution
  **/
  select?: Treatment_evolutionSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Treatment_evolutionInclude | null
  /**
   * The data needed to update a Treatment_evolution.
  **/
  data: Treatment_evolutionUpdateInput
  /**
   * Choose, which Treatment_evolution to update.
  **/
  where: Treatment_evolutionWhereUniqueInput
}


/**
 * Treatment_evolution updateMany
 */
export type Treatment_evolutionUpdateManyArgs = {
  data: Treatment_evolutionUpdateManyMutationInput
  where?: Treatment_evolutionWhereInput
}


/**
 * Treatment_evolution upsert
 */
export type Treatment_evolutionUpsertArgs = {
  /**
   * Select specific fields to fetch from the Treatment_evolution
  **/
  select?: Treatment_evolutionSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Treatment_evolutionInclude | null
  /**
   * The filter to search for the Treatment_evolution to update in case it exists.
  **/
  where: Treatment_evolutionWhereUniqueInput
  /**
   * In case the Treatment_evolution found by the `where` argument doesn't exist, create a new Treatment_evolution with this data.
  **/
  create: Treatment_evolutionCreateInput
  /**
   * In case the Treatment_evolution was found with the provided `where` argument, update it with this data.
  **/
  update: Treatment_evolutionUpdateInput
}


/**
 * Treatment_evolution delete
 */
export type Treatment_evolutionDeleteArgs = {
  /**
   * Select specific fields to fetch from the Treatment_evolution
  **/
  select?: Treatment_evolutionSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Treatment_evolutionInclude | null
  /**
   * Filter which Treatment_evolution to delete.
  **/
  where: Treatment_evolutionWhereUniqueInput
}


/**
 * Treatment_evolution deleteMany
 */
export type Treatment_evolutionDeleteManyArgs = {
  where?: Treatment_evolutionWhereInput
}


/**
 * Treatment_evolution without action
 */
export type Treatment_evolutionArgs = {
  /**
   * Select specific fields to fetch from the Treatment_evolution
  **/
  select?: Treatment_evolutionSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Treatment_evolutionInclude | null
}



/**
 * Model Procedures
 */

export type Procedures = {
  codigo_CID: string
  name: string
  createdAt: Date
  updatedAt: Date
}



export type ProceduresSelect = {
  codigo_CID?: boolean
  treatment_evolution?: boolean | FindManyTreatment_evolutionArgs
  particular_procedures_values?: boolean | Clinic_procedures_particular_valuesArgs
  insurance_procedures_values?: boolean | FindManyClinic_procedures_insurance_valuesArgs
  name?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type ProceduresInclude = {
  treatment_evolution?: boolean | FindManyTreatment_evolutionArgs
  particular_procedures_values?: boolean | Clinic_procedures_particular_valuesArgs
  insurance_procedures_values?: boolean | FindManyClinic_procedures_insurance_valuesArgs
}

export type ProceduresGetPayload<
  S extends boolean | null | undefined | ProceduresArgs,
  U = keyof S
> = S extends true
  ? Procedures
  : S extends undefined
  ? never
  : S extends ProceduresArgs | FindManyProceduresArgs
  ? 'include' extends U
    ? Procedures  & {
      [P in TrueKeys<S['include']>]:
      P extends 'treatment_evolution'
      ? Array<Treatment_evolutionGetPayload<S['include'][P]>> :
      P extends 'particular_procedures_values'
      ? Clinic_procedures_particular_valuesGetPayload<S['include'][P]> :
      P extends 'insurance_procedures_values'
      ? Array<Clinic_procedures_insurance_valuesGetPayload<S['include'][P]>> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Procedures ? Procedures[P]
: 
      P extends 'treatment_evolution'
      ? Array<Treatment_evolutionGetPayload<S['select'][P]>> :
      P extends 'particular_procedures_values'
      ? Clinic_procedures_particular_valuesGetPayload<S['select'][P]> :
      P extends 'insurance_procedures_values'
      ? Array<Clinic_procedures_insurance_valuesGetPayload<S['select'][P]>> : never
    }
  : Procedures
: Procedures


export interface ProceduresDelegate {
  /**
   * Find zero or one Procedures.
   * @param {FindOneProceduresArgs} args - Arguments to find a Procedures
   * @example
   * // Get one Procedures
   * const procedures = await prisma.procedures.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneProceduresArgs>(
    args: Subset<T, FindOneProceduresArgs>
  ): CheckSelect<T, Prisma__ProceduresClient<Procedures | null>, Prisma__ProceduresClient<ProceduresGetPayload<T> | null>>
  /**
   * Find zero or more Procedures.
   * @param {FindManyProceduresArgs=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Procedures
   * const procedures = await prisma.procedures.findMany()
   * 
   * // Get first 10 Procedures
   * const procedures = await prisma.procedures.findMany({ take: 10 })
   * 
   * // Only select the `codigo_CID`
   * const proceduresWithCodigo_CIDOnly = await prisma.procedures.findMany({ select: { codigo_CID: true } })
   * 
  **/
  findMany<T extends FindManyProceduresArgs>(
    args?: Subset<T, FindManyProceduresArgs>
  ): CheckSelect<T, Promise<Array<Procedures>>, Promise<Array<ProceduresGetPayload<T>>>>
  /**
   * Create a Procedures.
   * @param {ProceduresCreateArgs} args - Arguments to create a Procedures.
   * @example
   * // Create one Procedures
   * const Procedures = await prisma.procedures.create({
   *   data: {
   *     // ... data to create a Procedures
   *   }
   * })
   * 
  **/
  create<T extends ProceduresCreateArgs>(
    args: Subset<T, ProceduresCreateArgs>
  ): CheckSelect<T, Prisma__ProceduresClient<Procedures>, Prisma__ProceduresClient<ProceduresGetPayload<T>>>
  /**
   * Delete a Procedures.
   * @param {ProceduresDeleteArgs} args - Arguments to delete one Procedures.
   * @example
   * // Delete one Procedures
   * const Procedures = await prisma.procedures.delete({
   *   where: {
   *     // ... filter to delete one Procedures
   *   }
   * })
   * 
  **/
  delete<T extends ProceduresDeleteArgs>(
    args: Subset<T, ProceduresDeleteArgs>
  ): CheckSelect<T, Prisma__ProceduresClient<Procedures>, Prisma__ProceduresClient<ProceduresGetPayload<T>>>
  /**
   * Update one Procedures.
   * @param {ProceduresUpdateArgs} args - Arguments to update one Procedures.
   * @example
   * // Update one Procedures
   * const procedures = await prisma.procedures.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends ProceduresUpdateArgs>(
    args: Subset<T, ProceduresUpdateArgs>
  ): CheckSelect<T, Prisma__ProceduresClient<Procedures>, Prisma__ProceduresClient<ProceduresGetPayload<T>>>
  /**
   * Delete zero or more Procedures.
   * @param {ProceduresDeleteManyArgs} args - Arguments to filter Procedures to delete.
   * @example
   * // Delete a few Procedures
   * const { count } = await prisma.procedures.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends ProceduresDeleteManyArgs>(
    args: Subset<T, ProceduresDeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Procedures.
   * @param {ProceduresUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Procedures
   * const procedures = await prisma.procedures.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends ProceduresUpdateManyArgs>(
    args: Subset<T, ProceduresUpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Procedures.
   * @param {ProceduresUpsertArgs} args - Arguments to update or create a Procedures.
   * @example
   * // Update or create a Procedures
   * const procedures = await prisma.procedures.upsert({
   *   create: {
   *     // ... data to create a Procedures
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Procedures we want to update
   *   }
   * })
  **/
  upsert<T extends ProceduresUpsertArgs>(
    args: Subset<T, ProceduresUpsertArgs>
  ): CheckSelect<T, Prisma__ProceduresClient<Procedures>, Prisma__ProceduresClient<ProceduresGetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyProceduresArgs, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Procedures.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__ProceduresClient<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  treatment_evolution<T extends FindManyTreatment_evolutionArgs = {}>(args?: Subset<T, FindManyTreatment_evolutionArgs>): CheckSelect<T, Promise<Array<Treatment_evolution>>, Promise<Array<Treatment_evolutionGetPayload<T>>>>;

  particular_procedures_values<T extends Clinic_procedures_particular_valuesArgs = {}>(args?: Subset<T, Clinic_procedures_particular_valuesArgs>): CheckSelect<T, Prisma__Clinic_procedures_particular_valuesClient<Clinic_procedures_particular_values | null>, Prisma__Clinic_procedures_particular_valuesClient<Clinic_procedures_particular_valuesGetPayload<T> | null>>;

  insurance_procedures_values<T extends FindManyClinic_procedures_insurance_valuesArgs = {}>(args?: Subset<T, FindManyClinic_procedures_insurance_valuesArgs>): CheckSelect<T, Promise<Array<Clinic_procedures_insurance_values>>, Promise<Array<Clinic_procedures_insurance_valuesGetPayload<T>>>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Procedures findOne
 */
export type FindOneProceduresArgs = {
  /**
   * Select specific fields to fetch from the Procedures
  **/
  select?: ProceduresSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: ProceduresInclude | null
  /**
   * Filter, which Procedures to fetch.
  **/
  where: ProceduresWhereUniqueInput
}


/**
 * Procedures findMany
 */
export type FindManyProceduresArgs = {
  /**
   * Select specific fields to fetch from the Procedures
  **/
  select?: ProceduresSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: ProceduresInclude | null
  /**
   * Filter, which Procedures to fetch.
  **/
  where?: ProceduresWhereInput
  /**
   * Determine the order of the Procedures to fetch.
  **/
  orderBy?: ProceduresOrderByInput
  /**
   * Sets the position for listing Procedures.
  **/
  cursor?: ProceduresWhereUniqueInput
  /**
   * The number of Procedures to fetch. If negative number, it will take Procedures before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Procedures.
  **/
  skip?: number
}


/**
 * Procedures create
 */
export type ProceduresCreateArgs = {
  /**
   * Select specific fields to fetch from the Procedures
  **/
  select?: ProceduresSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: ProceduresInclude | null
  /**
   * The data needed to create a Procedures.
  **/
  data: ProceduresCreateInput
}


/**
 * Procedures update
 */
export type ProceduresUpdateArgs = {
  /**
   * Select specific fields to fetch from the Procedures
  **/
  select?: ProceduresSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: ProceduresInclude | null
  /**
   * The data needed to update a Procedures.
  **/
  data: ProceduresUpdateInput
  /**
   * Choose, which Procedures to update.
  **/
  where: ProceduresWhereUniqueInput
}


/**
 * Procedures updateMany
 */
export type ProceduresUpdateManyArgs = {
  data: ProceduresUpdateManyMutationInput
  where?: ProceduresWhereInput
}


/**
 * Procedures upsert
 */
export type ProceduresUpsertArgs = {
  /**
   * Select specific fields to fetch from the Procedures
  **/
  select?: ProceduresSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: ProceduresInclude | null
  /**
   * The filter to search for the Procedures to update in case it exists.
  **/
  where: ProceduresWhereUniqueInput
  /**
   * In case the Procedures found by the `where` argument doesn't exist, create a new Procedures with this data.
  **/
  create: ProceduresCreateInput
  /**
   * In case the Procedures was found with the provided `where` argument, update it with this data.
  **/
  update: ProceduresUpdateInput
}


/**
 * Procedures delete
 */
export type ProceduresDeleteArgs = {
  /**
   * Select specific fields to fetch from the Procedures
  **/
  select?: ProceduresSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: ProceduresInclude | null
  /**
   * Filter which Procedures to delete.
  **/
  where: ProceduresWhereUniqueInput
}


/**
 * Procedures deleteMany
 */
export type ProceduresDeleteManyArgs = {
  where?: ProceduresWhereInput
}


/**
 * Procedures without action
 */
export type ProceduresArgs = {
  /**
   * Select specific fields to fetch from the Procedures
  **/
  select?: ProceduresSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: ProceduresInclude | null
}



/**
 * Model Technicalmanager
 */

export type Technicalmanager = {
  cpf: string
  fullname: string
  contactmeans: Contact_means
  active: boolean
  clinid_id: string
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type TechnicalmanagerSelect = {
  cpf?: boolean
  fullname?: boolean
  contactmeans?: boolean
  active?: boolean
  email?: boolean | FindManyEmailArgs
  clinic?: boolean | ClinicArgs
  clinid_id?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
  Email?: boolean | FindManyEmailArgs
}

export type TechnicalmanagerInclude = {
  email?: boolean | FindManyEmailArgs
  clinic?: boolean | ClinicArgs
  Email?: boolean | FindManyEmailArgs
}

export type TechnicalmanagerGetPayload<
  S extends boolean | null | undefined | TechnicalmanagerArgs,
  U = keyof S
> = S extends true
  ? Technicalmanager
  : S extends undefined
  ? never
  : S extends TechnicalmanagerArgs | FindManyTechnicalmanagerArgs
  ? 'include' extends U
    ? Technicalmanager  & {
      [P in TrueKeys<S['include']>]:
      P extends 'email'
      ? Array<EmailGetPayload<S['include'][P]>> :
      P extends 'clinic'
      ? ClinicGetPayload<S['include'][P]> :
      P extends 'Email'
      ? Array<EmailGetPayload<S['include'][P]>> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Technicalmanager ? Technicalmanager[P]
: 
      P extends 'email'
      ? Array<EmailGetPayload<S['select'][P]>> :
      P extends 'clinic'
      ? ClinicGetPayload<S['select'][P]> :
      P extends 'Email'
      ? Array<EmailGetPayload<S['select'][P]>> : never
    }
  : Technicalmanager
: Technicalmanager


export interface TechnicalmanagerDelegate {
  /**
   * Find zero or one Technicalmanager.
   * @param {FindOneTechnicalmanagerArgs} args - Arguments to find a Technicalmanager
   * @example
   * // Get one Technicalmanager
   * const technicalmanager = await prisma.technicalmanager.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneTechnicalmanagerArgs>(
    args: Subset<T, FindOneTechnicalmanagerArgs>
  ): CheckSelect<T, Prisma__TechnicalmanagerClient<Technicalmanager | null>, Prisma__TechnicalmanagerClient<TechnicalmanagerGetPayload<T> | null>>
  /**
   * Find zero or more Technicalmanagers.
   * @param {FindManyTechnicalmanagerArgs=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Technicalmanagers
   * const technicalmanagers = await prisma.technicalmanager.findMany()
   * 
   * // Get first 10 Technicalmanagers
   * const technicalmanagers = await prisma.technicalmanager.findMany({ take: 10 })
   * 
   * // Only select the `cpf`
   * const technicalmanagerWithCpfOnly = await prisma.technicalmanager.findMany({ select: { cpf: true } })
   * 
  **/
  findMany<T extends FindManyTechnicalmanagerArgs>(
    args?: Subset<T, FindManyTechnicalmanagerArgs>
  ): CheckSelect<T, Promise<Array<Technicalmanager>>, Promise<Array<TechnicalmanagerGetPayload<T>>>>
  /**
   * Create a Technicalmanager.
   * @param {TechnicalmanagerCreateArgs} args - Arguments to create a Technicalmanager.
   * @example
   * // Create one Technicalmanager
   * const Technicalmanager = await prisma.technicalmanager.create({
   *   data: {
   *     // ... data to create a Technicalmanager
   *   }
   * })
   * 
  **/
  create<T extends TechnicalmanagerCreateArgs>(
    args: Subset<T, TechnicalmanagerCreateArgs>
  ): CheckSelect<T, Prisma__TechnicalmanagerClient<Technicalmanager>, Prisma__TechnicalmanagerClient<TechnicalmanagerGetPayload<T>>>
  /**
   * Delete a Technicalmanager.
   * @param {TechnicalmanagerDeleteArgs} args - Arguments to delete one Technicalmanager.
   * @example
   * // Delete one Technicalmanager
   * const Technicalmanager = await prisma.technicalmanager.delete({
   *   where: {
   *     // ... filter to delete one Technicalmanager
   *   }
   * })
   * 
  **/
  delete<T extends TechnicalmanagerDeleteArgs>(
    args: Subset<T, TechnicalmanagerDeleteArgs>
  ): CheckSelect<T, Prisma__TechnicalmanagerClient<Technicalmanager>, Prisma__TechnicalmanagerClient<TechnicalmanagerGetPayload<T>>>
  /**
   * Update one Technicalmanager.
   * @param {TechnicalmanagerUpdateArgs} args - Arguments to update one Technicalmanager.
   * @example
   * // Update one Technicalmanager
   * const technicalmanager = await prisma.technicalmanager.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends TechnicalmanagerUpdateArgs>(
    args: Subset<T, TechnicalmanagerUpdateArgs>
  ): CheckSelect<T, Prisma__TechnicalmanagerClient<Technicalmanager>, Prisma__TechnicalmanagerClient<TechnicalmanagerGetPayload<T>>>
  /**
   * Delete zero or more Technicalmanagers.
   * @param {TechnicalmanagerDeleteManyArgs} args - Arguments to filter Technicalmanagers to delete.
   * @example
   * // Delete a few Technicalmanagers
   * const { count } = await prisma.technicalmanager.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends TechnicalmanagerDeleteManyArgs>(
    args: Subset<T, TechnicalmanagerDeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Technicalmanagers.
   * @param {TechnicalmanagerUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Technicalmanagers
   * const technicalmanager = await prisma.technicalmanager.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends TechnicalmanagerUpdateManyArgs>(
    args: Subset<T, TechnicalmanagerUpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Technicalmanager.
   * @param {TechnicalmanagerUpsertArgs} args - Arguments to update or create a Technicalmanager.
   * @example
   * // Update or create a Technicalmanager
   * const technicalmanager = await prisma.technicalmanager.upsert({
   *   create: {
   *     // ... data to create a Technicalmanager
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Technicalmanager we want to update
   *   }
   * })
  **/
  upsert<T extends TechnicalmanagerUpsertArgs>(
    args: Subset<T, TechnicalmanagerUpsertArgs>
  ): CheckSelect<T, Prisma__TechnicalmanagerClient<Technicalmanager>, Prisma__TechnicalmanagerClient<TechnicalmanagerGetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyTechnicalmanagerArgs, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Technicalmanager.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__TechnicalmanagerClient<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  email<T extends FindManyEmailArgs = {}>(args?: Subset<T, FindManyEmailArgs>): CheckSelect<T, Promise<Array<Email>>, Promise<Array<EmailGetPayload<T>>>>;

  clinic<T extends ClinicArgs = {}>(args?: Subset<T, ClinicArgs>): CheckSelect<T, Prisma__ClinicClient<Clinic | null>, Prisma__ClinicClient<ClinicGetPayload<T> | null>>;

  Email<T extends FindManyEmailArgs = {}>(args?: Subset<T, FindManyEmailArgs>): CheckSelect<T, Promise<Array<Email>>, Promise<Array<EmailGetPayload<T>>>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Technicalmanager findOne
 */
export type FindOneTechnicalmanagerArgs = {
  /**
   * Select specific fields to fetch from the Technicalmanager
  **/
  select?: TechnicalmanagerSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: TechnicalmanagerInclude | null
  /**
   * Filter, which Technicalmanager to fetch.
  **/
  where: TechnicalmanagerWhereUniqueInput
}


/**
 * Technicalmanager findMany
 */
export type FindManyTechnicalmanagerArgs = {
  /**
   * Select specific fields to fetch from the Technicalmanager
  **/
  select?: TechnicalmanagerSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: TechnicalmanagerInclude | null
  /**
   * Filter, which Technicalmanagers to fetch.
  **/
  where?: TechnicalmanagerWhereInput
  /**
   * Determine the order of the Technicalmanagers to fetch.
  **/
  orderBy?: TechnicalmanagerOrderByInput
  /**
   * Sets the position for listing Technicalmanagers.
  **/
  cursor?: TechnicalmanagerWhereUniqueInput
  /**
   * The number of Technicalmanagers to fetch. If negative number, it will take Technicalmanagers before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Technicalmanagers.
  **/
  skip?: number
}


/**
 * Technicalmanager create
 */
export type TechnicalmanagerCreateArgs = {
  /**
   * Select specific fields to fetch from the Technicalmanager
  **/
  select?: TechnicalmanagerSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: TechnicalmanagerInclude | null
  /**
   * The data needed to create a Technicalmanager.
  **/
  data: TechnicalmanagerCreateInput
}


/**
 * Technicalmanager update
 */
export type TechnicalmanagerUpdateArgs = {
  /**
   * Select specific fields to fetch from the Technicalmanager
  **/
  select?: TechnicalmanagerSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: TechnicalmanagerInclude | null
  /**
   * The data needed to update a Technicalmanager.
  **/
  data: TechnicalmanagerUpdateInput
  /**
   * Choose, which Technicalmanager to update.
  **/
  where: TechnicalmanagerWhereUniqueInput
}


/**
 * Technicalmanager updateMany
 */
export type TechnicalmanagerUpdateManyArgs = {
  data: TechnicalmanagerUpdateManyMutationInput
  where?: TechnicalmanagerWhereInput
}


/**
 * Technicalmanager upsert
 */
export type TechnicalmanagerUpsertArgs = {
  /**
   * Select specific fields to fetch from the Technicalmanager
  **/
  select?: TechnicalmanagerSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: TechnicalmanagerInclude | null
  /**
   * The filter to search for the Technicalmanager to update in case it exists.
  **/
  where: TechnicalmanagerWhereUniqueInput
  /**
   * In case the Technicalmanager found by the `where` argument doesn't exist, create a new Technicalmanager with this data.
  **/
  create: TechnicalmanagerCreateInput
  /**
   * In case the Technicalmanager was found with the provided `where` argument, update it with this data.
  **/
  update: TechnicalmanagerUpdateInput
}


/**
 * Technicalmanager delete
 */
export type TechnicalmanagerDeleteArgs = {
  /**
   * Select specific fields to fetch from the Technicalmanager
  **/
  select?: TechnicalmanagerSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: TechnicalmanagerInclude | null
  /**
   * Filter which Technicalmanager to delete.
  **/
  where: TechnicalmanagerWhereUniqueInput
}


/**
 * Technicalmanager deleteMany
 */
export type TechnicalmanagerDeleteManyArgs = {
  where?: TechnicalmanagerWhereInput
}


/**
 * Technicalmanager without action
 */
export type TechnicalmanagerArgs = {
  /**
   * Select specific fields to fetch from the Technicalmanager
  **/
  select?: TechnicalmanagerSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: TechnicalmanagerInclude | null
}



/**
 * Model Legalresponsible
 */

export type Legalresponsible = {
  cpf: string
  fullname: string
  contactmeans: Contact_means | null
  active: boolean
  clinid_id: string
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type LegalresponsibleSelect = {
  cpf?: boolean
  fullname?: boolean
  contactmeans?: boolean
  active?: boolean
  email?: boolean | FindManyEmailArgs
  clinic?: boolean | ClinicArgs
  clinid_id?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
  Email?: boolean | FindManyEmailArgs
}

export type LegalresponsibleInclude = {
  email?: boolean | FindManyEmailArgs
  clinic?: boolean | ClinicArgs
  Email?: boolean | FindManyEmailArgs
}

export type LegalresponsibleGetPayload<
  S extends boolean | null | undefined | LegalresponsibleArgs,
  U = keyof S
> = S extends true
  ? Legalresponsible
  : S extends undefined
  ? never
  : S extends LegalresponsibleArgs | FindManyLegalresponsibleArgs
  ? 'include' extends U
    ? Legalresponsible  & {
      [P in TrueKeys<S['include']>]:
      P extends 'email'
      ? Array<EmailGetPayload<S['include'][P]>> :
      P extends 'clinic'
      ? ClinicGetPayload<S['include'][P]> :
      P extends 'Email'
      ? Array<EmailGetPayload<S['include'][P]>> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Legalresponsible ? Legalresponsible[P]
: 
      P extends 'email'
      ? Array<EmailGetPayload<S['select'][P]>> :
      P extends 'clinic'
      ? ClinicGetPayload<S['select'][P]> :
      P extends 'Email'
      ? Array<EmailGetPayload<S['select'][P]>> : never
    }
  : Legalresponsible
: Legalresponsible


export interface LegalresponsibleDelegate {
  /**
   * Find zero or one Legalresponsible.
   * @param {FindOneLegalresponsibleArgs} args - Arguments to find a Legalresponsible
   * @example
   * // Get one Legalresponsible
   * const legalresponsible = await prisma.legalresponsible.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneLegalresponsibleArgs>(
    args: Subset<T, FindOneLegalresponsibleArgs>
  ): CheckSelect<T, Prisma__LegalresponsibleClient<Legalresponsible | null>, Prisma__LegalresponsibleClient<LegalresponsibleGetPayload<T> | null>>
  /**
   * Find zero or more Legalresponsibles.
   * @param {FindManyLegalresponsibleArgs=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Legalresponsibles
   * const legalresponsibles = await prisma.legalresponsible.findMany()
   * 
   * // Get first 10 Legalresponsibles
   * const legalresponsibles = await prisma.legalresponsible.findMany({ take: 10 })
   * 
   * // Only select the `cpf`
   * const legalresponsibleWithCpfOnly = await prisma.legalresponsible.findMany({ select: { cpf: true } })
   * 
  **/
  findMany<T extends FindManyLegalresponsibleArgs>(
    args?: Subset<T, FindManyLegalresponsibleArgs>
  ): CheckSelect<T, Promise<Array<Legalresponsible>>, Promise<Array<LegalresponsibleGetPayload<T>>>>
  /**
   * Create a Legalresponsible.
   * @param {LegalresponsibleCreateArgs} args - Arguments to create a Legalresponsible.
   * @example
   * // Create one Legalresponsible
   * const Legalresponsible = await prisma.legalresponsible.create({
   *   data: {
   *     // ... data to create a Legalresponsible
   *   }
   * })
   * 
  **/
  create<T extends LegalresponsibleCreateArgs>(
    args: Subset<T, LegalresponsibleCreateArgs>
  ): CheckSelect<T, Prisma__LegalresponsibleClient<Legalresponsible>, Prisma__LegalresponsibleClient<LegalresponsibleGetPayload<T>>>
  /**
   * Delete a Legalresponsible.
   * @param {LegalresponsibleDeleteArgs} args - Arguments to delete one Legalresponsible.
   * @example
   * // Delete one Legalresponsible
   * const Legalresponsible = await prisma.legalresponsible.delete({
   *   where: {
   *     // ... filter to delete one Legalresponsible
   *   }
   * })
   * 
  **/
  delete<T extends LegalresponsibleDeleteArgs>(
    args: Subset<T, LegalresponsibleDeleteArgs>
  ): CheckSelect<T, Prisma__LegalresponsibleClient<Legalresponsible>, Prisma__LegalresponsibleClient<LegalresponsibleGetPayload<T>>>
  /**
   * Update one Legalresponsible.
   * @param {LegalresponsibleUpdateArgs} args - Arguments to update one Legalresponsible.
   * @example
   * // Update one Legalresponsible
   * const legalresponsible = await prisma.legalresponsible.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends LegalresponsibleUpdateArgs>(
    args: Subset<T, LegalresponsibleUpdateArgs>
  ): CheckSelect<T, Prisma__LegalresponsibleClient<Legalresponsible>, Prisma__LegalresponsibleClient<LegalresponsibleGetPayload<T>>>
  /**
   * Delete zero or more Legalresponsibles.
   * @param {LegalresponsibleDeleteManyArgs} args - Arguments to filter Legalresponsibles to delete.
   * @example
   * // Delete a few Legalresponsibles
   * const { count } = await prisma.legalresponsible.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends LegalresponsibleDeleteManyArgs>(
    args: Subset<T, LegalresponsibleDeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Legalresponsibles.
   * @param {LegalresponsibleUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Legalresponsibles
   * const legalresponsible = await prisma.legalresponsible.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends LegalresponsibleUpdateManyArgs>(
    args: Subset<T, LegalresponsibleUpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Legalresponsible.
   * @param {LegalresponsibleUpsertArgs} args - Arguments to update or create a Legalresponsible.
   * @example
   * // Update or create a Legalresponsible
   * const legalresponsible = await prisma.legalresponsible.upsert({
   *   create: {
   *     // ... data to create a Legalresponsible
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Legalresponsible we want to update
   *   }
   * })
  **/
  upsert<T extends LegalresponsibleUpsertArgs>(
    args: Subset<T, LegalresponsibleUpsertArgs>
  ): CheckSelect<T, Prisma__LegalresponsibleClient<Legalresponsible>, Prisma__LegalresponsibleClient<LegalresponsibleGetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyLegalresponsibleArgs, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Legalresponsible.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__LegalresponsibleClient<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  email<T extends FindManyEmailArgs = {}>(args?: Subset<T, FindManyEmailArgs>): CheckSelect<T, Promise<Array<Email>>, Promise<Array<EmailGetPayload<T>>>>;

  clinic<T extends ClinicArgs = {}>(args?: Subset<T, ClinicArgs>): CheckSelect<T, Prisma__ClinicClient<Clinic | null>, Prisma__ClinicClient<ClinicGetPayload<T> | null>>;

  Email<T extends FindManyEmailArgs = {}>(args?: Subset<T, FindManyEmailArgs>): CheckSelect<T, Promise<Array<Email>>, Promise<Array<EmailGetPayload<T>>>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Legalresponsible findOne
 */
export type FindOneLegalresponsibleArgs = {
  /**
   * Select specific fields to fetch from the Legalresponsible
  **/
  select?: LegalresponsibleSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: LegalresponsibleInclude | null
  /**
   * Filter, which Legalresponsible to fetch.
  **/
  where: LegalresponsibleWhereUniqueInput
}


/**
 * Legalresponsible findMany
 */
export type FindManyLegalresponsibleArgs = {
  /**
   * Select specific fields to fetch from the Legalresponsible
  **/
  select?: LegalresponsibleSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: LegalresponsibleInclude | null
  /**
   * Filter, which Legalresponsibles to fetch.
  **/
  where?: LegalresponsibleWhereInput
  /**
   * Determine the order of the Legalresponsibles to fetch.
  **/
  orderBy?: LegalresponsibleOrderByInput
  /**
   * Sets the position for listing Legalresponsibles.
  **/
  cursor?: LegalresponsibleWhereUniqueInput
  /**
   * The number of Legalresponsibles to fetch. If negative number, it will take Legalresponsibles before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Legalresponsibles.
  **/
  skip?: number
}


/**
 * Legalresponsible create
 */
export type LegalresponsibleCreateArgs = {
  /**
   * Select specific fields to fetch from the Legalresponsible
  **/
  select?: LegalresponsibleSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: LegalresponsibleInclude | null
  /**
   * The data needed to create a Legalresponsible.
  **/
  data: LegalresponsibleCreateInput
}


/**
 * Legalresponsible update
 */
export type LegalresponsibleUpdateArgs = {
  /**
   * Select specific fields to fetch from the Legalresponsible
  **/
  select?: LegalresponsibleSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: LegalresponsibleInclude | null
  /**
   * The data needed to update a Legalresponsible.
  **/
  data: LegalresponsibleUpdateInput
  /**
   * Choose, which Legalresponsible to update.
  **/
  where: LegalresponsibleWhereUniqueInput
}


/**
 * Legalresponsible updateMany
 */
export type LegalresponsibleUpdateManyArgs = {
  data: LegalresponsibleUpdateManyMutationInput
  where?: LegalresponsibleWhereInput
}


/**
 * Legalresponsible upsert
 */
export type LegalresponsibleUpsertArgs = {
  /**
   * Select specific fields to fetch from the Legalresponsible
  **/
  select?: LegalresponsibleSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: LegalresponsibleInclude | null
  /**
   * The filter to search for the Legalresponsible to update in case it exists.
  **/
  where: LegalresponsibleWhereUniqueInput
  /**
   * In case the Legalresponsible found by the `where` argument doesn't exist, create a new Legalresponsible with this data.
  **/
  create: LegalresponsibleCreateInput
  /**
   * In case the Legalresponsible was found with the provided `where` argument, update it with this data.
  **/
  update: LegalresponsibleUpdateInput
}


/**
 * Legalresponsible delete
 */
export type LegalresponsibleDeleteArgs = {
  /**
   * Select specific fields to fetch from the Legalresponsible
  **/
  select?: LegalresponsibleSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: LegalresponsibleInclude | null
  /**
   * Filter which Legalresponsible to delete.
  **/
  where: LegalresponsibleWhereUniqueInput
}


/**
 * Legalresponsible deleteMany
 */
export type LegalresponsibleDeleteManyArgs = {
  where?: LegalresponsibleWhereInput
}


/**
 * Legalresponsible without action
 */
export type LegalresponsibleArgs = {
  /**
   * Select specific fields to fetch from the Legalresponsible
  **/
  select?: LegalresponsibleSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: LegalresponsibleInclude | null
}



/**
 * Model Patient
 */

export type Patient = {
  id: string
  clinic_prontuary_number: number
  fullname: string
  birth_date: Date
  age: number
  gender: Gender
  brazilian_cpf: string | null
  brazilian_rg: string | null
  password: string
  clinic_id: string
  cellphone_number: string | null
  dont_know_id: string | null
  treatment_evolution_id: string | null
  contactmeans: Contact_means | null
  last_visit_dentist: Date
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
  role: string
  clinicRegistered_id: string | null
}



export type PatientSelect = {
  id?: boolean
  clinic_prontuary_number?: boolean
  fullname?: boolean
  birth_date?: boolean
  age?: boolean
  gender?: boolean
  brazilian_cpf?: boolean
  brazilian_rg?: boolean
  password?: boolean
  clinic?: boolean | ClinicArgs
  clinic_id?: boolean
  cellphone_number?: boolean
  schedule?: boolean | ScheduleArgs
  email?: boolean | FindManyEmailArgs
  anamnesis?: boolean | AnamnesisArgs
  implantology?: boolean | ImplantologyArgs
  ortodontics?: boolean | OrtodonticsArgs
  odontogram?: boolean | OdontogramArgs
  dont_know?: boolean | Dont_know_questionsArgs
  dont_know_id?: boolean
  treatment_evolution?: boolean | Treatment_evolutionArgs
  treatment_evolution_id?: boolean
  dentists?: boolean | FindManyDentistArgs
  contactmeans?: boolean
  last_visit_dentist?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
  role?: boolean
  Clinic?: boolean | ClinicArgs
  clinicRegistered_id?: boolean
  Email?: boolean | FindManyEmailArgs
}

export type PatientInclude = {
  clinic?: boolean | ClinicArgs
  schedule?: boolean | ScheduleArgs
  email?: boolean | FindManyEmailArgs
  anamnesis?: boolean | AnamnesisArgs
  implantology?: boolean | ImplantologyArgs
  ortodontics?: boolean | OrtodonticsArgs
  odontogram?: boolean | OdontogramArgs
  dont_know?: boolean | Dont_know_questionsArgs
  treatment_evolution?: boolean | Treatment_evolutionArgs
  dentists?: boolean | FindManyDentistArgs
  Clinic?: boolean | ClinicArgs
  Email?: boolean | FindManyEmailArgs
}

export type PatientGetPayload<
  S extends boolean | null | undefined | PatientArgs,
  U = keyof S
> = S extends true
  ? Patient
  : S extends undefined
  ? never
  : S extends PatientArgs | FindManyPatientArgs
  ? 'include' extends U
    ? Patient  & {
      [P in TrueKeys<S['include']>]:
      P extends 'clinic'
      ? ClinicGetPayload<S['include'][P]> :
      P extends 'schedule'
      ? ScheduleGetPayload<S['include'][P]> | null :
      P extends 'email'
      ? Array<EmailGetPayload<S['include'][P]>> :
      P extends 'anamnesis'
      ? AnamnesisGetPayload<S['include'][P]> | null :
      P extends 'implantology'
      ? ImplantologyGetPayload<S['include'][P]> | null :
      P extends 'ortodontics'
      ? OrtodonticsGetPayload<S['include'][P]> | null :
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> | null :
      P extends 'dont_know'
      ? Dont_know_questionsGetPayload<S['include'][P]> | null :
      P extends 'treatment_evolution'
      ? Treatment_evolutionGetPayload<S['include'][P]> | null :
      P extends 'dentists'
      ? Array<DentistGetPayload<S['include'][P]>> :
      P extends 'Clinic'
      ? ClinicGetPayload<S['include'][P]> | null :
      P extends 'Email'
      ? Array<EmailGetPayload<S['include'][P]>> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Patient ? Patient[P]
: 
      P extends 'clinic'
      ? ClinicGetPayload<S['select'][P]> :
      P extends 'schedule'
      ? ScheduleGetPayload<S['select'][P]> | null :
      P extends 'email'
      ? Array<EmailGetPayload<S['select'][P]>> :
      P extends 'anamnesis'
      ? AnamnesisGetPayload<S['select'][P]> | null :
      P extends 'implantology'
      ? ImplantologyGetPayload<S['select'][P]> | null :
      P extends 'ortodontics'
      ? OrtodonticsGetPayload<S['select'][P]> | null :
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> | null :
      P extends 'dont_know'
      ? Dont_know_questionsGetPayload<S['select'][P]> | null :
      P extends 'treatment_evolution'
      ? Treatment_evolutionGetPayload<S['select'][P]> | null :
      P extends 'dentists'
      ? Array<DentistGetPayload<S['select'][P]>> :
      P extends 'Clinic'
      ? ClinicGetPayload<S['select'][P]> | null :
      P extends 'Email'
      ? Array<EmailGetPayload<S['select'][P]>> : never
    }
  : Patient
: Patient


export interface PatientDelegate {
  /**
   * Find zero or one Patient.
   * @param {FindOnePatientArgs} args - Arguments to find a Patient
   * @example
   * // Get one Patient
   * const patient = await prisma.patient.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOnePatientArgs>(
    args: Subset<T, FindOnePatientArgs>
  ): CheckSelect<T, Prisma__PatientClient<Patient | null>, Prisma__PatientClient<PatientGetPayload<T> | null>>
  /**
   * Find zero or more Patients.
   * @param {FindManyPatientArgs=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Patients
   * const patients = await prisma.patient.findMany()
   * 
   * // Get first 10 Patients
   * const patients = await prisma.patient.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const patientWithIdOnly = await prisma.patient.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyPatientArgs>(
    args?: Subset<T, FindManyPatientArgs>
  ): CheckSelect<T, Promise<Array<Patient>>, Promise<Array<PatientGetPayload<T>>>>
  /**
   * Create a Patient.
   * @param {PatientCreateArgs} args - Arguments to create a Patient.
   * @example
   * // Create one Patient
   * const Patient = await prisma.patient.create({
   *   data: {
   *     // ... data to create a Patient
   *   }
   * })
   * 
  **/
  create<T extends PatientCreateArgs>(
    args: Subset<T, PatientCreateArgs>
  ): CheckSelect<T, Prisma__PatientClient<Patient>, Prisma__PatientClient<PatientGetPayload<T>>>
  /**
   * Delete a Patient.
   * @param {PatientDeleteArgs} args - Arguments to delete one Patient.
   * @example
   * // Delete one Patient
   * const Patient = await prisma.patient.delete({
   *   where: {
   *     // ... filter to delete one Patient
   *   }
   * })
   * 
  **/
  delete<T extends PatientDeleteArgs>(
    args: Subset<T, PatientDeleteArgs>
  ): CheckSelect<T, Prisma__PatientClient<Patient>, Prisma__PatientClient<PatientGetPayload<T>>>
  /**
   * Update one Patient.
   * @param {PatientUpdateArgs} args - Arguments to update one Patient.
   * @example
   * // Update one Patient
   * const patient = await prisma.patient.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends PatientUpdateArgs>(
    args: Subset<T, PatientUpdateArgs>
  ): CheckSelect<T, Prisma__PatientClient<Patient>, Prisma__PatientClient<PatientGetPayload<T>>>
  /**
   * Delete zero or more Patients.
   * @param {PatientDeleteManyArgs} args - Arguments to filter Patients to delete.
   * @example
   * // Delete a few Patients
   * const { count } = await prisma.patient.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends PatientDeleteManyArgs>(
    args: Subset<T, PatientDeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Patients.
   * @param {PatientUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Patients
   * const patient = await prisma.patient.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends PatientUpdateManyArgs>(
    args: Subset<T, PatientUpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Patient.
   * @param {PatientUpsertArgs} args - Arguments to update or create a Patient.
   * @example
   * // Update or create a Patient
   * const patient = await prisma.patient.upsert({
   *   create: {
   *     // ... data to create a Patient
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Patient we want to update
   *   }
   * })
  **/
  upsert<T extends PatientUpsertArgs>(
    args: Subset<T, PatientUpsertArgs>
  ): CheckSelect<T, Prisma__PatientClient<Patient>, Prisma__PatientClient<PatientGetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyPatientArgs, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Patient.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__PatientClient<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  clinic<T extends ClinicArgs = {}>(args?: Subset<T, ClinicArgs>): CheckSelect<T, Prisma__ClinicClient<Clinic | null>, Prisma__ClinicClient<ClinicGetPayload<T> | null>>;

  schedule<T extends ScheduleArgs = {}>(args?: Subset<T, ScheduleArgs>): CheckSelect<T, Prisma__ScheduleClient<Schedule | null>, Prisma__ScheduleClient<ScheduleGetPayload<T> | null>>;

  email<T extends FindManyEmailArgs = {}>(args?: Subset<T, FindManyEmailArgs>): CheckSelect<T, Promise<Array<Email>>, Promise<Array<EmailGetPayload<T>>>>;

  anamnesis<T extends AnamnesisArgs = {}>(args?: Subset<T, AnamnesisArgs>): CheckSelect<T, Prisma__AnamnesisClient<Anamnesis | null>, Prisma__AnamnesisClient<AnamnesisGetPayload<T> | null>>;

  implantology<T extends ImplantologyArgs = {}>(args?: Subset<T, ImplantologyArgs>): CheckSelect<T, Prisma__ImplantologyClient<Implantology | null>, Prisma__ImplantologyClient<ImplantologyGetPayload<T> | null>>;

  ortodontics<T extends OrtodonticsArgs = {}>(args?: Subset<T, OrtodonticsArgs>): CheckSelect<T, Prisma__OrtodonticsClient<Ortodontics | null>, Prisma__OrtodonticsClient<OrtodonticsGetPayload<T> | null>>;

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  dont_know<T extends Dont_know_questionsArgs = {}>(args?: Subset<T, Dont_know_questionsArgs>): CheckSelect<T, Prisma__Dont_know_questionsClient<Dont_know_questions | null>, Prisma__Dont_know_questionsClient<Dont_know_questionsGetPayload<T> | null>>;

  treatment_evolution<T extends Treatment_evolutionArgs = {}>(args?: Subset<T, Treatment_evolutionArgs>): CheckSelect<T, Prisma__Treatment_evolutionClient<Treatment_evolution | null>, Prisma__Treatment_evolutionClient<Treatment_evolutionGetPayload<T> | null>>;

  dentists<T extends FindManyDentistArgs = {}>(args?: Subset<T, FindManyDentistArgs>): CheckSelect<T, Promise<Array<Dentist>>, Promise<Array<DentistGetPayload<T>>>>;

  Clinic<T extends ClinicArgs = {}>(args?: Subset<T, ClinicArgs>): CheckSelect<T, Prisma__ClinicClient<Clinic | null>, Prisma__ClinicClient<ClinicGetPayload<T> | null>>;

  Email<T extends FindManyEmailArgs = {}>(args?: Subset<T, FindManyEmailArgs>): CheckSelect<T, Promise<Array<Email>>, Promise<Array<EmailGetPayload<T>>>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Patient findOne
 */
export type FindOnePatientArgs = {
  /**
   * Select specific fields to fetch from the Patient
  **/
  select?: PatientSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: PatientInclude | null
  /**
   * Filter, which Patient to fetch.
  **/
  where: PatientWhereUniqueInput
}


/**
 * Patient findMany
 */
export type FindManyPatientArgs = {
  /**
   * Select specific fields to fetch from the Patient
  **/
  select?: PatientSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: PatientInclude | null
  /**
   * Filter, which Patients to fetch.
  **/
  where?: PatientWhereInput
  /**
   * Determine the order of the Patients to fetch.
  **/
  orderBy?: PatientOrderByInput
  /**
   * Sets the position for listing Patients.
  **/
  cursor?: PatientWhereUniqueInput
  /**
   * The number of Patients to fetch. If negative number, it will take Patients before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Patients.
  **/
  skip?: number
}


/**
 * Patient create
 */
export type PatientCreateArgs = {
  /**
   * Select specific fields to fetch from the Patient
  **/
  select?: PatientSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: PatientInclude | null
  /**
   * The data needed to create a Patient.
  **/
  data: PatientCreateInput
}


/**
 * Patient update
 */
export type PatientUpdateArgs = {
  /**
   * Select specific fields to fetch from the Patient
  **/
  select?: PatientSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: PatientInclude | null
  /**
   * The data needed to update a Patient.
  **/
  data: PatientUpdateInput
  /**
   * Choose, which Patient to update.
  **/
  where: PatientWhereUniqueInput
}


/**
 * Patient updateMany
 */
export type PatientUpdateManyArgs = {
  data: PatientUpdateManyMutationInput
  where?: PatientWhereInput
}


/**
 * Patient upsert
 */
export type PatientUpsertArgs = {
  /**
   * Select specific fields to fetch from the Patient
  **/
  select?: PatientSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: PatientInclude | null
  /**
   * The filter to search for the Patient to update in case it exists.
  **/
  where: PatientWhereUniqueInput
  /**
   * In case the Patient found by the `where` argument doesn't exist, create a new Patient with this data.
  **/
  create: PatientCreateInput
  /**
   * In case the Patient was found with the provided `where` argument, update it with this data.
  **/
  update: PatientUpdateInput
}


/**
 * Patient delete
 */
export type PatientDeleteArgs = {
  /**
   * Select specific fields to fetch from the Patient
  **/
  select?: PatientSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: PatientInclude | null
  /**
   * Filter which Patient to delete.
  **/
  where: PatientWhereUniqueInput
}


/**
 * Patient deleteMany
 */
export type PatientDeleteManyArgs = {
  where?: PatientWhereInput
}


/**
 * Patient without action
 */
export type PatientArgs = {
  /**
   * Select specific fields to fetch from the Patient
  **/
  select?: PatientSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: PatientInclude | null
}



/**
 * Model Odontogram
 */

export type Odontogram = {
  id: string
  patient_id: string
  PSR_maded: boolean | null
  PSR_date: Date | null
  first_sextant: number | null
  first_sextant_notes: string[]
  second_sextant: number | null
  second_sextant_notes: string[]
  third_sextant: number | null
  third_sextant_notes: string[]
  fourth_sextant: number | null
  fourth_sextant_notes: string[]
  fifth_sextant: number | null
  fifth_sextant_notes: string[]
  sixth_sextant: number | null
  sixth_sextant_notes: string[]
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type OdontogramSelect = {
  id?: boolean
  patient?: boolean | PatientArgs
  patient_id?: boolean
  unit_11?: boolean | Unit11Args
  unit_12?: boolean | Unit12Args
  unit_13?: boolean | Unit13Args
  unit_14?: boolean | Unit14Args
  unit_15?: boolean | Unit15Args
  unit_16?: boolean | Unit16Args
  unit_17?: boolean | Unit17Args
  unit_18?: boolean | Unit18Args
  unit_21?: boolean | Unit21Args
  unit_22?: boolean | Unit22Args
  unit_23?: boolean | Unit23Args
  unit_24?: boolean | Unit24Args
  unit_25?: boolean | Unit25Args
  unit_26?: boolean | Unit26Args
  unit_27?: boolean | Unit27Args
  unit_28?: boolean | Unit28Args
  unit_31?: boolean | Unit31Args
  unit_32?: boolean | Unit32Args
  unit_33?: boolean | Unit33Args
  unit_34?: boolean | Unit34Args
  unit_35?: boolean | Unit35Args
  unit_36?: boolean | Unit36Args
  unit_37?: boolean | Unit37Args
  unit_38?: boolean | Unit38Args
  unit_41?: boolean | Unit41Args
  unit_42?: boolean | Unit42Args
  unit_43?: boolean | Unit43Args
  unit_44?: boolean | Unit44Args
  unit_45?: boolean | Unit45Args
  unit_46?: boolean | Unit46Args
  unit_47?: boolean | Unit47Args
  unit_48?: boolean | Unit48Args
  unit_51?: boolean | Unit51Args
  unit_52?: boolean | Unit52Args
  unit_53?: boolean | Unit53Args
  unit_54?: boolean | Unit54Args
  unit_55?: boolean | Unit55Args
  unit_61?: boolean | Unit61Args
  unit_62?: boolean | Unit62Args
  unit_63?: boolean | Unit63Args
  unit_64?: boolean | Unit64Args
  unit_65?: boolean | Unit65Args
  unit_71?: boolean | Unit71Args
  unit_72?: boolean | Unit72Args
  unit_73?: boolean | Unit73Args
  unit_74?: boolean | Unit74Args
  unit_75?: boolean | Unit75Args
  unit_81?: boolean | Unit81Args
  unit_82?: boolean | Unit82Args
  unit_83?: boolean | Unit83Args
  unit_84?: boolean | Unit84Args
  unit_85?: boolean | Unit85Args
  PSR_maded?: boolean
  PSR_date?: boolean
  first_sextant?: boolean
  first_sextant_notes?: boolean
  second_sextant?: boolean
  second_sextant_notes?: boolean
  third_sextant?: boolean
  third_sextant_notes?: boolean
  fourth_sextant?: boolean
  fourth_sextant_notes?: boolean
  fifth_sextant?: boolean
  fifth_sextant_notes?: boolean
  sixth_sextant?: boolean
  sixth_sextant_notes?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type OdontogramInclude = {
  patient?: boolean | PatientArgs
  unit_11?: boolean | Unit11Args
  unit_12?: boolean | Unit12Args
  unit_13?: boolean | Unit13Args
  unit_14?: boolean | Unit14Args
  unit_15?: boolean | Unit15Args
  unit_16?: boolean | Unit16Args
  unit_17?: boolean | Unit17Args
  unit_18?: boolean | Unit18Args
  unit_21?: boolean | Unit21Args
  unit_22?: boolean | Unit22Args
  unit_23?: boolean | Unit23Args
  unit_24?: boolean | Unit24Args
  unit_25?: boolean | Unit25Args
  unit_26?: boolean | Unit26Args
  unit_27?: boolean | Unit27Args
  unit_28?: boolean | Unit28Args
  unit_31?: boolean | Unit31Args
  unit_32?: boolean | Unit32Args
  unit_33?: boolean | Unit33Args
  unit_34?: boolean | Unit34Args
  unit_35?: boolean | Unit35Args
  unit_36?: boolean | Unit36Args
  unit_37?: boolean | Unit37Args
  unit_38?: boolean | Unit38Args
  unit_41?: boolean | Unit41Args
  unit_42?: boolean | Unit42Args
  unit_43?: boolean | Unit43Args
  unit_44?: boolean | Unit44Args
  unit_45?: boolean | Unit45Args
  unit_46?: boolean | Unit46Args
  unit_47?: boolean | Unit47Args
  unit_48?: boolean | Unit48Args
  unit_51?: boolean | Unit51Args
  unit_52?: boolean | Unit52Args
  unit_53?: boolean | Unit53Args
  unit_54?: boolean | Unit54Args
  unit_55?: boolean | Unit55Args
  unit_61?: boolean | Unit61Args
  unit_62?: boolean | Unit62Args
  unit_63?: boolean | Unit63Args
  unit_64?: boolean | Unit64Args
  unit_65?: boolean | Unit65Args
  unit_71?: boolean | Unit71Args
  unit_72?: boolean | Unit72Args
  unit_73?: boolean | Unit73Args
  unit_74?: boolean | Unit74Args
  unit_75?: boolean | Unit75Args
  unit_81?: boolean | Unit81Args
  unit_82?: boolean | Unit82Args
  unit_83?: boolean | Unit83Args
  unit_84?: boolean | Unit84Args
  unit_85?: boolean | Unit85Args
}

export type OdontogramGetPayload<
  S extends boolean | null | undefined | OdontogramArgs,
  U = keyof S
> = S extends true
  ? Odontogram
  : S extends undefined
  ? never
  : S extends OdontogramArgs | FindManyOdontogramArgs
  ? 'include' extends U
    ? Odontogram  & {
      [P in TrueKeys<S['include']>]:
      P extends 'patient'
      ? PatientGetPayload<S['include'][P]> :
      P extends 'unit_11'
      ? Unit11GetPayload<S['include'][P]> :
      P extends 'unit_12'
      ? Unit12GetPayload<S['include'][P]> :
      P extends 'unit_13'
      ? Unit13GetPayload<S['include'][P]> :
      P extends 'unit_14'
      ? Unit14GetPayload<S['include'][P]> :
      P extends 'unit_15'
      ? Unit15GetPayload<S['include'][P]> :
      P extends 'unit_16'
      ? Unit16GetPayload<S['include'][P]> :
      P extends 'unit_17'
      ? Unit17GetPayload<S['include'][P]> :
      P extends 'unit_18'
      ? Unit18GetPayload<S['include'][P]> :
      P extends 'unit_21'
      ? Unit21GetPayload<S['include'][P]> :
      P extends 'unit_22'
      ? Unit22GetPayload<S['include'][P]> :
      P extends 'unit_23'
      ? Unit23GetPayload<S['include'][P]> :
      P extends 'unit_24'
      ? Unit24GetPayload<S['include'][P]> :
      P extends 'unit_25'
      ? Unit25GetPayload<S['include'][P]> :
      P extends 'unit_26'
      ? Unit26GetPayload<S['include'][P]> :
      P extends 'unit_27'
      ? Unit27GetPayload<S['include'][P]> :
      P extends 'unit_28'
      ? Unit28GetPayload<S['include'][P]> :
      P extends 'unit_31'
      ? Unit31GetPayload<S['include'][P]> :
      P extends 'unit_32'
      ? Unit32GetPayload<S['include'][P]> :
      P extends 'unit_33'
      ? Unit33GetPayload<S['include'][P]> :
      P extends 'unit_34'
      ? Unit34GetPayload<S['include'][P]> :
      P extends 'unit_35'
      ? Unit35GetPayload<S['include'][P]> :
      P extends 'unit_36'
      ? Unit36GetPayload<S['include'][P]> :
      P extends 'unit_37'
      ? Unit37GetPayload<S['include'][P]> :
      P extends 'unit_38'
      ? Unit38GetPayload<S['include'][P]> :
      P extends 'unit_41'
      ? Unit41GetPayload<S['include'][P]> :
      P extends 'unit_42'
      ? Unit42GetPayload<S['include'][P]> :
      P extends 'unit_43'
      ? Unit43GetPayload<S['include'][P]> :
      P extends 'unit_44'
      ? Unit44GetPayload<S['include'][P]> :
      P extends 'unit_45'
      ? Unit45GetPayload<S['include'][P]> :
      P extends 'unit_46'
      ? Unit46GetPayload<S['include'][P]> :
      P extends 'unit_47'
      ? Unit47GetPayload<S['include'][P]> :
      P extends 'unit_48'
      ? Unit48GetPayload<S['include'][P]> :
      P extends 'unit_51'
      ? Unit51GetPayload<S['include'][P]> :
      P extends 'unit_52'
      ? Unit52GetPayload<S['include'][P]> :
      P extends 'unit_53'
      ? Unit53GetPayload<S['include'][P]> :
      P extends 'unit_54'
      ? Unit54GetPayload<S['include'][P]> :
      P extends 'unit_55'
      ? Unit55GetPayload<S['include'][P]> :
      P extends 'unit_61'
      ? Unit61GetPayload<S['include'][P]> :
      P extends 'unit_62'
      ? Unit62GetPayload<S['include'][P]> :
      P extends 'unit_63'
      ? Unit63GetPayload<S['include'][P]> :
      P extends 'unit_64'
      ? Unit64GetPayload<S['include'][P]> :
      P extends 'unit_65'
      ? Unit65GetPayload<S['include'][P]> :
      P extends 'unit_71'
      ? Unit71GetPayload<S['include'][P]> :
      P extends 'unit_72'
      ? Unit72GetPayload<S['include'][P]> :
      P extends 'unit_73'
      ? Unit73GetPayload<S['include'][P]> :
      P extends 'unit_74'
      ? Unit74GetPayload<S['include'][P]> :
      P extends 'unit_75'
      ? Unit75GetPayload<S['include'][P]> :
      P extends 'unit_81'
      ? Unit81GetPayload<S['include'][P]> :
      P extends 'unit_82'
      ? Unit82GetPayload<S['include'][P]> :
      P extends 'unit_83'
      ? Unit83GetPayload<S['include'][P]> :
      P extends 'unit_84'
      ? Unit84GetPayload<S['include'][P]> :
      P extends 'unit_85'
      ? Unit85GetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Odontogram ? Odontogram[P]
: 
      P extends 'patient'
      ? PatientGetPayload<S['select'][P]> :
      P extends 'unit_11'
      ? Unit11GetPayload<S['select'][P]> :
      P extends 'unit_12'
      ? Unit12GetPayload<S['select'][P]> :
      P extends 'unit_13'
      ? Unit13GetPayload<S['select'][P]> :
      P extends 'unit_14'
      ? Unit14GetPayload<S['select'][P]> :
      P extends 'unit_15'
      ? Unit15GetPayload<S['select'][P]> :
      P extends 'unit_16'
      ? Unit16GetPayload<S['select'][P]> :
      P extends 'unit_17'
      ? Unit17GetPayload<S['select'][P]> :
      P extends 'unit_18'
      ? Unit18GetPayload<S['select'][P]> :
      P extends 'unit_21'
      ? Unit21GetPayload<S['select'][P]> :
      P extends 'unit_22'
      ? Unit22GetPayload<S['select'][P]> :
      P extends 'unit_23'
      ? Unit23GetPayload<S['select'][P]> :
      P extends 'unit_24'
      ? Unit24GetPayload<S['select'][P]> :
      P extends 'unit_25'
      ? Unit25GetPayload<S['select'][P]> :
      P extends 'unit_26'
      ? Unit26GetPayload<S['select'][P]> :
      P extends 'unit_27'
      ? Unit27GetPayload<S['select'][P]> :
      P extends 'unit_28'
      ? Unit28GetPayload<S['select'][P]> :
      P extends 'unit_31'
      ? Unit31GetPayload<S['select'][P]> :
      P extends 'unit_32'
      ? Unit32GetPayload<S['select'][P]> :
      P extends 'unit_33'
      ? Unit33GetPayload<S['select'][P]> :
      P extends 'unit_34'
      ? Unit34GetPayload<S['select'][P]> :
      P extends 'unit_35'
      ? Unit35GetPayload<S['select'][P]> :
      P extends 'unit_36'
      ? Unit36GetPayload<S['select'][P]> :
      P extends 'unit_37'
      ? Unit37GetPayload<S['select'][P]> :
      P extends 'unit_38'
      ? Unit38GetPayload<S['select'][P]> :
      P extends 'unit_41'
      ? Unit41GetPayload<S['select'][P]> :
      P extends 'unit_42'
      ? Unit42GetPayload<S['select'][P]> :
      P extends 'unit_43'
      ? Unit43GetPayload<S['select'][P]> :
      P extends 'unit_44'
      ? Unit44GetPayload<S['select'][P]> :
      P extends 'unit_45'
      ? Unit45GetPayload<S['select'][P]> :
      P extends 'unit_46'
      ? Unit46GetPayload<S['select'][P]> :
      P extends 'unit_47'
      ? Unit47GetPayload<S['select'][P]> :
      P extends 'unit_48'
      ? Unit48GetPayload<S['select'][P]> :
      P extends 'unit_51'
      ? Unit51GetPayload<S['select'][P]> :
      P extends 'unit_52'
      ? Unit52GetPayload<S['select'][P]> :
      P extends 'unit_53'
      ? Unit53GetPayload<S['select'][P]> :
      P extends 'unit_54'
      ? Unit54GetPayload<S['select'][P]> :
      P extends 'unit_55'
      ? Unit55GetPayload<S['select'][P]> :
      P extends 'unit_61'
      ? Unit61GetPayload<S['select'][P]> :
      P extends 'unit_62'
      ? Unit62GetPayload<S['select'][P]> :
      P extends 'unit_63'
      ? Unit63GetPayload<S['select'][P]> :
      P extends 'unit_64'
      ? Unit64GetPayload<S['select'][P]> :
      P extends 'unit_65'
      ? Unit65GetPayload<S['select'][P]> :
      P extends 'unit_71'
      ? Unit71GetPayload<S['select'][P]> :
      P extends 'unit_72'
      ? Unit72GetPayload<S['select'][P]> :
      P extends 'unit_73'
      ? Unit73GetPayload<S['select'][P]> :
      P extends 'unit_74'
      ? Unit74GetPayload<S['select'][P]> :
      P extends 'unit_75'
      ? Unit75GetPayload<S['select'][P]> :
      P extends 'unit_81'
      ? Unit81GetPayload<S['select'][P]> :
      P extends 'unit_82'
      ? Unit82GetPayload<S['select'][P]> :
      P extends 'unit_83'
      ? Unit83GetPayload<S['select'][P]> :
      P extends 'unit_84'
      ? Unit84GetPayload<S['select'][P]> :
      P extends 'unit_85'
      ? Unit85GetPayload<S['select'][P]> : never
    }
  : Odontogram
: Odontogram


export interface OdontogramDelegate {
  /**
   * Find zero or one Odontogram.
   * @param {FindOneOdontogramArgs} args - Arguments to find a Odontogram
   * @example
   * // Get one Odontogram
   * const odontogram = await prisma.odontogram.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneOdontogramArgs>(
    args: Subset<T, FindOneOdontogramArgs>
  ): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>
  /**
   * Find zero or more Odontograms.
   * @param {FindManyOdontogramArgs=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Odontograms
   * const odontograms = await prisma.odontogram.findMany()
   * 
   * // Get first 10 Odontograms
   * const odontograms = await prisma.odontogram.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const odontogramWithIdOnly = await prisma.odontogram.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyOdontogramArgs>(
    args?: Subset<T, FindManyOdontogramArgs>
  ): CheckSelect<T, Promise<Array<Odontogram>>, Promise<Array<OdontogramGetPayload<T>>>>
  /**
   * Create a Odontogram.
   * @param {OdontogramCreateArgs} args - Arguments to create a Odontogram.
   * @example
   * // Create one Odontogram
   * const Odontogram = await prisma.odontogram.create({
   *   data: {
   *     // ... data to create a Odontogram
   *   }
   * })
   * 
  **/
  create<T extends OdontogramCreateArgs>(
    args: Subset<T, OdontogramCreateArgs>
  ): CheckSelect<T, Prisma__OdontogramClient<Odontogram>, Prisma__OdontogramClient<OdontogramGetPayload<T>>>
  /**
   * Delete a Odontogram.
   * @param {OdontogramDeleteArgs} args - Arguments to delete one Odontogram.
   * @example
   * // Delete one Odontogram
   * const Odontogram = await prisma.odontogram.delete({
   *   where: {
   *     // ... filter to delete one Odontogram
   *   }
   * })
   * 
  **/
  delete<T extends OdontogramDeleteArgs>(
    args: Subset<T, OdontogramDeleteArgs>
  ): CheckSelect<T, Prisma__OdontogramClient<Odontogram>, Prisma__OdontogramClient<OdontogramGetPayload<T>>>
  /**
   * Update one Odontogram.
   * @param {OdontogramUpdateArgs} args - Arguments to update one Odontogram.
   * @example
   * // Update one Odontogram
   * const odontogram = await prisma.odontogram.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends OdontogramUpdateArgs>(
    args: Subset<T, OdontogramUpdateArgs>
  ): CheckSelect<T, Prisma__OdontogramClient<Odontogram>, Prisma__OdontogramClient<OdontogramGetPayload<T>>>
  /**
   * Delete zero or more Odontograms.
   * @param {OdontogramDeleteManyArgs} args - Arguments to filter Odontograms to delete.
   * @example
   * // Delete a few Odontograms
   * const { count } = await prisma.odontogram.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends OdontogramDeleteManyArgs>(
    args: Subset<T, OdontogramDeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Odontograms.
   * @param {OdontogramUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Odontograms
   * const odontogram = await prisma.odontogram.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends OdontogramUpdateManyArgs>(
    args: Subset<T, OdontogramUpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Odontogram.
   * @param {OdontogramUpsertArgs} args - Arguments to update or create a Odontogram.
   * @example
   * // Update or create a Odontogram
   * const odontogram = await prisma.odontogram.upsert({
   *   create: {
   *     // ... data to create a Odontogram
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Odontogram we want to update
   *   }
   * })
  **/
  upsert<T extends OdontogramUpsertArgs>(
    args: Subset<T, OdontogramUpsertArgs>
  ): CheckSelect<T, Prisma__OdontogramClient<Odontogram>, Prisma__OdontogramClient<OdontogramGetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyOdontogramArgs, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Odontogram.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__OdontogramClient<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  patient<T extends PatientArgs = {}>(args?: Subset<T, PatientArgs>): CheckSelect<T, Prisma__PatientClient<Patient | null>, Prisma__PatientClient<PatientGetPayload<T> | null>>;

  unit_11<T extends Unit11Args = {}>(args?: Subset<T, Unit11Args>): CheckSelect<T, Prisma__Unit11Client<Unit11 | null>, Prisma__Unit11Client<Unit11GetPayload<T> | null>>;

  unit_12<T extends Unit12Args = {}>(args?: Subset<T, Unit12Args>): CheckSelect<T, Prisma__Unit12Client<Unit12 | null>, Prisma__Unit12Client<Unit12GetPayload<T> | null>>;

  unit_13<T extends Unit13Args = {}>(args?: Subset<T, Unit13Args>): CheckSelect<T, Prisma__Unit13Client<Unit13 | null>, Prisma__Unit13Client<Unit13GetPayload<T> | null>>;

  unit_14<T extends Unit14Args = {}>(args?: Subset<T, Unit14Args>): CheckSelect<T, Prisma__Unit14Client<Unit14 | null>, Prisma__Unit14Client<Unit14GetPayload<T> | null>>;

  unit_15<T extends Unit15Args = {}>(args?: Subset<T, Unit15Args>): CheckSelect<T, Prisma__Unit15Client<Unit15 | null>, Prisma__Unit15Client<Unit15GetPayload<T> | null>>;

  unit_16<T extends Unit16Args = {}>(args?: Subset<T, Unit16Args>): CheckSelect<T, Prisma__Unit16Client<Unit16 | null>, Prisma__Unit16Client<Unit16GetPayload<T> | null>>;

  unit_17<T extends Unit17Args = {}>(args?: Subset<T, Unit17Args>): CheckSelect<T, Prisma__Unit17Client<Unit17 | null>, Prisma__Unit17Client<Unit17GetPayload<T> | null>>;

  unit_18<T extends Unit18Args = {}>(args?: Subset<T, Unit18Args>): CheckSelect<T, Prisma__Unit18Client<Unit18 | null>, Prisma__Unit18Client<Unit18GetPayload<T> | null>>;

  unit_21<T extends Unit21Args = {}>(args?: Subset<T, Unit21Args>): CheckSelect<T, Prisma__Unit21Client<Unit21 | null>, Prisma__Unit21Client<Unit21GetPayload<T> | null>>;

  unit_22<T extends Unit22Args = {}>(args?: Subset<T, Unit22Args>): CheckSelect<T, Prisma__Unit22Client<Unit22 | null>, Prisma__Unit22Client<Unit22GetPayload<T> | null>>;

  unit_23<T extends Unit23Args = {}>(args?: Subset<T, Unit23Args>): CheckSelect<T, Prisma__Unit23Client<Unit23 | null>, Prisma__Unit23Client<Unit23GetPayload<T> | null>>;

  unit_24<T extends Unit24Args = {}>(args?: Subset<T, Unit24Args>): CheckSelect<T, Prisma__Unit24Client<Unit24 | null>, Prisma__Unit24Client<Unit24GetPayload<T> | null>>;

  unit_25<T extends Unit25Args = {}>(args?: Subset<T, Unit25Args>): CheckSelect<T, Prisma__Unit25Client<Unit25 | null>, Prisma__Unit25Client<Unit25GetPayload<T> | null>>;

  unit_26<T extends Unit26Args = {}>(args?: Subset<T, Unit26Args>): CheckSelect<T, Prisma__Unit26Client<Unit26 | null>, Prisma__Unit26Client<Unit26GetPayload<T> | null>>;

  unit_27<T extends Unit27Args = {}>(args?: Subset<T, Unit27Args>): CheckSelect<T, Prisma__Unit27Client<Unit27 | null>, Prisma__Unit27Client<Unit27GetPayload<T> | null>>;

  unit_28<T extends Unit28Args = {}>(args?: Subset<T, Unit28Args>): CheckSelect<T, Prisma__Unit28Client<Unit28 | null>, Prisma__Unit28Client<Unit28GetPayload<T> | null>>;

  unit_31<T extends Unit31Args = {}>(args?: Subset<T, Unit31Args>): CheckSelect<T, Prisma__Unit31Client<Unit31 | null>, Prisma__Unit31Client<Unit31GetPayload<T> | null>>;

  unit_32<T extends Unit32Args = {}>(args?: Subset<T, Unit32Args>): CheckSelect<T, Prisma__Unit32Client<Unit32 | null>, Prisma__Unit32Client<Unit32GetPayload<T> | null>>;

  unit_33<T extends Unit33Args = {}>(args?: Subset<T, Unit33Args>): CheckSelect<T, Prisma__Unit33Client<Unit33 | null>, Prisma__Unit33Client<Unit33GetPayload<T> | null>>;

  unit_34<T extends Unit34Args = {}>(args?: Subset<T, Unit34Args>): CheckSelect<T, Prisma__Unit34Client<Unit34 | null>, Prisma__Unit34Client<Unit34GetPayload<T> | null>>;

  unit_35<T extends Unit35Args = {}>(args?: Subset<T, Unit35Args>): CheckSelect<T, Prisma__Unit35Client<Unit35 | null>, Prisma__Unit35Client<Unit35GetPayload<T> | null>>;

  unit_36<T extends Unit36Args = {}>(args?: Subset<T, Unit36Args>): CheckSelect<T, Prisma__Unit36Client<Unit36 | null>, Prisma__Unit36Client<Unit36GetPayload<T> | null>>;

  unit_37<T extends Unit37Args = {}>(args?: Subset<T, Unit37Args>): CheckSelect<T, Prisma__Unit37Client<Unit37 | null>, Prisma__Unit37Client<Unit37GetPayload<T> | null>>;

  unit_38<T extends Unit38Args = {}>(args?: Subset<T, Unit38Args>): CheckSelect<T, Prisma__Unit38Client<Unit38 | null>, Prisma__Unit38Client<Unit38GetPayload<T> | null>>;

  unit_41<T extends Unit41Args = {}>(args?: Subset<T, Unit41Args>): CheckSelect<T, Prisma__Unit41Client<Unit41 | null>, Prisma__Unit41Client<Unit41GetPayload<T> | null>>;

  unit_42<T extends Unit42Args = {}>(args?: Subset<T, Unit42Args>): CheckSelect<T, Prisma__Unit42Client<Unit42 | null>, Prisma__Unit42Client<Unit42GetPayload<T> | null>>;

  unit_43<T extends Unit43Args = {}>(args?: Subset<T, Unit43Args>): CheckSelect<T, Prisma__Unit43Client<Unit43 | null>, Prisma__Unit43Client<Unit43GetPayload<T> | null>>;

  unit_44<T extends Unit44Args = {}>(args?: Subset<T, Unit44Args>): CheckSelect<T, Prisma__Unit44Client<Unit44 | null>, Prisma__Unit44Client<Unit44GetPayload<T> | null>>;

  unit_45<T extends Unit45Args = {}>(args?: Subset<T, Unit45Args>): CheckSelect<T, Prisma__Unit45Client<Unit45 | null>, Prisma__Unit45Client<Unit45GetPayload<T> | null>>;

  unit_46<T extends Unit46Args = {}>(args?: Subset<T, Unit46Args>): CheckSelect<T, Prisma__Unit46Client<Unit46 | null>, Prisma__Unit46Client<Unit46GetPayload<T> | null>>;

  unit_47<T extends Unit47Args = {}>(args?: Subset<T, Unit47Args>): CheckSelect<T, Prisma__Unit47Client<Unit47 | null>, Prisma__Unit47Client<Unit47GetPayload<T> | null>>;

  unit_48<T extends Unit48Args = {}>(args?: Subset<T, Unit48Args>): CheckSelect<T, Prisma__Unit48Client<Unit48 | null>, Prisma__Unit48Client<Unit48GetPayload<T> | null>>;

  unit_51<T extends Unit51Args = {}>(args?: Subset<T, Unit51Args>): CheckSelect<T, Prisma__Unit51Client<Unit51 | null>, Prisma__Unit51Client<Unit51GetPayload<T> | null>>;

  unit_52<T extends Unit52Args = {}>(args?: Subset<T, Unit52Args>): CheckSelect<T, Prisma__Unit52Client<Unit52 | null>, Prisma__Unit52Client<Unit52GetPayload<T> | null>>;

  unit_53<T extends Unit53Args = {}>(args?: Subset<T, Unit53Args>): CheckSelect<T, Prisma__Unit53Client<Unit53 | null>, Prisma__Unit53Client<Unit53GetPayload<T> | null>>;

  unit_54<T extends Unit54Args = {}>(args?: Subset<T, Unit54Args>): CheckSelect<T, Prisma__Unit54Client<Unit54 | null>, Prisma__Unit54Client<Unit54GetPayload<T> | null>>;

  unit_55<T extends Unit55Args = {}>(args?: Subset<T, Unit55Args>): CheckSelect<T, Prisma__Unit55Client<Unit55 | null>, Prisma__Unit55Client<Unit55GetPayload<T> | null>>;

  unit_61<T extends Unit61Args = {}>(args?: Subset<T, Unit61Args>): CheckSelect<T, Prisma__Unit61Client<Unit61 | null>, Prisma__Unit61Client<Unit61GetPayload<T> | null>>;

  unit_62<T extends Unit62Args = {}>(args?: Subset<T, Unit62Args>): CheckSelect<T, Prisma__Unit62Client<Unit62 | null>, Prisma__Unit62Client<Unit62GetPayload<T> | null>>;

  unit_63<T extends Unit63Args = {}>(args?: Subset<T, Unit63Args>): CheckSelect<T, Prisma__Unit63Client<Unit63 | null>, Prisma__Unit63Client<Unit63GetPayload<T> | null>>;

  unit_64<T extends Unit64Args = {}>(args?: Subset<T, Unit64Args>): CheckSelect<T, Prisma__Unit64Client<Unit64 | null>, Prisma__Unit64Client<Unit64GetPayload<T> | null>>;

  unit_65<T extends Unit65Args = {}>(args?: Subset<T, Unit65Args>): CheckSelect<T, Prisma__Unit65Client<Unit65 | null>, Prisma__Unit65Client<Unit65GetPayload<T> | null>>;

  unit_71<T extends Unit71Args = {}>(args?: Subset<T, Unit71Args>): CheckSelect<T, Prisma__Unit71Client<Unit71 | null>, Prisma__Unit71Client<Unit71GetPayload<T> | null>>;

  unit_72<T extends Unit72Args = {}>(args?: Subset<T, Unit72Args>): CheckSelect<T, Prisma__Unit72Client<Unit72 | null>, Prisma__Unit72Client<Unit72GetPayload<T> | null>>;

  unit_73<T extends Unit73Args = {}>(args?: Subset<T, Unit73Args>): CheckSelect<T, Prisma__Unit73Client<Unit73 | null>, Prisma__Unit73Client<Unit73GetPayload<T> | null>>;

  unit_74<T extends Unit74Args = {}>(args?: Subset<T, Unit74Args>): CheckSelect<T, Prisma__Unit74Client<Unit74 | null>, Prisma__Unit74Client<Unit74GetPayload<T> | null>>;

  unit_75<T extends Unit75Args = {}>(args?: Subset<T, Unit75Args>): CheckSelect<T, Prisma__Unit75Client<Unit75 | null>, Prisma__Unit75Client<Unit75GetPayload<T> | null>>;

  unit_81<T extends Unit81Args = {}>(args?: Subset<T, Unit81Args>): CheckSelect<T, Prisma__Unit81Client<Unit81 | null>, Prisma__Unit81Client<Unit81GetPayload<T> | null>>;

  unit_82<T extends Unit82Args = {}>(args?: Subset<T, Unit82Args>): CheckSelect<T, Prisma__Unit82Client<Unit82 | null>, Prisma__Unit82Client<Unit82GetPayload<T> | null>>;

  unit_83<T extends Unit83Args = {}>(args?: Subset<T, Unit83Args>): CheckSelect<T, Prisma__Unit83Client<Unit83 | null>, Prisma__Unit83Client<Unit83GetPayload<T> | null>>;

  unit_84<T extends Unit84Args = {}>(args?: Subset<T, Unit84Args>): CheckSelect<T, Prisma__Unit84Client<Unit84 | null>, Prisma__Unit84Client<Unit84GetPayload<T> | null>>;

  unit_85<T extends Unit85Args = {}>(args?: Subset<T, Unit85Args>): CheckSelect<T, Prisma__Unit85Client<Unit85 | null>, Prisma__Unit85Client<Unit85GetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Odontogram findOne
 */
export type FindOneOdontogramArgs = {
  /**
   * Select specific fields to fetch from the Odontogram
  **/
  select?: OdontogramSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: OdontogramInclude | null
  /**
   * Filter, which Odontogram to fetch.
  **/
  where: OdontogramWhereUniqueInput
}


/**
 * Odontogram findMany
 */
export type FindManyOdontogramArgs = {
  /**
   * Select specific fields to fetch from the Odontogram
  **/
  select?: OdontogramSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: OdontogramInclude | null
  /**
   * Filter, which Odontograms to fetch.
  **/
  where?: OdontogramWhereInput
  /**
   * Determine the order of the Odontograms to fetch.
  **/
  orderBy?: OdontogramOrderByInput
  /**
   * Sets the position for listing Odontograms.
  **/
  cursor?: OdontogramWhereUniqueInput
  /**
   * The number of Odontograms to fetch. If negative number, it will take Odontograms before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Odontograms.
  **/
  skip?: number
}


/**
 * Odontogram create
 */
export type OdontogramCreateArgs = {
  /**
   * Select specific fields to fetch from the Odontogram
  **/
  select?: OdontogramSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: OdontogramInclude | null
  /**
   * The data needed to create a Odontogram.
  **/
  data: OdontogramCreateInput
}


/**
 * Odontogram update
 */
export type OdontogramUpdateArgs = {
  /**
   * Select specific fields to fetch from the Odontogram
  **/
  select?: OdontogramSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: OdontogramInclude | null
  /**
   * The data needed to update a Odontogram.
  **/
  data: OdontogramUpdateInput
  /**
   * Choose, which Odontogram to update.
  **/
  where: OdontogramWhereUniqueInput
}


/**
 * Odontogram updateMany
 */
export type OdontogramUpdateManyArgs = {
  data: OdontogramUpdateManyMutationInput
  where?: OdontogramWhereInput
}


/**
 * Odontogram upsert
 */
export type OdontogramUpsertArgs = {
  /**
   * Select specific fields to fetch from the Odontogram
  **/
  select?: OdontogramSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: OdontogramInclude | null
  /**
   * The filter to search for the Odontogram to update in case it exists.
  **/
  where: OdontogramWhereUniqueInput
  /**
   * In case the Odontogram found by the `where` argument doesn't exist, create a new Odontogram with this data.
  **/
  create: OdontogramCreateInput
  /**
   * In case the Odontogram was found with the provided `where` argument, update it with this data.
  **/
  update: OdontogramUpdateInput
}


/**
 * Odontogram delete
 */
export type OdontogramDeleteArgs = {
  /**
   * Select specific fields to fetch from the Odontogram
  **/
  select?: OdontogramSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: OdontogramInclude | null
  /**
   * Filter which Odontogram to delete.
  **/
  where: OdontogramWhereUniqueInput
}


/**
 * Odontogram deleteMany
 */
export type OdontogramDeleteManyArgs = {
  where?: OdontogramWhereInput
}


/**
 * Odontogram without action
 */
export type OdontogramArgs = {
  /**
   * Select specific fields to fetch from the Odontogram
  **/
  select?: OdontogramSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: OdontogramInclude | null
}



/**
 * Model Unit11
 */

export type Unit11 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit11Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit11Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit11GetPayload<
  S extends boolean | null | undefined | Unit11Args,
  U = keyof S
> = S extends true
  ? Unit11
  : S extends undefined
  ? never
  : S extends Unit11Args | FindManyUnit11Args
  ? 'include' extends U
    ? Unit11  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit11 ? Unit11[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit11
: Unit11


export interface Unit11Delegate {
  /**
   * Find zero or one Unit11.
   * @param {FindOneUnit11Args} args - Arguments to find a Unit11
   * @example
   * // Get one Unit11
   * const unit11 = await prisma.unit11.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit11Args>(
    args: Subset<T, FindOneUnit11Args>
  ): CheckSelect<T, Prisma__Unit11Client<Unit11 | null>, Prisma__Unit11Client<Unit11GetPayload<T> | null>>
  /**
   * Find zero or more Unit11s.
   * @param {FindManyUnit11Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit11s
   * const unit11s = await prisma.unit11.findMany()
   * 
   * // Get first 10 Unit11s
   * const unit11s = await prisma.unit11.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit11WithIdOnly = await prisma.unit11.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit11Args>(
    args?: Subset<T, FindManyUnit11Args>
  ): CheckSelect<T, Promise<Array<Unit11>>, Promise<Array<Unit11GetPayload<T>>>>
  /**
   * Create a Unit11.
   * @param {Unit11CreateArgs} args - Arguments to create a Unit11.
   * @example
   * // Create one Unit11
   * const Unit11 = await prisma.unit11.create({
   *   data: {
   *     // ... data to create a Unit11
   *   }
   * })
   * 
  **/
  create<T extends Unit11CreateArgs>(
    args: Subset<T, Unit11CreateArgs>
  ): CheckSelect<T, Prisma__Unit11Client<Unit11>, Prisma__Unit11Client<Unit11GetPayload<T>>>
  /**
   * Delete a Unit11.
   * @param {Unit11DeleteArgs} args - Arguments to delete one Unit11.
   * @example
   * // Delete one Unit11
   * const Unit11 = await prisma.unit11.delete({
   *   where: {
   *     // ... filter to delete one Unit11
   *   }
   * })
   * 
  **/
  delete<T extends Unit11DeleteArgs>(
    args: Subset<T, Unit11DeleteArgs>
  ): CheckSelect<T, Prisma__Unit11Client<Unit11>, Prisma__Unit11Client<Unit11GetPayload<T>>>
  /**
   * Update one Unit11.
   * @param {Unit11UpdateArgs} args - Arguments to update one Unit11.
   * @example
   * // Update one Unit11
   * const unit11 = await prisma.unit11.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit11UpdateArgs>(
    args: Subset<T, Unit11UpdateArgs>
  ): CheckSelect<T, Prisma__Unit11Client<Unit11>, Prisma__Unit11Client<Unit11GetPayload<T>>>
  /**
   * Delete zero or more Unit11s.
   * @param {Unit11DeleteManyArgs} args - Arguments to filter Unit11s to delete.
   * @example
   * // Delete a few Unit11s
   * const { count } = await prisma.unit11.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit11DeleteManyArgs>(
    args: Subset<T, Unit11DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit11s.
   * @param {Unit11UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit11s
   * const unit11 = await prisma.unit11.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit11UpdateManyArgs>(
    args: Subset<T, Unit11UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit11.
   * @param {Unit11UpsertArgs} args - Arguments to update or create a Unit11.
   * @example
   * // Update or create a Unit11
   * const unit11 = await prisma.unit11.upsert({
   *   create: {
   *     // ... data to create a Unit11
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit11 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit11UpsertArgs>(
    args: Subset<T, Unit11UpsertArgs>
  ): CheckSelect<T, Prisma__Unit11Client<Unit11>, Prisma__Unit11Client<Unit11GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit11Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit11.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit11Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit11 findOne
 */
export type FindOneUnit11Args = {
  /**
   * Select specific fields to fetch from the Unit11
  **/
  select?: Unit11Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit11Include | null
  /**
   * Filter, which Unit11 to fetch.
  **/
  where: Unit11WhereUniqueInput
}


/**
 * Unit11 findMany
 */
export type FindManyUnit11Args = {
  /**
   * Select specific fields to fetch from the Unit11
  **/
  select?: Unit11Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit11Include | null
  /**
   * Filter, which Unit11s to fetch.
  **/
  where?: Unit11WhereInput
  /**
   * Determine the order of the Unit11s to fetch.
  **/
  orderBy?: Unit11OrderByInput
  /**
   * Sets the position for listing Unit11s.
  **/
  cursor?: Unit11WhereUniqueInput
  /**
   * The number of Unit11s to fetch. If negative number, it will take Unit11s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit11s.
  **/
  skip?: number
}


/**
 * Unit11 create
 */
export type Unit11CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit11
  **/
  select?: Unit11Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit11Include | null
  /**
   * The data needed to create a Unit11.
  **/
  data: Unit11CreateInput
}


/**
 * Unit11 update
 */
export type Unit11UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit11
  **/
  select?: Unit11Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit11Include | null
  /**
   * The data needed to update a Unit11.
  **/
  data: Unit11UpdateInput
  /**
   * Choose, which Unit11 to update.
  **/
  where: Unit11WhereUniqueInput
}


/**
 * Unit11 updateMany
 */
export type Unit11UpdateManyArgs = {
  data: Unit11UpdateManyMutationInput
  where?: Unit11WhereInput
}


/**
 * Unit11 upsert
 */
export type Unit11UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit11
  **/
  select?: Unit11Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit11Include | null
  /**
   * The filter to search for the Unit11 to update in case it exists.
  **/
  where: Unit11WhereUniqueInput
  /**
   * In case the Unit11 found by the `where` argument doesn't exist, create a new Unit11 with this data.
  **/
  create: Unit11CreateInput
  /**
   * In case the Unit11 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit11UpdateInput
}


/**
 * Unit11 delete
 */
export type Unit11DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit11
  **/
  select?: Unit11Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit11Include | null
  /**
   * Filter which Unit11 to delete.
  **/
  where: Unit11WhereUniqueInput
}


/**
 * Unit11 deleteMany
 */
export type Unit11DeleteManyArgs = {
  where?: Unit11WhereInput
}


/**
 * Unit11 without action
 */
export type Unit11Args = {
  /**
   * Select specific fields to fetch from the Unit11
  **/
  select?: Unit11Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit11Include | null
}



/**
 * Model Unit12
 */

export type Unit12 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit12Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit12Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit12GetPayload<
  S extends boolean | null | undefined | Unit12Args,
  U = keyof S
> = S extends true
  ? Unit12
  : S extends undefined
  ? never
  : S extends Unit12Args | FindManyUnit12Args
  ? 'include' extends U
    ? Unit12  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit12 ? Unit12[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit12
: Unit12


export interface Unit12Delegate {
  /**
   * Find zero or one Unit12.
   * @param {FindOneUnit12Args} args - Arguments to find a Unit12
   * @example
   * // Get one Unit12
   * const unit12 = await prisma.unit12.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit12Args>(
    args: Subset<T, FindOneUnit12Args>
  ): CheckSelect<T, Prisma__Unit12Client<Unit12 | null>, Prisma__Unit12Client<Unit12GetPayload<T> | null>>
  /**
   * Find zero or more Unit12s.
   * @param {FindManyUnit12Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit12s
   * const unit12s = await prisma.unit12.findMany()
   * 
   * // Get first 10 Unit12s
   * const unit12s = await prisma.unit12.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit12WithIdOnly = await prisma.unit12.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit12Args>(
    args?: Subset<T, FindManyUnit12Args>
  ): CheckSelect<T, Promise<Array<Unit12>>, Promise<Array<Unit12GetPayload<T>>>>
  /**
   * Create a Unit12.
   * @param {Unit12CreateArgs} args - Arguments to create a Unit12.
   * @example
   * // Create one Unit12
   * const Unit12 = await prisma.unit12.create({
   *   data: {
   *     // ... data to create a Unit12
   *   }
   * })
   * 
  **/
  create<T extends Unit12CreateArgs>(
    args: Subset<T, Unit12CreateArgs>
  ): CheckSelect<T, Prisma__Unit12Client<Unit12>, Prisma__Unit12Client<Unit12GetPayload<T>>>
  /**
   * Delete a Unit12.
   * @param {Unit12DeleteArgs} args - Arguments to delete one Unit12.
   * @example
   * // Delete one Unit12
   * const Unit12 = await prisma.unit12.delete({
   *   where: {
   *     // ... filter to delete one Unit12
   *   }
   * })
   * 
  **/
  delete<T extends Unit12DeleteArgs>(
    args: Subset<T, Unit12DeleteArgs>
  ): CheckSelect<T, Prisma__Unit12Client<Unit12>, Prisma__Unit12Client<Unit12GetPayload<T>>>
  /**
   * Update one Unit12.
   * @param {Unit12UpdateArgs} args - Arguments to update one Unit12.
   * @example
   * // Update one Unit12
   * const unit12 = await prisma.unit12.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit12UpdateArgs>(
    args: Subset<T, Unit12UpdateArgs>
  ): CheckSelect<T, Prisma__Unit12Client<Unit12>, Prisma__Unit12Client<Unit12GetPayload<T>>>
  /**
   * Delete zero or more Unit12s.
   * @param {Unit12DeleteManyArgs} args - Arguments to filter Unit12s to delete.
   * @example
   * // Delete a few Unit12s
   * const { count } = await prisma.unit12.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit12DeleteManyArgs>(
    args: Subset<T, Unit12DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit12s.
   * @param {Unit12UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit12s
   * const unit12 = await prisma.unit12.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit12UpdateManyArgs>(
    args: Subset<T, Unit12UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit12.
   * @param {Unit12UpsertArgs} args - Arguments to update or create a Unit12.
   * @example
   * // Update or create a Unit12
   * const unit12 = await prisma.unit12.upsert({
   *   create: {
   *     // ... data to create a Unit12
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit12 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit12UpsertArgs>(
    args: Subset<T, Unit12UpsertArgs>
  ): CheckSelect<T, Prisma__Unit12Client<Unit12>, Prisma__Unit12Client<Unit12GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit12Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit12.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit12Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit12 findOne
 */
export type FindOneUnit12Args = {
  /**
   * Select specific fields to fetch from the Unit12
  **/
  select?: Unit12Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit12Include | null
  /**
   * Filter, which Unit12 to fetch.
  **/
  where: Unit12WhereUniqueInput
}


/**
 * Unit12 findMany
 */
export type FindManyUnit12Args = {
  /**
   * Select specific fields to fetch from the Unit12
  **/
  select?: Unit12Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit12Include | null
  /**
   * Filter, which Unit12s to fetch.
  **/
  where?: Unit12WhereInput
  /**
   * Determine the order of the Unit12s to fetch.
  **/
  orderBy?: Unit12OrderByInput
  /**
   * Sets the position for listing Unit12s.
  **/
  cursor?: Unit12WhereUniqueInput
  /**
   * The number of Unit12s to fetch. If negative number, it will take Unit12s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit12s.
  **/
  skip?: number
}


/**
 * Unit12 create
 */
export type Unit12CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit12
  **/
  select?: Unit12Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit12Include | null
  /**
   * The data needed to create a Unit12.
  **/
  data: Unit12CreateInput
}


/**
 * Unit12 update
 */
export type Unit12UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit12
  **/
  select?: Unit12Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit12Include | null
  /**
   * The data needed to update a Unit12.
  **/
  data: Unit12UpdateInput
  /**
   * Choose, which Unit12 to update.
  **/
  where: Unit12WhereUniqueInput
}


/**
 * Unit12 updateMany
 */
export type Unit12UpdateManyArgs = {
  data: Unit12UpdateManyMutationInput
  where?: Unit12WhereInput
}


/**
 * Unit12 upsert
 */
export type Unit12UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit12
  **/
  select?: Unit12Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit12Include | null
  /**
   * The filter to search for the Unit12 to update in case it exists.
  **/
  where: Unit12WhereUniqueInput
  /**
   * In case the Unit12 found by the `where` argument doesn't exist, create a new Unit12 with this data.
  **/
  create: Unit12CreateInput
  /**
   * In case the Unit12 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit12UpdateInput
}


/**
 * Unit12 delete
 */
export type Unit12DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit12
  **/
  select?: Unit12Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit12Include | null
  /**
   * Filter which Unit12 to delete.
  **/
  where: Unit12WhereUniqueInput
}


/**
 * Unit12 deleteMany
 */
export type Unit12DeleteManyArgs = {
  where?: Unit12WhereInput
}


/**
 * Unit12 without action
 */
export type Unit12Args = {
  /**
   * Select specific fields to fetch from the Unit12
  **/
  select?: Unit12Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit12Include | null
}



/**
 * Model Unit13
 */

export type Unit13 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit13Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit13Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit13GetPayload<
  S extends boolean | null | undefined | Unit13Args,
  U = keyof S
> = S extends true
  ? Unit13
  : S extends undefined
  ? never
  : S extends Unit13Args | FindManyUnit13Args
  ? 'include' extends U
    ? Unit13  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit13 ? Unit13[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit13
: Unit13


export interface Unit13Delegate {
  /**
   * Find zero or one Unit13.
   * @param {FindOneUnit13Args} args - Arguments to find a Unit13
   * @example
   * // Get one Unit13
   * const unit13 = await prisma.unit13.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit13Args>(
    args: Subset<T, FindOneUnit13Args>
  ): CheckSelect<T, Prisma__Unit13Client<Unit13 | null>, Prisma__Unit13Client<Unit13GetPayload<T> | null>>
  /**
   * Find zero or more Unit13s.
   * @param {FindManyUnit13Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit13s
   * const unit13s = await prisma.unit13.findMany()
   * 
   * // Get first 10 Unit13s
   * const unit13s = await prisma.unit13.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit13WithIdOnly = await prisma.unit13.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit13Args>(
    args?: Subset<T, FindManyUnit13Args>
  ): CheckSelect<T, Promise<Array<Unit13>>, Promise<Array<Unit13GetPayload<T>>>>
  /**
   * Create a Unit13.
   * @param {Unit13CreateArgs} args - Arguments to create a Unit13.
   * @example
   * // Create one Unit13
   * const Unit13 = await prisma.unit13.create({
   *   data: {
   *     // ... data to create a Unit13
   *   }
   * })
   * 
  **/
  create<T extends Unit13CreateArgs>(
    args: Subset<T, Unit13CreateArgs>
  ): CheckSelect<T, Prisma__Unit13Client<Unit13>, Prisma__Unit13Client<Unit13GetPayload<T>>>
  /**
   * Delete a Unit13.
   * @param {Unit13DeleteArgs} args - Arguments to delete one Unit13.
   * @example
   * // Delete one Unit13
   * const Unit13 = await prisma.unit13.delete({
   *   where: {
   *     // ... filter to delete one Unit13
   *   }
   * })
   * 
  **/
  delete<T extends Unit13DeleteArgs>(
    args: Subset<T, Unit13DeleteArgs>
  ): CheckSelect<T, Prisma__Unit13Client<Unit13>, Prisma__Unit13Client<Unit13GetPayload<T>>>
  /**
   * Update one Unit13.
   * @param {Unit13UpdateArgs} args - Arguments to update one Unit13.
   * @example
   * // Update one Unit13
   * const unit13 = await prisma.unit13.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit13UpdateArgs>(
    args: Subset<T, Unit13UpdateArgs>
  ): CheckSelect<T, Prisma__Unit13Client<Unit13>, Prisma__Unit13Client<Unit13GetPayload<T>>>
  /**
   * Delete zero or more Unit13s.
   * @param {Unit13DeleteManyArgs} args - Arguments to filter Unit13s to delete.
   * @example
   * // Delete a few Unit13s
   * const { count } = await prisma.unit13.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit13DeleteManyArgs>(
    args: Subset<T, Unit13DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit13s.
   * @param {Unit13UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit13s
   * const unit13 = await prisma.unit13.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit13UpdateManyArgs>(
    args: Subset<T, Unit13UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit13.
   * @param {Unit13UpsertArgs} args - Arguments to update or create a Unit13.
   * @example
   * // Update or create a Unit13
   * const unit13 = await prisma.unit13.upsert({
   *   create: {
   *     // ... data to create a Unit13
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit13 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit13UpsertArgs>(
    args: Subset<T, Unit13UpsertArgs>
  ): CheckSelect<T, Prisma__Unit13Client<Unit13>, Prisma__Unit13Client<Unit13GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit13Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit13.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit13Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit13 findOne
 */
export type FindOneUnit13Args = {
  /**
   * Select specific fields to fetch from the Unit13
  **/
  select?: Unit13Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit13Include | null
  /**
   * Filter, which Unit13 to fetch.
  **/
  where: Unit13WhereUniqueInput
}


/**
 * Unit13 findMany
 */
export type FindManyUnit13Args = {
  /**
   * Select specific fields to fetch from the Unit13
  **/
  select?: Unit13Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit13Include | null
  /**
   * Filter, which Unit13s to fetch.
  **/
  where?: Unit13WhereInput
  /**
   * Determine the order of the Unit13s to fetch.
  **/
  orderBy?: Unit13OrderByInput
  /**
   * Sets the position for listing Unit13s.
  **/
  cursor?: Unit13WhereUniqueInput
  /**
   * The number of Unit13s to fetch. If negative number, it will take Unit13s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit13s.
  **/
  skip?: number
}


/**
 * Unit13 create
 */
export type Unit13CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit13
  **/
  select?: Unit13Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit13Include | null
  /**
   * The data needed to create a Unit13.
  **/
  data: Unit13CreateInput
}


/**
 * Unit13 update
 */
export type Unit13UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit13
  **/
  select?: Unit13Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit13Include | null
  /**
   * The data needed to update a Unit13.
  **/
  data: Unit13UpdateInput
  /**
   * Choose, which Unit13 to update.
  **/
  where: Unit13WhereUniqueInput
}


/**
 * Unit13 updateMany
 */
export type Unit13UpdateManyArgs = {
  data: Unit13UpdateManyMutationInput
  where?: Unit13WhereInput
}


/**
 * Unit13 upsert
 */
export type Unit13UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit13
  **/
  select?: Unit13Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit13Include | null
  /**
   * The filter to search for the Unit13 to update in case it exists.
  **/
  where: Unit13WhereUniqueInput
  /**
   * In case the Unit13 found by the `where` argument doesn't exist, create a new Unit13 with this data.
  **/
  create: Unit13CreateInput
  /**
   * In case the Unit13 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit13UpdateInput
}


/**
 * Unit13 delete
 */
export type Unit13DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit13
  **/
  select?: Unit13Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit13Include | null
  /**
   * Filter which Unit13 to delete.
  **/
  where: Unit13WhereUniqueInput
}


/**
 * Unit13 deleteMany
 */
export type Unit13DeleteManyArgs = {
  where?: Unit13WhereInput
}


/**
 * Unit13 without action
 */
export type Unit13Args = {
  /**
   * Select specific fields to fetch from the Unit13
  **/
  select?: Unit13Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit13Include | null
}



/**
 * Model Unit14
 */

export type Unit14 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit14Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit14Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit14GetPayload<
  S extends boolean | null | undefined | Unit14Args,
  U = keyof S
> = S extends true
  ? Unit14
  : S extends undefined
  ? never
  : S extends Unit14Args | FindManyUnit14Args
  ? 'include' extends U
    ? Unit14  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit14 ? Unit14[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit14
: Unit14


export interface Unit14Delegate {
  /**
   * Find zero or one Unit14.
   * @param {FindOneUnit14Args} args - Arguments to find a Unit14
   * @example
   * // Get one Unit14
   * const unit14 = await prisma.unit14.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit14Args>(
    args: Subset<T, FindOneUnit14Args>
  ): CheckSelect<T, Prisma__Unit14Client<Unit14 | null>, Prisma__Unit14Client<Unit14GetPayload<T> | null>>
  /**
   * Find zero or more Unit14s.
   * @param {FindManyUnit14Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit14s
   * const unit14s = await prisma.unit14.findMany()
   * 
   * // Get first 10 Unit14s
   * const unit14s = await prisma.unit14.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit14WithIdOnly = await prisma.unit14.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit14Args>(
    args?: Subset<T, FindManyUnit14Args>
  ): CheckSelect<T, Promise<Array<Unit14>>, Promise<Array<Unit14GetPayload<T>>>>
  /**
   * Create a Unit14.
   * @param {Unit14CreateArgs} args - Arguments to create a Unit14.
   * @example
   * // Create one Unit14
   * const Unit14 = await prisma.unit14.create({
   *   data: {
   *     // ... data to create a Unit14
   *   }
   * })
   * 
  **/
  create<T extends Unit14CreateArgs>(
    args: Subset<T, Unit14CreateArgs>
  ): CheckSelect<T, Prisma__Unit14Client<Unit14>, Prisma__Unit14Client<Unit14GetPayload<T>>>
  /**
   * Delete a Unit14.
   * @param {Unit14DeleteArgs} args - Arguments to delete one Unit14.
   * @example
   * // Delete one Unit14
   * const Unit14 = await prisma.unit14.delete({
   *   where: {
   *     // ... filter to delete one Unit14
   *   }
   * })
   * 
  **/
  delete<T extends Unit14DeleteArgs>(
    args: Subset<T, Unit14DeleteArgs>
  ): CheckSelect<T, Prisma__Unit14Client<Unit14>, Prisma__Unit14Client<Unit14GetPayload<T>>>
  /**
   * Update one Unit14.
   * @param {Unit14UpdateArgs} args - Arguments to update one Unit14.
   * @example
   * // Update one Unit14
   * const unit14 = await prisma.unit14.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit14UpdateArgs>(
    args: Subset<T, Unit14UpdateArgs>
  ): CheckSelect<T, Prisma__Unit14Client<Unit14>, Prisma__Unit14Client<Unit14GetPayload<T>>>
  /**
   * Delete zero or more Unit14s.
   * @param {Unit14DeleteManyArgs} args - Arguments to filter Unit14s to delete.
   * @example
   * // Delete a few Unit14s
   * const { count } = await prisma.unit14.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit14DeleteManyArgs>(
    args: Subset<T, Unit14DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit14s.
   * @param {Unit14UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit14s
   * const unit14 = await prisma.unit14.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit14UpdateManyArgs>(
    args: Subset<T, Unit14UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit14.
   * @param {Unit14UpsertArgs} args - Arguments to update or create a Unit14.
   * @example
   * // Update or create a Unit14
   * const unit14 = await prisma.unit14.upsert({
   *   create: {
   *     // ... data to create a Unit14
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit14 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit14UpsertArgs>(
    args: Subset<T, Unit14UpsertArgs>
  ): CheckSelect<T, Prisma__Unit14Client<Unit14>, Prisma__Unit14Client<Unit14GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit14Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit14.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit14Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit14 findOne
 */
export type FindOneUnit14Args = {
  /**
   * Select specific fields to fetch from the Unit14
  **/
  select?: Unit14Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit14Include | null
  /**
   * Filter, which Unit14 to fetch.
  **/
  where: Unit14WhereUniqueInput
}


/**
 * Unit14 findMany
 */
export type FindManyUnit14Args = {
  /**
   * Select specific fields to fetch from the Unit14
  **/
  select?: Unit14Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit14Include | null
  /**
   * Filter, which Unit14s to fetch.
  **/
  where?: Unit14WhereInput
  /**
   * Determine the order of the Unit14s to fetch.
  **/
  orderBy?: Unit14OrderByInput
  /**
   * Sets the position for listing Unit14s.
  **/
  cursor?: Unit14WhereUniqueInput
  /**
   * The number of Unit14s to fetch. If negative number, it will take Unit14s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit14s.
  **/
  skip?: number
}


/**
 * Unit14 create
 */
export type Unit14CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit14
  **/
  select?: Unit14Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit14Include | null
  /**
   * The data needed to create a Unit14.
  **/
  data: Unit14CreateInput
}


/**
 * Unit14 update
 */
export type Unit14UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit14
  **/
  select?: Unit14Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit14Include | null
  /**
   * The data needed to update a Unit14.
  **/
  data: Unit14UpdateInput
  /**
   * Choose, which Unit14 to update.
  **/
  where: Unit14WhereUniqueInput
}


/**
 * Unit14 updateMany
 */
export type Unit14UpdateManyArgs = {
  data: Unit14UpdateManyMutationInput
  where?: Unit14WhereInput
}


/**
 * Unit14 upsert
 */
export type Unit14UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit14
  **/
  select?: Unit14Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit14Include | null
  /**
   * The filter to search for the Unit14 to update in case it exists.
  **/
  where: Unit14WhereUniqueInput
  /**
   * In case the Unit14 found by the `where` argument doesn't exist, create a new Unit14 with this data.
  **/
  create: Unit14CreateInput
  /**
   * In case the Unit14 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit14UpdateInput
}


/**
 * Unit14 delete
 */
export type Unit14DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit14
  **/
  select?: Unit14Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit14Include | null
  /**
   * Filter which Unit14 to delete.
  **/
  where: Unit14WhereUniqueInput
}


/**
 * Unit14 deleteMany
 */
export type Unit14DeleteManyArgs = {
  where?: Unit14WhereInput
}


/**
 * Unit14 without action
 */
export type Unit14Args = {
  /**
   * Select specific fields to fetch from the Unit14
  **/
  select?: Unit14Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit14Include | null
}



/**
 * Model Unit15
 */

export type Unit15 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit15Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit15Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit15GetPayload<
  S extends boolean | null | undefined | Unit15Args,
  U = keyof S
> = S extends true
  ? Unit15
  : S extends undefined
  ? never
  : S extends Unit15Args | FindManyUnit15Args
  ? 'include' extends U
    ? Unit15  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit15 ? Unit15[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit15
: Unit15


export interface Unit15Delegate {
  /**
   * Find zero or one Unit15.
   * @param {FindOneUnit15Args} args - Arguments to find a Unit15
   * @example
   * // Get one Unit15
   * const unit15 = await prisma.unit15.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit15Args>(
    args: Subset<T, FindOneUnit15Args>
  ): CheckSelect<T, Prisma__Unit15Client<Unit15 | null>, Prisma__Unit15Client<Unit15GetPayload<T> | null>>
  /**
   * Find zero or more Unit15s.
   * @param {FindManyUnit15Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit15s
   * const unit15s = await prisma.unit15.findMany()
   * 
   * // Get first 10 Unit15s
   * const unit15s = await prisma.unit15.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit15WithIdOnly = await prisma.unit15.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit15Args>(
    args?: Subset<T, FindManyUnit15Args>
  ): CheckSelect<T, Promise<Array<Unit15>>, Promise<Array<Unit15GetPayload<T>>>>
  /**
   * Create a Unit15.
   * @param {Unit15CreateArgs} args - Arguments to create a Unit15.
   * @example
   * // Create one Unit15
   * const Unit15 = await prisma.unit15.create({
   *   data: {
   *     // ... data to create a Unit15
   *   }
   * })
   * 
  **/
  create<T extends Unit15CreateArgs>(
    args: Subset<T, Unit15CreateArgs>
  ): CheckSelect<T, Prisma__Unit15Client<Unit15>, Prisma__Unit15Client<Unit15GetPayload<T>>>
  /**
   * Delete a Unit15.
   * @param {Unit15DeleteArgs} args - Arguments to delete one Unit15.
   * @example
   * // Delete one Unit15
   * const Unit15 = await prisma.unit15.delete({
   *   where: {
   *     // ... filter to delete one Unit15
   *   }
   * })
   * 
  **/
  delete<T extends Unit15DeleteArgs>(
    args: Subset<T, Unit15DeleteArgs>
  ): CheckSelect<T, Prisma__Unit15Client<Unit15>, Prisma__Unit15Client<Unit15GetPayload<T>>>
  /**
   * Update one Unit15.
   * @param {Unit15UpdateArgs} args - Arguments to update one Unit15.
   * @example
   * // Update one Unit15
   * const unit15 = await prisma.unit15.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit15UpdateArgs>(
    args: Subset<T, Unit15UpdateArgs>
  ): CheckSelect<T, Prisma__Unit15Client<Unit15>, Prisma__Unit15Client<Unit15GetPayload<T>>>
  /**
   * Delete zero or more Unit15s.
   * @param {Unit15DeleteManyArgs} args - Arguments to filter Unit15s to delete.
   * @example
   * // Delete a few Unit15s
   * const { count } = await prisma.unit15.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit15DeleteManyArgs>(
    args: Subset<T, Unit15DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit15s.
   * @param {Unit15UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit15s
   * const unit15 = await prisma.unit15.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit15UpdateManyArgs>(
    args: Subset<T, Unit15UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit15.
   * @param {Unit15UpsertArgs} args - Arguments to update or create a Unit15.
   * @example
   * // Update or create a Unit15
   * const unit15 = await prisma.unit15.upsert({
   *   create: {
   *     // ... data to create a Unit15
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit15 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit15UpsertArgs>(
    args: Subset<T, Unit15UpsertArgs>
  ): CheckSelect<T, Prisma__Unit15Client<Unit15>, Prisma__Unit15Client<Unit15GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit15Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit15.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit15Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit15 findOne
 */
export type FindOneUnit15Args = {
  /**
   * Select specific fields to fetch from the Unit15
  **/
  select?: Unit15Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit15Include | null
  /**
   * Filter, which Unit15 to fetch.
  **/
  where: Unit15WhereUniqueInput
}


/**
 * Unit15 findMany
 */
export type FindManyUnit15Args = {
  /**
   * Select specific fields to fetch from the Unit15
  **/
  select?: Unit15Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit15Include | null
  /**
   * Filter, which Unit15s to fetch.
  **/
  where?: Unit15WhereInput
  /**
   * Determine the order of the Unit15s to fetch.
  **/
  orderBy?: Unit15OrderByInput
  /**
   * Sets the position for listing Unit15s.
  **/
  cursor?: Unit15WhereUniqueInput
  /**
   * The number of Unit15s to fetch. If negative number, it will take Unit15s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit15s.
  **/
  skip?: number
}


/**
 * Unit15 create
 */
export type Unit15CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit15
  **/
  select?: Unit15Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit15Include | null
  /**
   * The data needed to create a Unit15.
  **/
  data: Unit15CreateInput
}


/**
 * Unit15 update
 */
export type Unit15UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit15
  **/
  select?: Unit15Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit15Include | null
  /**
   * The data needed to update a Unit15.
  **/
  data: Unit15UpdateInput
  /**
   * Choose, which Unit15 to update.
  **/
  where: Unit15WhereUniqueInput
}


/**
 * Unit15 updateMany
 */
export type Unit15UpdateManyArgs = {
  data: Unit15UpdateManyMutationInput
  where?: Unit15WhereInput
}


/**
 * Unit15 upsert
 */
export type Unit15UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit15
  **/
  select?: Unit15Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit15Include | null
  /**
   * The filter to search for the Unit15 to update in case it exists.
  **/
  where: Unit15WhereUniqueInput
  /**
   * In case the Unit15 found by the `where` argument doesn't exist, create a new Unit15 with this data.
  **/
  create: Unit15CreateInput
  /**
   * In case the Unit15 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit15UpdateInput
}


/**
 * Unit15 delete
 */
export type Unit15DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit15
  **/
  select?: Unit15Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit15Include | null
  /**
   * Filter which Unit15 to delete.
  **/
  where: Unit15WhereUniqueInput
}


/**
 * Unit15 deleteMany
 */
export type Unit15DeleteManyArgs = {
  where?: Unit15WhereInput
}


/**
 * Unit15 without action
 */
export type Unit15Args = {
  /**
   * Select specific fields to fetch from the Unit15
  **/
  select?: Unit15Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit15Include | null
}



/**
 * Model Unit16
 */

export type Unit16 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit16Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit16Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit16GetPayload<
  S extends boolean | null | undefined | Unit16Args,
  U = keyof S
> = S extends true
  ? Unit16
  : S extends undefined
  ? never
  : S extends Unit16Args | FindManyUnit16Args
  ? 'include' extends U
    ? Unit16  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit16 ? Unit16[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit16
: Unit16


export interface Unit16Delegate {
  /**
   * Find zero or one Unit16.
   * @param {FindOneUnit16Args} args - Arguments to find a Unit16
   * @example
   * // Get one Unit16
   * const unit16 = await prisma.unit16.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit16Args>(
    args: Subset<T, FindOneUnit16Args>
  ): CheckSelect<T, Prisma__Unit16Client<Unit16 | null>, Prisma__Unit16Client<Unit16GetPayload<T> | null>>
  /**
   * Find zero or more Unit16s.
   * @param {FindManyUnit16Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit16s
   * const unit16s = await prisma.unit16.findMany()
   * 
   * // Get first 10 Unit16s
   * const unit16s = await prisma.unit16.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit16WithIdOnly = await prisma.unit16.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit16Args>(
    args?: Subset<T, FindManyUnit16Args>
  ): CheckSelect<T, Promise<Array<Unit16>>, Promise<Array<Unit16GetPayload<T>>>>
  /**
   * Create a Unit16.
   * @param {Unit16CreateArgs} args - Arguments to create a Unit16.
   * @example
   * // Create one Unit16
   * const Unit16 = await prisma.unit16.create({
   *   data: {
   *     // ... data to create a Unit16
   *   }
   * })
   * 
  **/
  create<T extends Unit16CreateArgs>(
    args: Subset<T, Unit16CreateArgs>
  ): CheckSelect<T, Prisma__Unit16Client<Unit16>, Prisma__Unit16Client<Unit16GetPayload<T>>>
  /**
   * Delete a Unit16.
   * @param {Unit16DeleteArgs} args - Arguments to delete one Unit16.
   * @example
   * // Delete one Unit16
   * const Unit16 = await prisma.unit16.delete({
   *   where: {
   *     // ... filter to delete one Unit16
   *   }
   * })
   * 
  **/
  delete<T extends Unit16DeleteArgs>(
    args: Subset<T, Unit16DeleteArgs>
  ): CheckSelect<T, Prisma__Unit16Client<Unit16>, Prisma__Unit16Client<Unit16GetPayload<T>>>
  /**
   * Update one Unit16.
   * @param {Unit16UpdateArgs} args - Arguments to update one Unit16.
   * @example
   * // Update one Unit16
   * const unit16 = await prisma.unit16.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit16UpdateArgs>(
    args: Subset<T, Unit16UpdateArgs>
  ): CheckSelect<T, Prisma__Unit16Client<Unit16>, Prisma__Unit16Client<Unit16GetPayload<T>>>
  /**
   * Delete zero or more Unit16s.
   * @param {Unit16DeleteManyArgs} args - Arguments to filter Unit16s to delete.
   * @example
   * // Delete a few Unit16s
   * const { count } = await prisma.unit16.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit16DeleteManyArgs>(
    args: Subset<T, Unit16DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit16s.
   * @param {Unit16UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit16s
   * const unit16 = await prisma.unit16.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit16UpdateManyArgs>(
    args: Subset<T, Unit16UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit16.
   * @param {Unit16UpsertArgs} args - Arguments to update or create a Unit16.
   * @example
   * // Update or create a Unit16
   * const unit16 = await prisma.unit16.upsert({
   *   create: {
   *     // ... data to create a Unit16
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit16 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit16UpsertArgs>(
    args: Subset<T, Unit16UpsertArgs>
  ): CheckSelect<T, Prisma__Unit16Client<Unit16>, Prisma__Unit16Client<Unit16GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit16Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit16.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit16Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit16 findOne
 */
export type FindOneUnit16Args = {
  /**
   * Select specific fields to fetch from the Unit16
  **/
  select?: Unit16Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit16Include | null
  /**
   * Filter, which Unit16 to fetch.
  **/
  where: Unit16WhereUniqueInput
}


/**
 * Unit16 findMany
 */
export type FindManyUnit16Args = {
  /**
   * Select specific fields to fetch from the Unit16
  **/
  select?: Unit16Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit16Include | null
  /**
   * Filter, which Unit16s to fetch.
  **/
  where?: Unit16WhereInput
  /**
   * Determine the order of the Unit16s to fetch.
  **/
  orderBy?: Unit16OrderByInput
  /**
   * Sets the position for listing Unit16s.
  **/
  cursor?: Unit16WhereUniqueInput
  /**
   * The number of Unit16s to fetch. If negative number, it will take Unit16s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit16s.
  **/
  skip?: number
}


/**
 * Unit16 create
 */
export type Unit16CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit16
  **/
  select?: Unit16Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit16Include | null
  /**
   * The data needed to create a Unit16.
  **/
  data: Unit16CreateInput
}


/**
 * Unit16 update
 */
export type Unit16UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit16
  **/
  select?: Unit16Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit16Include | null
  /**
   * The data needed to update a Unit16.
  **/
  data: Unit16UpdateInput
  /**
   * Choose, which Unit16 to update.
  **/
  where: Unit16WhereUniqueInput
}


/**
 * Unit16 updateMany
 */
export type Unit16UpdateManyArgs = {
  data: Unit16UpdateManyMutationInput
  where?: Unit16WhereInput
}


/**
 * Unit16 upsert
 */
export type Unit16UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit16
  **/
  select?: Unit16Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit16Include | null
  /**
   * The filter to search for the Unit16 to update in case it exists.
  **/
  where: Unit16WhereUniqueInput
  /**
   * In case the Unit16 found by the `where` argument doesn't exist, create a new Unit16 with this data.
  **/
  create: Unit16CreateInput
  /**
   * In case the Unit16 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit16UpdateInput
}


/**
 * Unit16 delete
 */
export type Unit16DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit16
  **/
  select?: Unit16Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit16Include | null
  /**
   * Filter which Unit16 to delete.
  **/
  where: Unit16WhereUniqueInput
}


/**
 * Unit16 deleteMany
 */
export type Unit16DeleteManyArgs = {
  where?: Unit16WhereInput
}


/**
 * Unit16 without action
 */
export type Unit16Args = {
  /**
   * Select specific fields to fetch from the Unit16
  **/
  select?: Unit16Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit16Include | null
}



/**
 * Model Unit17
 */

export type Unit17 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit17Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit17Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit17GetPayload<
  S extends boolean | null | undefined | Unit17Args,
  U = keyof S
> = S extends true
  ? Unit17
  : S extends undefined
  ? never
  : S extends Unit17Args | FindManyUnit17Args
  ? 'include' extends U
    ? Unit17  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit17 ? Unit17[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit17
: Unit17


export interface Unit17Delegate {
  /**
   * Find zero or one Unit17.
   * @param {FindOneUnit17Args} args - Arguments to find a Unit17
   * @example
   * // Get one Unit17
   * const unit17 = await prisma.unit17.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit17Args>(
    args: Subset<T, FindOneUnit17Args>
  ): CheckSelect<T, Prisma__Unit17Client<Unit17 | null>, Prisma__Unit17Client<Unit17GetPayload<T> | null>>
  /**
   * Find zero or more Unit17s.
   * @param {FindManyUnit17Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit17s
   * const unit17s = await prisma.unit17.findMany()
   * 
   * // Get first 10 Unit17s
   * const unit17s = await prisma.unit17.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit17WithIdOnly = await prisma.unit17.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit17Args>(
    args?: Subset<T, FindManyUnit17Args>
  ): CheckSelect<T, Promise<Array<Unit17>>, Promise<Array<Unit17GetPayload<T>>>>
  /**
   * Create a Unit17.
   * @param {Unit17CreateArgs} args - Arguments to create a Unit17.
   * @example
   * // Create one Unit17
   * const Unit17 = await prisma.unit17.create({
   *   data: {
   *     // ... data to create a Unit17
   *   }
   * })
   * 
  **/
  create<T extends Unit17CreateArgs>(
    args: Subset<T, Unit17CreateArgs>
  ): CheckSelect<T, Prisma__Unit17Client<Unit17>, Prisma__Unit17Client<Unit17GetPayload<T>>>
  /**
   * Delete a Unit17.
   * @param {Unit17DeleteArgs} args - Arguments to delete one Unit17.
   * @example
   * // Delete one Unit17
   * const Unit17 = await prisma.unit17.delete({
   *   where: {
   *     // ... filter to delete one Unit17
   *   }
   * })
   * 
  **/
  delete<T extends Unit17DeleteArgs>(
    args: Subset<T, Unit17DeleteArgs>
  ): CheckSelect<T, Prisma__Unit17Client<Unit17>, Prisma__Unit17Client<Unit17GetPayload<T>>>
  /**
   * Update one Unit17.
   * @param {Unit17UpdateArgs} args - Arguments to update one Unit17.
   * @example
   * // Update one Unit17
   * const unit17 = await prisma.unit17.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit17UpdateArgs>(
    args: Subset<T, Unit17UpdateArgs>
  ): CheckSelect<T, Prisma__Unit17Client<Unit17>, Prisma__Unit17Client<Unit17GetPayload<T>>>
  /**
   * Delete zero or more Unit17s.
   * @param {Unit17DeleteManyArgs} args - Arguments to filter Unit17s to delete.
   * @example
   * // Delete a few Unit17s
   * const { count } = await prisma.unit17.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit17DeleteManyArgs>(
    args: Subset<T, Unit17DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit17s.
   * @param {Unit17UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit17s
   * const unit17 = await prisma.unit17.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit17UpdateManyArgs>(
    args: Subset<T, Unit17UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit17.
   * @param {Unit17UpsertArgs} args - Arguments to update or create a Unit17.
   * @example
   * // Update or create a Unit17
   * const unit17 = await prisma.unit17.upsert({
   *   create: {
   *     // ... data to create a Unit17
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit17 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit17UpsertArgs>(
    args: Subset<T, Unit17UpsertArgs>
  ): CheckSelect<T, Prisma__Unit17Client<Unit17>, Prisma__Unit17Client<Unit17GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit17Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit17.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit17Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit17 findOne
 */
export type FindOneUnit17Args = {
  /**
   * Select specific fields to fetch from the Unit17
  **/
  select?: Unit17Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit17Include | null
  /**
   * Filter, which Unit17 to fetch.
  **/
  where: Unit17WhereUniqueInput
}


/**
 * Unit17 findMany
 */
export type FindManyUnit17Args = {
  /**
   * Select specific fields to fetch from the Unit17
  **/
  select?: Unit17Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit17Include | null
  /**
   * Filter, which Unit17s to fetch.
  **/
  where?: Unit17WhereInput
  /**
   * Determine the order of the Unit17s to fetch.
  **/
  orderBy?: Unit17OrderByInput
  /**
   * Sets the position for listing Unit17s.
  **/
  cursor?: Unit17WhereUniqueInput
  /**
   * The number of Unit17s to fetch. If negative number, it will take Unit17s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit17s.
  **/
  skip?: number
}


/**
 * Unit17 create
 */
export type Unit17CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit17
  **/
  select?: Unit17Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit17Include | null
  /**
   * The data needed to create a Unit17.
  **/
  data: Unit17CreateInput
}


/**
 * Unit17 update
 */
export type Unit17UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit17
  **/
  select?: Unit17Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit17Include | null
  /**
   * The data needed to update a Unit17.
  **/
  data: Unit17UpdateInput
  /**
   * Choose, which Unit17 to update.
  **/
  where: Unit17WhereUniqueInput
}


/**
 * Unit17 updateMany
 */
export type Unit17UpdateManyArgs = {
  data: Unit17UpdateManyMutationInput
  where?: Unit17WhereInput
}


/**
 * Unit17 upsert
 */
export type Unit17UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit17
  **/
  select?: Unit17Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit17Include | null
  /**
   * The filter to search for the Unit17 to update in case it exists.
  **/
  where: Unit17WhereUniqueInput
  /**
   * In case the Unit17 found by the `where` argument doesn't exist, create a new Unit17 with this data.
  **/
  create: Unit17CreateInput
  /**
   * In case the Unit17 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit17UpdateInput
}


/**
 * Unit17 delete
 */
export type Unit17DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit17
  **/
  select?: Unit17Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit17Include | null
  /**
   * Filter which Unit17 to delete.
  **/
  where: Unit17WhereUniqueInput
}


/**
 * Unit17 deleteMany
 */
export type Unit17DeleteManyArgs = {
  where?: Unit17WhereInput
}


/**
 * Unit17 without action
 */
export type Unit17Args = {
  /**
   * Select specific fields to fetch from the Unit17
  **/
  select?: Unit17Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit17Include | null
}



/**
 * Model Unit18
 */

export type Unit18 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit18Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit18Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit18GetPayload<
  S extends boolean | null | undefined | Unit18Args,
  U = keyof S
> = S extends true
  ? Unit18
  : S extends undefined
  ? never
  : S extends Unit18Args | FindManyUnit18Args
  ? 'include' extends U
    ? Unit18  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit18 ? Unit18[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit18
: Unit18


export interface Unit18Delegate {
  /**
   * Find zero or one Unit18.
   * @param {FindOneUnit18Args} args - Arguments to find a Unit18
   * @example
   * // Get one Unit18
   * const unit18 = await prisma.unit18.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit18Args>(
    args: Subset<T, FindOneUnit18Args>
  ): CheckSelect<T, Prisma__Unit18Client<Unit18 | null>, Prisma__Unit18Client<Unit18GetPayload<T> | null>>
  /**
   * Find zero or more Unit18s.
   * @param {FindManyUnit18Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit18s
   * const unit18s = await prisma.unit18.findMany()
   * 
   * // Get first 10 Unit18s
   * const unit18s = await prisma.unit18.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit18WithIdOnly = await prisma.unit18.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit18Args>(
    args?: Subset<T, FindManyUnit18Args>
  ): CheckSelect<T, Promise<Array<Unit18>>, Promise<Array<Unit18GetPayload<T>>>>
  /**
   * Create a Unit18.
   * @param {Unit18CreateArgs} args - Arguments to create a Unit18.
   * @example
   * // Create one Unit18
   * const Unit18 = await prisma.unit18.create({
   *   data: {
   *     // ... data to create a Unit18
   *   }
   * })
   * 
  **/
  create<T extends Unit18CreateArgs>(
    args: Subset<T, Unit18CreateArgs>
  ): CheckSelect<T, Prisma__Unit18Client<Unit18>, Prisma__Unit18Client<Unit18GetPayload<T>>>
  /**
   * Delete a Unit18.
   * @param {Unit18DeleteArgs} args - Arguments to delete one Unit18.
   * @example
   * // Delete one Unit18
   * const Unit18 = await prisma.unit18.delete({
   *   where: {
   *     // ... filter to delete one Unit18
   *   }
   * })
   * 
  **/
  delete<T extends Unit18DeleteArgs>(
    args: Subset<T, Unit18DeleteArgs>
  ): CheckSelect<T, Prisma__Unit18Client<Unit18>, Prisma__Unit18Client<Unit18GetPayload<T>>>
  /**
   * Update one Unit18.
   * @param {Unit18UpdateArgs} args - Arguments to update one Unit18.
   * @example
   * // Update one Unit18
   * const unit18 = await prisma.unit18.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit18UpdateArgs>(
    args: Subset<T, Unit18UpdateArgs>
  ): CheckSelect<T, Prisma__Unit18Client<Unit18>, Prisma__Unit18Client<Unit18GetPayload<T>>>
  /**
   * Delete zero or more Unit18s.
   * @param {Unit18DeleteManyArgs} args - Arguments to filter Unit18s to delete.
   * @example
   * // Delete a few Unit18s
   * const { count } = await prisma.unit18.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit18DeleteManyArgs>(
    args: Subset<T, Unit18DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit18s.
   * @param {Unit18UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit18s
   * const unit18 = await prisma.unit18.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit18UpdateManyArgs>(
    args: Subset<T, Unit18UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit18.
   * @param {Unit18UpsertArgs} args - Arguments to update or create a Unit18.
   * @example
   * // Update or create a Unit18
   * const unit18 = await prisma.unit18.upsert({
   *   create: {
   *     // ... data to create a Unit18
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit18 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit18UpsertArgs>(
    args: Subset<T, Unit18UpsertArgs>
  ): CheckSelect<T, Prisma__Unit18Client<Unit18>, Prisma__Unit18Client<Unit18GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit18Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit18.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit18Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit18 findOne
 */
export type FindOneUnit18Args = {
  /**
   * Select specific fields to fetch from the Unit18
  **/
  select?: Unit18Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit18Include | null
  /**
   * Filter, which Unit18 to fetch.
  **/
  where: Unit18WhereUniqueInput
}


/**
 * Unit18 findMany
 */
export type FindManyUnit18Args = {
  /**
   * Select specific fields to fetch from the Unit18
  **/
  select?: Unit18Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit18Include | null
  /**
   * Filter, which Unit18s to fetch.
  **/
  where?: Unit18WhereInput
  /**
   * Determine the order of the Unit18s to fetch.
  **/
  orderBy?: Unit18OrderByInput
  /**
   * Sets the position for listing Unit18s.
  **/
  cursor?: Unit18WhereUniqueInput
  /**
   * The number of Unit18s to fetch. If negative number, it will take Unit18s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit18s.
  **/
  skip?: number
}


/**
 * Unit18 create
 */
export type Unit18CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit18
  **/
  select?: Unit18Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit18Include | null
  /**
   * The data needed to create a Unit18.
  **/
  data: Unit18CreateInput
}


/**
 * Unit18 update
 */
export type Unit18UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit18
  **/
  select?: Unit18Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit18Include | null
  /**
   * The data needed to update a Unit18.
  **/
  data: Unit18UpdateInput
  /**
   * Choose, which Unit18 to update.
  **/
  where: Unit18WhereUniqueInput
}


/**
 * Unit18 updateMany
 */
export type Unit18UpdateManyArgs = {
  data: Unit18UpdateManyMutationInput
  where?: Unit18WhereInput
}


/**
 * Unit18 upsert
 */
export type Unit18UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit18
  **/
  select?: Unit18Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit18Include | null
  /**
   * The filter to search for the Unit18 to update in case it exists.
  **/
  where: Unit18WhereUniqueInput
  /**
   * In case the Unit18 found by the `where` argument doesn't exist, create a new Unit18 with this data.
  **/
  create: Unit18CreateInput
  /**
   * In case the Unit18 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit18UpdateInput
}


/**
 * Unit18 delete
 */
export type Unit18DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit18
  **/
  select?: Unit18Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit18Include | null
  /**
   * Filter which Unit18 to delete.
  **/
  where: Unit18WhereUniqueInput
}


/**
 * Unit18 deleteMany
 */
export type Unit18DeleteManyArgs = {
  where?: Unit18WhereInput
}


/**
 * Unit18 without action
 */
export type Unit18Args = {
  /**
   * Select specific fields to fetch from the Unit18
  **/
  select?: Unit18Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit18Include | null
}



/**
 * Model Unit21
 */

export type Unit21 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit21Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit21Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit21GetPayload<
  S extends boolean | null | undefined | Unit21Args,
  U = keyof S
> = S extends true
  ? Unit21
  : S extends undefined
  ? never
  : S extends Unit21Args | FindManyUnit21Args
  ? 'include' extends U
    ? Unit21  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit21 ? Unit21[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit21
: Unit21


export interface Unit21Delegate {
  /**
   * Find zero or one Unit21.
   * @param {FindOneUnit21Args} args - Arguments to find a Unit21
   * @example
   * // Get one Unit21
   * const unit21 = await prisma.unit21.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit21Args>(
    args: Subset<T, FindOneUnit21Args>
  ): CheckSelect<T, Prisma__Unit21Client<Unit21 | null>, Prisma__Unit21Client<Unit21GetPayload<T> | null>>
  /**
   * Find zero or more Unit21s.
   * @param {FindManyUnit21Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit21s
   * const unit21s = await prisma.unit21.findMany()
   * 
   * // Get first 10 Unit21s
   * const unit21s = await prisma.unit21.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit21WithIdOnly = await prisma.unit21.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit21Args>(
    args?: Subset<T, FindManyUnit21Args>
  ): CheckSelect<T, Promise<Array<Unit21>>, Promise<Array<Unit21GetPayload<T>>>>
  /**
   * Create a Unit21.
   * @param {Unit21CreateArgs} args - Arguments to create a Unit21.
   * @example
   * // Create one Unit21
   * const Unit21 = await prisma.unit21.create({
   *   data: {
   *     // ... data to create a Unit21
   *   }
   * })
   * 
  **/
  create<T extends Unit21CreateArgs>(
    args: Subset<T, Unit21CreateArgs>
  ): CheckSelect<T, Prisma__Unit21Client<Unit21>, Prisma__Unit21Client<Unit21GetPayload<T>>>
  /**
   * Delete a Unit21.
   * @param {Unit21DeleteArgs} args - Arguments to delete one Unit21.
   * @example
   * // Delete one Unit21
   * const Unit21 = await prisma.unit21.delete({
   *   where: {
   *     // ... filter to delete one Unit21
   *   }
   * })
   * 
  **/
  delete<T extends Unit21DeleteArgs>(
    args: Subset<T, Unit21DeleteArgs>
  ): CheckSelect<T, Prisma__Unit21Client<Unit21>, Prisma__Unit21Client<Unit21GetPayload<T>>>
  /**
   * Update one Unit21.
   * @param {Unit21UpdateArgs} args - Arguments to update one Unit21.
   * @example
   * // Update one Unit21
   * const unit21 = await prisma.unit21.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit21UpdateArgs>(
    args: Subset<T, Unit21UpdateArgs>
  ): CheckSelect<T, Prisma__Unit21Client<Unit21>, Prisma__Unit21Client<Unit21GetPayload<T>>>
  /**
   * Delete zero or more Unit21s.
   * @param {Unit21DeleteManyArgs} args - Arguments to filter Unit21s to delete.
   * @example
   * // Delete a few Unit21s
   * const { count } = await prisma.unit21.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit21DeleteManyArgs>(
    args: Subset<T, Unit21DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit21s.
   * @param {Unit21UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit21s
   * const unit21 = await prisma.unit21.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit21UpdateManyArgs>(
    args: Subset<T, Unit21UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit21.
   * @param {Unit21UpsertArgs} args - Arguments to update or create a Unit21.
   * @example
   * // Update or create a Unit21
   * const unit21 = await prisma.unit21.upsert({
   *   create: {
   *     // ... data to create a Unit21
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit21 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit21UpsertArgs>(
    args: Subset<T, Unit21UpsertArgs>
  ): CheckSelect<T, Prisma__Unit21Client<Unit21>, Prisma__Unit21Client<Unit21GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit21Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit21.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit21Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit21 findOne
 */
export type FindOneUnit21Args = {
  /**
   * Select specific fields to fetch from the Unit21
  **/
  select?: Unit21Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit21Include | null
  /**
   * Filter, which Unit21 to fetch.
  **/
  where: Unit21WhereUniqueInput
}


/**
 * Unit21 findMany
 */
export type FindManyUnit21Args = {
  /**
   * Select specific fields to fetch from the Unit21
  **/
  select?: Unit21Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit21Include | null
  /**
   * Filter, which Unit21s to fetch.
  **/
  where?: Unit21WhereInput
  /**
   * Determine the order of the Unit21s to fetch.
  **/
  orderBy?: Unit21OrderByInput
  /**
   * Sets the position for listing Unit21s.
  **/
  cursor?: Unit21WhereUniqueInput
  /**
   * The number of Unit21s to fetch. If negative number, it will take Unit21s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit21s.
  **/
  skip?: number
}


/**
 * Unit21 create
 */
export type Unit21CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit21
  **/
  select?: Unit21Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit21Include | null
  /**
   * The data needed to create a Unit21.
  **/
  data: Unit21CreateInput
}


/**
 * Unit21 update
 */
export type Unit21UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit21
  **/
  select?: Unit21Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit21Include | null
  /**
   * The data needed to update a Unit21.
  **/
  data: Unit21UpdateInput
  /**
   * Choose, which Unit21 to update.
  **/
  where: Unit21WhereUniqueInput
}


/**
 * Unit21 updateMany
 */
export type Unit21UpdateManyArgs = {
  data: Unit21UpdateManyMutationInput
  where?: Unit21WhereInput
}


/**
 * Unit21 upsert
 */
export type Unit21UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit21
  **/
  select?: Unit21Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit21Include | null
  /**
   * The filter to search for the Unit21 to update in case it exists.
  **/
  where: Unit21WhereUniqueInput
  /**
   * In case the Unit21 found by the `where` argument doesn't exist, create a new Unit21 with this data.
  **/
  create: Unit21CreateInput
  /**
   * In case the Unit21 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit21UpdateInput
}


/**
 * Unit21 delete
 */
export type Unit21DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit21
  **/
  select?: Unit21Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit21Include | null
  /**
   * Filter which Unit21 to delete.
  **/
  where: Unit21WhereUniqueInput
}


/**
 * Unit21 deleteMany
 */
export type Unit21DeleteManyArgs = {
  where?: Unit21WhereInput
}


/**
 * Unit21 without action
 */
export type Unit21Args = {
  /**
   * Select specific fields to fetch from the Unit21
  **/
  select?: Unit21Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit21Include | null
}



/**
 * Model Unit22
 */

export type Unit22 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit22Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit22Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit22GetPayload<
  S extends boolean | null | undefined | Unit22Args,
  U = keyof S
> = S extends true
  ? Unit22
  : S extends undefined
  ? never
  : S extends Unit22Args | FindManyUnit22Args
  ? 'include' extends U
    ? Unit22  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit22 ? Unit22[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit22
: Unit22


export interface Unit22Delegate {
  /**
   * Find zero or one Unit22.
   * @param {FindOneUnit22Args} args - Arguments to find a Unit22
   * @example
   * // Get one Unit22
   * const unit22 = await prisma.unit22.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit22Args>(
    args: Subset<T, FindOneUnit22Args>
  ): CheckSelect<T, Prisma__Unit22Client<Unit22 | null>, Prisma__Unit22Client<Unit22GetPayload<T> | null>>
  /**
   * Find zero or more Unit22s.
   * @param {FindManyUnit22Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit22s
   * const unit22s = await prisma.unit22.findMany()
   * 
   * // Get first 10 Unit22s
   * const unit22s = await prisma.unit22.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit22WithIdOnly = await prisma.unit22.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit22Args>(
    args?: Subset<T, FindManyUnit22Args>
  ): CheckSelect<T, Promise<Array<Unit22>>, Promise<Array<Unit22GetPayload<T>>>>
  /**
   * Create a Unit22.
   * @param {Unit22CreateArgs} args - Arguments to create a Unit22.
   * @example
   * // Create one Unit22
   * const Unit22 = await prisma.unit22.create({
   *   data: {
   *     // ... data to create a Unit22
   *   }
   * })
   * 
  **/
  create<T extends Unit22CreateArgs>(
    args: Subset<T, Unit22CreateArgs>
  ): CheckSelect<T, Prisma__Unit22Client<Unit22>, Prisma__Unit22Client<Unit22GetPayload<T>>>
  /**
   * Delete a Unit22.
   * @param {Unit22DeleteArgs} args - Arguments to delete one Unit22.
   * @example
   * // Delete one Unit22
   * const Unit22 = await prisma.unit22.delete({
   *   where: {
   *     // ... filter to delete one Unit22
   *   }
   * })
   * 
  **/
  delete<T extends Unit22DeleteArgs>(
    args: Subset<T, Unit22DeleteArgs>
  ): CheckSelect<T, Prisma__Unit22Client<Unit22>, Prisma__Unit22Client<Unit22GetPayload<T>>>
  /**
   * Update one Unit22.
   * @param {Unit22UpdateArgs} args - Arguments to update one Unit22.
   * @example
   * // Update one Unit22
   * const unit22 = await prisma.unit22.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit22UpdateArgs>(
    args: Subset<T, Unit22UpdateArgs>
  ): CheckSelect<T, Prisma__Unit22Client<Unit22>, Prisma__Unit22Client<Unit22GetPayload<T>>>
  /**
   * Delete zero or more Unit22s.
   * @param {Unit22DeleteManyArgs} args - Arguments to filter Unit22s to delete.
   * @example
   * // Delete a few Unit22s
   * const { count } = await prisma.unit22.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit22DeleteManyArgs>(
    args: Subset<T, Unit22DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit22s.
   * @param {Unit22UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit22s
   * const unit22 = await prisma.unit22.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit22UpdateManyArgs>(
    args: Subset<T, Unit22UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit22.
   * @param {Unit22UpsertArgs} args - Arguments to update or create a Unit22.
   * @example
   * // Update or create a Unit22
   * const unit22 = await prisma.unit22.upsert({
   *   create: {
   *     // ... data to create a Unit22
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit22 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit22UpsertArgs>(
    args: Subset<T, Unit22UpsertArgs>
  ): CheckSelect<T, Prisma__Unit22Client<Unit22>, Prisma__Unit22Client<Unit22GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit22Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit22.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit22Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit22 findOne
 */
export type FindOneUnit22Args = {
  /**
   * Select specific fields to fetch from the Unit22
  **/
  select?: Unit22Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit22Include | null
  /**
   * Filter, which Unit22 to fetch.
  **/
  where: Unit22WhereUniqueInput
}


/**
 * Unit22 findMany
 */
export type FindManyUnit22Args = {
  /**
   * Select specific fields to fetch from the Unit22
  **/
  select?: Unit22Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit22Include | null
  /**
   * Filter, which Unit22s to fetch.
  **/
  where?: Unit22WhereInput
  /**
   * Determine the order of the Unit22s to fetch.
  **/
  orderBy?: Unit22OrderByInput
  /**
   * Sets the position for listing Unit22s.
  **/
  cursor?: Unit22WhereUniqueInput
  /**
   * The number of Unit22s to fetch. If negative number, it will take Unit22s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit22s.
  **/
  skip?: number
}


/**
 * Unit22 create
 */
export type Unit22CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit22
  **/
  select?: Unit22Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit22Include | null
  /**
   * The data needed to create a Unit22.
  **/
  data: Unit22CreateInput
}


/**
 * Unit22 update
 */
export type Unit22UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit22
  **/
  select?: Unit22Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit22Include | null
  /**
   * The data needed to update a Unit22.
  **/
  data: Unit22UpdateInput
  /**
   * Choose, which Unit22 to update.
  **/
  where: Unit22WhereUniqueInput
}


/**
 * Unit22 updateMany
 */
export type Unit22UpdateManyArgs = {
  data: Unit22UpdateManyMutationInput
  where?: Unit22WhereInput
}


/**
 * Unit22 upsert
 */
export type Unit22UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit22
  **/
  select?: Unit22Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit22Include | null
  /**
   * The filter to search for the Unit22 to update in case it exists.
  **/
  where: Unit22WhereUniqueInput
  /**
   * In case the Unit22 found by the `where` argument doesn't exist, create a new Unit22 with this data.
  **/
  create: Unit22CreateInput
  /**
   * In case the Unit22 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit22UpdateInput
}


/**
 * Unit22 delete
 */
export type Unit22DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit22
  **/
  select?: Unit22Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit22Include | null
  /**
   * Filter which Unit22 to delete.
  **/
  where: Unit22WhereUniqueInput
}


/**
 * Unit22 deleteMany
 */
export type Unit22DeleteManyArgs = {
  where?: Unit22WhereInput
}


/**
 * Unit22 without action
 */
export type Unit22Args = {
  /**
   * Select specific fields to fetch from the Unit22
  **/
  select?: Unit22Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit22Include | null
}



/**
 * Model Unit23
 */

export type Unit23 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit23Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit23Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit23GetPayload<
  S extends boolean | null | undefined | Unit23Args,
  U = keyof S
> = S extends true
  ? Unit23
  : S extends undefined
  ? never
  : S extends Unit23Args | FindManyUnit23Args
  ? 'include' extends U
    ? Unit23  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit23 ? Unit23[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit23
: Unit23


export interface Unit23Delegate {
  /**
   * Find zero or one Unit23.
   * @param {FindOneUnit23Args} args - Arguments to find a Unit23
   * @example
   * // Get one Unit23
   * const unit23 = await prisma.unit23.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit23Args>(
    args: Subset<T, FindOneUnit23Args>
  ): CheckSelect<T, Prisma__Unit23Client<Unit23 | null>, Prisma__Unit23Client<Unit23GetPayload<T> | null>>
  /**
   * Find zero or more Unit23s.
   * @param {FindManyUnit23Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit23s
   * const unit23s = await prisma.unit23.findMany()
   * 
   * // Get first 10 Unit23s
   * const unit23s = await prisma.unit23.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit23WithIdOnly = await prisma.unit23.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit23Args>(
    args?: Subset<T, FindManyUnit23Args>
  ): CheckSelect<T, Promise<Array<Unit23>>, Promise<Array<Unit23GetPayload<T>>>>
  /**
   * Create a Unit23.
   * @param {Unit23CreateArgs} args - Arguments to create a Unit23.
   * @example
   * // Create one Unit23
   * const Unit23 = await prisma.unit23.create({
   *   data: {
   *     // ... data to create a Unit23
   *   }
   * })
   * 
  **/
  create<T extends Unit23CreateArgs>(
    args: Subset<T, Unit23CreateArgs>
  ): CheckSelect<T, Prisma__Unit23Client<Unit23>, Prisma__Unit23Client<Unit23GetPayload<T>>>
  /**
   * Delete a Unit23.
   * @param {Unit23DeleteArgs} args - Arguments to delete one Unit23.
   * @example
   * // Delete one Unit23
   * const Unit23 = await prisma.unit23.delete({
   *   where: {
   *     // ... filter to delete one Unit23
   *   }
   * })
   * 
  **/
  delete<T extends Unit23DeleteArgs>(
    args: Subset<T, Unit23DeleteArgs>
  ): CheckSelect<T, Prisma__Unit23Client<Unit23>, Prisma__Unit23Client<Unit23GetPayload<T>>>
  /**
   * Update one Unit23.
   * @param {Unit23UpdateArgs} args - Arguments to update one Unit23.
   * @example
   * // Update one Unit23
   * const unit23 = await prisma.unit23.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit23UpdateArgs>(
    args: Subset<T, Unit23UpdateArgs>
  ): CheckSelect<T, Prisma__Unit23Client<Unit23>, Prisma__Unit23Client<Unit23GetPayload<T>>>
  /**
   * Delete zero or more Unit23s.
   * @param {Unit23DeleteManyArgs} args - Arguments to filter Unit23s to delete.
   * @example
   * // Delete a few Unit23s
   * const { count } = await prisma.unit23.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit23DeleteManyArgs>(
    args: Subset<T, Unit23DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit23s.
   * @param {Unit23UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit23s
   * const unit23 = await prisma.unit23.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit23UpdateManyArgs>(
    args: Subset<T, Unit23UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit23.
   * @param {Unit23UpsertArgs} args - Arguments to update or create a Unit23.
   * @example
   * // Update or create a Unit23
   * const unit23 = await prisma.unit23.upsert({
   *   create: {
   *     // ... data to create a Unit23
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit23 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit23UpsertArgs>(
    args: Subset<T, Unit23UpsertArgs>
  ): CheckSelect<T, Prisma__Unit23Client<Unit23>, Prisma__Unit23Client<Unit23GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit23Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit23.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit23Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit23 findOne
 */
export type FindOneUnit23Args = {
  /**
   * Select specific fields to fetch from the Unit23
  **/
  select?: Unit23Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit23Include | null
  /**
   * Filter, which Unit23 to fetch.
  **/
  where: Unit23WhereUniqueInput
}


/**
 * Unit23 findMany
 */
export type FindManyUnit23Args = {
  /**
   * Select specific fields to fetch from the Unit23
  **/
  select?: Unit23Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit23Include | null
  /**
   * Filter, which Unit23s to fetch.
  **/
  where?: Unit23WhereInput
  /**
   * Determine the order of the Unit23s to fetch.
  **/
  orderBy?: Unit23OrderByInput
  /**
   * Sets the position for listing Unit23s.
  **/
  cursor?: Unit23WhereUniqueInput
  /**
   * The number of Unit23s to fetch. If negative number, it will take Unit23s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit23s.
  **/
  skip?: number
}


/**
 * Unit23 create
 */
export type Unit23CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit23
  **/
  select?: Unit23Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit23Include | null
  /**
   * The data needed to create a Unit23.
  **/
  data: Unit23CreateInput
}


/**
 * Unit23 update
 */
export type Unit23UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit23
  **/
  select?: Unit23Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit23Include | null
  /**
   * The data needed to update a Unit23.
  **/
  data: Unit23UpdateInput
  /**
   * Choose, which Unit23 to update.
  **/
  where: Unit23WhereUniqueInput
}


/**
 * Unit23 updateMany
 */
export type Unit23UpdateManyArgs = {
  data: Unit23UpdateManyMutationInput
  where?: Unit23WhereInput
}


/**
 * Unit23 upsert
 */
export type Unit23UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit23
  **/
  select?: Unit23Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit23Include | null
  /**
   * The filter to search for the Unit23 to update in case it exists.
  **/
  where: Unit23WhereUniqueInput
  /**
   * In case the Unit23 found by the `where` argument doesn't exist, create a new Unit23 with this data.
  **/
  create: Unit23CreateInput
  /**
   * In case the Unit23 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit23UpdateInput
}


/**
 * Unit23 delete
 */
export type Unit23DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit23
  **/
  select?: Unit23Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit23Include | null
  /**
   * Filter which Unit23 to delete.
  **/
  where: Unit23WhereUniqueInput
}


/**
 * Unit23 deleteMany
 */
export type Unit23DeleteManyArgs = {
  where?: Unit23WhereInput
}


/**
 * Unit23 without action
 */
export type Unit23Args = {
  /**
   * Select specific fields to fetch from the Unit23
  **/
  select?: Unit23Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit23Include | null
}



/**
 * Model Unit24
 */

export type Unit24 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit24Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit24Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit24GetPayload<
  S extends boolean | null | undefined | Unit24Args,
  U = keyof S
> = S extends true
  ? Unit24
  : S extends undefined
  ? never
  : S extends Unit24Args | FindManyUnit24Args
  ? 'include' extends U
    ? Unit24  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit24 ? Unit24[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit24
: Unit24


export interface Unit24Delegate {
  /**
   * Find zero or one Unit24.
   * @param {FindOneUnit24Args} args - Arguments to find a Unit24
   * @example
   * // Get one Unit24
   * const unit24 = await prisma.unit24.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit24Args>(
    args: Subset<T, FindOneUnit24Args>
  ): CheckSelect<T, Prisma__Unit24Client<Unit24 | null>, Prisma__Unit24Client<Unit24GetPayload<T> | null>>
  /**
   * Find zero or more Unit24s.
   * @param {FindManyUnit24Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit24s
   * const unit24s = await prisma.unit24.findMany()
   * 
   * // Get first 10 Unit24s
   * const unit24s = await prisma.unit24.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit24WithIdOnly = await prisma.unit24.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit24Args>(
    args?: Subset<T, FindManyUnit24Args>
  ): CheckSelect<T, Promise<Array<Unit24>>, Promise<Array<Unit24GetPayload<T>>>>
  /**
   * Create a Unit24.
   * @param {Unit24CreateArgs} args - Arguments to create a Unit24.
   * @example
   * // Create one Unit24
   * const Unit24 = await prisma.unit24.create({
   *   data: {
   *     // ... data to create a Unit24
   *   }
   * })
   * 
  **/
  create<T extends Unit24CreateArgs>(
    args: Subset<T, Unit24CreateArgs>
  ): CheckSelect<T, Prisma__Unit24Client<Unit24>, Prisma__Unit24Client<Unit24GetPayload<T>>>
  /**
   * Delete a Unit24.
   * @param {Unit24DeleteArgs} args - Arguments to delete one Unit24.
   * @example
   * // Delete one Unit24
   * const Unit24 = await prisma.unit24.delete({
   *   where: {
   *     // ... filter to delete one Unit24
   *   }
   * })
   * 
  **/
  delete<T extends Unit24DeleteArgs>(
    args: Subset<T, Unit24DeleteArgs>
  ): CheckSelect<T, Prisma__Unit24Client<Unit24>, Prisma__Unit24Client<Unit24GetPayload<T>>>
  /**
   * Update one Unit24.
   * @param {Unit24UpdateArgs} args - Arguments to update one Unit24.
   * @example
   * // Update one Unit24
   * const unit24 = await prisma.unit24.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit24UpdateArgs>(
    args: Subset<T, Unit24UpdateArgs>
  ): CheckSelect<T, Prisma__Unit24Client<Unit24>, Prisma__Unit24Client<Unit24GetPayload<T>>>
  /**
   * Delete zero or more Unit24s.
   * @param {Unit24DeleteManyArgs} args - Arguments to filter Unit24s to delete.
   * @example
   * // Delete a few Unit24s
   * const { count } = await prisma.unit24.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit24DeleteManyArgs>(
    args: Subset<T, Unit24DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit24s.
   * @param {Unit24UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit24s
   * const unit24 = await prisma.unit24.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit24UpdateManyArgs>(
    args: Subset<T, Unit24UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit24.
   * @param {Unit24UpsertArgs} args - Arguments to update or create a Unit24.
   * @example
   * // Update or create a Unit24
   * const unit24 = await prisma.unit24.upsert({
   *   create: {
   *     // ... data to create a Unit24
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit24 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit24UpsertArgs>(
    args: Subset<T, Unit24UpsertArgs>
  ): CheckSelect<T, Prisma__Unit24Client<Unit24>, Prisma__Unit24Client<Unit24GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit24Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit24.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit24Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit24 findOne
 */
export type FindOneUnit24Args = {
  /**
   * Select specific fields to fetch from the Unit24
  **/
  select?: Unit24Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit24Include | null
  /**
   * Filter, which Unit24 to fetch.
  **/
  where: Unit24WhereUniqueInput
}


/**
 * Unit24 findMany
 */
export type FindManyUnit24Args = {
  /**
   * Select specific fields to fetch from the Unit24
  **/
  select?: Unit24Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit24Include | null
  /**
   * Filter, which Unit24s to fetch.
  **/
  where?: Unit24WhereInput
  /**
   * Determine the order of the Unit24s to fetch.
  **/
  orderBy?: Unit24OrderByInput
  /**
   * Sets the position for listing Unit24s.
  **/
  cursor?: Unit24WhereUniqueInput
  /**
   * The number of Unit24s to fetch. If negative number, it will take Unit24s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit24s.
  **/
  skip?: number
}


/**
 * Unit24 create
 */
export type Unit24CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit24
  **/
  select?: Unit24Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit24Include | null
  /**
   * The data needed to create a Unit24.
  **/
  data: Unit24CreateInput
}


/**
 * Unit24 update
 */
export type Unit24UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit24
  **/
  select?: Unit24Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit24Include | null
  /**
   * The data needed to update a Unit24.
  **/
  data: Unit24UpdateInput
  /**
   * Choose, which Unit24 to update.
  **/
  where: Unit24WhereUniqueInput
}


/**
 * Unit24 updateMany
 */
export type Unit24UpdateManyArgs = {
  data: Unit24UpdateManyMutationInput
  where?: Unit24WhereInput
}


/**
 * Unit24 upsert
 */
export type Unit24UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit24
  **/
  select?: Unit24Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit24Include | null
  /**
   * The filter to search for the Unit24 to update in case it exists.
  **/
  where: Unit24WhereUniqueInput
  /**
   * In case the Unit24 found by the `where` argument doesn't exist, create a new Unit24 with this data.
  **/
  create: Unit24CreateInput
  /**
   * In case the Unit24 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit24UpdateInput
}


/**
 * Unit24 delete
 */
export type Unit24DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit24
  **/
  select?: Unit24Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit24Include | null
  /**
   * Filter which Unit24 to delete.
  **/
  where: Unit24WhereUniqueInput
}


/**
 * Unit24 deleteMany
 */
export type Unit24DeleteManyArgs = {
  where?: Unit24WhereInput
}


/**
 * Unit24 without action
 */
export type Unit24Args = {
  /**
   * Select specific fields to fetch from the Unit24
  **/
  select?: Unit24Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit24Include | null
}



/**
 * Model Unit25
 */

export type Unit25 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit25Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit25Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit25GetPayload<
  S extends boolean | null | undefined | Unit25Args,
  U = keyof S
> = S extends true
  ? Unit25
  : S extends undefined
  ? never
  : S extends Unit25Args | FindManyUnit25Args
  ? 'include' extends U
    ? Unit25  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit25 ? Unit25[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit25
: Unit25


export interface Unit25Delegate {
  /**
   * Find zero or one Unit25.
   * @param {FindOneUnit25Args} args - Arguments to find a Unit25
   * @example
   * // Get one Unit25
   * const unit25 = await prisma.unit25.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit25Args>(
    args: Subset<T, FindOneUnit25Args>
  ): CheckSelect<T, Prisma__Unit25Client<Unit25 | null>, Prisma__Unit25Client<Unit25GetPayload<T> | null>>
  /**
   * Find zero or more Unit25s.
   * @param {FindManyUnit25Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit25s
   * const unit25s = await prisma.unit25.findMany()
   * 
   * // Get first 10 Unit25s
   * const unit25s = await prisma.unit25.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit25WithIdOnly = await prisma.unit25.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit25Args>(
    args?: Subset<T, FindManyUnit25Args>
  ): CheckSelect<T, Promise<Array<Unit25>>, Promise<Array<Unit25GetPayload<T>>>>
  /**
   * Create a Unit25.
   * @param {Unit25CreateArgs} args - Arguments to create a Unit25.
   * @example
   * // Create one Unit25
   * const Unit25 = await prisma.unit25.create({
   *   data: {
   *     // ... data to create a Unit25
   *   }
   * })
   * 
  **/
  create<T extends Unit25CreateArgs>(
    args: Subset<T, Unit25CreateArgs>
  ): CheckSelect<T, Prisma__Unit25Client<Unit25>, Prisma__Unit25Client<Unit25GetPayload<T>>>
  /**
   * Delete a Unit25.
   * @param {Unit25DeleteArgs} args - Arguments to delete one Unit25.
   * @example
   * // Delete one Unit25
   * const Unit25 = await prisma.unit25.delete({
   *   where: {
   *     // ... filter to delete one Unit25
   *   }
   * })
   * 
  **/
  delete<T extends Unit25DeleteArgs>(
    args: Subset<T, Unit25DeleteArgs>
  ): CheckSelect<T, Prisma__Unit25Client<Unit25>, Prisma__Unit25Client<Unit25GetPayload<T>>>
  /**
   * Update one Unit25.
   * @param {Unit25UpdateArgs} args - Arguments to update one Unit25.
   * @example
   * // Update one Unit25
   * const unit25 = await prisma.unit25.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit25UpdateArgs>(
    args: Subset<T, Unit25UpdateArgs>
  ): CheckSelect<T, Prisma__Unit25Client<Unit25>, Prisma__Unit25Client<Unit25GetPayload<T>>>
  /**
   * Delete zero or more Unit25s.
   * @param {Unit25DeleteManyArgs} args - Arguments to filter Unit25s to delete.
   * @example
   * // Delete a few Unit25s
   * const { count } = await prisma.unit25.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit25DeleteManyArgs>(
    args: Subset<T, Unit25DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit25s.
   * @param {Unit25UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit25s
   * const unit25 = await prisma.unit25.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit25UpdateManyArgs>(
    args: Subset<T, Unit25UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit25.
   * @param {Unit25UpsertArgs} args - Arguments to update or create a Unit25.
   * @example
   * // Update or create a Unit25
   * const unit25 = await prisma.unit25.upsert({
   *   create: {
   *     // ... data to create a Unit25
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit25 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit25UpsertArgs>(
    args: Subset<T, Unit25UpsertArgs>
  ): CheckSelect<T, Prisma__Unit25Client<Unit25>, Prisma__Unit25Client<Unit25GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit25Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit25.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit25Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit25 findOne
 */
export type FindOneUnit25Args = {
  /**
   * Select specific fields to fetch from the Unit25
  **/
  select?: Unit25Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit25Include | null
  /**
   * Filter, which Unit25 to fetch.
  **/
  where: Unit25WhereUniqueInput
}


/**
 * Unit25 findMany
 */
export type FindManyUnit25Args = {
  /**
   * Select specific fields to fetch from the Unit25
  **/
  select?: Unit25Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit25Include | null
  /**
   * Filter, which Unit25s to fetch.
  **/
  where?: Unit25WhereInput
  /**
   * Determine the order of the Unit25s to fetch.
  **/
  orderBy?: Unit25OrderByInput
  /**
   * Sets the position for listing Unit25s.
  **/
  cursor?: Unit25WhereUniqueInput
  /**
   * The number of Unit25s to fetch. If negative number, it will take Unit25s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit25s.
  **/
  skip?: number
}


/**
 * Unit25 create
 */
export type Unit25CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit25
  **/
  select?: Unit25Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit25Include | null
  /**
   * The data needed to create a Unit25.
  **/
  data: Unit25CreateInput
}


/**
 * Unit25 update
 */
export type Unit25UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit25
  **/
  select?: Unit25Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit25Include | null
  /**
   * The data needed to update a Unit25.
  **/
  data: Unit25UpdateInput
  /**
   * Choose, which Unit25 to update.
  **/
  where: Unit25WhereUniqueInput
}


/**
 * Unit25 updateMany
 */
export type Unit25UpdateManyArgs = {
  data: Unit25UpdateManyMutationInput
  where?: Unit25WhereInput
}


/**
 * Unit25 upsert
 */
export type Unit25UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit25
  **/
  select?: Unit25Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit25Include | null
  /**
   * The filter to search for the Unit25 to update in case it exists.
  **/
  where: Unit25WhereUniqueInput
  /**
   * In case the Unit25 found by the `where` argument doesn't exist, create a new Unit25 with this data.
  **/
  create: Unit25CreateInput
  /**
   * In case the Unit25 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit25UpdateInput
}


/**
 * Unit25 delete
 */
export type Unit25DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit25
  **/
  select?: Unit25Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit25Include | null
  /**
   * Filter which Unit25 to delete.
  **/
  where: Unit25WhereUniqueInput
}


/**
 * Unit25 deleteMany
 */
export type Unit25DeleteManyArgs = {
  where?: Unit25WhereInput
}


/**
 * Unit25 without action
 */
export type Unit25Args = {
  /**
   * Select specific fields to fetch from the Unit25
  **/
  select?: Unit25Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit25Include | null
}



/**
 * Model Unit26
 */

export type Unit26 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit26Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit26Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit26GetPayload<
  S extends boolean | null | undefined | Unit26Args,
  U = keyof S
> = S extends true
  ? Unit26
  : S extends undefined
  ? never
  : S extends Unit26Args | FindManyUnit26Args
  ? 'include' extends U
    ? Unit26  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit26 ? Unit26[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit26
: Unit26


export interface Unit26Delegate {
  /**
   * Find zero or one Unit26.
   * @param {FindOneUnit26Args} args - Arguments to find a Unit26
   * @example
   * // Get one Unit26
   * const unit26 = await prisma.unit26.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit26Args>(
    args: Subset<T, FindOneUnit26Args>
  ): CheckSelect<T, Prisma__Unit26Client<Unit26 | null>, Prisma__Unit26Client<Unit26GetPayload<T> | null>>
  /**
   * Find zero or more Unit26s.
   * @param {FindManyUnit26Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit26s
   * const unit26s = await prisma.unit26.findMany()
   * 
   * // Get first 10 Unit26s
   * const unit26s = await prisma.unit26.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit26WithIdOnly = await prisma.unit26.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit26Args>(
    args?: Subset<T, FindManyUnit26Args>
  ): CheckSelect<T, Promise<Array<Unit26>>, Promise<Array<Unit26GetPayload<T>>>>
  /**
   * Create a Unit26.
   * @param {Unit26CreateArgs} args - Arguments to create a Unit26.
   * @example
   * // Create one Unit26
   * const Unit26 = await prisma.unit26.create({
   *   data: {
   *     // ... data to create a Unit26
   *   }
   * })
   * 
  **/
  create<T extends Unit26CreateArgs>(
    args: Subset<T, Unit26CreateArgs>
  ): CheckSelect<T, Prisma__Unit26Client<Unit26>, Prisma__Unit26Client<Unit26GetPayload<T>>>
  /**
   * Delete a Unit26.
   * @param {Unit26DeleteArgs} args - Arguments to delete one Unit26.
   * @example
   * // Delete one Unit26
   * const Unit26 = await prisma.unit26.delete({
   *   where: {
   *     // ... filter to delete one Unit26
   *   }
   * })
   * 
  **/
  delete<T extends Unit26DeleteArgs>(
    args: Subset<T, Unit26DeleteArgs>
  ): CheckSelect<T, Prisma__Unit26Client<Unit26>, Prisma__Unit26Client<Unit26GetPayload<T>>>
  /**
   * Update one Unit26.
   * @param {Unit26UpdateArgs} args - Arguments to update one Unit26.
   * @example
   * // Update one Unit26
   * const unit26 = await prisma.unit26.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit26UpdateArgs>(
    args: Subset<T, Unit26UpdateArgs>
  ): CheckSelect<T, Prisma__Unit26Client<Unit26>, Prisma__Unit26Client<Unit26GetPayload<T>>>
  /**
   * Delete zero or more Unit26s.
   * @param {Unit26DeleteManyArgs} args - Arguments to filter Unit26s to delete.
   * @example
   * // Delete a few Unit26s
   * const { count } = await prisma.unit26.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit26DeleteManyArgs>(
    args: Subset<T, Unit26DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit26s.
   * @param {Unit26UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit26s
   * const unit26 = await prisma.unit26.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit26UpdateManyArgs>(
    args: Subset<T, Unit26UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit26.
   * @param {Unit26UpsertArgs} args - Arguments to update or create a Unit26.
   * @example
   * // Update or create a Unit26
   * const unit26 = await prisma.unit26.upsert({
   *   create: {
   *     // ... data to create a Unit26
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit26 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit26UpsertArgs>(
    args: Subset<T, Unit26UpsertArgs>
  ): CheckSelect<T, Prisma__Unit26Client<Unit26>, Prisma__Unit26Client<Unit26GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit26Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit26.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit26Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit26 findOne
 */
export type FindOneUnit26Args = {
  /**
   * Select specific fields to fetch from the Unit26
  **/
  select?: Unit26Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit26Include | null
  /**
   * Filter, which Unit26 to fetch.
  **/
  where: Unit26WhereUniqueInput
}


/**
 * Unit26 findMany
 */
export type FindManyUnit26Args = {
  /**
   * Select specific fields to fetch from the Unit26
  **/
  select?: Unit26Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit26Include | null
  /**
   * Filter, which Unit26s to fetch.
  **/
  where?: Unit26WhereInput
  /**
   * Determine the order of the Unit26s to fetch.
  **/
  orderBy?: Unit26OrderByInput
  /**
   * Sets the position for listing Unit26s.
  **/
  cursor?: Unit26WhereUniqueInput
  /**
   * The number of Unit26s to fetch. If negative number, it will take Unit26s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit26s.
  **/
  skip?: number
}


/**
 * Unit26 create
 */
export type Unit26CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit26
  **/
  select?: Unit26Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit26Include | null
  /**
   * The data needed to create a Unit26.
  **/
  data: Unit26CreateInput
}


/**
 * Unit26 update
 */
export type Unit26UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit26
  **/
  select?: Unit26Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit26Include | null
  /**
   * The data needed to update a Unit26.
  **/
  data: Unit26UpdateInput
  /**
   * Choose, which Unit26 to update.
  **/
  where: Unit26WhereUniqueInput
}


/**
 * Unit26 updateMany
 */
export type Unit26UpdateManyArgs = {
  data: Unit26UpdateManyMutationInput
  where?: Unit26WhereInput
}


/**
 * Unit26 upsert
 */
export type Unit26UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit26
  **/
  select?: Unit26Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit26Include | null
  /**
   * The filter to search for the Unit26 to update in case it exists.
  **/
  where: Unit26WhereUniqueInput
  /**
   * In case the Unit26 found by the `where` argument doesn't exist, create a new Unit26 with this data.
  **/
  create: Unit26CreateInput
  /**
   * In case the Unit26 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit26UpdateInput
}


/**
 * Unit26 delete
 */
export type Unit26DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit26
  **/
  select?: Unit26Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit26Include | null
  /**
   * Filter which Unit26 to delete.
  **/
  where: Unit26WhereUniqueInput
}


/**
 * Unit26 deleteMany
 */
export type Unit26DeleteManyArgs = {
  where?: Unit26WhereInput
}


/**
 * Unit26 without action
 */
export type Unit26Args = {
  /**
   * Select specific fields to fetch from the Unit26
  **/
  select?: Unit26Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit26Include | null
}



/**
 * Model Unit27
 */

export type Unit27 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit27Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit27Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit27GetPayload<
  S extends boolean | null | undefined | Unit27Args,
  U = keyof S
> = S extends true
  ? Unit27
  : S extends undefined
  ? never
  : S extends Unit27Args | FindManyUnit27Args
  ? 'include' extends U
    ? Unit27  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit27 ? Unit27[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit27
: Unit27


export interface Unit27Delegate {
  /**
   * Find zero or one Unit27.
   * @param {FindOneUnit27Args} args - Arguments to find a Unit27
   * @example
   * // Get one Unit27
   * const unit27 = await prisma.unit27.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit27Args>(
    args: Subset<T, FindOneUnit27Args>
  ): CheckSelect<T, Prisma__Unit27Client<Unit27 | null>, Prisma__Unit27Client<Unit27GetPayload<T> | null>>
  /**
   * Find zero or more Unit27s.
   * @param {FindManyUnit27Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit27s
   * const unit27s = await prisma.unit27.findMany()
   * 
   * // Get first 10 Unit27s
   * const unit27s = await prisma.unit27.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit27WithIdOnly = await prisma.unit27.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit27Args>(
    args?: Subset<T, FindManyUnit27Args>
  ): CheckSelect<T, Promise<Array<Unit27>>, Promise<Array<Unit27GetPayload<T>>>>
  /**
   * Create a Unit27.
   * @param {Unit27CreateArgs} args - Arguments to create a Unit27.
   * @example
   * // Create one Unit27
   * const Unit27 = await prisma.unit27.create({
   *   data: {
   *     // ... data to create a Unit27
   *   }
   * })
   * 
  **/
  create<T extends Unit27CreateArgs>(
    args: Subset<T, Unit27CreateArgs>
  ): CheckSelect<T, Prisma__Unit27Client<Unit27>, Prisma__Unit27Client<Unit27GetPayload<T>>>
  /**
   * Delete a Unit27.
   * @param {Unit27DeleteArgs} args - Arguments to delete one Unit27.
   * @example
   * // Delete one Unit27
   * const Unit27 = await prisma.unit27.delete({
   *   where: {
   *     // ... filter to delete one Unit27
   *   }
   * })
   * 
  **/
  delete<T extends Unit27DeleteArgs>(
    args: Subset<T, Unit27DeleteArgs>
  ): CheckSelect<T, Prisma__Unit27Client<Unit27>, Prisma__Unit27Client<Unit27GetPayload<T>>>
  /**
   * Update one Unit27.
   * @param {Unit27UpdateArgs} args - Arguments to update one Unit27.
   * @example
   * // Update one Unit27
   * const unit27 = await prisma.unit27.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit27UpdateArgs>(
    args: Subset<T, Unit27UpdateArgs>
  ): CheckSelect<T, Prisma__Unit27Client<Unit27>, Prisma__Unit27Client<Unit27GetPayload<T>>>
  /**
   * Delete zero or more Unit27s.
   * @param {Unit27DeleteManyArgs} args - Arguments to filter Unit27s to delete.
   * @example
   * // Delete a few Unit27s
   * const { count } = await prisma.unit27.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit27DeleteManyArgs>(
    args: Subset<T, Unit27DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit27s.
   * @param {Unit27UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit27s
   * const unit27 = await prisma.unit27.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit27UpdateManyArgs>(
    args: Subset<T, Unit27UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit27.
   * @param {Unit27UpsertArgs} args - Arguments to update or create a Unit27.
   * @example
   * // Update or create a Unit27
   * const unit27 = await prisma.unit27.upsert({
   *   create: {
   *     // ... data to create a Unit27
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit27 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit27UpsertArgs>(
    args: Subset<T, Unit27UpsertArgs>
  ): CheckSelect<T, Prisma__Unit27Client<Unit27>, Prisma__Unit27Client<Unit27GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit27Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit27.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit27Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit27 findOne
 */
export type FindOneUnit27Args = {
  /**
   * Select specific fields to fetch from the Unit27
  **/
  select?: Unit27Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit27Include | null
  /**
   * Filter, which Unit27 to fetch.
  **/
  where: Unit27WhereUniqueInput
}


/**
 * Unit27 findMany
 */
export type FindManyUnit27Args = {
  /**
   * Select specific fields to fetch from the Unit27
  **/
  select?: Unit27Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit27Include | null
  /**
   * Filter, which Unit27s to fetch.
  **/
  where?: Unit27WhereInput
  /**
   * Determine the order of the Unit27s to fetch.
  **/
  orderBy?: Unit27OrderByInput
  /**
   * Sets the position for listing Unit27s.
  **/
  cursor?: Unit27WhereUniqueInput
  /**
   * The number of Unit27s to fetch. If negative number, it will take Unit27s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit27s.
  **/
  skip?: number
}


/**
 * Unit27 create
 */
export type Unit27CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit27
  **/
  select?: Unit27Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit27Include | null
  /**
   * The data needed to create a Unit27.
  **/
  data: Unit27CreateInput
}


/**
 * Unit27 update
 */
export type Unit27UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit27
  **/
  select?: Unit27Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit27Include | null
  /**
   * The data needed to update a Unit27.
  **/
  data: Unit27UpdateInput
  /**
   * Choose, which Unit27 to update.
  **/
  where: Unit27WhereUniqueInput
}


/**
 * Unit27 updateMany
 */
export type Unit27UpdateManyArgs = {
  data: Unit27UpdateManyMutationInput
  where?: Unit27WhereInput
}


/**
 * Unit27 upsert
 */
export type Unit27UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit27
  **/
  select?: Unit27Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit27Include | null
  /**
   * The filter to search for the Unit27 to update in case it exists.
  **/
  where: Unit27WhereUniqueInput
  /**
   * In case the Unit27 found by the `where` argument doesn't exist, create a new Unit27 with this data.
  **/
  create: Unit27CreateInput
  /**
   * In case the Unit27 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit27UpdateInput
}


/**
 * Unit27 delete
 */
export type Unit27DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit27
  **/
  select?: Unit27Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit27Include | null
  /**
   * Filter which Unit27 to delete.
  **/
  where: Unit27WhereUniqueInput
}


/**
 * Unit27 deleteMany
 */
export type Unit27DeleteManyArgs = {
  where?: Unit27WhereInput
}


/**
 * Unit27 without action
 */
export type Unit27Args = {
  /**
   * Select specific fields to fetch from the Unit27
  **/
  select?: Unit27Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit27Include | null
}



/**
 * Model Unit28
 */

export type Unit28 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit28Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit28Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit28GetPayload<
  S extends boolean | null | undefined | Unit28Args,
  U = keyof S
> = S extends true
  ? Unit28
  : S extends undefined
  ? never
  : S extends Unit28Args | FindManyUnit28Args
  ? 'include' extends U
    ? Unit28  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit28 ? Unit28[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit28
: Unit28


export interface Unit28Delegate {
  /**
   * Find zero or one Unit28.
   * @param {FindOneUnit28Args} args - Arguments to find a Unit28
   * @example
   * // Get one Unit28
   * const unit28 = await prisma.unit28.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit28Args>(
    args: Subset<T, FindOneUnit28Args>
  ): CheckSelect<T, Prisma__Unit28Client<Unit28 | null>, Prisma__Unit28Client<Unit28GetPayload<T> | null>>
  /**
   * Find zero or more Unit28s.
   * @param {FindManyUnit28Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit28s
   * const unit28s = await prisma.unit28.findMany()
   * 
   * // Get first 10 Unit28s
   * const unit28s = await prisma.unit28.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit28WithIdOnly = await prisma.unit28.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit28Args>(
    args?: Subset<T, FindManyUnit28Args>
  ): CheckSelect<T, Promise<Array<Unit28>>, Promise<Array<Unit28GetPayload<T>>>>
  /**
   * Create a Unit28.
   * @param {Unit28CreateArgs} args - Arguments to create a Unit28.
   * @example
   * // Create one Unit28
   * const Unit28 = await prisma.unit28.create({
   *   data: {
   *     // ... data to create a Unit28
   *   }
   * })
   * 
  **/
  create<T extends Unit28CreateArgs>(
    args: Subset<T, Unit28CreateArgs>
  ): CheckSelect<T, Prisma__Unit28Client<Unit28>, Prisma__Unit28Client<Unit28GetPayload<T>>>
  /**
   * Delete a Unit28.
   * @param {Unit28DeleteArgs} args - Arguments to delete one Unit28.
   * @example
   * // Delete one Unit28
   * const Unit28 = await prisma.unit28.delete({
   *   where: {
   *     // ... filter to delete one Unit28
   *   }
   * })
   * 
  **/
  delete<T extends Unit28DeleteArgs>(
    args: Subset<T, Unit28DeleteArgs>
  ): CheckSelect<T, Prisma__Unit28Client<Unit28>, Prisma__Unit28Client<Unit28GetPayload<T>>>
  /**
   * Update one Unit28.
   * @param {Unit28UpdateArgs} args - Arguments to update one Unit28.
   * @example
   * // Update one Unit28
   * const unit28 = await prisma.unit28.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit28UpdateArgs>(
    args: Subset<T, Unit28UpdateArgs>
  ): CheckSelect<T, Prisma__Unit28Client<Unit28>, Prisma__Unit28Client<Unit28GetPayload<T>>>
  /**
   * Delete zero or more Unit28s.
   * @param {Unit28DeleteManyArgs} args - Arguments to filter Unit28s to delete.
   * @example
   * // Delete a few Unit28s
   * const { count } = await prisma.unit28.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit28DeleteManyArgs>(
    args: Subset<T, Unit28DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit28s.
   * @param {Unit28UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit28s
   * const unit28 = await prisma.unit28.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit28UpdateManyArgs>(
    args: Subset<T, Unit28UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit28.
   * @param {Unit28UpsertArgs} args - Arguments to update or create a Unit28.
   * @example
   * // Update or create a Unit28
   * const unit28 = await prisma.unit28.upsert({
   *   create: {
   *     // ... data to create a Unit28
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit28 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit28UpsertArgs>(
    args: Subset<T, Unit28UpsertArgs>
  ): CheckSelect<T, Prisma__Unit28Client<Unit28>, Prisma__Unit28Client<Unit28GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit28Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit28.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit28Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit28 findOne
 */
export type FindOneUnit28Args = {
  /**
   * Select specific fields to fetch from the Unit28
  **/
  select?: Unit28Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit28Include | null
  /**
   * Filter, which Unit28 to fetch.
  **/
  where: Unit28WhereUniqueInput
}


/**
 * Unit28 findMany
 */
export type FindManyUnit28Args = {
  /**
   * Select specific fields to fetch from the Unit28
  **/
  select?: Unit28Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit28Include | null
  /**
   * Filter, which Unit28s to fetch.
  **/
  where?: Unit28WhereInput
  /**
   * Determine the order of the Unit28s to fetch.
  **/
  orderBy?: Unit28OrderByInput
  /**
   * Sets the position for listing Unit28s.
  **/
  cursor?: Unit28WhereUniqueInput
  /**
   * The number of Unit28s to fetch. If negative number, it will take Unit28s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit28s.
  **/
  skip?: number
}


/**
 * Unit28 create
 */
export type Unit28CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit28
  **/
  select?: Unit28Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit28Include | null
  /**
   * The data needed to create a Unit28.
  **/
  data: Unit28CreateInput
}


/**
 * Unit28 update
 */
export type Unit28UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit28
  **/
  select?: Unit28Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit28Include | null
  /**
   * The data needed to update a Unit28.
  **/
  data: Unit28UpdateInput
  /**
   * Choose, which Unit28 to update.
  **/
  where: Unit28WhereUniqueInput
}


/**
 * Unit28 updateMany
 */
export type Unit28UpdateManyArgs = {
  data: Unit28UpdateManyMutationInput
  where?: Unit28WhereInput
}


/**
 * Unit28 upsert
 */
export type Unit28UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit28
  **/
  select?: Unit28Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit28Include | null
  /**
   * The filter to search for the Unit28 to update in case it exists.
  **/
  where: Unit28WhereUniqueInput
  /**
   * In case the Unit28 found by the `where` argument doesn't exist, create a new Unit28 with this data.
  **/
  create: Unit28CreateInput
  /**
   * In case the Unit28 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit28UpdateInput
}


/**
 * Unit28 delete
 */
export type Unit28DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit28
  **/
  select?: Unit28Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit28Include | null
  /**
   * Filter which Unit28 to delete.
  **/
  where: Unit28WhereUniqueInput
}


/**
 * Unit28 deleteMany
 */
export type Unit28DeleteManyArgs = {
  where?: Unit28WhereInput
}


/**
 * Unit28 without action
 */
export type Unit28Args = {
  /**
   * Select specific fields to fetch from the Unit28
  **/
  select?: Unit28Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit28Include | null
}



/**
 * Model Unit31
 */

export type Unit31 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit31Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit31Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit31GetPayload<
  S extends boolean | null | undefined | Unit31Args,
  U = keyof S
> = S extends true
  ? Unit31
  : S extends undefined
  ? never
  : S extends Unit31Args | FindManyUnit31Args
  ? 'include' extends U
    ? Unit31  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit31 ? Unit31[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit31
: Unit31


export interface Unit31Delegate {
  /**
   * Find zero or one Unit31.
   * @param {FindOneUnit31Args} args - Arguments to find a Unit31
   * @example
   * // Get one Unit31
   * const unit31 = await prisma.unit31.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit31Args>(
    args: Subset<T, FindOneUnit31Args>
  ): CheckSelect<T, Prisma__Unit31Client<Unit31 | null>, Prisma__Unit31Client<Unit31GetPayload<T> | null>>
  /**
   * Find zero or more Unit31s.
   * @param {FindManyUnit31Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit31s
   * const unit31s = await prisma.unit31.findMany()
   * 
   * // Get first 10 Unit31s
   * const unit31s = await prisma.unit31.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit31WithIdOnly = await prisma.unit31.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit31Args>(
    args?: Subset<T, FindManyUnit31Args>
  ): CheckSelect<T, Promise<Array<Unit31>>, Promise<Array<Unit31GetPayload<T>>>>
  /**
   * Create a Unit31.
   * @param {Unit31CreateArgs} args - Arguments to create a Unit31.
   * @example
   * // Create one Unit31
   * const Unit31 = await prisma.unit31.create({
   *   data: {
   *     // ... data to create a Unit31
   *   }
   * })
   * 
  **/
  create<T extends Unit31CreateArgs>(
    args: Subset<T, Unit31CreateArgs>
  ): CheckSelect<T, Prisma__Unit31Client<Unit31>, Prisma__Unit31Client<Unit31GetPayload<T>>>
  /**
   * Delete a Unit31.
   * @param {Unit31DeleteArgs} args - Arguments to delete one Unit31.
   * @example
   * // Delete one Unit31
   * const Unit31 = await prisma.unit31.delete({
   *   where: {
   *     // ... filter to delete one Unit31
   *   }
   * })
   * 
  **/
  delete<T extends Unit31DeleteArgs>(
    args: Subset<T, Unit31DeleteArgs>
  ): CheckSelect<T, Prisma__Unit31Client<Unit31>, Prisma__Unit31Client<Unit31GetPayload<T>>>
  /**
   * Update one Unit31.
   * @param {Unit31UpdateArgs} args - Arguments to update one Unit31.
   * @example
   * // Update one Unit31
   * const unit31 = await prisma.unit31.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit31UpdateArgs>(
    args: Subset<T, Unit31UpdateArgs>
  ): CheckSelect<T, Prisma__Unit31Client<Unit31>, Prisma__Unit31Client<Unit31GetPayload<T>>>
  /**
   * Delete zero or more Unit31s.
   * @param {Unit31DeleteManyArgs} args - Arguments to filter Unit31s to delete.
   * @example
   * // Delete a few Unit31s
   * const { count } = await prisma.unit31.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit31DeleteManyArgs>(
    args: Subset<T, Unit31DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit31s.
   * @param {Unit31UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit31s
   * const unit31 = await prisma.unit31.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit31UpdateManyArgs>(
    args: Subset<T, Unit31UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit31.
   * @param {Unit31UpsertArgs} args - Arguments to update or create a Unit31.
   * @example
   * // Update or create a Unit31
   * const unit31 = await prisma.unit31.upsert({
   *   create: {
   *     // ... data to create a Unit31
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit31 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit31UpsertArgs>(
    args: Subset<T, Unit31UpsertArgs>
  ): CheckSelect<T, Prisma__Unit31Client<Unit31>, Prisma__Unit31Client<Unit31GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit31Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit31.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit31Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit31 findOne
 */
export type FindOneUnit31Args = {
  /**
   * Select specific fields to fetch from the Unit31
  **/
  select?: Unit31Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit31Include | null
  /**
   * Filter, which Unit31 to fetch.
  **/
  where: Unit31WhereUniqueInput
}


/**
 * Unit31 findMany
 */
export type FindManyUnit31Args = {
  /**
   * Select specific fields to fetch from the Unit31
  **/
  select?: Unit31Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit31Include | null
  /**
   * Filter, which Unit31s to fetch.
  **/
  where?: Unit31WhereInput
  /**
   * Determine the order of the Unit31s to fetch.
  **/
  orderBy?: Unit31OrderByInput
  /**
   * Sets the position for listing Unit31s.
  **/
  cursor?: Unit31WhereUniqueInput
  /**
   * The number of Unit31s to fetch. If negative number, it will take Unit31s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit31s.
  **/
  skip?: number
}


/**
 * Unit31 create
 */
export type Unit31CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit31
  **/
  select?: Unit31Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit31Include | null
  /**
   * The data needed to create a Unit31.
  **/
  data: Unit31CreateInput
}


/**
 * Unit31 update
 */
export type Unit31UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit31
  **/
  select?: Unit31Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit31Include | null
  /**
   * The data needed to update a Unit31.
  **/
  data: Unit31UpdateInput
  /**
   * Choose, which Unit31 to update.
  **/
  where: Unit31WhereUniqueInput
}


/**
 * Unit31 updateMany
 */
export type Unit31UpdateManyArgs = {
  data: Unit31UpdateManyMutationInput
  where?: Unit31WhereInput
}


/**
 * Unit31 upsert
 */
export type Unit31UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit31
  **/
  select?: Unit31Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit31Include | null
  /**
   * The filter to search for the Unit31 to update in case it exists.
  **/
  where: Unit31WhereUniqueInput
  /**
   * In case the Unit31 found by the `where` argument doesn't exist, create a new Unit31 with this data.
  **/
  create: Unit31CreateInput
  /**
   * In case the Unit31 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit31UpdateInput
}


/**
 * Unit31 delete
 */
export type Unit31DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit31
  **/
  select?: Unit31Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit31Include | null
  /**
   * Filter which Unit31 to delete.
  **/
  where: Unit31WhereUniqueInput
}


/**
 * Unit31 deleteMany
 */
export type Unit31DeleteManyArgs = {
  where?: Unit31WhereInput
}


/**
 * Unit31 without action
 */
export type Unit31Args = {
  /**
   * Select specific fields to fetch from the Unit31
  **/
  select?: Unit31Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit31Include | null
}



/**
 * Model Unit32
 */

export type Unit32 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit32Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit32Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit32GetPayload<
  S extends boolean | null | undefined | Unit32Args,
  U = keyof S
> = S extends true
  ? Unit32
  : S extends undefined
  ? never
  : S extends Unit32Args | FindManyUnit32Args
  ? 'include' extends U
    ? Unit32  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit32 ? Unit32[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit32
: Unit32


export interface Unit32Delegate {
  /**
   * Find zero or one Unit32.
   * @param {FindOneUnit32Args} args - Arguments to find a Unit32
   * @example
   * // Get one Unit32
   * const unit32 = await prisma.unit32.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit32Args>(
    args: Subset<T, FindOneUnit32Args>
  ): CheckSelect<T, Prisma__Unit32Client<Unit32 | null>, Prisma__Unit32Client<Unit32GetPayload<T> | null>>
  /**
   * Find zero or more Unit32s.
   * @param {FindManyUnit32Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit32s
   * const unit32s = await prisma.unit32.findMany()
   * 
   * // Get first 10 Unit32s
   * const unit32s = await prisma.unit32.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit32WithIdOnly = await prisma.unit32.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit32Args>(
    args?: Subset<T, FindManyUnit32Args>
  ): CheckSelect<T, Promise<Array<Unit32>>, Promise<Array<Unit32GetPayload<T>>>>
  /**
   * Create a Unit32.
   * @param {Unit32CreateArgs} args - Arguments to create a Unit32.
   * @example
   * // Create one Unit32
   * const Unit32 = await prisma.unit32.create({
   *   data: {
   *     // ... data to create a Unit32
   *   }
   * })
   * 
  **/
  create<T extends Unit32CreateArgs>(
    args: Subset<T, Unit32CreateArgs>
  ): CheckSelect<T, Prisma__Unit32Client<Unit32>, Prisma__Unit32Client<Unit32GetPayload<T>>>
  /**
   * Delete a Unit32.
   * @param {Unit32DeleteArgs} args - Arguments to delete one Unit32.
   * @example
   * // Delete one Unit32
   * const Unit32 = await prisma.unit32.delete({
   *   where: {
   *     // ... filter to delete one Unit32
   *   }
   * })
   * 
  **/
  delete<T extends Unit32DeleteArgs>(
    args: Subset<T, Unit32DeleteArgs>
  ): CheckSelect<T, Prisma__Unit32Client<Unit32>, Prisma__Unit32Client<Unit32GetPayload<T>>>
  /**
   * Update one Unit32.
   * @param {Unit32UpdateArgs} args - Arguments to update one Unit32.
   * @example
   * // Update one Unit32
   * const unit32 = await prisma.unit32.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit32UpdateArgs>(
    args: Subset<T, Unit32UpdateArgs>
  ): CheckSelect<T, Prisma__Unit32Client<Unit32>, Prisma__Unit32Client<Unit32GetPayload<T>>>
  /**
   * Delete zero or more Unit32s.
   * @param {Unit32DeleteManyArgs} args - Arguments to filter Unit32s to delete.
   * @example
   * // Delete a few Unit32s
   * const { count } = await prisma.unit32.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit32DeleteManyArgs>(
    args: Subset<T, Unit32DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit32s.
   * @param {Unit32UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit32s
   * const unit32 = await prisma.unit32.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit32UpdateManyArgs>(
    args: Subset<T, Unit32UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit32.
   * @param {Unit32UpsertArgs} args - Arguments to update or create a Unit32.
   * @example
   * // Update or create a Unit32
   * const unit32 = await prisma.unit32.upsert({
   *   create: {
   *     // ... data to create a Unit32
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit32 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit32UpsertArgs>(
    args: Subset<T, Unit32UpsertArgs>
  ): CheckSelect<T, Prisma__Unit32Client<Unit32>, Prisma__Unit32Client<Unit32GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit32Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit32.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit32Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit32 findOne
 */
export type FindOneUnit32Args = {
  /**
   * Select specific fields to fetch from the Unit32
  **/
  select?: Unit32Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit32Include | null
  /**
   * Filter, which Unit32 to fetch.
  **/
  where: Unit32WhereUniqueInput
}


/**
 * Unit32 findMany
 */
export type FindManyUnit32Args = {
  /**
   * Select specific fields to fetch from the Unit32
  **/
  select?: Unit32Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit32Include | null
  /**
   * Filter, which Unit32s to fetch.
  **/
  where?: Unit32WhereInput
  /**
   * Determine the order of the Unit32s to fetch.
  **/
  orderBy?: Unit32OrderByInput
  /**
   * Sets the position for listing Unit32s.
  **/
  cursor?: Unit32WhereUniqueInput
  /**
   * The number of Unit32s to fetch. If negative number, it will take Unit32s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit32s.
  **/
  skip?: number
}


/**
 * Unit32 create
 */
export type Unit32CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit32
  **/
  select?: Unit32Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit32Include | null
  /**
   * The data needed to create a Unit32.
  **/
  data: Unit32CreateInput
}


/**
 * Unit32 update
 */
export type Unit32UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit32
  **/
  select?: Unit32Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit32Include | null
  /**
   * The data needed to update a Unit32.
  **/
  data: Unit32UpdateInput
  /**
   * Choose, which Unit32 to update.
  **/
  where: Unit32WhereUniqueInput
}


/**
 * Unit32 updateMany
 */
export type Unit32UpdateManyArgs = {
  data: Unit32UpdateManyMutationInput
  where?: Unit32WhereInput
}


/**
 * Unit32 upsert
 */
export type Unit32UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit32
  **/
  select?: Unit32Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit32Include | null
  /**
   * The filter to search for the Unit32 to update in case it exists.
  **/
  where: Unit32WhereUniqueInput
  /**
   * In case the Unit32 found by the `where` argument doesn't exist, create a new Unit32 with this data.
  **/
  create: Unit32CreateInput
  /**
   * In case the Unit32 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit32UpdateInput
}


/**
 * Unit32 delete
 */
export type Unit32DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit32
  **/
  select?: Unit32Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit32Include | null
  /**
   * Filter which Unit32 to delete.
  **/
  where: Unit32WhereUniqueInput
}


/**
 * Unit32 deleteMany
 */
export type Unit32DeleteManyArgs = {
  where?: Unit32WhereInput
}


/**
 * Unit32 without action
 */
export type Unit32Args = {
  /**
   * Select specific fields to fetch from the Unit32
  **/
  select?: Unit32Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit32Include | null
}



/**
 * Model Unit33
 */

export type Unit33 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit33Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit33Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit33GetPayload<
  S extends boolean | null | undefined | Unit33Args,
  U = keyof S
> = S extends true
  ? Unit33
  : S extends undefined
  ? never
  : S extends Unit33Args | FindManyUnit33Args
  ? 'include' extends U
    ? Unit33  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit33 ? Unit33[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit33
: Unit33


export interface Unit33Delegate {
  /**
   * Find zero or one Unit33.
   * @param {FindOneUnit33Args} args - Arguments to find a Unit33
   * @example
   * // Get one Unit33
   * const unit33 = await prisma.unit33.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit33Args>(
    args: Subset<T, FindOneUnit33Args>
  ): CheckSelect<T, Prisma__Unit33Client<Unit33 | null>, Prisma__Unit33Client<Unit33GetPayload<T> | null>>
  /**
   * Find zero or more Unit33s.
   * @param {FindManyUnit33Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit33s
   * const unit33s = await prisma.unit33.findMany()
   * 
   * // Get first 10 Unit33s
   * const unit33s = await prisma.unit33.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit33WithIdOnly = await prisma.unit33.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit33Args>(
    args?: Subset<T, FindManyUnit33Args>
  ): CheckSelect<T, Promise<Array<Unit33>>, Promise<Array<Unit33GetPayload<T>>>>
  /**
   * Create a Unit33.
   * @param {Unit33CreateArgs} args - Arguments to create a Unit33.
   * @example
   * // Create one Unit33
   * const Unit33 = await prisma.unit33.create({
   *   data: {
   *     // ... data to create a Unit33
   *   }
   * })
   * 
  **/
  create<T extends Unit33CreateArgs>(
    args: Subset<T, Unit33CreateArgs>
  ): CheckSelect<T, Prisma__Unit33Client<Unit33>, Prisma__Unit33Client<Unit33GetPayload<T>>>
  /**
   * Delete a Unit33.
   * @param {Unit33DeleteArgs} args - Arguments to delete one Unit33.
   * @example
   * // Delete one Unit33
   * const Unit33 = await prisma.unit33.delete({
   *   where: {
   *     // ... filter to delete one Unit33
   *   }
   * })
   * 
  **/
  delete<T extends Unit33DeleteArgs>(
    args: Subset<T, Unit33DeleteArgs>
  ): CheckSelect<T, Prisma__Unit33Client<Unit33>, Prisma__Unit33Client<Unit33GetPayload<T>>>
  /**
   * Update one Unit33.
   * @param {Unit33UpdateArgs} args - Arguments to update one Unit33.
   * @example
   * // Update one Unit33
   * const unit33 = await prisma.unit33.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit33UpdateArgs>(
    args: Subset<T, Unit33UpdateArgs>
  ): CheckSelect<T, Prisma__Unit33Client<Unit33>, Prisma__Unit33Client<Unit33GetPayload<T>>>
  /**
   * Delete zero or more Unit33s.
   * @param {Unit33DeleteManyArgs} args - Arguments to filter Unit33s to delete.
   * @example
   * // Delete a few Unit33s
   * const { count } = await prisma.unit33.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit33DeleteManyArgs>(
    args: Subset<T, Unit33DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit33s.
   * @param {Unit33UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit33s
   * const unit33 = await prisma.unit33.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit33UpdateManyArgs>(
    args: Subset<T, Unit33UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit33.
   * @param {Unit33UpsertArgs} args - Arguments to update or create a Unit33.
   * @example
   * // Update or create a Unit33
   * const unit33 = await prisma.unit33.upsert({
   *   create: {
   *     // ... data to create a Unit33
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit33 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit33UpsertArgs>(
    args: Subset<T, Unit33UpsertArgs>
  ): CheckSelect<T, Prisma__Unit33Client<Unit33>, Prisma__Unit33Client<Unit33GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit33Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit33.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit33Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit33 findOne
 */
export type FindOneUnit33Args = {
  /**
   * Select specific fields to fetch from the Unit33
  **/
  select?: Unit33Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit33Include | null
  /**
   * Filter, which Unit33 to fetch.
  **/
  where: Unit33WhereUniqueInput
}


/**
 * Unit33 findMany
 */
export type FindManyUnit33Args = {
  /**
   * Select specific fields to fetch from the Unit33
  **/
  select?: Unit33Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit33Include | null
  /**
   * Filter, which Unit33s to fetch.
  **/
  where?: Unit33WhereInput
  /**
   * Determine the order of the Unit33s to fetch.
  **/
  orderBy?: Unit33OrderByInput
  /**
   * Sets the position for listing Unit33s.
  **/
  cursor?: Unit33WhereUniqueInput
  /**
   * The number of Unit33s to fetch. If negative number, it will take Unit33s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit33s.
  **/
  skip?: number
}


/**
 * Unit33 create
 */
export type Unit33CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit33
  **/
  select?: Unit33Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit33Include | null
  /**
   * The data needed to create a Unit33.
  **/
  data: Unit33CreateInput
}


/**
 * Unit33 update
 */
export type Unit33UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit33
  **/
  select?: Unit33Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit33Include | null
  /**
   * The data needed to update a Unit33.
  **/
  data: Unit33UpdateInput
  /**
   * Choose, which Unit33 to update.
  **/
  where: Unit33WhereUniqueInput
}


/**
 * Unit33 updateMany
 */
export type Unit33UpdateManyArgs = {
  data: Unit33UpdateManyMutationInput
  where?: Unit33WhereInput
}


/**
 * Unit33 upsert
 */
export type Unit33UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit33
  **/
  select?: Unit33Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit33Include | null
  /**
   * The filter to search for the Unit33 to update in case it exists.
  **/
  where: Unit33WhereUniqueInput
  /**
   * In case the Unit33 found by the `where` argument doesn't exist, create a new Unit33 with this data.
  **/
  create: Unit33CreateInput
  /**
   * In case the Unit33 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit33UpdateInput
}


/**
 * Unit33 delete
 */
export type Unit33DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit33
  **/
  select?: Unit33Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit33Include | null
  /**
   * Filter which Unit33 to delete.
  **/
  where: Unit33WhereUniqueInput
}


/**
 * Unit33 deleteMany
 */
export type Unit33DeleteManyArgs = {
  where?: Unit33WhereInput
}


/**
 * Unit33 without action
 */
export type Unit33Args = {
  /**
   * Select specific fields to fetch from the Unit33
  **/
  select?: Unit33Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit33Include | null
}



/**
 * Model Unit34
 */

export type Unit34 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit34Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit34Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit34GetPayload<
  S extends boolean | null | undefined | Unit34Args,
  U = keyof S
> = S extends true
  ? Unit34
  : S extends undefined
  ? never
  : S extends Unit34Args | FindManyUnit34Args
  ? 'include' extends U
    ? Unit34  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit34 ? Unit34[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit34
: Unit34


export interface Unit34Delegate {
  /**
   * Find zero or one Unit34.
   * @param {FindOneUnit34Args} args - Arguments to find a Unit34
   * @example
   * // Get one Unit34
   * const unit34 = await prisma.unit34.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit34Args>(
    args: Subset<T, FindOneUnit34Args>
  ): CheckSelect<T, Prisma__Unit34Client<Unit34 | null>, Prisma__Unit34Client<Unit34GetPayload<T> | null>>
  /**
   * Find zero or more Unit34s.
   * @param {FindManyUnit34Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit34s
   * const unit34s = await prisma.unit34.findMany()
   * 
   * // Get first 10 Unit34s
   * const unit34s = await prisma.unit34.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit34WithIdOnly = await prisma.unit34.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit34Args>(
    args?: Subset<T, FindManyUnit34Args>
  ): CheckSelect<T, Promise<Array<Unit34>>, Promise<Array<Unit34GetPayload<T>>>>
  /**
   * Create a Unit34.
   * @param {Unit34CreateArgs} args - Arguments to create a Unit34.
   * @example
   * // Create one Unit34
   * const Unit34 = await prisma.unit34.create({
   *   data: {
   *     // ... data to create a Unit34
   *   }
   * })
   * 
  **/
  create<T extends Unit34CreateArgs>(
    args: Subset<T, Unit34CreateArgs>
  ): CheckSelect<T, Prisma__Unit34Client<Unit34>, Prisma__Unit34Client<Unit34GetPayload<T>>>
  /**
   * Delete a Unit34.
   * @param {Unit34DeleteArgs} args - Arguments to delete one Unit34.
   * @example
   * // Delete one Unit34
   * const Unit34 = await prisma.unit34.delete({
   *   where: {
   *     // ... filter to delete one Unit34
   *   }
   * })
   * 
  **/
  delete<T extends Unit34DeleteArgs>(
    args: Subset<T, Unit34DeleteArgs>
  ): CheckSelect<T, Prisma__Unit34Client<Unit34>, Prisma__Unit34Client<Unit34GetPayload<T>>>
  /**
   * Update one Unit34.
   * @param {Unit34UpdateArgs} args - Arguments to update one Unit34.
   * @example
   * // Update one Unit34
   * const unit34 = await prisma.unit34.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit34UpdateArgs>(
    args: Subset<T, Unit34UpdateArgs>
  ): CheckSelect<T, Prisma__Unit34Client<Unit34>, Prisma__Unit34Client<Unit34GetPayload<T>>>
  /**
   * Delete zero or more Unit34s.
   * @param {Unit34DeleteManyArgs} args - Arguments to filter Unit34s to delete.
   * @example
   * // Delete a few Unit34s
   * const { count } = await prisma.unit34.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit34DeleteManyArgs>(
    args: Subset<T, Unit34DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit34s.
   * @param {Unit34UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit34s
   * const unit34 = await prisma.unit34.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit34UpdateManyArgs>(
    args: Subset<T, Unit34UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit34.
   * @param {Unit34UpsertArgs} args - Arguments to update or create a Unit34.
   * @example
   * // Update or create a Unit34
   * const unit34 = await prisma.unit34.upsert({
   *   create: {
   *     // ... data to create a Unit34
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit34 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit34UpsertArgs>(
    args: Subset<T, Unit34UpsertArgs>
  ): CheckSelect<T, Prisma__Unit34Client<Unit34>, Prisma__Unit34Client<Unit34GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit34Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit34.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit34Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit34 findOne
 */
export type FindOneUnit34Args = {
  /**
   * Select specific fields to fetch from the Unit34
  **/
  select?: Unit34Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit34Include | null
  /**
   * Filter, which Unit34 to fetch.
  **/
  where: Unit34WhereUniqueInput
}


/**
 * Unit34 findMany
 */
export type FindManyUnit34Args = {
  /**
   * Select specific fields to fetch from the Unit34
  **/
  select?: Unit34Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit34Include | null
  /**
   * Filter, which Unit34s to fetch.
  **/
  where?: Unit34WhereInput
  /**
   * Determine the order of the Unit34s to fetch.
  **/
  orderBy?: Unit34OrderByInput
  /**
   * Sets the position for listing Unit34s.
  **/
  cursor?: Unit34WhereUniqueInput
  /**
   * The number of Unit34s to fetch. If negative number, it will take Unit34s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit34s.
  **/
  skip?: number
}


/**
 * Unit34 create
 */
export type Unit34CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit34
  **/
  select?: Unit34Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit34Include | null
  /**
   * The data needed to create a Unit34.
  **/
  data: Unit34CreateInput
}


/**
 * Unit34 update
 */
export type Unit34UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit34
  **/
  select?: Unit34Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit34Include | null
  /**
   * The data needed to update a Unit34.
  **/
  data: Unit34UpdateInput
  /**
   * Choose, which Unit34 to update.
  **/
  where: Unit34WhereUniqueInput
}


/**
 * Unit34 updateMany
 */
export type Unit34UpdateManyArgs = {
  data: Unit34UpdateManyMutationInput
  where?: Unit34WhereInput
}


/**
 * Unit34 upsert
 */
export type Unit34UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit34
  **/
  select?: Unit34Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit34Include | null
  /**
   * The filter to search for the Unit34 to update in case it exists.
  **/
  where: Unit34WhereUniqueInput
  /**
   * In case the Unit34 found by the `where` argument doesn't exist, create a new Unit34 with this data.
  **/
  create: Unit34CreateInput
  /**
   * In case the Unit34 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit34UpdateInput
}


/**
 * Unit34 delete
 */
export type Unit34DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit34
  **/
  select?: Unit34Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit34Include | null
  /**
   * Filter which Unit34 to delete.
  **/
  where: Unit34WhereUniqueInput
}


/**
 * Unit34 deleteMany
 */
export type Unit34DeleteManyArgs = {
  where?: Unit34WhereInput
}


/**
 * Unit34 without action
 */
export type Unit34Args = {
  /**
   * Select specific fields to fetch from the Unit34
  **/
  select?: Unit34Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit34Include | null
}



/**
 * Model Unit35
 */

export type Unit35 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit35Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit35Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit35GetPayload<
  S extends boolean | null | undefined | Unit35Args,
  U = keyof S
> = S extends true
  ? Unit35
  : S extends undefined
  ? never
  : S extends Unit35Args | FindManyUnit35Args
  ? 'include' extends U
    ? Unit35  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit35 ? Unit35[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit35
: Unit35


export interface Unit35Delegate {
  /**
   * Find zero or one Unit35.
   * @param {FindOneUnit35Args} args - Arguments to find a Unit35
   * @example
   * // Get one Unit35
   * const unit35 = await prisma.unit35.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit35Args>(
    args: Subset<T, FindOneUnit35Args>
  ): CheckSelect<T, Prisma__Unit35Client<Unit35 | null>, Prisma__Unit35Client<Unit35GetPayload<T> | null>>
  /**
   * Find zero or more Unit35s.
   * @param {FindManyUnit35Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit35s
   * const unit35s = await prisma.unit35.findMany()
   * 
   * // Get first 10 Unit35s
   * const unit35s = await prisma.unit35.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit35WithIdOnly = await prisma.unit35.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit35Args>(
    args?: Subset<T, FindManyUnit35Args>
  ): CheckSelect<T, Promise<Array<Unit35>>, Promise<Array<Unit35GetPayload<T>>>>
  /**
   * Create a Unit35.
   * @param {Unit35CreateArgs} args - Arguments to create a Unit35.
   * @example
   * // Create one Unit35
   * const Unit35 = await prisma.unit35.create({
   *   data: {
   *     // ... data to create a Unit35
   *   }
   * })
   * 
  **/
  create<T extends Unit35CreateArgs>(
    args: Subset<T, Unit35CreateArgs>
  ): CheckSelect<T, Prisma__Unit35Client<Unit35>, Prisma__Unit35Client<Unit35GetPayload<T>>>
  /**
   * Delete a Unit35.
   * @param {Unit35DeleteArgs} args - Arguments to delete one Unit35.
   * @example
   * // Delete one Unit35
   * const Unit35 = await prisma.unit35.delete({
   *   where: {
   *     // ... filter to delete one Unit35
   *   }
   * })
   * 
  **/
  delete<T extends Unit35DeleteArgs>(
    args: Subset<T, Unit35DeleteArgs>
  ): CheckSelect<T, Prisma__Unit35Client<Unit35>, Prisma__Unit35Client<Unit35GetPayload<T>>>
  /**
   * Update one Unit35.
   * @param {Unit35UpdateArgs} args - Arguments to update one Unit35.
   * @example
   * // Update one Unit35
   * const unit35 = await prisma.unit35.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit35UpdateArgs>(
    args: Subset<T, Unit35UpdateArgs>
  ): CheckSelect<T, Prisma__Unit35Client<Unit35>, Prisma__Unit35Client<Unit35GetPayload<T>>>
  /**
   * Delete zero or more Unit35s.
   * @param {Unit35DeleteManyArgs} args - Arguments to filter Unit35s to delete.
   * @example
   * // Delete a few Unit35s
   * const { count } = await prisma.unit35.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit35DeleteManyArgs>(
    args: Subset<T, Unit35DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit35s.
   * @param {Unit35UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit35s
   * const unit35 = await prisma.unit35.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit35UpdateManyArgs>(
    args: Subset<T, Unit35UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit35.
   * @param {Unit35UpsertArgs} args - Arguments to update or create a Unit35.
   * @example
   * // Update or create a Unit35
   * const unit35 = await prisma.unit35.upsert({
   *   create: {
   *     // ... data to create a Unit35
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit35 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit35UpsertArgs>(
    args: Subset<T, Unit35UpsertArgs>
  ): CheckSelect<T, Prisma__Unit35Client<Unit35>, Prisma__Unit35Client<Unit35GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit35Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit35.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit35Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit35 findOne
 */
export type FindOneUnit35Args = {
  /**
   * Select specific fields to fetch from the Unit35
  **/
  select?: Unit35Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit35Include | null
  /**
   * Filter, which Unit35 to fetch.
  **/
  where: Unit35WhereUniqueInput
}


/**
 * Unit35 findMany
 */
export type FindManyUnit35Args = {
  /**
   * Select specific fields to fetch from the Unit35
  **/
  select?: Unit35Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit35Include | null
  /**
   * Filter, which Unit35s to fetch.
  **/
  where?: Unit35WhereInput
  /**
   * Determine the order of the Unit35s to fetch.
  **/
  orderBy?: Unit35OrderByInput
  /**
   * Sets the position for listing Unit35s.
  **/
  cursor?: Unit35WhereUniqueInput
  /**
   * The number of Unit35s to fetch. If negative number, it will take Unit35s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit35s.
  **/
  skip?: number
}


/**
 * Unit35 create
 */
export type Unit35CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit35
  **/
  select?: Unit35Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit35Include | null
  /**
   * The data needed to create a Unit35.
  **/
  data: Unit35CreateInput
}


/**
 * Unit35 update
 */
export type Unit35UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit35
  **/
  select?: Unit35Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit35Include | null
  /**
   * The data needed to update a Unit35.
  **/
  data: Unit35UpdateInput
  /**
   * Choose, which Unit35 to update.
  **/
  where: Unit35WhereUniqueInput
}


/**
 * Unit35 updateMany
 */
export type Unit35UpdateManyArgs = {
  data: Unit35UpdateManyMutationInput
  where?: Unit35WhereInput
}


/**
 * Unit35 upsert
 */
export type Unit35UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit35
  **/
  select?: Unit35Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit35Include | null
  /**
   * The filter to search for the Unit35 to update in case it exists.
  **/
  where: Unit35WhereUniqueInput
  /**
   * In case the Unit35 found by the `where` argument doesn't exist, create a new Unit35 with this data.
  **/
  create: Unit35CreateInput
  /**
   * In case the Unit35 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit35UpdateInput
}


/**
 * Unit35 delete
 */
export type Unit35DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit35
  **/
  select?: Unit35Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit35Include | null
  /**
   * Filter which Unit35 to delete.
  **/
  where: Unit35WhereUniqueInput
}


/**
 * Unit35 deleteMany
 */
export type Unit35DeleteManyArgs = {
  where?: Unit35WhereInput
}


/**
 * Unit35 without action
 */
export type Unit35Args = {
  /**
   * Select specific fields to fetch from the Unit35
  **/
  select?: Unit35Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit35Include | null
}



/**
 * Model Unit36
 */

export type Unit36 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit36Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit36Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit36GetPayload<
  S extends boolean | null | undefined | Unit36Args,
  U = keyof S
> = S extends true
  ? Unit36
  : S extends undefined
  ? never
  : S extends Unit36Args | FindManyUnit36Args
  ? 'include' extends U
    ? Unit36  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit36 ? Unit36[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit36
: Unit36


export interface Unit36Delegate {
  /**
   * Find zero or one Unit36.
   * @param {FindOneUnit36Args} args - Arguments to find a Unit36
   * @example
   * // Get one Unit36
   * const unit36 = await prisma.unit36.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit36Args>(
    args: Subset<T, FindOneUnit36Args>
  ): CheckSelect<T, Prisma__Unit36Client<Unit36 | null>, Prisma__Unit36Client<Unit36GetPayload<T> | null>>
  /**
   * Find zero or more Unit36s.
   * @param {FindManyUnit36Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit36s
   * const unit36s = await prisma.unit36.findMany()
   * 
   * // Get first 10 Unit36s
   * const unit36s = await prisma.unit36.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit36WithIdOnly = await prisma.unit36.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit36Args>(
    args?: Subset<T, FindManyUnit36Args>
  ): CheckSelect<T, Promise<Array<Unit36>>, Promise<Array<Unit36GetPayload<T>>>>
  /**
   * Create a Unit36.
   * @param {Unit36CreateArgs} args - Arguments to create a Unit36.
   * @example
   * // Create one Unit36
   * const Unit36 = await prisma.unit36.create({
   *   data: {
   *     // ... data to create a Unit36
   *   }
   * })
   * 
  **/
  create<T extends Unit36CreateArgs>(
    args: Subset<T, Unit36CreateArgs>
  ): CheckSelect<T, Prisma__Unit36Client<Unit36>, Prisma__Unit36Client<Unit36GetPayload<T>>>
  /**
   * Delete a Unit36.
   * @param {Unit36DeleteArgs} args - Arguments to delete one Unit36.
   * @example
   * // Delete one Unit36
   * const Unit36 = await prisma.unit36.delete({
   *   where: {
   *     // ... filter to delete one Unit36
   *   }
   * })
   * 
  **/
  delete<T extends Unit36DeleteArgs>(
    args: Subset<T, Unit36DeleteArgs>
  ): CheckSelect<T, Prisma__Unit36Client<Unit36>, Prisma__Unit36Client<Unit36GetPayload<T>>>
  /**
   * Update one Unit36.
   * @param {Unit36UpdateArgs} args - Arguments to update one Unit36.
   * @example
   * // Update one Unit36
   * const unit36 = await prisma.unit36.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit36UpdateArgs>(
    args: Subset<T, Unit36UpdateArgs>
  ): CheckSelect<T, Prisma__Unit36Client<Unit36>, Prisma__Unit36Client<Unit36GetPayload<T>>>
  /**
   * Delete zero or more Unit36s.
   * @param {Unit36DeleteManyArgs} args - Arguments to filter Unit36s to delete.
   * @example
   * // Delete a few Unit36s
   * const { count } = await prisma.unit36.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit36DeleteManyArgs>(
    args: Subset<T, Unit36DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit36s.
   * @param {Unit36UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit36s
   * const unit36 = await prisma.unit36.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit36UpdateManyArgs>(
    args: Subset<T, Unit36UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit36.
   * @param {Unit36UpsertArgs} args - Arguments to update or create a Unit36.
   * @example
   * // Update or create a Unit36
   * const unit36 = await prisma.unit36.upsert({
   *   create: {
   *     // ... data to create a Unit36
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit36 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit36UpsertArgs>(
    args: Subset<T, Unit36UpsertArgs>
  ): CheckSelect<T, Prisma__Unit36Client<Unit36>, Prisma__Unit36Client<Unit36GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit36Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit36.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit36Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit36 findOne
 */
export type FindOneUnit36Args = {
  /**
   * Select specific fields to fetch from the Unit36
  **/
  select?: Unit36Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit36Include | null
  /**
   * Filter, which Unit36 to fetch.
  **/
  where: Unit36WhereUniqueInput
}


/**
 * Unit36 findMany
 */
export type FindManyUnit36Args = {
  /**
   * Select specific fields to fetch from the Unit36
  **/
  select?: Unit36Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit36Include | null
  /**
   * Filter, which Unit36s to fetch.
  **/
  where?: Unit36WhereInput
  /**
   * Determine the order of the Unit36s to fetch.
  **/
  orderBy?: Unit36OrderByInput
  /**
   * Sets the position for listing Unit36s.
  **/
  cursor?: Unit36WhereUniqueInput
  /**
   * The number of Unit36s to fetch. If negative number, it will take Unit36s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit36s.
  **/
  skip?: number
}


/**
 * Unit36 create
 */
export type Unit36CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit36
  **/
  select?: Unit36Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit36Include | null
  /**
   * The data needed to create a Unit36.
  **/
  data: Unit36CreateInput
}


/**
 * Unit36 update
 */
export type Unit36UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit36
  **/
  select?: Unit36Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit36Include | null
  /**
   * The data needed to update a Unit36.
  **/
  data: Unit36UpdateInput
  /**
   * Choose, which Unit36 to update.
  **/
  where: Unit36WhereUniqueInput
}


/**
 * Unit36 updateMany
 */
export type Unit36UpdateManyArgs = {
  data: Unit36UpdateManyMutationInput
  where?: Unit36WhereInput
}


/**
 * Unit36 upsert
 */
export type Unit36UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit36
  **/
  select?: Unit36Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit36Include | null
  /**
   * The filter to search for the Unit36 to update in case it exists.
  **/
  where: Unit36WhereUniqueInput
  /**
   * In case the Unit36 found by the `where` argument doesn't exist, create a new Unit36 with this data.
  **/
  create: Unit36CreateInput
  /**
   * In case the Unit36 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit36UpdateInput
}


/**
 * Unit36 delete
 */
export type Unit36DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit36
  **/
  select?: Unit36Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit36Include | null
  /**
   * Filter which Unit36 to delete.
  **/
  where: Unit36WhereUniqueInput
}


/**
 * Unit36 deleteMany
 */
export type Unit36DeleteManyArgs = {
  where?: Unit36WhereInput
}


/**
 * Unit36 without action
 */
export type Unit36Args = {
  /**
   * Select specific fields to fetch from the Unit36
  **/
  select?: Unit36Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit36Include | null
}



/**
 * Model Unit37
 */

export type Unit37 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit37Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit37Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit37GetPayload<
  S extends boolean | null | undefined | Unit37Args,
  U = keyof S
> = S extends true
  ? Unit37
  : S extends undefined
  ? never
  : S extends Unit37Args | FindManyUnit37Args
  ? 'include' extends U
    ? Unit37  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit37 ? Unit37[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit37
: Unit37


export interface Unit37Delegate {
  /**
   * Find zero or one Unit37.
   * @param {FindOneUnit37Args} args - Arguments to find a Unit37
   * @example
   * // Get one Unit37
   * const unit37 = await prisma.unit37.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit37Args>(
    args: Subset<T, FindOneUnit37Args>
  ): CheckSelect<T, Prisma__Unit37Client<Unit37 | null>, Prisma__Unit37Client<Unit37GetPayload<T> | null>>
  /**
   * Find zero or more Unit37s.
   * @param {FindManyUnit37Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit37s
   * const unit37s = await prisma.unit37.findMany()
   * 
   * // Get first 10 Unit37s
   * const unit37s = await prisma.unit37.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit37WithIdOnly = await prisma.unit37.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit37Args>(
    args?: Subset<T, FindManyUnit37Args>
  ): CheckSelect<T, Promise<Array<Unit37>>, Promise<Array<Unit37GetPayload<T>>>>
  /**
   * Create a Unit37.
   * @param {Unit37CreateArgs} args - Arguments to create a Unit37.
   * @example
   * // Create one Unit37
   * const Unit37 = await prisma.unit37.create({
   *   data: {
   *     // ... data to create a Unit37
   *   }
   * })
   * 
  **/
  create<T extends Unit37CreateArgs>(
    args: Subset<T, Unit37CreateArgs>
  ): CheckSelect<T, Prisma__Unit37Client<Unit37>, Prisma__Unit37Client<Unit37GetPayload<T>>>
  /**
   * Delete a Unit37.
   * @param {Unit37DeleteArgs} args - Arguments to delete one Unit37.
   * @example
   * // Delete one Unit37
   * const Unit37 = await prisma.unit37.delete({
   *   where: {
   *     // ... filter to delete one Unit37
   *   }
   * })
   * 
  **/
  delete<T extends Unit37DeleteArgs>(
    args: Subset<T, Unit37DeleteArgs>
  ): CheckSelect<T, Prisma__Unit37Client<Unit37>, Prisma__Unit37Client<Unit37GetPayload<T>>>
  /**
   * Update one Unit37.
   * @param {Unit37UpdateArgs} args - Arguments to update one Unit37.
   * @example
   * // Update one Unit37
   * const unit37 = await prisma.unit37.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit37UpdateArgs>(
    args: Subset<T, Unit37UpdateArgs>
  ): CheckSelect<T, Prisma__Unit37Client<Unit37>, Prisma__Unit37Client<Unit37GetPayload<T>>>
  /**
   * Delete zero or more Unit37s.
   * @param {Unit37DeleteManyArgs} args - Arguments to filter Unit37s to delete.
   * @example
   * // Delete a few Unit37s
   * const { count } = await prisma.unit37.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit37DeleteManyArgs>(
    args: Subset<T, Unit37DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit37s.
   * @param {Unit37UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit37s
   * const unit37 = await prisma.unit37.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit37UpdateManyArgs>(
    args: Subset<T, Unit37UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit37.
   * @param {Unit37UpsertArgs} args - Arguments to update or create a Unit37.
   * @example
   * // Update or create a Unit37
   * const unit37 = await prisma.unit37.upsert({
   *   create: {
   *     // ... data to create a Unit37
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit37 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit37UpsertArgs>(
    args: Subset<T, Unit37UpsertArgs>
  ): CheckSelect<T, Prisma__Unit37Client<Unit37>, Prisma__Unit37Client<Unit37GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit37Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit37.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit37Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit37 findOne
 */
export type FindOneUnit37Args = {
  /**
   * Select specific fields to fetch from the Unit37
  **/
  select?: Unit37Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit37Include | null
  /**
   * Filter, which Unit37 to fetch.
  **/
  where: Unit37WhereUniqueInput
}


/**
 * Unit37 findMany
 */
export type FindManyUnit37Args = {
  /**
   * Select specific fields to fetch from the Unit37
  **/
  select?: Unit37Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit37Include | null
  /**
   * Filter, which Unit37s to fetch.
  **/
  where?: Unit37WhereInput
  /**
   * Determine the order of the Unit37s to fetch.
  **/
  orderBy?: Unit37OrderByInput
  /**
   * Sets the position for listing Unit37s.
  **/
  cursor?: Unit37WhereUniqueInput
  /**
   * The number of Unit37s to fetch. If negative number, it will take Unit37s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit37s.
  **/
  skip?: number
}


/**
 * Unit37 create
 */
export type Unit37CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit37
  **/
  select?: Unit37Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit37Include | null
  /**
   * The data needed to create a Unit37.
  **/
  data: Unit37CreateInput
}


/**
 * Unit37 update
 */
export type Unit37UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit37
  **/
  select?: Unit37Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit37Include | null
  /**
   * The data needed to update a Unit37.
  **/
  data: Unit37UpdateInput
  /**
   * Choose, which Unit37 to update.
  **/
  where: Unit37WhereUniqueInput
}


/**
 * Unit37 updateMany
 */
export type Unit37UpdateManyArgs = {
  data: Unit37UpdateManyMutationInput
  where?: Unit37WhereInput
}


/**
 * Unit37 upsert
 */
export type Unit37UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit37
  **/
  select?: Unit37Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit37Include | null
  /**
   * The filter to search for the Unit37 to update in case it exists.
  **/
  where: Unit37WhereUniqueInput
  /**
   * In case the Unit37 found by the `where` argument doesn't exist, create a new Unit37 with this data.
  **/
  create: Unit37CreateInput
  /**
   * In case the Unit37 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit37UpdateInput
}


/**
 * Unit37 delete
 */
export type Unit37DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit37
  **/
  select?: Unit37Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit37Include | null
  /**
   * Filter which Unit37 to delete.
  **/
  where: Unit37WhereUniqueInput
}


/**
 * Unit37 deleteMany
 */
export type Unit37DeleteManyArgs = {
  where?: Unit37WhereInput
}


/**
 * Unit37 without action
 */
export type Unit37Args = {
  /**
   * Select specific fields to fetch from the Unit37
  **/
  select?: Unit37Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit37Include | null
}



/**
 * Model Unit38
 */

export type Unit38 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit38Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit38Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit38GetPayload<
  S extends boolean | null | undefined | Unit38Args,
  U = keyof S
> = S extends true
  ? Unit38
  : S extends undefined
  ? never
  : S extends Unit38Args | FindManyUnit38Args
  ? 'include' extends U
    ? Unit38  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit38 ? Unit38[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit38
: Unit38


export interface Unit38Delegate {
  /**
   * Find zero or one Unit38.
   * @param {FindOneUnit38Args} args - Arguments to find a Unit38
   * @example
   * // Get one Unit38
   * const unit38 = await prisma.unit38.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit38Args>(
    args: Subset<T, FindOneUnit38Args>
  ): CheckSelect<T, Prisma__Unit38Client<Unit38 | null>, Prisma__Unit38Client<Unit38GetPayload<T> | null>>
  /**
   * Find zero or more Unit38s.
   * @param {FindManyUnit38Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit38s
   * const unit38s = await prisma.unit38.findMany()
   * 
   * // Get first 10 Unit38s
   * const unit38s = await prisma.unit38.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit38WithIdOnly = await prisma.unit38.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit38Args>(
    args?: Subset<T, FindManyUnit38Args>
  ): CheckSelect<T, Promise<Array<Unit38>>, Promise<Array<Unit38GetPayload<T>>>>
  /**
   * Create a Unit38.
   * @param {Unit38CreateArgs} args - Arguments to create a Unit38.
   * @example
   * // Create one Unit38
   * const Unit38 = await prisma.unit38.create({
   *   data: {
   *     // ... data to create a Unit38
   *   }
   * })
   * 
  **/
  create<T extends Unit38CreateArgs>(
    args: Subset<T, Unit38CreateArgs>
  ): CheckSelect<T, Prisma__Unit38Client<Unit38>, Prisma__Unit38Client<Unit38GetPayload<T>>>
  /**
   * Delete a Unit38.
   * @param {Unit38DeleteArgs} args - Arguments to delete one Unit38.
   * @example
   * // Delete one Unit38
   * const Unit38 = await prisma.unit38.delete({
   *   where: {
   *     // ... filter to delete one Unit38
   *   }
   * })
   * 
  **/
  delete<T extends Unit38DeleteArgs>(
    args: Subset<T, Unit38DeleteArgs>
  ): CheckSelect<T, Prisma__Unit38Client<Unit38>, Prisma__Unit38Client<Unit38GetPayload<T>>>
  /**
   * Update one Unit38.
   * @param {Unit38UpdateArgs} args - Arguments to update one Unit38.
   * @example
   * // Update one Unit38
   * const unit38 = await prisma.unit38.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit38UpdateArgs>(
    args: Subset<T, Unit38UpdateArgs>
  ): CheckSelect<T, Prisma__Unit38Client<Unit38>, Prisma__Unit38Client<Unit38GetPayload<T>>>
  /**
   * Delete zero or more Unit38s.
   * @param {Unit38DeleteManyArgs} args - Arguments to filter Unit38s to delete.
   * @example
   * // Delete a few Unit38s
   * const { count } = await prisma.unit38.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit38DeleteManyArgs>(
    args: Subset<T, Unit38DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit38s.
   * @param {Unit38UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit38s
   * const unit38 = await prisma.unit38.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit38UpdateManyArgs>(
    args: Subset<T, Unit38UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit38.
   * @param {Unit38UpsertArgs} args - Arguments to update or create a Unit38.
   * @example
   * // Update or create a Unit38
   * const unit38 = await prisma.unit38.upsert({
   *   create: {
   *     // ... data to create a Unit38
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit38 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit38UpsertArgs>(
    args: Subset<T, Unit38UpsertArgs>
  ): CheckSelect<T, Prisma__Unit38Client<Unit38>, Prisma__Unit38Client<Unit38GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit38Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit38.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit38Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit38 findOne
 */
export type FindOneUnit38Args = {
  /**
   * Select specific fields to fetch from the Unit38
  **/
  select?: Unit38Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit38Include | null
  /**
   * Filter, which Unit38 to fetch.
  **/
  where: Unit38WhereUniqueInput
}


/**
 * Unit38 findMany
 */
export type FindManyUnit38Args = {
  /**
   * Select specific fields to fetch from the Unit38
  **/
  select?: Unit38Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit38Include | null
  /**
   * Filter, which Unit38s to fetch.
  **/
  where?: Unit38WhereInput
  /**
   * Determine the order of the Unit38s to fetch.
  **/
  orderBy?: Unit38OrderByInput
  /**
   * Sets the position for listing Unit38s.
  **/
  cursor?: Unit38WhereUniqueInput
  /**
   * The number of Unit38s to fetch. If negative number, it will take Unit38s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit38s.
  **/
  skip?: number
}


/**
 * Unit38 create
 */
export type Unit38CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit38
  **/
  select?: Unit38Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit38Include | null
  /**
   * The data needed to create a Unit38.
  **/
  data: Unit38CreateInput
}


/**
 * Unit38 update
 */
export type Unit38UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit38
  **/
  select?: Unit38Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit38Include | null
  /**
   * The data needed to update a Unit38.
  **/
  data: Unit38UpdateInput
  /**
   * Choose, which Unit38 to update.
  **/
  where: Unit38WhereUniqueInput
}


/**
 * Unit38 updateMany
 */
export type Unit38UpdateManyArgs = {
  data: Unit38UpdateManyMutationInput
  where?: Unit38WhereInput
}


/**
 * Unit38 upsert
 */
export type Unit38UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit38
  **/
  select?: Unit38Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit38Include | null
  /**
   * The filter to search for the Unit38 to update in case it exists.
  **/
  where: Unit38WhereUniqueInput
  /**
   * In case the Unit38 found by the `where` argument doesn't exist, create a new Unit38 with this data.
  **/
  create: Unit38CreateInput
  /**
   * In case the Unit38 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit38UpdateInput
}


/**
 * Unit38 delete
 */
export type Unit38DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit38
  **/
  select?: Unit38Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit38Include | null
  /**
   * Filter which Unit38 to delete.
  **/
  where: Unit38WhereUniqueInput
}


/**
 * Unit38 deleteMany
 */
export type Unit38DeleteManyArgs = {
  where?: Unit38WhereInput
}


/**
 * Unit38 without action
 */
export type Unit38Args = {
  /**
   * Select specific fields to fetch from the Unit38
  **/
  select?: Unit38Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit38Include | null
}



/**
 * Model Unit41
 */

export type Unit41 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit41Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit41Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit41GetPayload<
  S extends boolean | null | undefined | Unit41Args,
  U = keyof S
> = S extends true
  ? Unit41
  : S extends undefined
  ? never
  : S extends Unit41Args | FindManyUnit41Args
  ? 'include' extends U
    ? Unit41  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit41 ? Unit41[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit41
: Unit41


export interface Unit41Delegate {
  /**
   * Find zero or one Unit41.
   * @param {FindOneUnit41Args} args - Arguments to find a Unit41
   * @example
   * // Get one Unit41
   * const unit41 = await prisma.unit41.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit41Args>(
    args: Subset<T, FindOneUnit41Args>
  ): CheckSelect<T, Prisma__Unit41Client<Unit41 | null>, Prisma__Unit41Client<Unit41GetPayload<T> | null>>
  /**
   * Find zero or more Unit41s.
   * @param {FindManyUnit41Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit41s
   * const unit41s = await prisma.unit41.findMany()
   * 
   * // Get first 10 Unit41s
   * const unit41s = await prisma.unit41.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit41WithIdOnly = await prisma.unit41.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit41Args>(
    args?: Subset<T, FindManyUnit41Args>
  ): CheckSelect<T, Promise<Array<Unit41>>, Promise<Array<Unit41GetPayload<T>>>>
  /**
   * Create a Unit41.
   * @param {Unit41CreateArgs} args - Arguments to create a Unit41.
   * @example
   * // Create one Unit41
   * const Unit41 = await prisma.unit41.create({
   *   data: {
   *     // ... data to create a Unit41
   *   }
   * })
   * 
  **/
  create<T extends Unit41CreateArgs>(
    args: Subset<T, Unit41CreateArgs>
  ): CheckSelect<T, Prisma__Unit41Client<Unit41>, Prisma__Unit41Client<Unit41GetPayload<T>>>
  /**
   * Delete a Unit41.
   * @param {Unit41DeleteArgs} args - Arguments to delete one Unit41.
   * @example
   * // Delete one Unit41
   * const Unit41 = await prisma.unit41.delete({
   *   where: {
   *     // ... filter to delete one Unit41
   *   }
   * })
   * 
  **/
  delete<T extends Unit41DeleteArgs>(
    args: Subset<T, Unit41DeleteArgs>
  ): CheckSelect<T, Prisma__Unit41Client<Unit41>, Prisma__Unit41Client<Unit41GetPayload<T>>>
  /**
   * Update one Unit41.
   * @param {Unit41UpdateArgs} args - Arguments to update one Unit41.
   * @example
   * // Update one Unit41
   * const unit41 = await prisma.unit41.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit41UpdateArgs>(
    args: Subset<T, Unit41UpdateArgs>
  ): CheckSelect<T, Prisma__Unit41Client<Unit41>, Prisma__Unit41Client<Unit41GetPayload<T>>>
  /**
   * Delete zero or more Unit41s.
   * @param {Unit41DeleteManyArgs} args - Arguments to filter Unit41s to delete.
   * @example
   * // Delete a few Unit41s
   * const { count } = await prisma.unit41.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit41DeleteManyArgs>(
    args: Subset<T, Unit41DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit41s.
   * @param {Unit41UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit41s
   * const unit41 = await prisma.unit41.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit41UpdateManyArgs>(
    args: Subset<T, Unit41UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit41.
   * @param {Unit41UpsertArgs} args - Arguments to update or create a Unit41.
   * @example
   * // Update or create a Unit41
   * const unit41 = await prisma.unit41.upsert({
   *   create: {
   *     // ... data to create a Unit41
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit41 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit41UpsertArgs>(
    args: Subset<T, Unit41UpsertArgs>
  ): CheckSelect<T, Prisma__Unit41Client<Unit41>, Prisma__Unit41Client<Unit41GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit41Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit41.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit41Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit41 findOne
 */
export type FindOneUnit41Args = {
  /**
   * Select specific fields to fetch from the Unit41
  **/
  select?: Unit41Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit41Include | null
  /**
   * Filter, which Unit41 to fetch.
  **/
  where: Unit41WhereUniqueInput
}


/**
 * Unit41 findMany
 */
export type FindManyUnit41Args = {
  /**
   * Select specific fields to fetch from the Unit41
  **/
  select?: Unit41Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit41Include | null
  /**
   * Filter, which Unit41s to fetch.
  **/
  where?: Unit41WhereInput
  /**
   * Determine the order of the Unit41s to fetch.
  **/
  orderBy?: Unit41OrderByInput
  /**
   * Sets the position for listing Unit41s.
  **/
  cursor?: Unit41WhereUniqueInput
  /**
   * The number of Unit41s to fetch. If negative number, it will take Unit41s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit41s.
  **/
  skip?: number
}


/**
 * Unit41 create
 */
export type Unit41CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit41
  **/
  select?: Unit41Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit41Include | null
  /**
   * The data needed to create a Unit41.
  **/
  data: Unit41CreateInput
}


/**
 * Unit41 update
 */
export type Unit41UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit41
  **/
  select?: Unit41Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit41Include | null
  /**
   * The data needed to update a Unit41.
  **/
  data: Unit41UpdateInput
  /**
   * Choose, which Unit41 to update.
  **/
  where: Unit41WhereUniqueInput
}


/**
 * Unit41 updateMany
 */
export type Unit41UpdateManyArgs = {
  data: Unit41UpdateManyMutationInput
  where?: Unit41WhereInput
}


/**
 * Unit41 upsert
 */
export type Unit41UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit41
  **/
  select?: Unit41Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit41Include | null
  /**
   * The filter to search for the Unit41 to update in case it exists.
  **/
  where: Unit41WhereUniqueInput
  /**
   * In case the Unit41 found by the `where` argument doesn't exist, create a new Unit41 with this data.
  **/
  create: Unit41CreateInput
  /**
   * In case the Unit41 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit41UpdateInput
}


/**
 * Unit41 delete
 */
export type Unit41DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit41
  **/
  select?: Unit41Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit41Include | null
  /**
   * Filter which Unit41 to delete.
  **/
  where: Unit41WhereUniqueInput
}


/**
 * Unit41 deleteMany
 */
export type Unit41DeleteManyArgs = {
  where?: Unit41WhereInput
}


/**
 * Unit41 without action
 */
export type Unit41Args = {
  /**
   * Select specific fields to fetch from the Unit41
  **/
  select?: Unit41Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit41Include | null
}



/**
 * Model Unit42
 */

export type Unit42 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit42Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit42Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit42GetPayload<
  S extends boolean | null | undefined | Unit42Args,
  U = keyof S
> = S extends true
  ? Unit42
  : S extends undefined
  ? never
  : S extends Unit42Args | FindManyUnit42Args
  ? 'include' extends U
    ? Unit42  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit42 ? Unit42[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit42
: Unit42


export interface Unit42Delegate {
  /**
   * Find zero or one Unit42.
   * @param {FindOneUnit42Args} args - Arguments to find a Unit42
   * @example
   * // Get one Unit42
   * const unit42 = await prisma.unit42.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit42Args>(
    args: Subset<T, FindOneUnit42Args>
  ): CheckSelect<T, Prisma__Unit42Client<Unit42 | null>, Prisma__Unit42Client<Unit42GetPayload<T> | null>>
  /**
   * Find zero or more Unit42s.
   * @param {FindManyUnit42Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit42s
   * const unit42s = await prisma.unit42.findMany()
   * 
   * // Get first 10 Unit42s
   * const unit42s = await prisma.unit42.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit42WithIdOnly = await prisma.unit42.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit42Args>(
    args?: Subset<T, FindManyUnit42Args>
  ): CheckSelect<T, Promise<Array<Unit42>>, Promise<Array<Unit42GetPayload<T>>>>
  /**
   * Create a Unit42.
   * @param {Unit42CreateArgs} args - Arguments to create a Unit42.
   * @example
   * // Create one Unit42
   * const Unit42 = await prisma.unit42.create({
   *   data: {
   *     // ... data to create a Unit42
   *   }
   * })
   * 
  **/
  create<T extends Unit42CreateArgs>(
    args: Subset<T, Unit42CreateArgs>
  ): CheckSelect<T, Prisma__Unit42Client<Unit42>, Prisma__Unit42Client<Unit42GetPayload<T>>>
  /**
   * Delete a Unit42.
   * @param {Unit42DeleteArgs} args - Arguments to delete one Unit42.
   * @example
   * // Delete one Unit42
   * const Unit42 = await prisma.unit42.delete({
   *   where: {
   *     // ... filter to delete one Unit42
   *   }
   * })
   * 
  **/
  delete<T extends Unit42DeleteArgs>(
    args: Subset<T, Unit42DeleteArgs>
  ): CheckSelect<T, Prisma__Unit42Client<Unit42>, Prisma__Unit42Client<Unit42GetPayload<T>>>
  /**
   * Update one Unit42.
   * @param {Unit42UpdateArgs} args - Arguments to update one Unit42.
   * @example
   * // Update one Unit42
   * const unit42 = await prisma.unit42.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit42UpdateArgs>(
    args: Subset<T, Unit42UpdateArgs>
  ): CheckSelect<T, Prisma__Unit42Client<Unit42>, Prisma__Unit42Client<Unit42GetPayload<T>>>
  /**
   * Delete zero or more Unit42s.
   * @param {Unit42DeleteManyArgs} args - Arguments to filter Unit42s to delete.
   * @example
   * // Delete a few Unit42s
   * const { count } = await prisma.unit42.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit42DeleteManyArgs>(
    args: Subset<T, Unit42DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit42s.
   * @param {Unit42UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit42s
   * const unit42 = await prisma.unit42.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit42UpdateManyArgs>(
    args: Subset<T, Unit42UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit42.
   * @param {Unit42UpsertArgs} args - Arguments to update or create a Unit42.
   * @example
   * // Update or create a Unit42
   * const unit42 = await prisma.unit42.upsert({
   *   create: {
   *     // ... data to create a Unit42
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit42 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit42UpsertArgs>(
    args: Subset<T, Unit42UpsertArgs>
  ): CheckSelect<T, Prisma__Unit42Client<Unit42>, Prisma__Unit42Client<Unit42GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit42Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit42.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit42Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit42 findOne
 */
export type FindOneUnit42Args = {
  /**
   * Select specific fields to fetch from the Unit42
  **/
  select?: Unit42Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit42Include | null
  /**
   * Filter, which Unit42 to fetch.
  **/
  where: Unit42WhereUniqueInput
}


/**
 * Unit42 findMany
 */
export type FindManyUnit42Args = {
  /**
   * Select specific fields to fetch from the Unit42
  **/
  select?: Unit42Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit42Include | null
  /**
   * Filter, which Unit42s to fetch.
  **/
  where?: Unit42WhereInput
  /**
   * Determine the order of the Unit42s to fetch.
  **/
  orderBy?: Unit42OrderByInput
  /**
   * Sets the position for listing Unit42s.
  **/
  cursor?: Unit42WhereUniqueInput
  /**
   * The number of Unit42s to fetch. If negative number, it will take Unit42s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit42s.
  **/
  skip?: number
}


/**
 * Unit42 create
 */
export type Unit42CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit42
  **/
  select?: Unit42Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit42Include | null
  /**
   * The data needed to create a Unit42.
  **/
  data: Unit42CreateInput
}


/**
 * Unit42 update
 */
export type Unit42UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit42
  **/
  select?: Unit42Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit42Include | null
  /**
   * The data needed to update a Unit42.
  **/
  data: Unit42UpdateInput
  /**
   * Choose, which Unit42 to update.
  **/
  where: Unit42WhereUniqueInput
}


/**
 * Unit42 updateMany
 */
export type Unit42UpdateManyArgs = {
  data: Unit42UpdateManyMutationInput
  where?: Unit42WhereInput
}


/**
 * Unit42 upsert
 */
export type Unit42UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit42
  **/
  select?: Unit42Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit42Include | null
  /**
   * The filter to search for the Unit42 to update in case it exists.
  **/
  where: Unit42WhereUniqueInput
  /**
   * In case the Unit42 found by the `where` argument doesn't exist, create a new Unit42 with this data.
  **/
  create: Unit42CreateInput
  /**
   * In case the Unit42 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit42UpdateInput
}


/**
 * Unit42 delete
 */
export type Unit42DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit42
  **/
  select?: Unit42Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit42Include | null
  /**
   * Filter which Unit42 to delete.
  **/
  where: Unit42WhereUniqueInput
}


/**
 * Unit42 deleteMany
 */
export type Unit42DeleteManyArgs = {
  where?: Unit42WhereInput
}


/**
 * Unit42 without action
 */
export type Unit42Args = {
  /**
   * Select specific fields to fetch from the Unit42
  **/
  select?: Unit42Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit42Include | null
}



/**
 * Model Unit43
 */

export type Unit43 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit43Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit43Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit43GetPayload<
  S extends boolean | null | undefined | Unit43Args,
  U = keyof S
> = S extends true
  ? Unit43
  : S extends undefined
  ? never
  : S extends Unit43Args | FindManyUnit43Args
  ? 'include' extends U
    ? Unit43  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit43 ? Unit43[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit43
: Unit43


export interface Unit43Delegate {
  /**
   * Find zero or one Unit43.
   * @param {FindOneUnit43Args} args - Arguments to find a Unit43
   * @example
   * // Get one Unit43
   * const unit43 = await prisma.unit43.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit43Args>(
    args: Subset<T, FindOneUnit43Args>
  ): CheckSelect<T, Prisma__Unit43Client<Unit43 | null>, Prisma__Unit43Client<Unit43GetPayload<T> | null>>
  /**
   * Find zero or more Unit43s.
   * @param {FindManyUnit43Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit43s
   * const unit43s = await prisma.unit43.findMany()
   * 
   * // Get first 10 Unit43s
   * const unit43s = await prisma.unit43.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit43WithIdOnly = await prisma.unit43.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit43Args>(
    args?: Subset<T, FindManyUnit43Args>
  ): CheckSelect<T, Promise<Array<Unit43>>, Promise<Array<Unit43GetPayload<T>>>>
  /**
   * Create a Unit43.
   * @param {Unit43CreateArgs} args - Arguments to create a Unit43.
   * @example
   * // Create one Unit43
   * const Unit43 = await prisma.unit43.create({
   *   data: {
   *     // ... data to create a Unit43
   *   }
   * })
   * 
  **/
  create<T extends Unit43CreateArgs>(
    args: Subset<T, Unit43CreateArgs>
  ): CheckSelect<T, Prisma__Unit43Client<Unit43>, Prisma__Unit43Client<Unit43GetPayload<T>>>
  /**
   * Delete a Unit43.
   * @param {Unit43DeleteArgs} args - Arguments to delete one Unit43.
   * @example
   * // Delete one Unit43
   * const Unit43 = await prisma.unit43.delete({
   *   where: {
   *     // ... filter to delete one Unit43
   *   }
   * })
   * 
  **/
  delete<T extends Unit43DeleteArgs>(
    args: Subset<T, Unit43DeleteArgs>
  ): CheckSelect<T, Prisma__Unit43Client<Unit43>, Prisma__Unit43Client<Unit43GetPayload<T>>>
  /**
   * Update one Unit43.
   * @param {Unit43UpdateArgs} args - Arguments to update one Unit43.
   * @example
   * // Update one Unit43
   * const unit43 = await prisma.unit43.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit43UpdateArgs>(
    args: Subset<T, Unit43UpdateArgs>
  ): CheckSelect<T, Prisma__Unit43Client<Unit43>, Prisma__Unit43Client<Unit43GetPayload<T>>>
  /**
   * Delete zero or more Unit43s.
   * @param {Unit43DeleteManyArgs} args - Arguments to filter Unit43s to delete.
   * @example
   * // Delete a few Unit43s
   * const { count } = await prisma.unit43.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit43DeleteManyArgs>(
    args: Subset<T, Unit43DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit43s.
   * @param {Unit43UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit43s
   * const unit43 = await prisma.unit43.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit43UpdateManyArgs>(
    args: Subset<T, Unit43UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit43.
   * @param {Unit43UpsertArgs} args - Arguments to update or create a Unit43.
   * @example
   * // Update or create a Unit43
   * const unit43 = await prisma.unit43.upsert({
   *   create: {
   *     // ... data to create a Unit43
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit43 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit43UpsertArgs>(
    args: Subset<T, Unit43UpsertArgs>
  ): CheckSelect<T, Prisma__Unit43Client<Unit43>, Prisma__Unit43Client<Unit43GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit43Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit43.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit43Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit43 findOne
 */
export type FindOneUnit43Args = {
  /**
   * Select specific fields to fetch from the Unit43
  **/
  select?: Unit43Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit43Include | null
  /**
   * Filter, which Unit43 to fetch.
  **/
  where: Unit43WhereUniqueInput
}


/**
 * Unit43 findMany
 */
export type FindManyUnit43Args = {
  /**
   * Select specific fields to fetch from the Unit43
  **/
  select?: Unit43Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit43Include | null
  /**
   * Filter, which Unit43s to fetch.
  **/
  where?: Unit43WhereInput
  /**
   * Determine the order of the Unit43s to fetch.
  **/
  orderBy?: Unit43OrderByInput
  /**
   * Sets the position for listing Unit43s.
  **/
  cursor?: Unit43WhereUniqueInput
  /**
   * The number of Unit43s to fetch. If negative number, it will take Unit43s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit43s.
  **/
  skip?: number
}


/**
 * Unit43 create
 */
export type Unit43CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit43
  **/
  select?: Unit43Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit43Include | null
  /**
   * The data needed to create a Unit43.
  **/
  data: Unit43CreateInput
}


/**
 * Unit43 update
 */
export type Unit43UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit43
  **/
  select?: Unit43Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit43Include | null
  /**
   * The data needed to update a Unit43.
  **/
  data: Unit43UpdateInput
  /**
   * Choose, which Unit43 to update.
  **/
  where: Unit43WhereUniqueInput
}


/**
 * Unit43 updateMany
 */
export type Unit43UpdateManyArgs = {
  data: Unit43UpdateManyMutationInput
  where?: Unit43WhereInput
}


/**
 * Unit43 upsert
 */
export type Unit43UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit43
  **/
  select?: Unit43Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit43Include | null
  /**
   * The filter to search for the Unit43 to update in case it exists.
  **/
  where: Unit43WhereUniqueInput
  /**
   * In case the Unit43 found by the `where` argument doesn't exist, create a new Unit43 with this data.
  **/
  create: Unit43CreateInput
  /**
   * In case the Unit43 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit43UpdateInput
}


/**
 * Unit43 delete
 */
export type Unit43DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit43
  **/
  select?: Unit43Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit43Include | null
  /**
   * Filter which Unit43 to delete.
  **/
  where: Unit43WhereUniqueInput
}


/**
 * Unit43 deleteMany
 */
export type Unit43DeleteManyArgs = {
  where?: Unit43WhereInput
}


/**
 * Unit43 without action
 */
export type Unit43Args = {
  /**
   * Select specific fields to fetch from the Unit43
  **/
  select?: Unit43Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit43Include | null
}



/**
 * Model Unit44
 */

export type Unit44 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit44Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit44Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit44GetPayload<
  S extends boolean | null | undefined | Unit44Args,
  U = keyof S
> = S extends true
  ? Unit44
  : S extends undefined
  ? never
  : S extends Unit44Args | FindManyUnit44Args
  ? 'include' extends U
    ? Unit44  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit44 ? Unit44[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit44
: Unit44


export interface Unit44Delegate {
  /**
   * Find zero or one Unit44.
   * @param {FindOneUnit44Args} args - Arguments to find a Unit44
   * @example
   * // Get one Unit44
   * const unit44 = await prisma.unit44.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit44Args>(
    args: Subset<T, FindOneUnit44Args>
  ): CheckSelect<T, Prisma__Unit44Client<Unit44 | null>, Prisma__Unit44Client<Unit44GetPayload<T> | null>>
  /**
   * Find zero or more Unit44s.
   * @param {FindManyUnit44Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit44s
   * const unit44s = await prisma.unit44.findMany()
   * 
   * // Get first 10 Unit44s
   * const unit44s = await prisma.unit44.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit44WithIdOnly = await prisma.unit44.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit44Args>(
    args?: Subset<T, FindManyUnit44Args>
  ): CheckSelect<T, Promise<Array<Unit44>>, Promise<Array<Unit44GetPayload<T>>>>
  /**
   * Create a Unit44.
   * @param {Unit44CreateArgs} args - Arguments to create a Unit44.
   * @example
   * // Create one Unit44
   * const Unit44 = await prisma.unit44.create({
   *   data: {
   *     // ... data to create a Unit44
   *   }
   * })
   * 
  **/
  create<T extends Unit44CreateArgs>(
    args: Subset<T, Unit44CreateArgs>
  ): CheckSelect<T, Prisma__Unit44Client<Unit44>, Prisma__Unit44Client<Unit44GetPayload<T>>>
  /**
   * Delete a Unit44.
   * @param {Unit44DeleteArgs} args - Arguments to delete one Unit44.
   * @example
   * // Delete one Unit44
   * const Unit44 = await prisma.unit44.delete({
   *   where: {
   *     // ... filter to delete one Unit44
   *   }
   * })
   * 
  **/
  delete<T extends Unit44DeleteArgs>(
    args: Subset<T, Unit44DeleteArgs>
  ): CheckSelect<T, Prisma__Unit44Client<Unit44>, Prisma__Unit44Client<Unit44GetPayload<T>>>
  /**
   * Update one Unit44.
   * @param {Unit44UpdateArgs} args - Arguments to update one Unit44.
   * @example
   * // Update one Unit44
   * const unit44 = await prisma.unit44.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit44UpdateArgs>(
    args: Subset<T, Unit44UpdateArgs>
  ): CheckSelect<T, Prisma__Unit44Client<Unit44>, Prisma__Unit44Client<Unit44GetPayload<T>>>
  /**
   * Delete zero or more Unit44s.
   * @param {Unit44DeleteManyArgs} args - Arguments to filter Unit44s to delete.
   * @example
   * // Delete a few Unit44s
   * const { count } = await prisma.unit44.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit44DeleteManyArgs>(
    args: Subset<T, Unit44DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit44s.
   * @param {Unit44UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit44s
   * const unit44 = await prisma.unit44.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit44UpdateManyArgs>(
    args: Subset<T, Unit44UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit44.
   * @param {Unit44UpsertArgs} args - Arguments to update or create a Unit44.
   * @example
   * // Update or create a Unit44
   * const unit44 = await prisma.unit44.upsert({
   *   create: {
   *     // ... data to create a Unit44
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit44 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit44UpsertArgs>(
    args: Subset<T, Unit44UpsertArgs>
  ): CheckSelect<T, Prisma__Unit44Client<Unit44>, Prisma__Unit44Client<Unit44GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit44Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit44.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit44Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit44 findOne
 */
export type FindOneUnit44Args = {
  /**
   * Select specific fields to fetch from the Unit44
  **/
  select?: Unit44Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit44Include | null
  /**
   * Filter, which Unit44 to fetch.
  **/
  where: Unit44WhereUniqueInput
}


/**
 * Unit44 findMany
 */
export type FindManyUnit44Args = {
  /**
   * Select specific fields to fetch from the Unit44
  **/
  select?: Unit44Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit44Include | null
  /**
   * Filter, which Unit44s to fetch.
  **/
  where?: Unit44WhereInput
  /**
   * Determine the order of the Unit44s to fetch.
  **/
  orderBy?: Unit44OrderByInput
  /**
   * Sets the position for listing Unit44s.
  **/
  cursor?: Unit44WhereUniqueInput
  /**
   * The number of Unit44s to fetch. If negative number, it will take Unit44s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit44s.
  **/
  skip?: number
}


/**
 * Unit44 create
 */
export type Unit44CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit44
  **/
  select?: Unit44Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit44Include | null
  /**
   * The data needed to create a Unit44.
  **/
  data: Unit44CreateInput
}


/**
 * Unit44 update
 */
export type Unit44UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit44
  **/
  select?: Unit44Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit44Include | null
  /**
   * The data needed to update a Unit44.
  **/
  data: Unit44UpdateInput
  /**
   * Choose, which Unit44 to update.
  **/
  where: Unit44WhereUniqueInput
}


/**
 * Unit44 updateMany
 */
export type Unit44UpdateManyArgs = {
  data: Unit44UpdateManyMutationInput
  where?: Unit44WhereInput
}


/**
 * Unit44 upsert
 */
export type Unit44UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit44
  **/
  select?: Unit44Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit44Include | null
  /**
   * The filter to search for the Unit44 to update in case it exists.
  **/
  where: Unit44WhereUniqueInput
  /**
   * In case the Unit44 found by the `where` argument doesn't exist, create a new Unit44 with this data.
  **/
  create: Unit44CreateInput
  /**
   * In case the Unit44 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit44UpdateInput
}


/**
 * Unit44 delete
 */
export type Unit44DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit44
  **/
  select?: Unit44Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit44Include | null
  /**
   * Filter which Unit44 to delete.
  **/
  where: Unit44WhereUniqueInput
}


/**
 * Unit44 deleteMany
 */
export type Unit44DeleteManyArgs = {
  where?: Unit44WhereInput
}


/**
 * Unit44 without action
 */
export type Unit44Args = {
  /**
   * Select specific fields to fetch from the Unit44
  **/
  select?: Unit44Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit44Include | null
}



/**
 * Model Unit45
 */

export type Unit45 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit45Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit45Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit45GetPayload<
  S extends boolean | null | undefined | Unit45Args,
  U = keyof S
> = S extends true
  ? Unit45
  : S extends undefined
  ? never
  : S extends Unit45Args | FindManyUnit45Args
  ? 'include' extends U
    ? Unit45  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit45 ? Unit45[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit45
: Unit45


export interface Unit45Delegate {
  /**
   * Find zero or one Unit45.
   * @param {FindOneUnit45Args} args - Arguments to find a Unit45
   * @example
   * // Get one Unit45
   * const unit45 = await prisma.unit45.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit45Args>(
    args: Subset<T, FindOneUnit45Args>
  ): CheckSelect<T, Prisma__Unit45Client<Unit45 | null>, Prisma__Unit45Client<Unit45GetPayload<T> | null>>
  /**
   * Find zero or more Unit45s.
   * @param {FindManyUnit45Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit45s
   * const unit45s = await prisma.unit45.findMany()
   * 
   * // Get first 10 Unit45s
   * const unit45s = await prisma.unit45.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit45WithIdOnly = await prisma.unit45.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit45Args>(
    args?: Subset<T, FindManyUnit45Args>
  ): CheckSelect<T, Promise<Array<Unit45>>, Promise<Array<Unit45GetPayload<T>>>>
  /**
   * Create a Unit45.
   * @param {Unit45CreateArgs} args - Arguments to create a Unit45.
   * @example
   * // Create one Unit45
   * const Unit45 = await prisma.unit45.create({
   *   data: {
   *     // ... data to create a Unit45
   *   }
   * })
   * 
  **/
  create<T extends Unit45CreateArgs>(
    args: Subset<T, Unit45CreateArgs>
  ): CheckSelect<T, Prisma__Unit45Client<Unit45>, Prisma__Unit45Client<Unit45GetPayload<T>>>
  /**
   * Delete a Unit45.
   * @param {Unit45DeleteArgs} args - Arguments to delete one Unit45.
   * @example
   * // Delete one Unit45
   * const Unit45 = await prisma.unit45.delete({
   *   where: {
   *     // ... filter to delete one Unit45
   *   }
   * })
   * 
  **/
  delete<T extends Unit45DeleteArgs>(
    args: Subset<T, Unit45DeleteArgs>
  ): CheckSelect<T, Prisma__Unit45Client<Unit45>, Prisma__Unit45Client<Unit45GetPayload<T>>>
  /**
   * Update one Unit45.
   * @param {Unit45UpdateArgs} args - Arguments to update one Unit45.
   * @example
   * // Update one Unit45
   * const unit45 = await prisma.unit45.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit45UpdateArgs>(
    args: Subset<T, Unit45UpdateArgs>
  ): CheckSelect<T, Prisma__Unit45Client<Unit45>, Prisma__Unit45Client<Unit45GetPayload<T>>>
  /**
   * Delete zero or more Unit45s.
   * @param {Unit45DeleteManyArgs} args - Arguments to filter Unit45s to delete.
   * @example
   * // Delete a few Unit45s
   * const { count } = await prisma.unit45.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit45DeleteManyArgs>(
    args: Subset<T, Unit45DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit45s.
   * @param {Unit45UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit45s
   * const unit45 = await prisma.unit45.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit45UpdateManyArgs>(
    args: Subset<T, Unit45UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit45.
   * @param {Unit45UpsertArgs} args - Arguments to update or create a Unit45.
   * @example
   * // Update or create a Unit45
   * const unit45 = await prisma.unit45.upsert({
   *   create: {
   *     // ... data to create a Unit45
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit45 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit45UpsertArgs>(
    args: Subset<T, Unit45UpsertArgs>
  ): CheckSelect<T, Prisma__Unit45Client<Unit45>, Prisma__Unit45Client<Unit45GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit45Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit45.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit45Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit45 findOne
 */
export type FindOneUnit45Args = {
  /**
   * Select specific fields to fetch from the Unit45
  **/
  select?: Unit45Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit45Include | null
  /**
   * Filter, which Unit45 to fetch.
  **/
  where: Unit45WhereUniqueInput
}


/**
 * Unit45 findMany
 */
export type FindManyUnit45Args = {
  /**
   * Select specific fields to fetch from the Unit45
  **/
  select?: Unit45Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit45Include | null
  /**
   * Filter, which Unit45s to fetch.
  **/
  where?: Unit45WhereInput
  /**
   * Determine the order of the Unit45s to fetch.
  **/
  orderBy?: Unit45OrderByInput
  /**
   * Sets the position for listing Unit45s.
  **/
  cursor?: Unit45WhereUniqueInput
  /**
   * The number of Unit45s to fetch. If negative number, it will take Unit45s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit45s.
  **/
  skip?: number
}


/**
 * Unit45 create
 */
export type Unit45CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit45
  **/
  select?: Unit45Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit45Include | null
  /**
   * The data needed to create a Unit45.
  **/
  data: Unit45CreateInput
}


/**
 * Unit45 update
 */
export type Unit45UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit45
  **/
  select?: Unit45Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit45Include | null
  /**
   * The data needed to update a Unit45.
  **/
  data: Unit45UpdateInput
  /**
   * Choose, which Unit45 to update.
  **/
  where: Unit45WhereUniqueInput
}


/**
 * Unit45 updateMany
 */
export type Unit45UpdateManyArgs = {
  data: Unit45UpdateManyMutationInput
  where?: Unit45WhereInput
}


/**
 * Unit45 upsert
 */
export type Unit45UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit45
  **/
  select?: Unit45Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit45Include | null
  /**
   * The filter to search for the Unit45 to update in case it exists.
  **/
  where: Unit45WhereUniqueInput
  /**
   * In case the Unit45 found by the `where` argument doesn't exist, create a new Unit45 with this data.
  **/
  create: Unit45CreateInput
  /**
   * In case the Unit45 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit45UpdateInput
}


/**
 * Unit45 delete
 */
export type Unit45DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit45
  **/
  select?: Unit45Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit45Include | null
  /**
   * Filter which Unit45 to delete.
  **/
  where: Unit45WhereUniqueInput
}


/**
 * Unit45 deleteMany
 */
export type Unit45DeleteManyArgs = {
  where?: Unit45WhereInput
}


/**
 * Unit45 without action
 */
export type Unit45Args = {
  /**
   * Select specific fields to fetch from the Unit45
  **/
  select?: Unit45Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit45Include | null
}



/**
 * Model Unit46
 */

export type Unit46 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit46Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit46Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit46GetPayload<
  S extends boolean | null | undefined | Unit46Args,
  U = keyof S
> = S extends true
  ? Unit46
  : S extends undefined
  ? never
  : S extends Unit46Args | FindManyUnit46Args
  ? 'include' extends U
    ? Unit46  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit46 ? Unit46[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit46
: Unit46


export interface Unit46Delegate {
  /**
   * Find zero or one Unit46.
   * @param {FindOneUnit46Args} args - Arguments to find a Unit46
   * @example
   * // Get one Unit46
   * const unit46 = await prisma.unit46.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit46Args>(
    args: Subset<T, FindOneUnit46Args>
  ): CheckSelect<T, Prisma__Unit46Client<Unit46 | null>, Prisma__Unit46Client<Unit46GetPayload<T> | null>>
  /**
   * Find zero or more Unit46s.
   * @param {FindManyUnit46Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit46s
   * const unit46s = await prisma.unit46.findMany()
   * 
   * // Get first 10 Unit46s
   * const unit46s = await prisma.unit46.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit46WithIdOnly = await prisma.unit46.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit46Args>(
    args?: Subset<T, FindManyUnit46Args>
  ): CheckSelect<T, Promise<Array<Unit46>>, Promise<Array<Unit46GetPayload<T>>>>
  /**
   * Create a Unit46.
   * @param {Unit46CreateArgs} args - Arguments to create a Unit46.
   * @example
   * // Create one Unit46
   * const Unit46 = await prisma.unit46.create({
   *   data: {
   *     // ... data to create a Unit46
   *   }
   * })
   * 
  **/
  create<T extends Unit46CreateArgs>(
    args: Subset<T, Unit46CreateArgs>
  ): CheckSelect<T, Prisma__Unit46Client<Unit46>, Prisma__Unit46Client<Unit46GetPayload<T>>>
  /**
   * Delete a Unit46.
   * @param {Unit46DeleteArgs} args - Arguments to delete one Unit46.
   * @example
   * // Delete one Unit46
   * const Unit46 = await prisma.unit46.delete({
   *   where: {
   *     // ... filter to delete one Unit46
   *   }
   * })
   * 
  **/
  delete<T extends Unit46DeleteArgs>(
    args: Subset<T, Unit46DeleteArgs>
  ): CheckSelect<T, Prisma__Unit46Client<Unit46>, Prisma__Unit46Client<Unit46GetPayload<T>>>
  /**
   * Update one Unit46.
   * @param {Unit46UpdateArgs} args - Arguments to update one Unit46.
   * @example
   * // Update one Unit46
   * const unit46 = await prisma.unit46.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit46UpdateArgs>(
    args: Subset<T, Unit46UpdateArgs>
  ): CheckSelect<T, Prisma__Unit46Client<Unit46>, Prisma__Unit46Client<Unit46GetPayload<T>>>
  /**
   * Delete zero or more Unit46s.
   * @param {Unit46DeleteManyArgs} args - Arguments to filter Unit46s to delete.
   * @example
   * // Delete a few Unit46s
   * const { count } = await prisma.unit46.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit46DeleteManyArgs>(
    args: Subset<T, Unit46DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit46s.
   * @param {Unit46UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit46s
   * const unit46 = await prisma.unit46.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit46UpdateManyArgs>(
    args: Subset<T, Unit46UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit46.
   * @param {Unit46UpsertArgs} args - Arguments to update or create a Unit46.
   * @example
   * // Update or create a Unit46
   * const unit46 = await prisma.unit46.upsert({
   *   create: {
   *     // ... data to create a Unit46
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit46 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit46UpsertArgs>(
    args: Subset<T, Unit46UpsertArgs>
  ): CheckSelect<T, Prisma__Unit46Client<Unit46>, Prisma__Unit46Client<Unit46GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit46Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit46.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit46Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit46 findOne
 */
export type FindOneUnit46Args = {
  /**
   * Select specific fields to fetch from the Unit46
  **/
  select?: Unit46Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit46Include | null
  /**
   * Filter, which Unit46 to fetch.
  **/
  where: Unit46WhereUniqueInput
}


/**
 * Unit46 findMany
 */
export type FindManyUnit46Args = {
  /**
   * Select specific fields to fetch from the Unit46
  **/
  select?: Unit46Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit46Include | null
  /**
   * Filter, which Unit46s to fetch.
  **/
  where?: Unit46WhereInput
  /**
   * Determine the order of the Unit46s to fetch.
  **/
  orderBy?: Unit46OrderByInput
  /**
   * Sets the position for listing Unit46s.
  **/
  cursor?: Unit46WhereUniqueInput
  /**
   * The number of Unit46s to fetch. If negative number, it will take Unit46s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit46s.
  **/
  skip?: number
}


/**
 * Unit46 create
 */
export type Unit46CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit46
  **/
  select?: Unit46Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit46Include | null
  /**
   * The data needed to create a Unit46.
  **/
  data: Unit46CreateInput
}


/**
 * Unit46 update
 */
export type Unit46UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit46
  **/
  select?: Unit46Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit46Include | null
  /**
   * The data needed to update a Unit46.
  **/
  data: Unit46UpdateInput
  /**
   * Choose, which Unit46 to update.
  **/
  where: Unit46WhereUniqueInput
}


/**
 * Unit46 updateMany
 */
export type Unit46UpdateManyArgs = {
  data: Unit46UpdateManyMutationInput
  where?: Unit46WhereInput
}


/**
 * Unit46 upsert
 */
export type Unit46UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit46
  **/
  select?: Unit46Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit46Include | null
  /**
   * The filter to search for the Unit46 to update in case it exists.
  **/
  where: Unit46WhereUniqueInput
  /**
   * In case the Unit46 found by the `where` argument doesn't exist, create a new Unit46 with this data.
  **/
  create: Unit46CreateInput
  /**
   * In case the Unit46 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit46UpdateInput
}


/**
 * Unit46 delete
 */
export type Unit46DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit46
  **/
  select?: Unit46Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit46Include | null
  /**
   * Filter which Unit46 to delete.
  **/
  where: Unit46WhereUniqueInput
}


/**
 * Unit46 deleteMany
 */
export type Unit46DeleteManyArgs = {
  where?: Unit46WhereInput
}


/**
 * Unit46 without action
 */
export type Unit46Args = {
  /**
   * Select specific fields to fetch from the Unit46
  **/
  select?: Unit46Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit46Include | null
}



/**
 * Model Unit47
 */

export type Unit47 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit47Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit47Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit47GetPayload<
  S extends boolean | null | undefined | Unit47Args,
  U = keyof S
> = S extends true
  ? Unit47
  : S extends undefined
  ? never
  : S extends Unit47Args | FindManyUnit47Args
  ? 'include' extends U
    ? Unit47  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit47 ? Unit47[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit47
: Unit47


export interface Unit47Delegate {
  /**
   * Find zero or one Unit47.
   * @param {FindOneUnit47Args} args - Arguments to find a Unit47
   * @example
   * // Get one Unit47
   * const unit47 = await prisma.unit47.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit47Args>(
    args: Subset<T, FindOneUnit47Args>
  ): CheckSelect<T, Prisma__Unit47Client<Unit47 | null>, Prisma__Unit47Client<Unit47GetPayload<T> | null>>
  /**
   * Find zero or more Unit47s.
   * @param {FindManyUnit47Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit47s
   * const unit47s = await prisma.unit47.findMany()
   * 
   * // Get first 10 Unit47s
   * const unit47s = await prisma.unit47.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit47WithIdOnly = await prisma.unit47.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit47Args>(
    args?: Subset<T, FindManyUnit47Args>
  ): CheckSelect<T, Promise<Array<Unit47>>, Promise<Array<Unit47GetPayload<T>>>>
  /**
   * Create a Unit47.
   * @param {Unit47CreateArgs} args - Arguments to create a Unit47.
   * @example
   * // Create one Unit47
   * const Unit47 = await prisma.unit47.create({
   *   data: {
   *     // ... data to create a Unit47
   *   }
   * })
   * 
  **/
  create<T extends Unit47CreateArgs>(
    args: Subset<T, Unit47CreateArgs>
  ): CheckSelect<T, Prisma__Unit47Client<Unit47>, Prisma__Unit47Client<Unit47GetPayload<T>>>
  /**
   * Delete a Unit47.
   * @param {Unit47DeleteArgs} args - Arguments to delete one Unit47.
   * @example
   * // Delete one Unit47
   * const Unit47 = await prisma.unit47.delete({
   *   where: {
   *     // ... filter to delete one Unit47
   *   }
   * })
   * 
  **/
  delete<T extends Unit47DeleteArgs>(
    args: Subset<T, Unit47DeleteArgs>
  ): CheckSelect<T, Prisma__Unit47Client<Unit47>, Prisma__Unit47Client<Unit47GetPayload<T>>>
  /**
   * Update one Unit47.
   * @param {Unit47UpdateArgs} args - Arguments to update one Unit47.
   * @example
   * // Update one Unit47
   * const unit47 = await prisma.unit47.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit47UpdateArgs>(
    args: Subset<T, Unit47UpdateArgs>
  ): CheckSelect<T, Prisma__Unit47Client<Unit47>, Prisma__Unit47Client<Unit47GetPayload<T>>>
  /**
   * Delete zero or more Unit47s.
   * @param {Unit47DeleteManyArgs} args - Arguments to filter Unit47s to delete.
   * @example
   * // Delete a few Unit47s
   * const { count } = await prisma.unit47.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit47DeleteManyArgs>(
    args: Subset<T, Unit47DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit47s.
   * @param {Unit47UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit47s
   * const unit47 = await prisma.unit47.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit47UpdateManyArgs>(
    args: Subset<T, Unit47UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit47.
   * @param {Unit47UpsertArgs} args - Arguments to update or create a Unit47.
   * @example
   * // Update or create a Unit47
   * const unit47 = await prisma.unit47.upsert({
   *   create: {
   *     // ... data to create a Unit47
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit47 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit47UpsertArgs>(
    args: Subset<T, Unit47UpsertArgs>
  ): CheckSelect<T, Prisma__Unit47Client<Unit47>, Prisma__Unit47Client<Unit47GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit47Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit47.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit47Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit47 findOne
 */
export type FindOneUnit47Args = {
  /**
   * Select specific fields to fetch from the Unit47
  **/
  select?: Unit47Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit47Include | null
  /**
   * Filter, which Unit47 to fetch.
  **/
  where: Unit47WhereUniqueInput
}


/**
 * Unit47 findMany
 */
export type FindManyUnit47Args = {
  /**
   * Select specific fields to fetch from the Unit47
  **/
  select?: Unit47Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit47Include | null
  /**
   * Filter, which Unit47s to fetch.
  **/
  where?: Unit47WhereInput
  /**
   * Determine the order of the Unit47s to fetch.
  **/
  orderBy?: Unit47OrderByInput
  /**
   * Sets the position for listing Unit47s.
  **/
  cursor?: Unit47WhereUniqueInput
  /**
   * The number of Unit47s to fetch. If negative number, it will take Unit47s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit47s.
  **/
  skip?: number
}


/**
 * Unit47 create
 */
export type Unit47CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit47
  **/
  select?: Unit47Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit47Include | null
  /**
   * The data needed to create a Unit47.
  **/
  data: Unit47CreateInput
}


/**
 * Unit47 update
 */
export type Unit47UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit47
  **/
  select?: Unit47Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit47Include | null
  /**
   * The data needed to update a Unit47.
  **/
  data: Unit47UpdateInput
  /**
   * Choose, which Unit47 to update.
  **/
  where: Unit47WhereUniqueInput
}


/**
 * Unit47 updateMany
 */
export type Unit47UpdateManyArgs = {
  data: Unit47UpdateManyMutationInput
  where?: Unit47WhereInput
}


/**
 * Unit47 upsert
 */
export type Unit47UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit47
  **/
  select?: Unit47Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit47Include | null
  /**
   * The filter to search for the Unit47 to update in case it exists.
  **/
  where: Unit47WhereUniqueInput
  /**
   * In case the Unit47 found by the `where` argument doesn't exist, create a new Unit47 with this data.
  **/
  create: Unit47CreateInput
  /**
   * In case the Unit47 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit47UpdateInput
}


/**
 * Unit47 delete
 */
export type Unit47DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit47
  **/
  select?: Unit47Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit47Include | null
  /**
   * Filter which Unit47 to delete.
  **/
  where: Unit47WhereUniqueInput
}


/**
 * Unit47 deleteMany
 */
export type Unit47DeleteManyArgs = {
  where?: Unit47WhereInput
}


/**
 * Unit47 without action
 */
export type Unit47Args = {
  /**
   * Select specific fields to fetch from the Unit47
  **/
  select?: Unit47Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit47Include | null
}



/**
 * Model Unit48
 */

export type Unit48 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit48Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit48Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit48GetPayload<
  S extends boolean | null | undefined | Unit48Args,
  U = keyof S
> = S extends true
  ? Unit48
  : S extends undefined
  ? never
  : S extends Unit48Args | FindManyUnit48Args
  ? 'include' extends U
    ? Unit48  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit48 ? Unit48[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit48
: Unit48


export interface Unit48Delegate {
  /**
   * Find zero or one Unit48.
   * @param {FindOneUnit48Args} args - Arguments to find a Unit48
   * @example
   * // Get one Unit48
   * const unit48 = await prisma.unit48.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit48Args>(
    args: Subset<T, FindOneUnit48Args>
  ): CheckSelect<T, Prisma__Unit48Client<Unit48 | null>, Prisma__Unit48Client<Unit48GetPayload<T> | null>>
  /**
   * Find zero or more Unit48s.
   * @param {FindManyUnit48Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit48s
   * const unit48s = await prisma.unit48.findMany()
   * 
   * // Get first 10 Unit48s
   * const unit48s = await prisma.unit48.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit48WithIdOnly = await prisma.unit48.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit48Args>(
    args?: Subset<T, FindManyUnit48Args>
  ): CheckSelect<T, Promise<Array<Unit48>>, Promise<Array<Unit48GetPayload<T>>>>
  /**
   * Create a Unit48.
   * @param {Unit48CreateArgs} args - Arguments to create a Unit48.
   * @example
   * // Create one Unit48
   * const Unit48 = await prisma.unit48.create({
   *   data: {
   *     // ... data to create a Unit48
   *   }
   * })
   * 
  **/
  create<T extends Unit48CreateArgs>(
    args: Subset<T, Unit48CreateArgs>
  ): CheckSelect<T, Prisma__Unit48Client<Unit48>, Prisma__Unit48Client<Unit48GetPayload<T>>>
  /**
   * Delete a Unit48.
   * @param {Unit48DeleteArgs} args - Arguments to delete one Unit48.
   * @example
   * // Delete one Unit48
   * const Unit48 = await prisma.unit48.delete({
   *   where: {
   *     // ... filter to delete one Unit48
   *   }
   * })
   * 
  **/
  delete<T extends Unit48DeleteArgs>(
    args: Subset<T, Unit48DeleteArgs>
  ): CheckSelect<T, Prisma__Unit48Client<Unit48>, Prisma__Unit48Client<Unit48GetPayload<T>>>
  /**
   * Update one Unit48.
   * @param {Unit48UpdateArgs} args - Arguments to update one Unit48.
   * @example
   * // Update one Unit48
   * const unit48 = await prisma.unit48.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit48UpdateArgs>(
    args: Subset<T, Unit48UpdateArgs>
  ): CheckSelect<T, Prisma__Unit48Client<Unit48>, Prisma__Unit48Client<Unit48GetPayload<T>>>
  /**
   * Delete zero or more Unit48s.
   * @param {Unit48DeleteManyArgs} args - Arguments to filter Unit48s to delete.
   * @example
   * // Delete a few Unit48s
   * const { count } = await prisma.unit48.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit48DeleteManyArgs>(
    args: Subset<T, Unit48DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit48s.
   * @param {Unit48UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit48s
   * const unit48 = await prisma.unit48.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit48UpdateManyArgs>(
    args: Subset<T, Unit48UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit48.
   * @param {Unit48UpsertArgs} args - Arguments to update or create a Unit48.
   * @example
   * // Update or create a Unit48
   * const unit48 = await prisma.unit48.upsert({
   *   create: {
   *     // ... data to create a Unit48
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit48 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit48UpsertArgs>(
    args: Subset<T, Unit48UpsertArgs>
  ): CheckSelect<T, Prisma__Unit48Client<Unit48>, Prisma__Unit48Client<Unit48GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit48Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit48.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit48Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit48 findOne
 */
export type FindOneUnit48Args = {
  /**
   * Select specific fields to fetch from the Unit48
  **/
  select?: Unit48Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit48Include | null
  /**
   * Filter, which Unit48 to fetch.
  **/
  where: Unit48WhereUniqueInput
}


/**
 * Unit48 findMany
 */
export type FindManyUnit48Args = {
  /**
   * Select specific fields to fetch from the Unit48
  **/
  select?: Unit48Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit48Include | null
  /**
   * Filter, which Unit48s to fetch.
  **/
  where?: Unit48WhereInput
  /**
   * Determine the order of the Unit48s to fetch.
  **/
  orderBy?: Unit48OrderByInput
  /**
   * Sets the position for listing Unit48s.
  **/
  cursor?: Unit48WhereUniqueInput
  /**
   * The number of Unit48s to fetch. If negative number, it will take Unit48s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit48s.
  **/
  skip?: number
}


/**
 * Unit48 create
 */
export type Unit48CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit48
  **/
  select?: Unit48Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit48Include | null
  /**
   * The data needed to create a Unit48.
  **/
  data: Unit48CreateInput
}


/**
 * Unit48 update
 */
export type Unit48UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit48
  **/
  select?: Unit48Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit48Include | null
  /**
   * The data needed to update a Unit48.
  **/
  data: Unit48UpdateInput
  /**
   * Choose, which Unit48 to update.
  **/
  where: Unit48WhereUniqueInput
}


/**
 * Unit48 updateMany
 */
export type Unit48UpdateManyArgs = {
  data: Unit48UpdateManyMutationInput
  where?: Unit48WhereInput
}


/**
 * Unit48 upsert
 */
export type Unit48UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit48
  **/
  select?: Unit48Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit48Include | null
  /**
   * The filter to search for the Unit48 to update in case it exists.
  **/
  where: Unit48WhereUniqueInput
  /**
   * In case the Unit48 found by the `where` argument doesn't exist, create a new Unit48 with this data.
  **/
  create: Unit48CreateInput
  /**
   * In case the Unit48 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit48UpdateInput
}


/**
 * Unit48 delete
 */
export type Unit48DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit48
  **/
  select?: Unit48Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit48Include | null
  /**
   * Filter which Unit48 to delete.
  **/
  where: Unit48WhereUniqueInput
}


/**
 * Unit48 deleteMany
 */
export type Unit48DeleteManyArgs = {
  where?: Unit48WhereInput
}


/**
 * Unit48 without action
 */
export type Unit48Args = {
  /**
   * Select specific fields to fetch from the Unit48
  **/
  select?: Unit48Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit48Include | null
}



/**
 * Model Unit51
 */

export type Unit51 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit51Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit51Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit51GetPayload<
  S extends boolean | null | undefined | Unit51Args,
  U = keyof S
> = S extends true
  ? Unit51
  : S extends undefined
  ? never
  : S extends Unit51Args | FindManyUnit51Args
  ? 'include' extends U
    ? Unit51  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit51 ? Unit51[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit51
: Unit51


export interface Unit51Delegate {
  /**
   * Find zero or one Unit51.
   * @param {FindOneUnit51Args} args - Arguments to find a Unit51
   * @example
   * // Get one Unit51
   * const unit51 = await prisma.unit51.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit51Args>(
    args: Subset<T, FindOneUnit51Args>
  ): CheckSelect<T, Prisma__Unit51Client<Unit51 | null>, Prisma__Unit51Client<Unit51GetPayload<T> | null>>
  /**
   * Find zero or more Unit51s.
   * @param {FindManyUnit51Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit51s
   * const unit51s = await prisma.unit51.findMany()
   * 
   * // Get first 10 Unit51s
   * const unit51s = await prisma.unit51.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit51WithIdOnly = await prisma.unit51.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit51Args>(
    args?: Subset<T, FindManyUnit51Args>
  ): CheckSelect<T, Promise<Array<Unit51>>, Promise<Array<Unit51GetPayload<T>>>>
  /**
   * Create a Unit51.
   * @param {Unit51CreateArgs} args - Arguments to create a Unit51.
   * @example
   * // Create one Unit51
   * const Unit51 = await prisma.unit51.create({
   *   data: {
   *     // ... data to create a Unit51
   *   }
   * })
   * 
  **/
  create<T extends Unit51CreateArgs>(
    args: Subset<T, Unit51CreateArgs>
  ): CheckSelect<T, Prisma__Unit51Client<Unit51>, Prisma__Unit51Client<Unit51GetPayload<T>>>
  /**
   * Delete a Unit51.
   * @param {Unit51DeleteArgs} args - Arguments to delete one Unit51.
   * @example
   * // Delete one Unit51
   * const Unit51 = await prisma.unit51.delete({
   *   where: {
   *     // ... filter to delete one Unit51
   *   }
   * })
   * 
  **/
  delete<T extends Unit51DeleteArgs>(
    args: Subset<T, Unit51DeleteArgs>
  ): CheckSelect<T, Prisma__Unit51Client<Unit51>, Prisma__Unit51Client<Unit51GetPayload<T>>>
  /**
   * Update one Unit51.
   * @param {Unit51UpdateArgs} args - Arguments to update one Unit51.
   * @example
   * // Update one Unit51
   * const unit51 = await prisma.unit51.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit51UpdateArgs>(
    args: Subset<T, Unit51UpdateArgs>
  ): CheckSelect<T, Prisma__Unit51Client<Unit51>, Prisma__Unit51Client<Unit51GetPayload<T>>>
  /**
   * Delete zero or more Unit51s.
   * @param {Unit51DeleteManyArgs} args - Arguments to filter Unit51s to delete.
   * @example
   * // Delete a few Unit51s
   * const { count } = await prisma.unit51.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit51DeleteManyArgs>(
    args: Subset<T, Unit51DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit51s.
   * @param {Unit51UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit51s
   * const unit51 = await prisma.unit51.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit51UpdateManyArgs>(
    args: Subset<T, Unit51UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit51.
   * @param {Unit51UpsertArgs} args - Arguments to update or create a Unit51.
   * @example
   * // Update or create a Unit51
   * const unit51 = await prisma.unit51.upsert({
   *   create: {
   *     // ... data to create a Unit51
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit51 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit51UpsertArgs>(
    args: Subset<T, Unit51UpsertArgs>
  ): CheckSelect<T, Prisma__Unit51Client<Unit51>, Prisma__Unit51Client<Unit51GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit51Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit51.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit51Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit51 findOne
 */
export type FindOneUnit51Args = {
  /**
   * Select specific fields to fetch from the Unit51
  **/
  select?: Unit51Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit51Include | null
  /**
   * Filter, which Unit51 to fetch.
  **/
  where: Unit51WhereUniqueInput
}


/**
 * Unit51 findMany
 */
export type FindManyUnit51Args = {
  /**
   * Select specific fields to fetch from the Unit51
  **/
  select?: Unit51Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit51Include | null
  /**
   * Filter, which Unit51s to fetch.
  **/
  where?: Unit51WhereInput
  /**
   * Determine the order of the Unit51s to fetch.
  **/
  orderBy?: Unit51OrderByInput
  /**
   * Sets the position for listing Unit51s.
  **/
  cursor?: Unit51WhereUniqueInput
  /**
   * The number of Unit51s to fetch. If negative number, it will take Unit51s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit51s.
  **/
  skip?: number
}


/**
 * Unit51 create
 */
export type Unit51CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit51
  **/
  select?: Unit51Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit51Include | null
  /**
   * The data needed to create a Unit51.
  **/
  data: Unit51CreateInput
}


/**
 * Unit51 update
 */
export type Unit51UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit51
  **/
  select?: Unit51Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit51Include | null
  /**
   * The data needed to update a Unit51.
  **/
  data: Unit51UpdateInput
  /**
   * Choose, which Unit51 to update.
  **/
  where: Unit51WhereUniqueInput
}


/**
 * Unit51 updateMany
 */
export type Unit51UpdateManyArgs = {
  data: Unit51UpdateManyMutationInput
  where?: Unit51WhereInput
}


/**
 * Unit51 upsert
 */
export type Unit51UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit51
  **/
  select?: Unit51Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit51Include | null
  /**
   * The filter to search for the Unit51 to update in case it exists.
  **/
  where: Unit51WhereUniqueInput
  /**
   * In case the Unit51 found by the `where` argument doesn't exist, create a new Unit51 with this data.
  **/
  create: Unit51CreateInput
  /**
   * In case the Unit51 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit51UpdateInput
}


/**
 * Unit51 delete
 */
export type Unit51DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit51
  **/
  select?: Unit51Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit51Include | null
  /**
   * Filter which Unit51 to delete.
  **/
  where: Unit51WhereUniqueInput
}


/**
 * Unit51 deleteMany
 */
export type Unit51DeleteManyArgs = {
  where?: Unit51WhereInput
}


/**
 * Unit51 without action
 */
export type Unit51Args = {
  /**
   * Select specific fields to fetch from the Unit51
  **/
  select?: Unit51Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit51Include | null
}



/**
 * Model Unit52
 */

export type Unit52 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit52Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit52Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit52GetPayload<
  S extends boolean | null | undefined | Unit52Args,
  U = keyof S
> = S extends true
  ? Unit52
  : S extends undefined
  ? never
  : S extends Unit52Args | FindManyUnit52Args
  ? 'include' extends U
    ? Unit52  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit52 ? Unit52[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit52
: Unit52


export interface Unit52Delegate {
  /**
   * Find zero or one Unit52.
   * @param {FindOneUnit52Args} args - Arguments to find a Unit52
   * @example
   * // Get one Unit52
   * const unit52 = await prisma.unit52.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit52Args>(
    args: Subset<T, FindOneUnit52Args>
  ): CheckSelect<T, Prisma__Unit52Client<Unit52 | null>, Prisma__Unit52Client<Unit52GetPayload<T> | null>>
  /**
   * Find zero or more Unit52s.
   * @param {FindManyUnit52Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit52s
   * const unit52s = await prisma.unit52.findMany()
   * 
   * // Get first 10 Unit52s
   * const unit52s = await prisma.unit52.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit52WithIdOnly = await prisma.unit52.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit52Args>(
    args?: Subset<T, FindManyUnit52Args>
  ): CheckSelect<T, Promise<Array<Unit52>>, Promise<Array<Unit52GetPayload<T>>>>
  /**
   * Create a Unit52.
   * @param {Unit52CreateArgs} args - Arguments to create a Unit52.
   * @example
   * // Create one Unit52
   * const Unit52 = await prisma.unit52.create({
   *   data: {
   *     // ... data to create a Unit52
   *   }
   * })
   * 
  **/
  create<T extends Unit52CreateArgs>(
    args: Subset<T, Unit52CreateArgs>
  ): CheckSelect<T, Prisma__Unit52Client<Unit52>, Prisma__Unit52Client<Unit52GetPayload<T>>>
  /**
   * Delete a Unit52.
   * @param {Unit52DeleteArgs} args - Arguments to delete one Unit52.
   * @example
   * // Delete one Unit52
   * const Unit52 = await prisma.unit52.delete({
   *   where: {
   *     // ... filter to delete one Unit52
   *   }
   * })
   * 
  **/
  delete<T extends Unit52DeleteArgs>(
    args: Subset<T, Unit52DeleteArgs>
  ): CheckSelect<T, Prisma__Unit52Client<Unit52>, Prisma__Unit52Client<Unit52GetPayload<T>>>
  /**
   * Update one Unit52.
   * @param {Unit52UpdateArgs} args - Arguments to update one Unit52.
   * @example
   * // Update one Unit52
   * const unit52 = await prisma.unit52.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit52UpdateArgs>(
    args: Subset<T, Unit52UpdateArgs>
  ): CheckSelect<T, Prisma__Unit52Client<Unit52>, Prisma__Unit52Client<Unit52GetPayload<T>>>
  /**
   * Delete zero or more Unit52s.
   * @param {Unit52DeleteManyArgs} args - Arguments to filter Unit52s to delete.
   * @example
   * // Delete a few Unit52s
   * const { count } = await prisma.unit52.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit52DeleteManyArgs>(
    args: Subset<T, Unit52DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit52s.
   * @param {Unit52UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit52s
   * const unit52 = await prisma.unit52.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit52UpdateManyArgs>(
    args: Subset<T, Unit52UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit52.
   * @param {Unit52UpsertArgs} args - Arguments to update or create a Unit52.
   * @example
   * // Update or create a Unit52
   * const unit52 = await prisma.unit52.upsert({
   *   create: {
   *     // ... data to create a Unit52
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit52 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit52UpsertArgs>(
    args: Subset<T, Unit52UpsertArgs>
  ): CheckSelect<T, Prisma__Unit52Client<Unit52>, Prisma__Unit52Client<Unit52GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit52Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit52.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit52Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit52 findOne
 */
export type FindOneUnit52Args = {
  /**
   * Select specific fields to fetch from the Unit52
  **/
  select?: Unit52Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit52Include | null
  /**
   * Filter, which Unit52 to fetch.
  **/
  where: Unit52WhereUniqueInput
}


/**
 * Unit52 findMany
 */
export type FindManyUnit52Args = {
  /**
   * Select specific fields to fetch from the Unit52
  **/
  select?: Unit52Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit52Include | null
  /**
   * Filter, which Unit52s to fetch.
  **/
  where?: Unit52WhereInput
  /**
   * Determine the order of the Unit52s to fetch.
  **/
  orderBy?: Unit52OrderByInput
  /**
   * Sets the position for listing Unit52s.
  **/
  cursor?: Unit52WhereUniqueInput
  /**
   * The number of Unit52s to fetch. If negative number, it will take Unit52s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit52s.
  **/
  skip?: number
}


/**
 * Unit52 create
 */
export type Unit52CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit52
  **/
  select?: Unit52Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit52Include | null
  /**
   * The data needed to create a Unit52.
  **/
  data: Unit52CreateInput
}


/**
 * Unit52 update
 */
export type Unit52UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit52
  **/
  select?: Unit52Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit52Include | null
  /**
   * The data needed to update a Unit52.
  **/
  data: Unit52UpdateInput
  /**
   * Choose, which Unit52 to update.
  **/
  where: Unit52WhereUniqueInput
}


/**
 * Unit52 updateMany
 */
export type Unit52UpdateManyArgs = {
  data: Unit52UpdateManyMutationInput
  where?: Unit52WhereInput
}


/**
 * Unit52 upsert
 */
export type Unit52UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit52
  **/
  select?: Unit52Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit52Include | null
  /**
   * The filter to search for the Unit52 to update in case it exists.
  **/
  where: Unit52WhereUniqueInput
  /**
   * In case the Unit52 found by the `where` argument doesn't exist, create a new Unit52 with this data.
  **/
  create: Unit52CreateInput
  /**
   * In case the Unit52 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit52UpdateInput
}


/**
 * Unit52 delete
 */
export type Unit52DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit52
  **/
  select?: Unit52Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit52Include | null
  /**
   * Filter which Unit52 to delete.
  **/
  where: Unit52WhereUniqueInput
}


/**
 * Unit52 deleteMany
 */
export type Unit52DeleteManyArgs = {
  where?: Unit52WhereInput
}


/**
 * Unit52 without action
 */
export type Unit52Args = {
  /**
   * Select specific fields to fetch from the Unit52
  **/
  select?: Unit52Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit52Include | null
}



/**
 * Model Unit53
 */

export type Unit53 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit53Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit53Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit53GetPayload<
  S extends boolean | null | undefined | Unit53Args,
  U = keyof S
> = S extends true
  ? Unit53
  : S extends undefined
  ? never
  : S extends Unit53Args | FindManyUnit53Args
  ? 'include' extends U
    ? Unit53  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit53 ? Unit53[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit53
: Unit53


export interface Unit53Delegate {
  /**
   * Find zero or one Unit53.
   * @param {FindOneUnit53Args} args - Arguments to find a Unit53
   * @example
   * // Get one Unit53
   * const unit53 = await prisma.unit53.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit53Args>(
    args: Subset<T, FindOneUnit53Args>
  ): CheckSelect<T, Prisma__Unit53Client<Unit53 | null>, Prisma__Unit53Client<Unit53GetPayload<T> | null>>
  /**
   * Find zero or more Unit53s.
   * @param {FindManyUnit53Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit53s
   * const unit53s = await prisma.unit53.findMany()
   * 
   * // Get first 10 Unit53s
   * const unit53s = await prisma.unit53.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit53WithIdOnly = await prisma.unit53.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit53Args>(
    args?: Subset<T, FindManyUnit53Args>
  ): CheckSelect<T, Promise<Array<Unit53>>, Promise<Array<Unit53GetPayload<T>>>>
  /**
   * Create a Unit53.
   * @param {Unit53CreateArgs} args - Arguments to create a Unit53.
   * @example
   * // Create one Unit53
   * const Unit53 = await prisma.unit53.create({
   *   data: {
   *     // ... data to create a Unit53
   *   }
   * })
   * 
  **/
  create<T extends Unit53CreateArgs>(
    args: Subset<T, Unit53CreateArgs>
  ): CheckSelect<T, Prisma__Unit53Client<Unit53>, Prisma__Unit53Client<Unit53GetPayload<T>>>
  /**
   * Delete a Unit53.
   * @param {Unit53DeleteArgs} args - Arguments to delete one Unit53.
   * @example
   * // Delete one Unit53
   * const Unit53 = await prisma.unit53.delete({
   *   where: {
   *     // ... filter to delete one Unit53
   *   }
   * })
   * 
  **/
  delete<T extends Unit53DeleteArgs>(
    args: Subset<T, Unit53DeleteArgs>
  ): CheckSelect<T, Prisma__Unit53Client<Unit53>, Prisma__Unit53Client<Unit53GetPayload<T>>>
  /**
   * Update one Unit53.
   * @param {Unit53UpdateArgs} args - Arguments to update one Unit53.
   * @example
   * // Update one Unit53
   * const unit53 = await prisma.unit53.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit53UpdateArgs>(
    args: Subset<T, Unit53UpdateArgs>
  ): CheckSelect<T, Prisma__Unit53Client<Unit53>, Prisma__Unit53Client<Unit53GetPayload<T>>>
  /**
   * Delete zero or more Unit53s.
   * @param {Unit53DeleteManyArgs} args - Arguments to filter Unit53s to delete.
   * @example
   * // Delete a few Unit53s
   * const { count } = await prisma.unit53.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit53DeleteManyArgs>(
    args: Subset<T, Unit53DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit53s.
   * @param {Unit53UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit53s
   * const unit53 = await prisma.unit53.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit53UpdateManyArgs>(
    args: Subset<T, Unit53UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit53.
   * @param {Unit53UpsertArgs} args - Arguments to update or create a Unit53.
   * @example
   * // Update or create a Unit53
   * const unit53 = await prisma.unit53.upsert({
   *   create: {
   *     // ... data to create a Unit53
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit53 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit53UpsertArgs>(
    args: Subset<T, Unit53UpsertArgs>
  ): CheckSelect<T, Prisma__Unit53Client<Unit53>, Prisma__Unit53Client<Unit53GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit53Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit53.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit53Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit53 findOne
 */
export type FindOneUnit53Args = {
  /**
   * Select specific fields to fetch from the Unit53
  **/
  select?: Unit53Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit53Include | null
  /**
   * Filter, which Unit53 to fetch.
  **/
  where: Unit53WhereUniqueInput
}


/**
 * Unit53 findMany
 */
export type FindManyUnit53Args = {
  /**
   * Select specific fields to fetch from the Unit53
  **/
  select?: Unit53Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit53Include | null
  /**
   * Filter, which Unit53s to fetch.
  **/
  where?: Unit53WhereInput
  /**
   * Determine the order of the Unit53s to fetch.
  **/
  orderBy?: Unit53OrderByInput
  /**
   * Sets the position for listing Unit53s.
  **/
  cursor?: Unit53WhereUniqueInput
  /**
   * The number of Unit53s to fetch. If negative number, it will take Unit53s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit53s.
  **/
  skip?: number
}


/**
 * Unit53 create
 */
export type Unit53CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit53
  **/
  select?: Unit53Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit53Include | null
  /**
   * The data needed to create a Unit53.
  **/
  data: Unit53CreateInput
}


/**
 * Unit53 update
 */
export type Unit53UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit53
  **/
  select?: Unit53Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit53Include | null
  /**
   * The data needed to update a Unit53.
  **/
  data: Unit53UpdateInput
  /**
   * Choose, which Unit53 to update.
  **/
  where: Unit53WhereUniqueInput
}


/**
 * Unit53 updateMany
 */
export type Unit53UpdateManyArgs = {
  data: Unit53UpdateManyMutationInput
  where?: Unit53WhereInput
}


/**
 * Unit53 upsert
 */
export type Unit53UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit53
  **/
  select?: Unit53Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit53Include | null
  /**
   * The filter to search for the Unit53 to update in case it exists.
  **/
  where: Unit53WhereUniqueInput
  /**
   * In case the Unit53 found by the `where` argument doesn't exist, create a new Unit53 with this data.
  **/
  create: Unit53CreateInput
  /**
   * In case the Unit53 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit53UpdateInput
}


/**
 * Unit53 delete
 */
export type Unit53DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit53
  **/
  select?: Unit53Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit53Include | null
  /**
   * Filter which Unit53 to delete.
  **/
  where: Unit53WhereUniqueInput
}


/**
 * Unit53 deleteMany
 */
export type Unit53DeleteManyArgs = {
  where?: Unit53WhereInput
}


/**
 * Unit53 without action
 */
export type Unit53Args = {
  /**
   * Select specific fields to fetch from the Unit53
  **/
  select?: Unit53Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit53Include | null
}



/**
 * Model Unit54
 */

export type Unit54 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit54Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit54Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit54GetPayload<
  S extends boolean | null | undefined | Unit54Args,
  U = keyof S
> = S extends true
  ? Unit54
  : S extends undefined
  ? never
  : S extends Unit54Args | FindManyUnit54Args
  ? 'include' extends U
    ? Unit54  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit54 ? Unit54[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit54
: Unit54


export interface Unit54Delegate {
  /**
   * Find zero or one Unit54.
   * @param {FindOneUnit54Args} args - Arguments to find a Unit54
   * @example
   * // Get one Unit54
   * const unit54 = await prisma.unit54.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit54Args>(
    args: Subset<T, FindOneUnit54Args>
  ): CheckSelect<T, Prisma__Unit54Client<Unit54 | null>, Prisma__Unit54Client<Unit54GetPayload<T> | null>>
  /**
   * Find zero or more Unit54s.
   * @param {FindManyUnit54Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit54s
   * const unit54s = await prisma.unit54.findMany()
   * 
   * // Get first 10 Unit54s
   * const unit54s = await prisma.unit54.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit54WithIdOnly = await prisma.unit54.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit54Args>(
    args?: Subset<T, FindManyUnit54Args>
  ): CheckSelect<T, Promise<Array<Unit54>>, Promise<Array<Unit54GetPayload<T>>>>
  /**
   * Create a Unit54.
   * @param {Unit54CreateArgs} args - Arguments to create a Unit54.
   * @example
   * // Create one Unit54
   * const Unit54 = await prisma.unit54.create({
   *   data: {
   *     // ... data to create a Unit54
   *   }
   * })
   * 
  **/
  create<T extends Unit54CreateArgs>(
    args: Subset<T, Unit54CreateArgs>
  ): CheckSelect<T, Prisma__Unit54Client<Unit54>, Prisma__Unit54Client<Unit54GetPayload<T>>>
  /**
   * Delete a Unit54.
   * @param {Unit54DeleteArgs} args - Arguments to delete one Unit54.
   * @example
   * // Delete one Unit54
   * const Unit54 = await prisma.unit54.delete({
   *   where: {
   *     // ... filter to delete one Unit54
   *   }
   * })
   * 
  **/
  delete<T extends Unit54DeleteArgs>(
    args: Subset<T, Unit54DeleteArgs>
  ): CheckSelect<T, Prisma__Unit54Client<Unit54>, Prisma__Unit54Client<Unit54GetPayload<T>>>
  /**
   * Update one Unit54.
   * @param {Unit54UpdateArgs} args - Arguments to update one Unit54.
   * @example
   * // Update one Unit54
   * const unit54 = await prisma.unit54.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit54UpdateArgs>(
    args: Subset<T, Unit54UpdateArgs>
  ): CheckSelect<T, Prisma__Unit54Client<Unit54>, Prisma__Unit54Client<Unit54GetPayload<T>>>
  /**
   * Delete zero or more Unit54s.
   * @param {Unit54DeleteManyArgs} args - Arguments to filter Unit54s to delete.
   * @example
   * // Delete a few Unit54s
   * const { count } = await prisma.unit54.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit54DeleteManyArgs>(
    args: Subset<T, Unit54DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit54s.
   * @param {Unit54UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit54s
   * const unit54 = await prisma.unit54.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit54UpdateManyArgs>(
    args: Subset<T, Unit54UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit54.
   * @param {Unit54UpsertArgs} args - Arguments to update or create a Unit54.
   * @example
   * // Update or create a Unit54
   * const unit54 = await prisma.unit54.upsert({
   *   create: {
   *     // ... data to create a Unit54
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit54 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit54UpsertArgs>(
    args: Subset<T, Unit54UpsertArgs>
  ): CheckSelect<T, Prisma__Unit54Client<Unit54>, Prisma__Unit54Client<Unit54GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit54Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit54.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit54Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit54 findOne
 */
export type FindOneUnit54Args = {
  /**
   * Select specific fields to fetch from the Unit54
  **/
  select?: Unit54Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit54Include | null
  /**
   * Filter, which Unit54 to fetch.
  **/
  where: Unit54WhereUniqueInput
}


/**
 * Unit54 findMany
 */
export type FindManyUnit54Args = {
  /**
   * Select specific fields to fetch from the Unit54
  **/
  select?: Unit54Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit54Include | null
  /**
   * Filter, which Unit54s to fetch.
  **/
  where?: Unit54WhereInput
  /**
   * Determine the order of the Unit54s to fetch.
  **/
  orderBy?: Unit54OrderByInput
  /**
   * Sets the position for listing Unit54s.
  **/
  cursor?: Unit54WhereUniqueInput
  /**
   * The number of Unit54s to fetch. If negative number, it will take Unit54s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit54s.
  **/
  skip?: number
}


/**
 * Unit54 create
 */
export type Unit54CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit54
  **/
  select?: Unit54Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit54Include | null
  /**
   * The data needed to create a Unit54.
  **/
  data: Unit54CreateInput
}


/**
 * Unit54 update
 */
export type Unit54UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit54
  **/
  select?: Unit54Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit54Include | null
  /**
   * The data needed to update a Unit54.
  **/
  data: Unit54UpdateInput
  /**
   * Choose, which Unit54 to update.
  **/
  where: Unit54WhereUniqueInput
}


/**
 * Unit54 updateMany
 */
export type Unit54UpdateManyArgs = {
  data: Unit54UpdateManyMutationInput
  where?: Unit54WhereInput
}


/**
 * Unit54 upsert
 */
export type Unit54UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit54
  **/
  select?: Unit54Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit54Include | null
  /**
   * The filter to search for the Unit54 to update in case it exists.
  **/
  where: Unit54WhereUniqueInput
  /**
   * In case the Unit54 found by the `where` argument doesn't exist, create a new Unit54 with this data.
  **/
  create: Unit54CreateInput
  /**
   * In case the Unit54 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit54UpdateInput
}


/**
 * Unit54 delete
 */
export type Unit54DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit54
  **/
  select?: Unit54Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit54Include | null
  /**
   * Filter which Unit54 to delete.
  **/
  where: Unit54WhereUniqueInput
}


/**
 * Unit54 deleteMany
 */
export type Unit54DeleteManyArgs = {
  where?: Unit54WhereInput
}


/**
 * Unit54 without action
 */
export type Unit54Args = {
  /**
   * Select specific fields to fetch from the Unit54
  **/
  select?: Unit54Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit54Include | null
}



/**
 * Model Unit55
 */

export type Unit55 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit55Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit55Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit55GetPayload<
  S extends boolean | null | undefined | Unit55Args,
  U = keyof S
> = S extends true
  ? Unit55
  : S extends undefined
  ? never
  : S extends Unit55Args | FindManyUnit55Args
  ? 'include' extends U
    ? Unit55  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit55 ? Unit55[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit55
: Unit55


export interface Unit55Delegate {
  /**
   * Find zero or one Unit55.
   * @param {FindOneUnit55Args} args - Arguments to find a Unit55
   * @example
   * // Get one Unit55
   * const unit55 = await prisma.unit55.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit55Args>(
    args: Subset<T, FindOneUnit55Args>
  ): CheckSelect<T, Prisma__Unit55Client<Unit55 | null>, Prisma__Unit55Client<Unit55GetPayload<T> | null>>
  /**
   * Find zero or more Unit55s.
   * @param {FindManyUnit55Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit55s
   * const unit55s = await prisma.unit55.findMany()
   * 
   * // Get first 10 Unit55s
   * const unit55s = await prisma.unit55.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit55WithIdOnly = await prisma.unit55.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit55Args>(
    args?: Subset<T, FindManyUnit55Args>
  ): CheckSelect<T, Promise<Array<Unit55>>, Promise<Array<Unit55GetPayload<T>>>>
  /**
   * Create a Unit55.
   * @param {Unit55CreateArgs} args - Arguments to create a Unit55.
   * @example
   * // Create one Unit55
   * const Unit55 = await prisma.unit55.create({
   *   data: {
   *     // ... data to create a Unit55
   *   }
   * })
   * 
  **/
  create<T extends Unit55CreateArgs>(
    args: Subset<T, Unit55CreateArgs>
  ): CheckSelect<T, Prisma__Unit55Client<Unit55>, Prisma__Unit55Client<Unit55GetPayload<T>>>
  /**
   * Delete a Unit55.
   * @param {Unit55DeleteArgs} args - Arguments to delete one Unit55.
   * @example
   * // Delete one Unit55
   * const Unit55 = await prisma.unit55.delete({
   *   where: {
   *     // ... filter to delete one Unit55
   *   }
   * })
   * 
  **/
  delete<T extends Unit55DeleteArgs>(
    args: Subset<T, Unit55DeleteArgs>
  ): CheckSelect<T, Prisma__Unit55Client<Unit55>, Prisma__Unit55Client<Unit55GetPayload<T>>>
  /**
   * Update one Unit55.
   * @param {Unit55UpdateArgs} args - Arguments to update one Unit55.
   * @example
   * // Update one Unit55
   * const unit55 = await prisma.unit55.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit55UpdateArgs>(
    args: Subset<T, Unit55UpdateArgs>
  ): CheckSelect<T, Prisma__Unit55Client<Unit55>, Prisma__Unit55Client<Unit55GetPayload<T>>>
  /**
   * Delete zero or more Unit55s.
   * @param {Unit55DeleteManyArgs} args - Arguments to filter Unit55s to delete.
   * @example
   * // Delete a few Unit55s
   * const { count } = await prisma.unit55.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit55DeleteManyArgs>(
    args: Subset<T, Unit55DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit55s.
   * @param {Unit55UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit55s
   * const unit55 = await prisma.unit55.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit55UpdateManyArgs>(
    args: Subset<T, Unit55UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit55.
   * @param {Unit55UpsertArgs} args - Arguments to update or create a Unit55.
   * @example
   * // Update or create a Unit55
   * const unit55 = await prisma.unit55.upsert({
   *   create: {
   *     // ... data to create a Unit55
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit55 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit55UpsertArgs>(
    args: Subset<T, Unit55UpsertArgs>
  ): CheckSelect<T, Prisma__Unit55Client<Unit55>, Prisma__Unit55Client<Unit55GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit55Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit55.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit55Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit55 findOne
 */
export type FindOneUnit55Args = {
  /**
   * Select specific fields to fetch from the Unit55
  **/
  select?: Unit55Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit55Include | null
  /**
   * Filter, which Unit55 to fetch.
  **/
  where: Unit55WhereUniqueInput
}


/**
 * Unit55 findMany
 */
export type FindManyUnit55Args = {
  /**
   * Select specific fields to fetch from the Unit55
  **/
  select?: Unit55Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit55Include | null
  /**
   * Filter, which Unit55s to fetch.
  **/
  where?: Unit55WhereInput
  /**
   * Determine the order of the Unit55s to fetch.
  **/
  orderBy?: Unit55OrderByInput
  /**
   * Sets the position for listing Unit55s.
  **/
  cursor?: Unit55WhereUniqueInput
  /**
   * The number of Unit55s to fetch. If negative number, it will take Unit55s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit55s.
  **/
  skip?: number
}


/**
 * Unit55 create
 */
export type Unit55CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit55
  **/
  select?: Unit55Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit55Include | null
  /**
   * The data needed to create a Unit55.
  **/
  data: Unit55CreateInput
}


/**
 * Unit55 update
 */
export type Unit55UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit55
  **/
  select?: Unit55Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit55Include | null
  /**
   * The data needed to update a Unit55.
  **/
  data: Unit55UpdateInput
  /**
   * Choose, which Unit55 to update.
  **/
  where: Unit55WhereUniqueInput
}


/**
 * Unit55 updateMany
 */
export type Unit55UpdateManyArgs = {
  data: Unit55UpdateManyMutationInput
  where?: Unit55WhereInput
}


/**
 * Unit55 upsert
 */
export type Unit55UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit55
  **/
  select?: Unit55Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit55Include | null
  /**
   * The filter to search for the Unit55 to update in case it exists.
  **/
  where: Unit55WhereUniqueInput
  /**
   * In case the Unit55 found by the `where` argument doesn't exist, create a new Unit55 with this data.
  **/
  create: Unit55CreateInput
  /**
   * In case the Unit55 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit55UpdateInput
}


/**
 * Unit55 delete
 */
export type Unit55DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit55
  **/
  select?: Unit55Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit55Include | null
  /**
   * Filter which Unit55 to delete.
  **/
  where: Unit55WhereUniqueInput
}


/**
 * Unit55 deleteMany
 */
export type Unit55DeleteManyArgs = {
  where?: Unit55WhereInput
}


/**
 * Unit55 without action
 */
export type Unit55Args = {
  /**
   * Select specific fields to fetch from the Unit55
  **/
  select?: Unit55Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit55Include | null
}



/**
 * Model Unit61
 */

export type Unit61 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit61Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit61Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit61GetPayload<
  S extends boolean | null | undefined | Unit61Args,
  U = keyof S
> = S extends true
  ? Unit61
  : S extends undefined
  ? never
  : S extends Unit61Args | FindManyUnit61Args
  ? 'include' extends U
    ? Unit61  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit61 ? Unit61[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit61
: Unit61


export interface Unit61Delegate {
  /**
   * Find zero or one Unit61.
   * @param {FindOneUnit61Args} args - Arguments to find a Unit61
   * @example
   * // Get one Unit61
   * const unit61 = await prisma.unit61.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit61Args>(
    args: Subset<T, FindOneUnit61Args>
  ): CheckSelect<T, Prisma__Unit61Client<Unit61 | null>, Prisma__Unit61Client<Unit61GetPayload<T> | null>>
  /**
   * Find zero or more Unit61s.
   * @param {FindManyUnit61Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit61s
   * const unit61s = await prisma.unit61.findMany()
   * 
   * // Get first 10 Unit61s
   * const unit61s = await prisma.unit61.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit61WithIdOnly = await prisma.unit61.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit61Args>(
    args?: Subset<T, FindManyUnit61Args>
  ): CheckSelect<T, Promise<Array<Unit61>>, Promise<Array<Unit61GetPayload<T>>>>
  /**
   * Create a Unit61.
   * @param {Unit61CreateArgs} args - Arguments to create a Unit61.
   * @example
   * // Create one Unit61
   * const Unit61 = await prisma.unit61.create({
   *   data: {
   *     // ... data to create a Unit61
   *   }
   * })
   * 
  **/
  create<T extends Unit61CreateArgs>(
    args: Subset<T, Unit61CreateArgs>
  ): CheckSelect<T, Prisma__Unit61Client<Unit61>, Prisma__Unit61Client<Unit61GetPayload<T>>>
  /**
   * Delete a Unit61.
   * @param {Unit61DeleteArgs} args - Arguments to delete one Unit61.
   * @example
   * // Delete one Unit61
   * const Unit61 = await prisma.unit61.delete({
   *   where: {
   *     // ... filter to delete one Unit61
   *   }
   * })
   * 
  **/
  delete<T extends Unit61DeleteArgs>(
    args: Subset<T, Unit61DeleteArgs>
  ): CheckSelect<T, Prisma__Unit61Client<Unit61>, Prisma__Unit61Client<Unit61GetPayload<T>>>
  /**
   * Update one Unit61.
   * @param {Unit61UpdateArgs} args - Arguments to update one Unit61.
   * @example
   * // Update one Unit61
   * const unit61 = await prisma.unit61.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit61UpdateArgs>(
    args: Subset<T, Unit61UpdateArgs>
  ): CheckSelect<T, Prisma__Unit61Client<Unit61>, Prisma__Unit61Client<Unit61GetPayload<T>>>
  /**
   * Delete zero or more Unit61s.
   * @param {Unit61DeleteManyArgs} args - Arguments to filter Unit61s to delete.
   * @example
   * // Delete a few Unit61s
   * const { count } = await prisma.unit61.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit61DeleteManyArgs>(
    args: Subset<T, Unit61DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit61s.
   * @param {Unit61UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit61s
   * const unit61 = await prisma.unit61.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit61UpdateManyArgs>(
    args: Subset<T, Unit61UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit61.
   * @param {Unit61UpsertArgs} args - Arguments to update or create a Unit61.
   * @example
   * // Update or create a Unit61
   * const unit61 = await prisma.unit61.upsert({
   *   create: {
   *     // ... data to create a Unit61
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit61 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit61UpsertArgs>(
    args: Subset<T, Unit61UpsertArgs>
  ): CheckSelect<T, Prisma__Unit61Client<Unit61>, Prisma__Unit61Client<Unit61GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit61Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit61.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit61Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit61 findOne
 */
export type FindOneUnit61Args = {
  /**
   * Select specific fields to fetch from the Unit61
  **/
  select?: Unit61Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit61Include | null
  /**
   * Filter, which Unit61 to fetch.
  **/
  where: Unit61WhereUniqueInput
}


/**
 * Unit61 findMany
 */
export type FindManyUnit61Args = {
  /**
   * Select specific fields to fetch from the Unit61
  **/
  select?: Unit61Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit61Include | null
  /**
   * Filter, which Unit61s to fetch.
  **/
  where?: Unit61WhereInput
  /**
   * Determine the order of the Unit61s to fetch.
  **/
  orderBy?: Unit61OrderByInput
  /**
   * Sets the position for listing Unit61s.
  **/
  cursor?: Unit61WhereUniqueInput
  /**
   * The number of Unit61s to fetch. If negative number, it will take Unit61s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit61s.
  **/
  skip?: number
}


/**
 * Unit61 create
 */
export type Unit61CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit61
  **/
  select?: Unit61Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit61Include | null
  /**
   * The data needed to create a Unit61.
  **/
  data: Unit61CreateInput
}


/**
 * Unit61 update
 */
export type Unit61UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit61
  **/
  select?: Unit61Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit61Include | null
  /**
   * The data needed to update a Unit61.
  **/
  data: Unit61UpdateInput
  /**
   * Choose, which Unit61 to update.
  **/
  where: Unit61WhereUniqueInput
}


/**
 * Unit61 updateMany
 */
export type Unit61UpdateManyArgs = {
  data: Unit61UpdateManyMutationInput
  where?: Unit61WhereInput
}


/**
 * Unit61 upsert
 */
export type Unit61UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit61
  **/
  select?: Unit61Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit61Include | null
  /**
   * The filter to search for the Unit61 to update in case it exists.
  **/
  where: Unit61WhereUniqueInput
  /**
   * In case the Unit61 found by the `where` argument doesn't exist, create a new Unit61 with this data.
  **/
  create: Unit61CreateInput
  /**
   * In case the Unit61 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit61UpdateInput
}


/**
 * Unit61 delete
 */
export type Unit61DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit61
  **/
  select?: Unit61Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit61Include | null
  /**
   * Filter which Unit61 to delete.
  **/
  where: Unit61WhereUniqueInput
}


/**
 * Unit61 deleteMany
 */
export type Unit61DeleteManyArgs = {
  where?: Unit61WhereInput
}


/**
 * Unit61 without action
 */
export type Unit61Args = {
  /**
   * Select specific fields to fetch from the Unit61
  **/
  select?: Unit61Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit61Include | null
}



/**
 * Model Unit62
 */

export type Unit62 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit62Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit62Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit62GetPayload<
  S extends boolean | null | undefined | Unit62Args,
  U = keyof S
> = S extends true
  ? Unit62
  : S extends undefined
  ? never
  : S extends Unit62Args | FindManyUnit62Args
  ? 'include' extends U
    ? Unit62  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit62 ? Unit62[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit62
: Unit62


export interface Unit62Delegate {
  /**
   * Find zero or one Unit62.
   * @param {FindOneUnit62Args} args - Arguments to find a Unit62
   * @example
   * // Get one Unit62
   * const unit62 = await prisma.unit62.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit62Args>(
    args: Subset<T, FindOneUnit62Args>
  ): CheckSelect<T, Prisma__Unit62Client<Unit62 | null>, Prisma__Unit62Client<Unit62GetPayload<T> | null>>
  /**
   * Find zero or more Unit62s.
   * @param {FindManyUnit62Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit62s
   * const unit62s = await prisma.unit62.findMany()
   * 
   * // Get first 10 Unit62s
   * const unit62s = await prisma.unit62.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit62WithIdOnly = await prisma.unit62.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit62Args>(
    args?: Subset<T, FindManyUnit62Args>
  ): CheckSelect<T, Promise<Array<Unit62>>, Promise<Array<Unit62GetPayload<T>>>>
  /**
   * Create a Unit62.
   * @param {Unit62CreateArgs} args - Arguments to create a Unit62.
   * @example
   * // Create one Unit62
   * const Unit62 = await prisma.unit62.create({
   *   data: {
   *     // ... data to create a Unit62
   *   }
   * })
   * 
  **/
  create<T extends Unit62CreateArgs>(
    args: Subset<T, Unit62CreateArgs>
  ): CheckSelect<T, Prisma__Unit62Client<Unit62>, Prisma__Unit62Client<Unit62GetPayload<T>>>
  /**
   * Delete a Unit62.
   * @param {Unit62DeleteArgs} args - Arguments to delete one Unit62.
   * @example
   * // Delete one Unit62
   * const Unit62 = await prisma.unit62.delete({
   *   where: {
   *     // ... filter to delete one Unit62
   *   }
   * })
   * 
  **/
  delete<T extends Unit62DeleteArgs>(
    args: Subset<T, Unit62DeleteArgs>
  ): CheckSelect<T, Prisma__Unit62Client<Unit62>, Prisma__Unit62Client<Unit62GetPayload<T>>>
  /**
   * Update one Unit62.
   * @param {Unit62UpdateArgs} args - Arguments to update one Unit62.
   * @example
   * // Update one Unit62
   * const unit62 = await prisma.unit62.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit62UpdateArgs>(
    args: Subset<T, Unit62UpdateArgs>
  ): CheckSelect<T, Prisma__Unit62Client<Unit62>, Prisma__Unit62Client<Unit62GetPayload<T>>>
  /**
   * Delete zero or more Unit62s.
   * @param {Unit62DeleteManyArgs} args - Arguments to filter Unit62s to delete.
   * @example
   * // Delete a few Unit62s
   * const { count } = await prisma.unit62.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit62DeleteManyArgs>(
    args: Subset<T, Unit62DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit62s.
   * @param {Unit62UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit62s
   * const unit62 = await prisma.unit62.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit62UpdateManyArgs>(
    args: Subset<T, Unit62UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit62.
   * @param {Unit62UpsertArgs} args - Arguments to update or create a Unit62.
   * @example
   * // Update or create a Unit62
   * const unit62 = await prisma.unit62.upsert({
   *   create: {
   *     // ... data to create a Unit62
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit62 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit62UpsertArgs>(
    args: Subset<T, Unit62UpsertArgs>
  ): CheckSelect<T, Prisma__Unit62Client<Unit62>, Prisma__Unit62Client<Unit62GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit62Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit62.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit62Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit62 findOne
 */
export type FindOneUnit62Args = {
  /**
   * Select specific fields to fetch from the Unit62
  **/
  select?: Unit62Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit62Include | null
  /**
   * Filter, which Unit62 to fetch.
  **/
  where: Unit62WhereUniqueInput
}


/**
 * Unit62 findMany
 */
export type FindManyUnit62Args = {
  /**
   * Select specific fields to fetch from the Unit62
  **/
  select?: Unit62Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit62Include | null
  /**
   * Filter, which Unit62s to fetch.
  **/
  where?: Unit62WhereInput
  /**
   * Determine the order of the Unit62s to fetch.
  **/
  orderBy?: Unit62OrderByInput
  /**
   * Sets the position for listing Unit62s.
  **/
  cursor?: Unit62WhereUniqueInput
  /**
   * The number of Unit62s to fetch. If negative number, it will take Unit62s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit62s.
  **/
  skip?: number
}


/**
 * Unit62 create
 */
export type Unit62CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit62
  **/
  select?: Unit62Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit62Include | null
  /**
   * The data needed to create a Unit62.
  **/
  data: Unit62CreateInput
}


/**
 * Unit62 update
 */
export type Unit62UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit62
  **/
  select?: Unit62Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit62Include | null
  /**
   * The data needed to update a Unit62.
  **/
  data: Unit62UpdateInput
  /**
   * Choose, which Unit62 to update.
  **/
  where: Unit62WhereUniqueInput
}


/**
 * Unit62 updateMany
 */
export type Unit62UpdateManyArgs = {
  data: Unit62UpdateManyMutationInput
  where?: Unit62WhereInput
}


/**
 * Unit62 upsert
 */
export type Unit62UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit62
  **/
  select?: Unit62Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit62Include | null
  /**
   * The filter to search for the Unit62 to update in case it exists.
  **/
  where: Unit62WhereUniqueInput
  /**
   * In case the Unit62 found by the `where` argument doesn't exist, create a new Unit62 with this data.
  **/
  create: Unit62CreateInput
  /**
   * In case the Unit62 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit62UpdateInput
}


/**
 * Unit62 delete
 */
export type Unit62DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit62
  **/
  select?: Unit62Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit62Include | null
  /**
   * Filter which Unit62 to delete.
  **/
  where: Unit62WhereUniqueInput
}


/**
 * Unit62 deleteMany
 */
export type Unit62DeleteManyArgs = {
  where?: Unit62WhereInput
}


/**
 * Unit62 without action
 */
export type Unit62Args = {
  /**
   * Select specific fields to fetch from the Unit62
  **/
  select?: Unit62Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit62Include | null
}



/**
 * Model Unit63
 */

export type Unit63 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit63Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit63Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit63GetPayload<
  S extends boolean | null | undefined | Unit63Args,
  U = keyof S
> = S extends true
  ? Unit63
  : S extends undefined
  ? never
  : S extends Unit63Args | FindManyUnit63Args
  ? 'include' extends U
    ? Unit63  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit63 ? Unit63[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit63
: Unit63


export interface Unit63Delegate {
  /**
   * Find zero or one Unit63.
   * @param {FindOneUnit63Args} args - Arguments to find a Unit63
   * @example
   * // Get one Unit63
   * const unit63 = await prisma.unit63.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit63Args>(
    args: Subset<T, FindOneUnit63Args>
  ): CheckSelect<T, Prisma__Unit63Client<Unit63 | null>, Prisma__Unit63Client<Unit63GetPayload<T> | null>>
  /**
   * Find zero or more Unit63s.
   * @param {FindManyUnit63Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit63s
   * const unit63s = await prisma.unit63.findMany()
   * 
   * // Get first 10 Unit63s
   * const unit63s = await prisma.unit63.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit63WithIdOnly = await prisma.unit63.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit63Args>(
    args?: Subset<T, FindManyUnit63Args>
  ): CheckSelect<T, Promise<Array<Unit63>>, Promise<Array<Unit63GetPayload<T>>>>
  /**
   * Create a Unit63.
   * @param {Unit63CreateArgs} args - Arguments to create a Unit63.
   * @example
   * // Create one Unit63
   * const Unit63 = await prisma.unit63.create({
   *   data: {
   *     // ... data to create a Unit63
   *   }
   * })
   * 
  **/
  create<T extends Unit63CreateArgs>(
    args: Subset<T, Unit63CreateArgs>
  ): CheckSelect<T, Prisma__Unit63Client<Unit63>, Prisma__Unit63Client<Unit63GetPayload<T>>>
  /**
   * Delete a Unit63.
   * @param {Unit63DeleteArgs} args - Arguments to delete one Unit63.
   * @example
   * // Delete one Unit63
   * const Unit63 = await prisma.unit63.delete({
   *   where: {
   *     // ... filter to delete one Unit63
   *   }
   * })
   * 
  **/
  delete<T extends Unit63DeleteArgs>(
    args: Subset<T, Unit63DeleteArgs>
  ): CheckSelect<T, Prisma__Unit63Client<Unit63>, Prisma__Unit63Client<Unit63GetPayload<T>>>
  /**
   * Update one Unit63.
   * @param {Unit63UpdateArgs} args - Arguments to update one Unit63.
   * @example
   * // Update one Unit63
   * const unit63 = await prisma.unit63.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit63UpdateArgs>(
    args: Subset<T, Unit63UpdateArgs>
  ): CheckSelect<T, Prisma__Unit63Client<Unit63>, Prisma__Unit63Client<Unit63GetPayload<T>>>
  /**
   * Delete zero or more Unit63s.
   * @param {Unit63DeleteManyArgs} args - Arguments to filter Unit63s to delete.
   * @example
   * // Delete a few Unit63s
   * const { count } = await prisma.unit63.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit63DeleteManyArgs>(
    args: Subset<T, Unit63DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit63s.
   * @param {Unit63UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit63s
   * const unit63 = await prisma.unit63.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit63UpdateManyArgs>(
    args: Subset<T, Unit63UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit63.
   * @param {Unit63UpsertArgs} args - Arguments to update or create a Unit63.
   * @example
   * // Update or create a Unit63
   * const unit63 = await prisma.unit63.upsert({
   *   create: {
   *     // ... data to create a Unit63
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit63 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit63UpsertArgs>(
    args: Subset<T, Unit63UpsertArgs>
  ): CheckSelect<T, Prisma__Unit63Client<Unit63>, Prisma__Unit63Client<Unit63GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit63Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit63.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit63Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit63 findOne
 */
export type FindOneUnit63Args = {
  /**
   * Select specific fields to fetch from the Unit63
  **/
  select?: Unit63Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit63Include | null
  /**
   * Filter, which Unit63 to fetch.
  **/
  where: Unit63WhereUniqueInput
}


/**
 * Unit63 findMany
 */
export type FindManyUnit63Args = {
  /**
   * Select specific fields to fetch from the Unit63
  **/
  select?: Unit63Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit63Include | null
  /**
   * Filter, which Unit63s to fetch.
  **/
  where?: Unit63WhereInput
  /**
   * Determine the order of the Unit63s to fetch.
  **/
  orderBy?: Unit63OrderByInput
  /**
   * Sets the position for listing Unit63s.
  **/
  cursor?: Unit63WhereUniqueInput
  /**
   * The number of Unit63s to fetch. If negative number, it will take Unit63s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit63s.
  **/
  skip?: number
}


/**
 * Unit63 create
 */
export type Unit63CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit63
  **/
  select?: Unit63Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit63Include | null
  /**
   * The data needed to create a Unit63.
  **/
  data: Unit63CreateInput
}


/**
 * Unit63 update
 */
export type Unit63UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit63
  **/
  select?: Unit63Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit63Include | null
  /**
   * The data needed to update a Unit63.
  **/
  data: Unit63UpdateInput
  /**
   * Choose, which Unit63 to update.
  **/
  where: Unit63WhereUniqueInput
}


/**
 * Unit63 updateMany
 */
export type Unit63UpdateManyArgs = {
  data: Unit63UpdateManyMutationInput
  where?: Unit63WhereInput
}


/**
 * Unit63 upsert
 */
export type Unit63UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit63
  **/
  select?: Unit63Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit63Include | null
  /**
   * The filter to search for the Unit63 to update in case it exists.
  **/
  where: Unit63WhereUniqueInput
  /**
   * In case the Unit63 found by the `where` argument doesn't exist, create a new Unit63 with this data.
  **/
  create: Unit63CreateInput
  /**
   * In case the Unit63 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit63UpdateInput
}


/**
 * Unit63 delete
 */
export type Unit63DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit63
  **/
  select?: Unit63Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit63Include | null
  /**
   * Filter which Unit63 to delete.
  **/
  where: Unit63WhereUniqueInput
}


/**
 * Unit63 deleteMany
 */
export type Unit63DeleteManyArgs = {
  where?: Unit63WhereInput
}


/**
 * Unit63 without action
 */
export type Unit63Args = {
  /**
   * Select specific fields to fetch from the Unit63
  **/
  select?: Unit63Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit63Include | null
}



/**
 * Model Unit64
 */

export type Unit64 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit64Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit64Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit64GetPayload<
  S extends boolean | null | undefined | Unit64Args,
  U = keyof S
> = S extends true
  ? Unit64
  : S extends undefined
  ? never
  : S extends Unit64Args | FindManyUnit64Args
  ? 'include' extends U
    ? Unit64  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit64 ? Unit64[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit64
: Unit64


export interface Unit64Delegate {
  /**
   * Find zero or one Unit64.
   * @param {FindOneUnit64Args} args - Arguments to find a Unit64
   * @example
   * // Get one Unit64
   * const unit64 = await prisma.unit64.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit64Args>(
    args: Subset<T, FindOneUnit64Args>
  ): CheckSelect<T, Prisma__Unit64Client<Unit64 | null>, Prisma__Unit64Client<Unit64GetPayload<T> | null>>
  /**
   * Find zero or more Unit64s.
   * @param {FindManyUnit64Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit64s
   * const unit64s = await prisma.unit64.findMany()
   * 
   * // Get first 10 Unit64s
   * const unit64s = await prisma.unit64.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit64WithIdOnly = await prisma.unit64.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit64Args>(
    args?: Subset<T, FindManyUnit64Args>
  ): CheckSelect<T, Promise<Array<Unit64>>, Promise<Array<Unit64GetPayload<T>>>>
  /**
   * Create a Unit64.
   * @param {Unit64CreateArgs} args - Arguments to create a Unit64.
   * @example
   * // Create one Unit64
   * const Unit64 = await prisma.unit64.create({
   *   data: {
   *     // ... data to create a Unit64
   *   }
   * })
   * 
  **/
  create<T extends Unit64CreateArgs>(
    args: Subset<T, Unit64CreateArgs>
  ): CheckSelect<T, Prisma__Unit64Client<Unit64>, Prisma__Unit64Client<Unit64GetPayload<T>>>
  /**
   * Delete a Unit64.
   * @param {Unit64DeleteArgs} args - Arguments to delete one Unit64.
   * @example
   * // Delete one Unit64
   * const Unit64 = await prisma.unit64.delete({
   *   where: {
   *     // ... filter to delete one Unit64
   *   }
   * })
   * 
  **/
  delete<T extends Unit64DeleteArgs>(
    args: Subset<T, Unit64DeleteArgs>
  ): CheckSelect<T, Prisma__Unit64Client<Unit64>, Prisma__Unit64Client<Unit64GetPayload<T>>>
  /**
   * Update one Unit64.
   * @param {Unit64UpdateArgs} args - Arguments to update one Unit64.
   * @example
   * // Update one Unit64
   * const unit64 = await prisma.unit64.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit64UpdateArgs>(
    args: Subset<T, Unit64UpdateArgs>
  ): CheckSelect<T, Prisma__Unit64Client<Unit64>, Prisma__Unit64Client<Unit64GetPayload<T>>>
  /**
   * Delete zero or more Unit64s.
   * @param {Unit64DeleteManyArgs} args - Arguments to filter Unit64s to delete.
   * @example
   * // Delete a few Unit64s
   * const { count } = await prisma.unit64.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit64DeleteManyArgs>(
    args: Subset<T, Unit64DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit64s.
   * @param {Unit64UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit64s
   * const unit64 = await prisma.unit64.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit64UpdateManyArgs>(
    args: Subset<T, Unit64UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit64.
   * @param {Unit64UpsertArgs} args - Arguments to update or create a Unit64.
   * @example
   * // Update or create a Unit64
   * const unit64 = await prisma.unit64.upsert({
   *   create: {
   *     // ... data to create a Unit64
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit64 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit64UpsertArgs>(
    args: Subset<T, Unit64UpsertArgs>
  ): CheckSelect<T, Prisma__Unit64Client<Unit64>, Prisma__Unit64Client<Unit64GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit64Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit64.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit64Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit64 findOne
 */
export type FindOneUnit64Args = {
  /**
   * Select specific fields to fetch from the Unit64
  **/
  select?: Unit64Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit64Include | null
  /**
   * Filter, which Unit64 to fetch.
  **/
  where: Unit64WhereUniqueInput
}


/**
 * Unit64 findMany
 */
export type FindManyUnit64Args = {
  /**
   * Select specific fields to fetch from the Unit64
  **/
  select?: Unit64Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit64Include | null
  /**
   * Filter, which Unit64s to fetch.
  **/
  where?: Unit64WhereInput
  /**
   * Determine the order of the Unit64s to fetch.
  **/
  orderBy?: Unit64OrderByInput
  /**
   * Sets the position for listing Unit64s.
  **/
  cursor?: Unit64WhereUniqueInput
  /**
   * The number of Unit64s to fetch. If negative number, it will take Unit64s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit64s.
  **/
  skip?: number
}


/**
 * Unit64 create
 */
export type Unit64CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit64
  **/
  select?: Unit64Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit64Include | null
  /**
   * The data needed to create a Unit64.
  **/
  data: Unit64CreateInput
}


/**
 * Unit64 update
 */
export type Unit64UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit64
  **/
  select?: Unit64Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit64Include | null
  /**
   * The data needed to update a Unit64.
  **/
  data: Unit64UpdateInput
  /**
   * Choose, which Unit64 to update.
  **/
  where: Unit64WhereUniqueInput
}


/**
 * Unit64 updateMany
 */
export type Unit64UpdateManyArgs = {
  data: Unit64UpdateManyMutationInput
  where?: Unit64WhereInput
}


/**
 * Unit64 upsert
 */
export type Unit64UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit64
  **/
  select?: Unit64Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit64Include | null
  /**
   * The filter to search for the Unit64 to update in case it exists.
  **/
  where: Unit64WhereUniqueInput
  /**
   * In case the Unit64 found by the `where` argument doesn't exist, create a new Unit64 with this data.
  **/
  create: Unit64CreateInput
  /**
   * In case the Unit64 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit64UpdateInput
}


/**
 * Unit64 delete
 */
export type Unit64DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit64
  **/
  select?: Unit64Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit64Include | null
  /**
   * Filter which Unit64 to delete.
  **/
  where: Unit64WhereUniqueInput
}


/**
 * Unit64 deleteMany
 */
export type Unit64DeleteManyArgs = {
  where?: Unit64WhereInput
}


/**
 * Unit64 without action
 */
export type Unit64Args = {
  /**
   * Select specific fields to fetch from the Unit64
  **/
  select?: Unit64Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit64Include | null
}



/**
 * Model Unit65
 */

export type Unit65 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit65Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit65Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit65GetPayload<
  S extends boolean | null | undefined | Unit65Args,
  U = keyof S
> = S extends true
  ? Unit65
  : S extends undefined
  ? never
  : S extends Unit65Args | FindManyUnit65Args
  ? 'include' extends U
    ? Unit65  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit65 ? Unit65[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit65
: Unit65


export interface Unit65Delegate {
  /**
   * Find zero or one Unit65.
   * @param {FindOneUnit65Args} args - Arguments to find a Unit65
   * @example
   * // Get one Unit65
   * const unit65 = await prisma.unit65.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit65Args>(
    args: Subset<T, FindOneUnit65Args>
  ): CheckSelect<T, Prisma__Unit65Client<Unit65 | null>, Prisma__Unit65Client<Unit65GetPayload<T> | null>>
  /**
   * Find zero or more Unit65s.
   * @param {FindManyUnit65Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit65s
   * const unit65s = await prisma.unit65.findMany()
   * 
   * // Get first 10 Unit65s
   * const unit65s = await prisma.unit65.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit65WithIdOnly = await prisma.unit65.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit65Args>(
    args?: Subset<T, FindManyUnit65Args>
  ): CheckSelect<T, Promise<Array<Unit65>>, Promise<Array<Unit65GetPayload<T>>>>
  /**
   * Create a Unit65.
   * @param {Unit65CreateArgs} args - Arguments to create a Unit65.
   * @example
   * // Create one Unit65
   * const Unit65 = await prisma.unit65.create({
   *   data: {
   *     // ... data to create a Unit65
   *   }
   * })
   * 
  **/
  create<T extends Unit65CreateArgs>(
    args: Subset<T, Unit65CreateArgs>
  ): CheckSelect<T, Prisma__Unit65Client<Unit65>, Prisma__Unit65Client<Unit65GetPayload<T>>>
  /**
   * Delete a Unit65.
   * @param {Unit65DeleteArgs} args - Arguments to delete one Unit65.
   * @example
   * // Delete one Unit65
   * const Unit65 = await prisma.unit65.delete({
   *   where: {
   *     // ... filter to delete one Unit65
   *   }
   * })
   * 
  **/
  delete<T extends Unit65DeleteArgs>(
    args: Subset<T, Unit65DeleteArgs>
  ): CheckSelect<T, Prisma__Unit65Client<Unit65>, Prisma__Unit65Client<Unit65GetPayload<T>>>
  /**
   * Update one Unit65.
   * @param {Unit65UpdateArgs} args - Arguments to update one Unit65.
   * @example
   * // Update one Unit65
   * const unit65 = await prisma.unit65.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit65UpdateArgs>(
    args: Subset<T, Unit65UpdateArgs>
  ): CheckSelect<T, Prisma__Unit65Client<Unit65>, Prisma__Unit65Client<Unit65GetPayload<T>>>
  /**
   * Delete zero or more Unit65s.
   * @param {Unit65DeleteManyArgs} args - Arguments to filter Unit65s to delete.
   * @example
   * // Delete a few Unit65s
   * const { count } = await prisma.unit65.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit65DeleteManyArgs>(
    args: Subset<T, Unit65DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit65s.
   * @param {Unit65UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit65s
   * const unit65 = await prisma.unit65.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit65UpdateManyArgs>(
    args: Subset<T, Unit65UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit65.
   * @param {Unit65UpsertArgs} args - Arguments to update or create a Unit65.
   * @example
   * // Update or create a Unit65
   * const unit65 = await prisma.unit65.upsert({
   *   create: {
   *     // ... data to create a Unit65
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit65 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit65UpsertArgs>(
    args: Subset<T, Unit65UpsertArgs>
  ): CheckSelect<T, Prisma__Unit65Client<Unit65>, Prisma__Unit65Client<Unit65GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit65Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit65.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit65Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit65 findOne
 */
export type FindOneUnit65Args = {
  /**
   * Select specific fields to fetch from the Unit65
  **/
  select?: Unit65Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit65Include | null
  /**
   * Filter, which Unit65 to fetch.
  **/
  where: Unit65WhereUniqueInput
}


/**
 * Unit65 findMany
 */
export type FindManyUnit65Args = {
  /**
   * Select specific fields to fetch from the Unit65
  **/
  select?: Unit65Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit65Include | null
  /**
   * Filter, which Unit65s to fetch.
  **/
  where?: Unit65WhereInput
  /**
   * Determine the order of the Unit65s to fetch.
  **/
  orderBy?: Unit65OrderByInput
  /**
   * Sets the position for listing Unit65s.
  **/
  cursor?: Unit65WhereUniqueInput
  /**
   * The number of Unit65s to fetch. If negative number, it will take Unit65s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit65s.
  **/
  skip?: number
}


/**
 * Unit65 create
 */
export type Unit65CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit65
  **/
  select?: Unit65Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit65Include | null
  /**
   * The data needed to create a Unit65.
  **/
  data: Unit65CreateInput
}


/**
 * Unit65 update
 */
export type Unit65UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit65
  **/
  select?: Unit65Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit65Include | null
  /**
   * The data needed to update a Unit65.
  **/
  data: Unit65UpdateInput
  /**
   * Choose, which Unit65 to update.
  **/
  where: Unit65WhereUniqueInput
}


/**
 * Unit65 updateMany
 */
export type Unit65UpdateManyArgs = {
  data: Unit65UpdateManyMutationInput
  where?: Unit65WhereInput
}


/**
 * Unit65 upsert
 */
export type Unit65UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit65
  **/
  select?: Unit65Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit65Include | null
  /**
   * The filter to search for the Unit65 to update in case it exists.
  **/
  where: Unit65WhereUniqueInput
  /**
   * In case the Unit65 found by the `where` argument doesn't exist, create a new Unit65 with this data.
  **/
  create: Unit65CreateInput
  /**
   * In case the Unit65 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit65UpdateInput
}


/**
 * Unit65 delete
 */
export type Unit65DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit65
  **/
  select?: Unit65Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit65Include | null
  /**
   * Filter which Unit65 to delete.
  **/
  where: Unit65WhereUniqueInput
}


/**
 * Unit65 deleteMany
 */
export type Unit65DeleteManyArgs = {
  where?: Unit65WhereInput
}


/**
 * Unit65 without action
 */
export type Unit65Args = {
  /**
   * Select specific fields to fetch from the Unit65
  **/
  select?: Unit65Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit65Include | null
}



/**
 * Model Unit71
 */

export type Unit71 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit71Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit71Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit71GetPayload<
  S extends boolean | null | undefined | Unit71Args,
  U = keyof S
> = S extends true
  ? Unit71
  : S extends undefined
  ? never
  : S extends Unit71Args | FindManyUnit71Args
  ? 'include' extends U
    ? Unit71  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit71 ? Unit71[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit71
: Unit71


export interface Unit71Delegate {
  /**
   * Find zero or one Unit71.
   * @param {FindOneUnit71Args} args - Arguments to find a Unit71
   * @example
   * // Get one Unit71
   * const unit71 = await prisma.unit71.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit71Args>(
    args: Subset<T, FindOneUnit71Args>
  ): CheckSelect<T, Prisma__Unit71Client<Unit71 | null>, Prisma__Unit71Client<Unit71GetPayload<T> | null>>
  /**
   * Find zero or more Unit71s.
   * @param {FindManyUnit71Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit71s
   * const unit71s = await prisma.unit71.findMany()
   * 
   * // Get first 10 Unit71s
   * const unit71s = await prisma.unit71.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit71WithIdOnly = await prisma.unit71.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit71Args>(
    args?: Subset<T, FindManyUnit71Args>
  ): CheckSelect<T, Promise<Array<Unit71>>, Promise<Array<Unit71GetPayload<T>>>>
  /**
   * Create a Unit71.
   * @param {Unit71CreateArgs} args - Arguments to create a Unit71.
   * @example
   * // Create one Unit71
   * const Unit71 = await prisma.unit71.create({
   *   data: {
   *     // ... data to create a Unit71
   *   }
   * })
   * 
  **/
  create<T extends Unit71CreateArgs>(
    args: Subset<T, Unit71CreateArgs>
  ): CheckSelect<T, Prisma__Unit71Client<Unit71>, Prisma__Unit71Client<Unit71GetPayload<T>>>
  /**
   * Delete a Unit71.
   * @param {Unit71DeleteArgs} args - Arguments to delete one Unit71.
   * @example
   * // Delete one Unit71
   * const Unit71 = await prisma.unit71.delete({
   *   where: {
   *     // ... filter to delete one Unit71
   *   }
   * })
   * 
  **/
  delete<T extends Unit71DeleteArgs>(
    args: Subset<T, Unit71DeleteArgs>
  ): CheckSelect<T, Prisma__Unit71Client<Unit71>, Prisma__Unit71Client<Unit71GetPayload<T>>>
  /**
   * Update one Unit71.
   * @param {Unit71UpdateArgs} args - Arguments to update one Unit71.
   * @example
   * // Update one Unit71
   * const unit71 = await prisma.unit71.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit71UpdateArgs>(
    args: Subset<T, Unit71UpdateArgs>
  ): CheckSelect<T, Prisma__Unit71Client<Unit71>, Prisma__Unit71Client<Unit71GetPayload<T>>>
  /**
   * Delete zero or more Unit71s.
   * @param {Unit71DeleteManyArgs} args - Arguments to filter Unit71s to delete.
   * @example
   * // Delete a few Unit71s
   * const { count } = await prisma.unit71.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit71DeleteManyArgs>(
    args: Subset<T, Unit71DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit71s.
   * @param {Unit71UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit71s
   * const unit71 = await prisma.unit71.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit71UpdateManyArgs>(
    args: Subset<T, Unit71UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit71.
   * @param {Unit71UpsertArgs} args - Arguments to update or create a Unit71.
   * @example
   * // Update or create a Unit71
   * const unit71 = await prisma.unit71.upsert({
   *   create: {
   *     // ... data to create a Unit71
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit71 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit71UpsertArgs>(
    args: Subset<T, Unit71UpsertArgs>
  ): CheckSelect<T, Prisma__Unit71Client<Unit71>, Prisma__Unit71Client<Unit71GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit71Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit71.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit71Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit71 findOne
 */
export type FindOneUnit71Args = {
  /**
   * Select specific fields to fetch from the Unit71
  **/
  select?: Unit71Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit71Include | null
  /**
   * Filter, which Unit71 to fetch.
  **/
  where: Unit71WhereUniqueInput
}


/**
 * Unit71 findMany
 */
export type FindManyUnit71Args = {
  /**
   * Select specific fields to fetch from the Unit71
  **/
  select?: Unit71Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit71Include | null
  /**
   * Filter, which Unit71s to fetch.
  **/
  where?: Unit71WhereInput
  /**
   * Determine the order of the Unit71s to fetch.
  **/
  orderBy?: Unit71OrderByInput
  /**
   * Sets the position for listing Unit71s.
  **/
  cursor?: Unit71WhereUniqueInput
  /**
   * The number of Unit71s to fetch. If negative number, it will take Unit71s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit71s.
  **/
  skip?: number
}


/**
 * Unit71 create
 */
export type Unit71CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit71
  **/
  select?: Unit71Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit71Include | null
  /**
   * The data needed to create a Unit71.
  **/
  data: Unit71CreateInput
}


/**
 * Unit71 update
 */
export type Unit71UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit71
  **/
  select?: Unit71Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit71Include | null
  /**
   * The data needed to update a Unit71.
  **/
  data: Unit71UpdateInput
  /**
   * Choose, which Unit71 to update.
  **/
  where: Unit71WhereUniqueInput
}


/**
 * Unit71 updateMany
 */
export type Unit71UpdateManyArgs = {
  data: Unit71UpdateManyMutationInput
  where?: Unit71WhereInput
}


/**
 * Unit71 upsert
 */
export type Unit71UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit71
  **/
  select?: Unit71Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit71Include | null
  /**
   * The filter to search for the Unit71 to update in case it exists.
  **/
  where: Unit71WhereUniqueInput
  /**
   * In case the Unit71 found by the `where` argument doesn't exist, create a new Unit71 with this data.
  **/
  create: Unit71CreateInput
  /**
   * In case the Unit71 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit71UpdateInput
}


/**
 * Unit71 delete
 */
export type Unit71DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit71
  **/
  select?: Unit71Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit71Include | null
  /**
   * Filter which Unit71 to delete.
  **/
  where: Unit71WhereUniqueInput
}


/**
 * Unit71 deleteMany
 */
export type Unit71DeleteManyArgs = {
  where?: Unit71WhereInput
}


/**
 * Unit71 without action
 */
export type Unit71Args = {
  /**
   * Select specific fields to fetch from the Unit71
  **/
  select?: Unit71Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit71Include | null
}



/**
 * Model Unit72
 */

export type Unit72 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit72Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit72Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit72GetPayload<
  S extends boolean | null | undefined | Unit72Args,
  U = keyof S
> = S extends true
  ? Unit72
  : S extends undefined
  ? never
  : S extends Unit72Args | FindManyUnit72Args
  ? 'include' extends U
    ? Unit72  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit72 ? Unit72[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit72
: Unit72


export interface Unit72Delegate {
  /**
   * Find zero or one Unit72.
   * @param {FindOneUnit72Args} args - Arguments to find a Unit72
   * @example
   * // Get one Unit72
   * const unit72 = await prisma.unit72.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit72Args>(
    args: Subset<T, FindOneUnit72Args>
  ): CheckSelect<T, Prisma__Unit72Client<Unit72 | null>, Prisma__Unit72Client<Unit72GetPayload<T> | null>>
  /**
   * Find zero or more Unit72s.
   * @param {FindManyUnit72Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit72s
   * const unit72s = await prisma.unit72.findMany()
   * 
   * // Get first 10 Unit72s
   * const unit72s = await prisma.unit72.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit72WithIdOnly = await prisma.unit72.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit72Args>(
    args?: Subset<T, FindManyUnit72Args>
  ): CheckSelect<T, Promise<Array<Unit72>>, Promise<Array<Unit72GetPayload<T>>>>
  /**
   * Create a Unit72.
   * @param {Unit72CreateArgs} args - Arguments to create a Unit72.
   * @example
   * // Create one Unit72
   * const Unit72 = await prisma.unit72.create({
   *   data: {
   *     // ... data to create a Unit72
   *   }
   * })
   * 
  **/
  create<T extends Unit72CreateArgs>(
    args: Subset<T, Unit72CreateArgs>
  ): CheckSelect<T, Prisma__Unit72Client<Unit72>, Prisma__Unit72Client<Unit72GetPayload<T>>>
  /**
   * Delete a Unit72.
   * @param {Unit72DeleteArgs} args - Arguments to delete one Unit72.
   * @example
   * // Delete one Unit72
   * const Unit72 = await prisma.unit72.delete({
   *   where: {
   *     // ... filter to delete one Unit72
   *   }
   * })
   * 
  **/
  delete<T extends Unit72DeleteArgs>(
    args: Subset<T, Unit72DeleteArgs>
  ): CheckSelect<T, Prisma__Unit72Client<Unit72>, Prisma__Unit72Client<Unit72GetPayload<T>>>
  /**
   * Update one Unit72.
   * @param {Unit72UpdateArgs} args - Arguments to update one Unit72.
   * @example
   * // Update one Unit72
   * const unit72 = await prisma.unit72.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit72UpdateArgs>(
    args: Subset<T, Unit72UpdateArgs>
  ): CheckSelect<T, Prisma__Unit72Client<Unit72>, Prisma__Unit72Client<Unit72GetPayload<T>>>
  /**
   * Delete zero or more Unit72s.
   * @param {Unit72DeleteManyArgs} args - Arguments to filter Unit72s to delete.
   * @example
   * // Delete a few Unit72s
   * const { count } = await prisma.unit72.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit72DeleteManyArgs>(
    args: Subset<T, Unit72DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit72s.
   * @param {Unit72UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit72s
   * const unit72 = await prisma.unit72.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit72UpdateManyArgs>(
    args: Subset<T, Unit72UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit72.
   * @param {Unit72UpsertArgs} args - Arguments to update or create a Unit72.
   * @example
   * // Update or create a Unit72
   * const unit72 = await prisma.unit72.upsert({
   *   create: {
   *     // ... data to create a Unit72
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit72 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit72UpsertArgs>(
    args: Subset<T, Unit72UpsertArgs>
  ): CheckSelect<T, Prisma__Unit72Client<Unit72>, Prisma__Unit72Client<Unit72GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit72Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit72.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit72Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit72 findOne
 */
export type FindOneUnit72Args = {
  /**
   * Select specific fields to fetch from the Unit72
  **/
  select?: Unit72Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit72Include | null
  /**
   * Filter, which Unit72 to fetch.
  **/
  where: Unit72WhereUniqueInput
}


/**
 * Unit72 findMany
 */
export type FindManyUnit72Args = {
  /**
   * Select specific fields to fetch from the Unit72
  **/
  select?: Unit72Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit72Include | null
  /**
   * Filter, which Unit72s to fetch.
  **/
  where?: Unit72WhereInput
  /**
   * Determine the order of the Unit72s to fetch.
  **/
  orderBy?: Unit72OrderByInput
  /**
   * Sets the position for listing Unit72s.
  **/
  cursor?: Unit72WhereUniqueInput
  /**
   * The number of Unit72s to fetch. If negative number, it will take Unit72s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit72s.
  **/
  skip?: number
}


/**
 * Unit72 create
 */
export type Unit72CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit72
  **/
  select?: Unit72Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit72Include | null
  /**
   * The data needed to create a Unit72.
  **/
  data: Unit72CreateInput
}


/**
 * Unit72 update
 */
export type Unit72UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit72
  **/
  select?: Unit72Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit72Include | null
  /**
   * The data needed to update a Unit72.
  **/
  data: Unit72UpdateInput
  /**
   * Choose, which Unit72 to update.
  **/
  where: Unit72WhereUniqueInput
}


/**
 * Unit72 updateMany
 */
export type Unit72UpdateManyArgs = {
  data: Unit72UpdateManyMutationInput
  where?: Unit72WhereInput
}


/**
 * Unit72 upsert
 */
export type Unit72UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit72
  **/
  select?: Unit72Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit72Include | null
  /**
   * The filter to search for the Unit72 to update in case it exists.
  **/
  where: Unit72WhereUniqueInput
  /**
   * In case the Unit72 found by the `where` argument doesn't exist, create a new Unit72 with this data.
  **/
  create: Unit72CreateInput
  /**
   * In case the Unit72 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit72UpdateInput
}


/**
 * Unit72 delete
 */
export type Unit72DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit72
  **/
  select?: Unit72Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit72Include | null
  /**
   * Filter which Unit72 to delete.
  **/
  where: Unit72WhereUniqueInput
}


/**
 * Unit72 deleteMany
 */
export type Unit72DeleteManyArgs = {
  where?: Unit72WhereInput
}


/**
 * Unit72 without action
 */
export type Unit72Args = {
  /**
   * Select specific fields to fetch from the Unit72
  **/
  select?: Unit72Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit72Include | null
}



/**
 * Model Unit73
 */

export type Unit73 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit73Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit73Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit73GetPayload<
  S extends boolean | null | undefined | Unit73Args,
  U = keyof S
> = S extends true
  ? Unit73
  : S extends undefined
  ? never
  : S extends Unit73Args | FindManyUnit73Args
  ? 'include' extends U
    ? Unit73  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit73 ? Unit73[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit73
: Unit73


export interface Unit73Delegate {
  /**
   * Find zero or one Unit73.
   * @param {FindOneUnit73Args} args - Arguments to find a Unit73
   * @example
   * // Get one Unit73
   * const unit73 = await prisma.unit73.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit73Args>(
    args: Subset<T, FindOneUnit73Args>
  ): CheckSelect<T, Prisma__Unit73Client<Unit73 | null>, Prisma__Unit73Client<Unit73GetPayload<T> | null>>
  /**
   * Find zero or more Unit73s.
   * @param {FindManyUnit73Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit73s
   * const unit73s = await prisma.unit73.findMany()
   * 
   * // Get first 10 Unit73s
   * const unit73s = await prisma.unit73.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit73WithIdOnly = await prisma.unit73.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit73Args>(
    args?: Subset<T, FindManyUnit73Args>
  ): CheckSelect<T, Promise<Array<Unit73>>, Promise<Array<Unit73GetPayload<T>>>>
  /**
   * Create a Unit73.
   * @param {Unit73CreateArgs} args - Arguments to create a Unit73.
   * @example
   * // Create one Unit73
   * const Unit73 = await prisma.unit73.create({
   *   data: {
   *     // ... data to create a Unit73
   *   }
   * })
   * 
  **/
  create<T extends Unit73CreateArgs>(
    args: Subset<T, Unit73CreateArgs>
  ): CheckSelect<T, Prisma__Unit73Client<Unit73>, Prisma__Unit73Client<Unit73GetPayload<T>>>
  /**
   * Delete a Unit73.
   * @param {Unit73DeleteArgs} args - Arguments to delete one Unit73.
   * @example
   * // Delete one Unit73
   * const Unit73 = await prisma.unit73.delete({
   *   where: {
   *     // ... filter to delete one Unit73
   *   }
   * })
   * 
  **/
  delete<T extends Unit73DeleteArgs>(
    args: Subset<T, Unit73DeleteArgs>
  ): CheckSelect<T, Prisma__Unit73Client<Unit73>, Prisma__Unit73Client<Unit73GetPayload<T>>>
  /**
   * Update one Unit73.
   * @param {Unit73UpdateArgs} args - Arguments to update one Unit73.
   * @example
   * // Update one Unit73
   * const unit73 = await prisma.unit73.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit73UpdateArgs>(
    args: Subset<T, Unit73UpdateArgs>
  ): CheckSelect<T, Prisma__Unit73Client<Unit73>, Prisma__Unit73Client<Unit73GetPayload<T>>>
  /**
   * Delete zero or more Unit73s.
   * @param {Unit73DeleteManyArgs} args - Arguments to filter Unit73s to delete.
   * @example
   * // Delete a few Unit73s
   * const { count } = await prisma.unit73.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit73DeleteManyArgs>(
    args: Subset<T, Unit73DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit73s.
   * @param {Unit73UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit73s
   * const unit73 = await prisma.unit73.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit73UpdateManyArgs>(
    args: Subset<T, Unit73UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit73.
   * @param {Unit73UpsertArgs} args - Arguments to update or create a Unit73.
   * @example
   * // Update or create a Unit73
   * const unit73 = await prisma.unit73.upsert({
   *   create: {
   *     // ... data to create a Unit73
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit73 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit73UpsertArgs>(
    args: Subset<T, Unit73UpsertArgs>
  ): CheckSelect<T, Prisma__Unit73Client<Unit73>, Prisma__Unit73Client<Unit73GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit73Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit73.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit73Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit73 findOne
 */
export type FindOneUnit73Args = {
  /**
   * Select specific fields to fetch from the Unit73
  **/
  select?: Unit73Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit73Include | null
  /**
   * Filter, which Unit73 to fetch.
  **/
  where: Unit73WhereUniqueInput
}


/**
 * Unit73 findMany
 */
export type FindManyUnit73Args = {
  /**
   * Select specific fields to fetch from the Unit73
  **/
  select?: Unit73Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit73Include | null
  /**
   * Filter, which Unit73s to fetch.
  **/
  where?: Unit73WhereInput
  /**
   * Determine the order of the Unit73s to fetch.
  **/
  orderBy?: Unit73OrderByInput
  /**
   * Sets the position for listing Unit73s.
  **/
  cursor?: Unit73WhereUniqueInput
  /**
   * The number of Unit73s to fetch. If negative number, it will take Unit73s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit73s.
  **/
  skip?: number
}


/**
 * Unit73 create
 */
export type Unit73CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit73
  **/
  select?: Unit73Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit73Include | null
  /**
   * The data needed to create a Unit73.
  **/
  data: Unit73CreateInput
}


/**
 * Unit73 update
 */
export type Unit73UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit73
  **/
  select?: Unit73Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit73Include | null
  /**
   * The data needed to update a Unit73.
  **/
  data: Unit73UpdateInput
  /**
   * Choose, which Unit73 to update.
  **/
  where: Unit73WhereUniqueInput
}


/**
 * Unit73 updateMany
 */
export type Unit73UpdateManyArgs = {
  data: Unit73UpdateManyMutationInput
  where?: Unit73WhereInput
}


/**
 * Unit73 upsert
 */
export type Unit73UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit73
  **/
  select?: Unit73Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit73Include | null
  /**
   * The filter to search for the Unit73 to update in case it exists.
  **/
  where: Unit73WhereUniqueInput
  /**
   * In case the Unit73 found by the `where` argument doesn't exist, create a new Unit73 with this data.
  **/
  create: Unit73CreateInput
  /**
   * In case the Unit73 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit73UpdateInput
}


/**
 * Unit73 delete
 */
export type Unit73DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit73
  **/
  select?: Unit73Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit73Include | null
  /**
   * Filter which Unit73 to delete.
  **/
  where: Unit73WhereUniqueInput
}


/**
 * Unit73 deleteMany
 */
export type Unit73DeleteManyArgs = {
  where?: Unit73WhereInput
}


/**
 * Unit73 without action
 */
export type Unit73Args = {
  /**
   * Select specific fields to fetch from the Unit73
  **/
  select?: Unit73Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit73Include | null
}



/**
 * Model Unit74
 */

export type Unit74 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit74Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit74Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit74GetPayload<
  S extends boolean | null | undefined | Unit74Args,
  U = keyof S
> = S extends true
  ? Unit74
  : S extends undefined
  ? never
  : S extends Unit74Args | FindManyUnit74Args
  ? 'include' extends U
    ? Unit74  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit74 ? Unit74[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit74
: Unit74


export interface Unit74Delegate {
  /**
   * Find zero or one Unit74.
   * @param {FindOneUnit74Args} args - Arguments to find a Unit74
   * @example
   * // Get one Unit74
   * const unit74 = await prisma.unit74.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit74Args>(
    args: Subset<T, FindOneUnit74Args>
  ): CheckSelect<T, Prisma__Unit74Client<Unit74 | null>, Prisma__Unit74Client<Unit74GetPayload<T> | null>>
  /**
   * Find zero or more Unit74s.
   * @param {FindManyUnit74Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit74s
   * const unit74s = await prisma.unit74.findMany()
   * 
   * // Get first 10 Unit74s
   * const unit74s = await prisma.unit74.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit74WithIdOnly = await prisma.unit74.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit74Args>(
    args?: Subset<T, FindManyUnit74Args>
  ): CheckSelect<T, Promise<Array<Unit74>>, Promise<Array<Unit74GetPayload<T>>>>
  /**
   * Create a Unit74.
   * @param {Unit74CreateArgs} args - Arguments to create a Unit74.
   * @example
   * // Create one Unit74
   * const Unit74 = await prisma.unit74.create({
   *   data: {
   *     // ... data to create a Unit74
   *   }
   * })
   * 
  **/
  create<T extends Unit74CreateArgs>(
    args: Subset<T, Unit74CreateArgs>
  ): CheckSelect<T, Prisma__Unit74Client<Unit74>, Prisma__Unit74Client<Unit74GetPayload<T>>>
  /**
   * Delete a Unit74.
   * @param {Unit74DeleteArgs} args - Arguments to delete one Unit74.
   * @example
   * // Delete one Unit74
   * const Unit74 = await prisma.unit74.delete({
   *   where: {
   *     // ... filter to delete one Unit74
   *   }
   * })
   * 
  **/
  delete<T extends Unit74DeleteArgs>(
    args: Subset<T, Unit74DeleteArgs>
  ): CheckSelect<T, Prisma__Unit74Client<Unit74>, Prisma__Unit74Client<Unit74GetPayload<T>>>
  /**
   * Update one Unit74.
   * @param {Unit74UpdateArgs} args - Arguments to update one Unit74.
   * @example
   * // Update one Unit74
   * const unit74 = await prisma.unit74.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit74UpdateArgs>(
    args: Subset<T, Unit74UpdateArgs>
  ): CheckSelect<T, Prisma__Unit74Client<Unit74>, Prisma__Unit74Client<Unit74GetPayload<T>>>
  /**
   * Delete zero or more Unit74s.
   * @param {Unit74DeleteManyArgs} args - Arguments to filter Unit74s to delete.
   * @example
   * // Delete a few Unit74s
   * const { count } = await prisma.unit74.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit74DeleteManyArgs>(
    args: Subset<T, Unit74DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit74s.
   * @param {Unit74UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit74s
   * const unit74 = await prisma.unit74.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit74UpdateManyArgs>(
    args: Subset<T, Unit74UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit74.
   * @param {Unit74UpsertArgs} args - Arguments to update or create a Unit74.
   * @example
   * // Update or create a Unit74
   * const unit74 = await prisma.unit74.upsert({
   *   create: {
   *     // ... data to create a Unit74
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit74 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit74UpsertArgs>(
    args: Subset<T, Unit74UpsertArgs>
  ): CheckSelect<T, Prisma__Unit74Client<Unit74>, Prisma__Unit74Client<Unit74GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit74Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit74.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit74Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit74 findOne
 */
export type FindOneUnit74Args = {
  /**
   * Select specific fields to fetch from the Unit74
  **/
  select?: Unit74Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit74Include | null
  /**
   * Filter, which Unit74 to fetch.
  **/
  where: Unit74WhereUniqueInput
}


/**
 * Unit74 findMany
 */
export type FindManyUnit74Args = {
  /**
   * Select specific fields to fetch from the Unit74
  **/
  select?: Unit74Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit74Include | null
  /**
   * Filter, which Unit74s to fetch.
  **/
  where?: Unit74WhereInput
  /**
   * Determine the order of the Unit74s to fetch.
  **/
  orderBy?: Unit74OrderByInput
  /**
   * Sets the position for listing Unit74s.
  **/
  cursor?: Unit74WhereUniqueInput
  /**
   * The number of Unit74s to fetch. If negative number, it will take Unit74s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit74s.
  **/
  skip?: number
}


/**
 * Unit74 create
 */
export type Unit74CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit74
  **/
  select?: Unit74Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit74Include | null
  /**
   * The data needed to create a Unit74.
  **/
  data: Unit74CreateInput
}


/**
 * Unit74 update
 */
export type Unit74UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit74
  **/
  select?: Unit74Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit74Include | null
  /**
   * The data needed to update a Unit74.
  **/
  data: Unit74UpdateInput
  /**
   * Choose, which Unit74 to update.
  **/
  where: Unit74WhereUniqueInput
}


/**
 * Unit74 updateMany
 */
export type Unit74UpdateManyArgs = {
  data: Unit74UpdateManyMutationInput
  where?: Unit74WhereInput
}


/**
 * Unit74 upsert
 */
export type Unit74UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit74
  **/
  select?: Unit74Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit74Include | null
  /**
   * The filter to search for the Unit74 to update in case it exists.
  **/
  where: Unit74WhereUniqueInput
  /**
   * In case the Unit74 found by the `where` argument doesn't exist, create a new Unit74 with this data.
  **/
  create: Unit74CreateInput
  /**
   * In case the Unit74 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit74UpdateInput
}


/**
 * Unit74 delete
 */
export type Unit74DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit74
  **/
  select?: Unit74Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit74Include | null
  /**
   * Filter which Unit74 to delete.
  **/
  where: Unit74WhereUniqueInput
}


/**
 * Unit74 deleteMany
 */
export type Unit74DeleteManyArgs = {
  where?: Unit74WhereInput
}


/**
 * Unit74 without action
 */
export type Unit74Args = {
  /**
   * Select specific fields to fetch from the Unit74
  **/
  select?: Unit74Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit74Include | null
}



/**
 * Model Unit75
 */

export type Unit75 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit75Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit75Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit75GetPayload<
  S extends boolean | null | undefined | Unit75Args,
  U = keyof S
> = S extends true
  ? Unit75
  : S extends undefined
  ? never
  : S extends Unit75Args | FindManyUnit75Args
  ? 'include' extends U
    ? Unit75  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit75 ? Unit75[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit75
: Unit75


export interface Unit75Delegate {
  /**
   * Find zero or one Unit75.
   * @param {FindOneUnit75Args} args - Arguments to find a Unit75
   * @example
   * // Get one Unit75
   * const unit75 = await prisma.unit75.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit75Args>(
    args: Subset<T, FindOneUnit75Args>
  ): CheckSelect<T, Prisma__Unit75Client<Unit75 | null>, Prisma__Unit75Client<Unit75GetPayload<T> | null>>
  /**
   * Find zero or more Unit75s.
   * @param {FindManyUnit75Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit75s
   * const unit75s = await prisma.unit75.findMany()
   * 
   * // Get first 10 Unit75s
   * const unit75s = await prisma.unit75.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit75WithIdOnly = await prisma.unit75.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit75Args>(
    args?: Subset<T, FindManyUnit75Args>
  ): CheckSelect<T, Promise<Array<Unit75>>, Promise<Array<Unit75GetPayload<T>>>>
  /**
   * Create a Unit75.
   * @param {Unit75CreateArgs} args - Arguments to create a Unit75.
   * @example
   * // Create one Unit75
   * const Unit75 = await prisma.unit75.create({
   *   data: {
   *     // ... data to create a Unit75
   *   }
   * })
   * 
  **/
  create<T extends Unit75CreateArgs>(
    args: Subset<T, Unit75CreateArgs>
  ): CheckSelect<T, Prisma__Unit75Client<Unit75>, Prisma__Unit75Client<Unit75GetPayload<T>>>
  /**
   * Delete a Unit75.
   * @param {Unit75DeleteArgs} args - Arguments to delete one Unit75.
   * @example
   * // Delete one Unit75
   * const Unit75 = await prisma.unit75.delete({
   *   where: {
   *     // ... filter to delete one Unit75
   *   }
   * })
   * 
  **/
  delete<T extends Unit75DeleteArgs>(
    args: Subset<T, Unit75DeleteArgs>
  ): CheckSelect<T, Prisma__Unit75Client<Unit75>, Prisma__Unit75Client<Unit75GetPayload<T>>>
  /**
   * Update one Unit75.
   * @param {Unit75UpdateArgs} args - Arguments to update one Unit75.
   * @example
   * // Update one Unit75
   * const unit75 = await prisma.unit75.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit75UpdateArgs>(
    args: Subset<T, Unit75UpdateArgs>
  ): CheckSelect<T, Prisma__Unit75Client<Unit75>, Prisma__Unit75Client<Unit75GetPayload<T>>>
  /**
   * Delete zero or more Unit75s.
   * @param {Unit75DeleteManyArgs} args - Arguments to filter Unit75s to delete.
   * @example
   * // Delete a few Unit75s
   * const { count } = await prisma.unit75.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit75DeleteManyArgs>(
    args: Subset<T, Unit75DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit75s.
   * @param {Unit75UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit75s
   * const unit75 = await prisma.unit75.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit75UpdateManyArgs>(
    args: Subset<T, Unit75UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit75.
   * @param {Unit75UpsertArgs} args - Arguments to update or create a Unit75.
   * @example
   * // Update or create a Unit75
   * const unit75 = await prisma.unit75.upsert({
   *   create: {
   *     // ... data to create a Unit75
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit75 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit75UpsertArgs>(
    args: Subset<T, Unit75UpsertArgs>
  ): CheckSelect<T, Prisma__Unit75Client<Unit75>, Prisma__Unit75Client<Unit75GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit75Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit75.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit75Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit75 findOne
 */
export type FindOneUnit75Args = {
  /**
   * Select specific fields to fetch from the Unit75
  **/
  select?: Unit75Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit75Include | null
  /**
   * Filter, which Unit75 to fetch.
  **/
  where: Unit75WhereUniqueInput
}


/**
 * Unit75 findMany
 */
export type FindManyUnit75Args = {
  /**
   * Select specific fields to fetch from the Unit75
  **/
  select?: Unit75Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit75Include | null
  /**
   * Filter, which Unit75s to fetch.
  **/
  where?: Unit75WhereInput
  /**
   * Determine the order of the Unit75s to fetch.
  **/
  orderBy?: Unit75OrderByInput
  /**
   * Sets the position for listing Unit75s.
  **/
  cursor?: Unit75WhereUniqueInput
  /**
   * The number of Unit75s to fetch. If negative number, it will take Unit75s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit75s.
  **/
  skip?: number
}


/**
 * Unit75 create
 */
export type Unit75CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit75
  **/
  select?: Unit75Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit75Include | null
  /**
   * The data needed to create a Unit75.
  **/
  data: Unit75CreateInput
}


/**
 * Unit75 update
 */
export type Unit75UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit75
  **/
  select?: Unit75Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit75Include | null
  /**
   * The data needed to update a Unit75.
  **/
  data: Unit75UpdateInput
  /**
   * Choose, which Unit75 to update.
  **/
  where: Unit75WhereUniqueInput
}


/**
 * Unit75 updateMany
 */
export type Unit75UpdateManyArgs = {
  data: Unit75UpdateManyMutationInput
  where?: Unit75WhereInput
}


/**
 * Unit75 upsert
 */
export type Unit75UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit75
  **/
  select?: Unit75Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit75Include | null
  /**
   * The filter to search for the Unit75 to update in case it exists.
  **/
  where: Unit75WhereUniqueInput
  /**
   * In case the Unit75 found by the `where` argument doesn't exist, create a new Unit75 with this data.
  **/
  create: Unit75CreateInput
  /**
   * In case the Unit75 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit75UpdateInput
}


/**
 * Unit75 delete
 */
export type Unit75DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit75
  **/
  select?: Unit75Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit75Include | null
  /**
   * Filter which Unit75 to delete.
  **/
  where: Unit75WhereUniqueInput
}


/**
 * Unit75 deleteMany
 */
export type Unit75DeleteManyArgs = {
  where?: Unit75WhereInput
}


/**
 * Unit75 without action
 */
export type Unit75Args = {
  /**
   * Select specific fields to fetch from the Unit75
  **/
  select?: Unit75Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit75Include | null
}



/**
 * Model Unit81
 */

export type Unit81 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit81Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit81Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit81GetPayload<
  S extends boolean | null | undefined | Unit81Args,
  U = keyof S
> = S extends true
  ? Unit81
  : S extends undefined
  ? never
  : S extends Unit81Args | FindManyUnit81Args
  ? 'include' extends U
    ? Unit81  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit81 ? Unit81[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit81
: Unit81


export interface Unit81Delegate {
  /**
   * Find zero or one Unit81.
   * @param {FindOneUnit81Args} args - Arguments to find a Unit81
   * @example
   * // Get one Unit81
   * const unit81 = await prisma.unit81.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit81Args>(
    args: Subset<T, FindOneUnit81Args>
  ): CheckSelect<T, Prisma__Unit81Client<Unit81 | null>, Prisma__Unit81Client<Unit81GetPayload<T> | null>>
  /**
   * Find zero or more Unit81s.
   * @param {FindManyUnit81Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit81s
   * const unit81s = await prisma.unit81.findMany()
   * 
   * // Get first 10 Unit81s
   * const unit81s = await prisma.unit81.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit81WithIdOnly = await prisma.unit81.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit81Args>(
    args?: Subset<T, FindManyUnit81Args>
  ): CheckSelect<T, Promise<Array<Unit81>>, Promise<Array<Unit81GetPayload<T>>>>
  /**
   * Create a Unit81.
   * @param {Unit81CreateArgs} args - Arguments to create a Unit81.
   * @example
   * // Create one Unit81
   * const Unit81 = await prisma.unit81.create({
   *   data: {
   *     // ... data to create a Unit81
   *   }
   * })
   * 
  **/
  create<T extends Unit81CreateArgs>(
    args: Subset<T, Unit81CreateArgs>
  ): CheckSelect<T, Prisma__Unit81Client<Unit81>, Prisma__Unit81Client<Unit81GetPayload<T>>>
  /**
   * Delete a Unit81.
   * @param {Unit81DeleteArgs} args - Arguments to delete one Unit81.
   * @example
   * // Delete one Unit81
   * const Unit81 = await prisma.unit81.delete({
   *   where: {
   *     // ... filter to delete one Unit81
   *   }
   * })
   * 
  **/
  delete<T extends Unit81DeleteArgs>(
    args: Subset<T, Unit81DeleteArgs>
  ): CheckSelect<T, Prisma__Unit81Client<Unit81>, Prisma__Unit81Client<Unit81GetPayload<T>>>
  /**
   * Update one Unit81.
   * @param {Unit81UpdateArgs} args - Arguments to update one Unit81.
   * @example
   * // Update one Unit81
   * const unit81 = await prisma.unit81.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit81UpdateArgs>(
    args: Subset<T, Unit81UpdateArgs>
  ): CheckSelect<T, Prisma__Unit81Client<Unit81>, Prisma__Unit81Client<Unit81GetPayload<T>>>
  /**
   * Delete zero or more Unit81s.
   * @param {Unit81DeleteManyArgs} args - Arguments to filter Unit81s to delete.
   * @example
   * // Delete a few Unit81s
   * const { count } = await prisma.unit81.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit81DeleteManyArgs>(
    args: Subset<T, Unit81DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit81s.
   * @param {Unit81UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit81s
   * const unit81 = await prisma.unit81.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit81UpdateManyArgs>(
    args: Subset<T, Unit81UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit81.
   * @param {Unit81UpsertArgs} args - Arguments to update or create a Unit81.
   * @example
   * // Update or create a Unit81
   * const unit81 = await prisma.unit81.upsert({
   *   create: {
   *     // ... data to create a Unit81
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit81 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit81UpsertArgs>(
    args: Subset<T, Unit81UpsertArgs>
  ): CheckSelect<T, Prisma__Unit81Client<Unit81>, Prisma__Unit81Client<Unit81GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit81Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit81.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit81Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit81 findOne
 */
export type FindOneUnit81Args = {
  /**
   * Select specific fields to fetch from the Unit81
  **/
  select?: Unit81Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit81Include | null
  /**
   * Filter, which Unit81 to fetch.
  **/
  where: Unit81WhereUniqueInput
}


/**
 * Unit81 findMany
 */
export type FindManyUnit81Args = {
  /**
   * Select specific fields to fetch from the Unit81
  **/
  select?: Unit81Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit81Include | null
  /**
   * Filter, which Unit81s to fetch.
  **/
  where?: Unit81WhereInput
  /**
   * Determine the order of the Unit81s to fetch.
  **/
  orderBy?: Unit81OrderByInput
  /**
   * Sets the position for listing Unit81s.
  **/
  cursor?: Unit81WhereUniqueInput
  /**
   * The number of Unit81s to fetch. If negative number, it will take Unit81s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit81s.
  **/
  skip?: number
}


/**
 * Unit81 create
 */
export type Unit81CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit81
  **/
  select?: Unit81Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit81Include | null
  /**
   * The data needed to create a Unit81.
  **/
  data: Unit81CreateInput
}


/**
 * Unit81 update
 */
export type Unit81UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit81
  **/
  select?: Unit81Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit81Include | null
  /**
   * The data needed to update a Unit81.
  **/
  data: Unit81UpdateInput
  /**
   * Choose, which Unit81 to update.
  **/
  where: Unit81WhereUniqueInput
}


/**
 * Unit81 updateMany
 */
export type Unit81UpdateManyArgs = {
  data: Unit81UpdateManyMutationInput
  where?: Unit81WhereInput
}


/**
 * Unit81 upsert
 */
export type Unit81UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit81
  **/
  select?: Unit81Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit81Include | null
  /**
   * The filter to search for the Unit81 to update in case it exists.
  **/
  where: Unit81WhereUniqueInput
  /**
   * In case the Unit81 found by the `where` argument doesn't exist, create a new Unit81 with this data.
  **/
  create: Unit81CreateInput
  /**
   * In case the Unit81 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit81UpdateInput
}


/**
 * Unit81 delete
 */
export type Unit81DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit81
  **/
  select?: Unit81Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit81Include | null
  /**
   * Filter which Unit81 to delete.
  **/
  where: Unit81WhereUniqueInput
}


/**
 * Unit81 deleteMany
 */
export type Unit81DeleteManyArgs = {
  where?: Unit81WhereInput
}


/**
 * Unit81 without action
 */
export type Unit81Args = {
  /**
   * Select specific fields to fetch from the Unit81
  **/
  select?: Unit81Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit81Include | null
}



/**
 * Model Unit82
 */

export type Unit82 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit82Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit82Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit82GetPayload<
  S extends boolean | null | undefined | Unit82Args,
  U = keyof S
> = S extends true
  ? Unit82
  : S extends undefined
  ? never
  : S extends Unit82Args | FindManyUnit82Args
  ? 'include' extends U
    ? Unit82  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit82 ? Unit82[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit82
: Unit82


export interface Unit82Delegate {
  /**
   * Find zero or one Unit82.
   * @param {FindOneUnit82Args} args - Arguments to find a Unit82
   * @example
   * // Get one Unit82
   * const unit82 = await prisma.unit82.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit82Args>(
    args: Subset<T, FindOneUnit82Args>
  ): CheckSelect<T, Prisma__Unit82Client<Unit82 | null>, Prisma__Unit82Client<Unit82GetPayload<T> | null>>
  /**
   * Find zero or more Unit82s.
   * @param {FindManyUnit82Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit82s
   * const unit82s = await prisma.unit82.findMany()
   * 
   * // Get first 10 Unit82s
   * const unit82s = await prisma.unit82.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit82WithIdOnly = await prisma.unit82.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit82Args>(
    args?: Subset<T, FindManyUnit82Args>
  ): CheckSelect<T, Promise<Array<Unit82>>, Promise<Array<Unit82GetPayload<T>>>>
  /**
   * Create a Unit82.
   * @param {Unit82CreateArgs} args - Arguments to create a Unit82.
   * @example
   * // Create one Unit82
   * const Unit82 = await prisma.unit82.create({
   *   data: {
   *     // ... data to create a Unit82
   *   }
   * })
   * 
  **/
  create<T extends Unit82CreateArgs>(
    args: Subset<T, Unit82CreateArgs>
  ): CheckSelect<T, Prisma__Unit82Client<Unit82>, Prisma__Unit82Client<Unit82GetPayload<T>>>
  /**
   * Delete a Unit82.
   * @param {Unit82DeleteArgs} args - Arguments to delete one Unit82.
   * @example
   * // Delete one Unit82
   * const Unit82 = await prisma.unit82.delete({
   *   where: {
   *     // ... filter to delete one Unit82
   *   }
   * })
   * 
  **/
  delete<T extends Unit82DeleteArgs>(
    args: Subset<T, Unit82DeleteArgs>
  ): CheckSelect<T, Prisma__Unit82Client<Unit82>, Prisma__Unit82Client<Unit82GetPayload<T>>>
  /**
   * Update one Unit82.
   * @param {Unit82UpdateArgs} args - Arguments to update one Unit82.
   * @example
   * // Update one Unit82
   * const unit82 = await prisma.unit82.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit82UpdateArgs>(
    args: Subset<T, Unit82UpdateArgs>
  ): CheckSelect<T, Prisma__Unit82Client<Unit82>, Prisma__Unit82Client<Unit82GetPayload<T>>>
  /**
   * Delete zero or more Unit82s.
   * @param {Unit82DeleteManyArgs} args - Arguments to filter Unit82s to delete.
   * @example
   * // Delete a few Unit82s
   * const { count } = await prisma.unit82.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit82DeleteManyArgs>(
    args: Subset<T, Unit82DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit82s.
   * @param {Unit82UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit82s
   * const unit82 = await prisma.unit82.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit82UpdateManyArgs>(
    args: Subset<T, Unit82UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit82.
   * @param {Unit82UpsertArgs} args - Arguments to update or create a Unit82.
   * @example
   * // Update or create a Unit82
   * const unit82 = await prisma.unit82.upsert({
   *   create: {
   *     // ... data to create a Unit82
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit82 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit82UpsertArgs>(
    args: Subset<T, Unit82UpsertArgs>
  ): CheckSelect<T, Prisma__Unit82Client<Unit82>, Prisma__Unit82Client<Unit82GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit82Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit82.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit82Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit82 findOne
 */
export type FindOneUnit82Args = {
  /**
   * Select specific fields to fetch from the Unit82
  **/
  select?: Unit82Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit82Include | null
  /**
   * Filter, which Unit82 to fetch.
  **/
  where: Unit82WhereUniqueInput
}


/**
 * Unit82 findMany
 */
export type FindManyUnit82Args = {
  /**
   * Select specific fields to fetch from the Unit82
  **/
  select?: Unit82Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit82Include | null
  /**
   * Filter, which Unit82s to fetch.
  **/
  where?: Unit82WhereInput
  /**
   * Determine the order of the Unit82s to fetch.
  **/
  orderBy?: Unit82OrderByInput
  /**
   * Sets the position for listing Unit82s.
  **/
  cursor?: Unit82WhereUniqueInput
  /**
   * The number of Unit82s to fetch. If negative number, it will take Unit82s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit82s.
  **/
  skip?: number
}


/**
 * Unit82 create
 */
export type Unit82CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit82
  **/
  select?: Unit82Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit82Include | null
  /**
   * The data needed to create a Unit82.
  **/
  data: Unit82CreateInput
}


/**
 * Unit82 update
 */
export type Unit82UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit82
  **/
  select?: Unit82Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit82Include | null
  /**
   * The data needed to update a Unit82.
  **/
  data: Unit82UpdateInput
  /**
   * Choose, which Unit82 to update.
  **/
  where: Unit82WhereUniqueInput
}


/**
 * Unit82 updateMany
 */
export type Unit82UpdateManyArgs = {
  data: Unit82UpdateManyMutationInput
  where?: Unit82WhereInput
}


/**
 * Unit82 upsert
 */
export type Unit82UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit82
  **/
  select?: Unit82Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit82Include | null
  /**
   * The filter to search for the Unit82 to update in case it exists.
  **/
  where: Unit82WhereUniqueInput
  /**
   * In case the Unit82 found by the `where` argument doesn't exist, create a new Unit82 with this data.
  **/
  create: Unit82CreateInput
  /**
   * In case the Unit82 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit82UpdateInput
}


/**
 * Unit82 delete
 */
export type Unit82DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit82
  **/
  select?: Unit82Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit82Include | null
  /**
   * Filter which Unit82 to delete.
  **/
  where: Unit82WhereUniqueInput
}


/**
 * Unit82 deleteMany
 */
export type Unit82DeleteManyArgs = {
  where?: Unit82WhereInput
}


/**
 * Unit82 without action
 */
export type Unit82Args = {
  /**
   * Select specific fields to fetch from the Unit82
  **/
  select?: Unit82Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit82Include | null
}



/**
 * Model Unit83
 */

export type Unit83 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit83Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit83Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit83GetPayload<
  S extends boolean | null | undefined | Unit83Args,
  U = keyof S
> = S extends true
  ? Unit83
  : S extends undefined
  ? never
  : S extends Unit83Args | FindManyUnit83Args
  ? 'include' extends U
    ? Unit83  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit83 ? Unit83[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit83
: Unit83


export interface Unit83Delegate {
  /**
   * Find zero or one Unit83.
   * @param {FindOneUnit83Args} args - Arguments to find a Unit83
   * @example
   * // Get one Unit83
   * const unit83 = await prisma.unit83.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit83Args>(
    args: Subset<T, FindOneUnit83Args>
  ): CheckSelect<T, Prisma__Unit83Client<Unit83 | null>, Prisma__Unit83Client<Unit83GetPayload<T> | null>>
  /**
   * Find zero or more Unit83s.
   * @param {FindManyUnit83Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit83s
   * const unit83s = await prisma.unit83.findMany()
   * 
   * // Get first 10 Unit83s
   * const unit83s = await prisma.unit83.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit83WithIdOnly = await prisma.unit83.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit83Args>(
    args?: Subset<T, FindManyUnit83Args>
  ): CheckSelect<T, Promise<Array<Unit83>>, Promise<Array<Unit83GetPayload<T>>>>
  /**
   * Create a Unit83.
   * @param {Unit83CreateArgs} args - Arguments to create a Unit83.
   * @example
   * // Create one Unit83
   * const Unit83 = await prisma.unit83.create({
   *   data: {
   *     // ... data to create a Unit83
   *   }
   * })
   * 
  **/
  create<T extends Unit83CreateArgs>(
    args: Subset<T, Unit83CreateArgs>
  ): CheckSelect<T, Prisma__Unit83Client<Unit83>, Prisma__Unit83Client<Unit83GetPayload<T>>>
  /**
   * Delete a Unit83.
   * @param {Unit83DeleteArgs} args - Arguments to delete one Unit83.
   * @example
   * // Delete one Unit83
   * const Unit83 = await prisma.unit83.delete({
   *   where: {
   *     // ... filter to delete one Unit83
   *   }
   * })
   * 
  **/
  delete<T extends Unit83DeleteArgs>(
    args: Subset<T, Unit83DeleteArgs>
  ): CheckSelect<T, Prisma__Unit83Client<Unit83>, Prisma__Unit83Client<Unit83GetPayload<T>>>
  /**
   * Update one Unit83.
   * @param {Unit83UpdateArgs} args - Arguments to update one Unit83.
   * @example
   * // Update one Unit83
   * const unit83 = await prisma.unit83.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit83UpdateArgs>(
    args: Subset<T, Unit83UpdateArgs>
  ): CheckSelect<T, Prisma__Unit83Client<Unit83>, Prisma__Unit83Client<Unit83GetPayload<T>>>
  /**
   * Delete zero or more Unit83s.
   * @param {Unit83DeleteManyArgs} args - Arguments to filter Unit83s to delete.
   * @example
   * // Delete a few Unit83s
   * const { count } = await prisma.unit83.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit83DeleteManyArgs>(
    args: Subset<T, Unit83DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit83s.
   * @param {Unit83UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit83s
   * const unit83 = await prisma.unit83.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit83UpdateManyArgs>(
    args: Subset<T, Unit83UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit83.
   * @param {Unit83UpsertArgs} args - Arguments to update or create a Unit83.
   * @example
   * // Update or create a Unit83
   * const unit83 = await prisma.unit83.upsert({
   *   create: {
   *     // ... data to create a Unit83
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit83 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit83UpsertArgs>(
    args: Subset<T, Unit83UpsertArgs>
  ): CheckSelect<T, Prisma__Unit83Client<Unit83>, Prisma__Unit83Client<Unit83GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit83Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit83.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit83Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit83 findOne
 */
export type FindOneUnit83Args = {
  /**
   * Select specific fields to fetch from the Unit83
  **/
  select?: Unit83Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit83Include | null
  /**
   * Filter, which Unit83 to fetch.
  **/
  where: Unit83WhereUniqueInput
}


/**
 * Unit83 findMany
 */
export type FindManyUnit83Args = {
  /**
   * Select specific fields to fetch from the Unit83
  **/
  select?: Unit83Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit83Include | null
  /**
   * Filter, which Unit83s to fetch.
  **/
  where?: Unit83WhereInput
  /**
   * Determine the order of the Unit83s to fetch.
  **/
  orderBy?: Unit83OrderByInput
  /**
   * Sets the position for listing Unit83s.
  **/
  cursor?: Unit83WhereUniqueInput
  /**
   * The number of Unit83s to fetch. If negative number, it will take Unit83s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit83s.
  **/
  skip?: number
}


/**
 * Unit83 create
 */
export type Unit83CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit83
  **/
  select?: Unit83Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit83Include | null
  /**
   * The data needed to create a Unit83.
  **/
  data: Unit83CreateInput
}


/**
 * Unit83 update
 */
export type Unit83UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit83
  **/
  select?: Unit83Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit83Include | null
  /**
   * The data needed to update a Unit83.
  **/
  data: Unit83UpdateInput
  /**
   * Choose, which Unit83 to update.
  **/
  where: Unit83WhereUniqueInput
}


/**
 * Unit83 updateMany
 */
export type Unit83UpdateManyArgs = {
  data: Unit83UpdateManyMutationInput
  where?: Unit83WhereInput
}


/**
 * Unit83 upsert
 */
export type Unit83UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit83
  **/
  select?: Unit83Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit83Include | null
  /**
   * The filter to search for the Unit83 to update in case it exists.
  **/
  where: Unit83WhereUniqueInput
  /**
   * In case the Unit83 found by the `where` argument doesn't exist, create a new Unit83 with this data.
  **/
  create: Unit83CreateInput
  /**
   * In case the Unit83 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit83UpdateInput
}


/**
 * Unit83 delete
 */
export type Unit83DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit83
  **/
  select?: Unit83Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit83Include | null
  /**
   * Filter which Unit83 to delete.
  **/
  where: Unit83WhereUniqueInput
}


/**
 * Unit83 deleteMany
 */
export type Unit83DeleteManyArgs = {
  where?: Unit83WhereInput
}


/**
 * Unit83 without action
 */
export type Unit83Args = {
  /**
   * Select specific fields to fetch from the Unit83
  **/
  select?: Unit83Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit83Include | null
}



/**
 * Model Unit84
 */

export type Unit84 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit84Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit84Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit84GetPayload<
  S extends boolean | null | undefined | Unit84Args,
  U = keyof S
> = S extends true
  ? Unit84
  : S extends undefined
  ? never
  : S extends Unit84Args | FindManyUnit84Args
  ? 'include' extends U
    ? Unit84  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit84 ? Unit84[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit84
: Unit84


export interface Unit84Delegate {
  /**
   * Find zero or one Unit84.
   * @param {FindOneUnit84Args} args - Arguments to find a Unit84
   * @example
   * // Get one Unit84
   * const unit84 = await prisma.unit84.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit84Args>(
    args: Subset<T, FindOneUnit84Args>
  ): CheckSelect<T, Prisma__Unit84Client<Unit84 | null>, Prisma__Unit84Client<Unit84GetPayload<T> | null>>
  /**
   * Find zero or more Unit84s.
   * @param {FindManyUnit84Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit84s
   * const unit84s = await prisma.unit84.findMany()
   * 
   * // Get first 10 Unit84s
   * const unit84s = await prisma.unit84.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit84WithIdOnly = await prisma.unit84.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit84Args>(
    args?: Subset<T, FindManyUnit84Args>
  ): CheckSelect<T, Promise<Array<Unit84>>, Promise<Array<Unit84GetPayload<T>>>>
  /**
   * Create a Unit84.
   * @param {Unit84CreateArgs} args - Arguments to create a Unit84.
   * @example
   * // Create one Unit84
   * const Unit84 = await prisma.unit84.create({
   *   data: {
   *     // ... data to create a Unit84
   *   }
   * })
   * 
  **/
  create<T extends Unit84CreateArgs>(
    args: Subset<T, Unit84CreateArgs>
  ): CheckSelect<T, Prisma__Unit84Client<Unit84>, Prisma__Unit84Client<Unit84GetPayload<T>>>
  /**
   * Delete a Unit84.
   * @param {Unit84DeleteArgs} args - Arguments to delete one Unit84.
   * @example
   * // Delete one Unit84
   * const Unit84 = await prisma.unit84.delete({
   *   where: {
   *     // ... filter to delete one Unit84
   *   }
   * })
   * 
  **/
  delete<T extends Unit84DeleteArgs>(
    args: Subset<T, Unit84DeleteArgs>
  ): CheckSelect<T, Prisma__Unit84Client<Unit84>, Prisma__Unit84Client<Unit84GetPayload<T>>>
  /**
   * Update one Unit84.
   * @param {Unit84UpdateArgs} args - Arguments to update one Unit84.
   * @example
   * // Update one Unit84
   * const unit84 = await prisma.unit84.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit84UpdateArgs>(
    args: Subset<T, Unit84UpdateArgs>
  ): CheckSelect<T, Prisma__Unit84Client<Unit84>, Prisma__Unit84Client<Unit84GetPayload<T>>>
  /**
   * Delete zero or more Unit84s.
   * @param {Unit84DeleteManyArgs} args - Arguments to filter Unit84s to delete.
   * @example
   * // Delete a few Unit84s
   * const { count } = await prisma.unit84.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit84DeleteManyArgs>(
    args: Subset<T, Unit84DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit84s.
   * @param {Unit84UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit84s
   * const unit84 = await prisma.unit84.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit84UpdateManyArgs>(
    args: Subset<T, Unit84UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit84.
   * @param {Unit84UpsertArgs} args - Arguments to update or create a Unit84.
   * @example
   * // Update or create a Unit84
   * const unit84 = await prisma.unit84.upsert({
   *   create: {
   *     // ... data to create a Unit84
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit84 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit84UpsertArgs>(
    args: Subset<T, Unit84UpsertArgs>
  ): CheckSelect<T, Prisma__Unit84Client<Unit84>, Prisma__Unit84Client<Unit84GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit84Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit84.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit84Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit84 findOne
 */
export type FindOneUnit84Args = {
  /**
   * Select specific fields to fetch from the Unit84
  **/
  select?: Unit84Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit84Include | null
  /**
   * Filter, which Unit84 to fetch.
  **/
  where: Unit84WhereUniqueInput
}


/**
 * Unit84 findMany
 */
export type FindManyUnit84Args = {
  /**
   * Select specific fields to fetch from the Unit84
  **/
  select?: Unit84Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit84Include | null
  /**
   * Filter, which Unit84s to fetch.
  **/
  where?: Unit84WhereInput
  /**
   * Determine the order of the Unit84s to fetch.
  **/
  orderBy?: Unit84OrderByInput
  /**
   * Sets the position for listing Unit84s.
  **/
  cursor?: Unit84WhereUniqueInput
  /**
   * The number of Unit84s to fetch. If negative number, it will take Unit84s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit84s.
  **/
  skip?: number
}


/**
 * Unit84 create
 */
export type Unit84CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit84
  **/
  select?: Unit84Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit84Include | null
  /**
   * The data needed to create a Unit84.
  **/
  data: Unit84CreateInput
}


/**
 * Unit84 update
 */
export type Unit84UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit84
  **/
  select?: Unit84Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit84Include | null
  /**
   * The data needed to update a Unit84.
  **/
  data: Unit84UpdateInput
  /**
   * Choose, which Unit84 to update.
  **/
  where: Unit84WhereUniqueInput
}


/**
 * Unit84 updateMany
 */
export type Unit84UpdateManyArgs = {
  data: Unit84UpdateManyMutationInput
  where?: Unit84WhereInput
}


/**
 * Unit84 upsert
 */
export type Unit84UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit84
  **/
  select?: Unit84Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit84Include | null
  /**
   * The filter to search for the Unit84 to update in case it exists.
  **/
  where: Unit84WhereUniqueInput
  /**
   * In case the Unit84 found by the `where` argument doesn't exist, create a new Unit84 with this data.
  **/
  create: Unit84CreateInput
  /**
   * In case the Unit84 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit84UpdateInput
}


/**
 * Unit84 delete
 */
export type Unit84DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit84
  **/
  select?: Unit84Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit84Include | null
  /**
   * Filter which Unit84 to delete.
  **/
  where: Unit84WhereUniqueInput
}


/**
 * Unit84 deleteMany
 */
export type Unit84DeleteManyArgs = {
  where?: Unit84WhereInput
}


/**
 * Unit84 without action
 */
export type Unit84Args = {
  /**
   * Select specific fields to fetch from the Unit84
  **/
  select?: Unit84Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit84Include | null
}



/**
 * Model Unit85
 */

export type Unit85 = {
  id: string
  odontogram_id: string
  abscent: boolean
  notes: string | null
  mesial_vestibular_depth: number | null
  mesial_vestibular_gmh: number | null
  mesial_vestibular_lci: number | null
  mesial_vestibular_probing_bleeding: boolean | null
  medial_vestibular_depth: number | null
  medial_vestibular_gmh: number | null
  medial_vestibular_lci: number | null
  medial_vestibular_probing_bleeding: boolean | null
  distal_vestibular_depth: number | null
  distal_vestibular_gmh: number | null
  distal_vestibular_lci: number | null
  distal_vestibular_probing_bleeding: boolean | null
  mesial_lingual_depth: number | null
  mesial_lingual_gmh: number | null
  mesial_lingual_lci: number | null
  mesial_lingual_probing_bleeding: boolean | null
  medial_lingual_depth: number | null
  medial_lingual_gmh: number | null
  medial_lingual_lci: number | null
  medial_lingual_probing_bleeding: boolean | null
  distal_lingual_depth: number | null
  distal_lingual_gmh: number | null
  distal_lingual_lci: number | null
  distal_lingual_probing_bleeding: boolean | null
  mobility: boolean | null
  if_yes_mobility_level: string | null
  periogram_date: Date | null
  higid: boolean | null
  vestibular_biofilm: boolean | null
  palatin_biofilm: boolean | null
  oclusal_biofilm: boolean | null
  mesial_biofilm: boolean | null
  distal_biofilm: boolean | null
  poor_restoration: boolean | null
  if_yes_what_type_of_restoration: Restorations_types | null
  caries_white_spot_lesion: boolean | null
  if_yes_where_white_lesion: string | null
  active_carie: boolean | null
  inative_carie: boolean | null
  cavity_caries_lesion: boolean | null
  if_yes_where_cavity_lesion: string | null
  if_yes_depth: number | null
  extense_carie_lesion: boolean | null
  fluorosis_white_lesions: boolean | null
  if_yes_fuorosis_level: string | null
  black_hash: boolean | null
  enamel_fissure: boolean | null
  dentin_fissure: boolean | null
  if_yes_fissure_direction: string | null
  enamel_fracture: boolean | null
  if_yes_fracture_size: string | null
  dental_erosion: boolean | null
  dental_abfraction: boolean | null
  dental_atriction: boolean | null
  dental_abrasion: boolean | null
  dental_anomaly: boolean | null
  if_yes_anomaly_description: string | null
  initial_radiograph: boolean | null
  final_radiograph: boolean | null
  pulp_status: Pulp_states | null
  canal_calcifications: boolean | null
  atresic_pulp_chamber: boolean | null
  canal_depth_probing: boolean | null
  canal_depth_in_mm: number | null
  number_of_roots: number | null
  number_of_canals: number | null
  acessory_canal: boolean | null
  lateral_canal: boolean | null
  hiper_cementosis: boolean | null
  bone_petrosis: boolean | null
  root_dilacerations: boolean | null
  cirurgy_indication: boolean | null
  reason_of_indication: string | null
  simple_removal: boolean | null
  difficult_removal: boolean | null
  antibiotcs_prevention_needed: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Unit85Select = {
  id?: boolean
  odontogram?: boolean | OdontogramArgs
  odontogram_id?: boolean
  abscent?: boolean
  notes?: boolean
  mesial_vestibular_depth?: boolean
  mesial_vestibular_gmh?: boolean
  mesial_vestibular_lci?: boolean
  mesial_vestibular_probing_bleeding?: boolean
  medial_vestibular_depth?: boolean
  medial_vestibular_gmh?: boolean
  medial_vestibular_lci?: boolean
  medial_vestibular_probing_bleeding?: boolean
  distal_vestibular_depth?: boolean
  distal_vestibular_gmh?: boolean
  distal_vestibular_lci?: boolean
  distal_vestibular_probing_bleeding?: boolean
  mesial_lingual_depth?: boolean
  mesial_lingual_gmh?: boolean
  mesial_lingual_lci?: boolean
  mesial_lingual_probing_bleeding?: boolean
  medial_lingual_depth?: boolean
  medial_lingual_gmh?: boolean
  medial_lingual_lci?: boolean
  medial_lingual_probing_bleeding?: boolean
  distal_lingual_depth?: boolean
  distal_lingual_gmh?: boolean
  distal_lingual_lci?: boolean
  distal_lingual_probing_bleeding?: boolean
  mobility?: boolean
  if_yes_mobility_level?: boolean
  periogram_date?: boolean
  higid?: boolean
  vestibular_biofilm?: boolean
  palatin_biofilm?: boolean
  oclusal_biofilm?: boolean
  mesial_biofilm?: boolean
  distal_biofilm?: boolean
  poor_restoration?: boolean
  if_yes_what_type_of_restoration?: boolean
  caries_white_spot_lesion?: boolean
  if_yes_where_white_lesion?: boolean
  active_carie?: boolean
  inative_carie?: boolean
  cavity_caries_lesion?: boolean
  if_yes_where_cavity_lesion?: boolean
  if_yes_depth?: boolean
  extense_carie_lesion?: boolean
  fluorosis_white_lesions?: boolean
  if_yes_fuorosis_level?: boolean
  black_hash?: boolean
  enamel_fissure?: boolean
  dentin_fissure?: boolean
  if_yes_fissure_direction?: boolean
  enamel_fracture?: boolean
  if_yes_fracture_size?: boolean
  dental_erosion?: boolean
  dental_abfraction?: boolean
  dental_atriction?: boolean
  dental_abrasion?: boolean
  dental_anomaly?: boolean
  if_yes_anomaly_description?: boolean
  initial_radiograph?: boolean
  final_radiograph?: boolean
  pulp_status?: boolean
  canal_calcifications?: boolean
  atresic_pulp_chamber?: boolean
  canal_depth_probing?: boolean
  canal_depth_in_mm?: boolean
  number_of_roots?: boolean
  number_of_canals?: boolean
  acessory_canal?: boolean
  lateral_canal?: boolean
  hiper_cementosis?: boolean
  bone_petrosis?: boolean
  root_dilacerations?: boolean
  cirurgy_indication?: boolean
  reason_of_indication?: boolean
  simple_removal?: boolean
  difficult_removal?: boolean
  antibiotcs_prevention_needed?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Unit85Include = {
  odontogram?: boolean | OdontogramArgs
}

export type Unit85GetPayload<
  S extends boolean | null | undefined | Unit85Args,
  U = keyof S
> = S extends true
  ? Unit85
  : S extends undefined
  ? never
  : S extends Unit85Args | FindManyUnit85Args
  ? 'include' extends U
    ? Unit85  & {
      [P in TrueKeys<S['include']>]:
      P extends 'odontogram'
      ? OdontogramGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Unit85 ? Unit85[P]
: 
      P extends 'odontogram'
      ? OdontogramGetPayload<S['select'][P]> : never
    }
  : Unit85
: Unit85


export interface Unit85Delegate {
  /**
   * Find zero or one Unit85.
   * @param {FindOneUnit85Args} args - Arguments to find a Unit85
   * @example
   * // Get one Unit85
   * const unit85 = await prisma.unit85.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneUnit85Args>(
    args: Subset<T, FindOneUnit85Args>
  ): CheckSelect<T, Prisma__Unit85Client<Unit85 | null>, Prisma__Unit85Client<Unit85GetPayload<T> | null>>
  /**
   * Find zero or more Unit85s.
   * @param {FindManyUnit85Args=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Unit85s
   * const unit85s = await prisma.unit85.findMany()
   * 
   * // Get first 10 Unit85s
   * const unit85s = await prisma.unit85.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const unit85WithIdOnly = await prisma.unit85.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyUnit85Args>(
    args?: Subset<T, FindManyUnit85Args>
  ): CheckSelect<T, Promise<Array<Unit85>>, Promise<Array<Unit85GetPayload<T>>>>
  /**
   * Create a Unit85.
   * @param {Unit85CreateArgs} args - Arguments to create a Unit85.
   * @example
   * // Create one Unit85
   * const Unit85 = await prisma.unit85.create({
   *   data: {
   *     // ... data to create a Unit85
   *   }
   * })
   * 
  **/
  create<T extends Unit85CreateArgs>(
    args: Subset<T, Unit85CreateArgs>
  ): CheckSelect<T, Prisma__Unit85Client<Unit85>, Prisma__Unit85Client<Unit85GetPayload<T>>>
  /**
   * Delete a Unit85.
   * @param {Unit85DeleteArgs} args - Arguments to delete one Unit85.
   * @example
   * // Delete one Unit85
   * const Unit85 = await prisma.unit85.delete({
   *   where: {
   *     // ... filter to delete one Unit85
   *   }
   * })
   * 
  **/
  delete<T extends Unit85DeleteArgs>(
    args: Subset<T, Unit85DeleteArgs>
  ): CheckSelect<T, Prisma__Unit85Client<Unit85>, Prisma__Unit85Client<Unit85GetPayload<T>>>
  /**
   * Update one Unit85.
   * @param {Unit85UpdateArgs} args - Arguments to update one Unit85.
   * @example
   * // Update one Unit85
   * const unit85 = await prisma.unit85.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Unit85UpdateArgs>(
    args: Subset<T, Unit85UpdateArgs>
  ): CheckSelect<T, Prisma__Unit85Client<Unit85>, Prisma__Unit85Client<Unit85GetPayload<T>>>
  /**
   * Delete zero or more Unit85s.
   * @param {Unit85DeleteManyArgs} args - Arguments to filter Unit85s to delete.
   * @example
   * // Delete a few Unit85s
   * const { count } = await prisma.unit85.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Unit85DeleteManyArgs>(
    args: Subset<T, Unit85DeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Unit85s.
   * @param {Unit85UpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Unit85s
   * const unit85 = await prisma.unit85.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Unit85UpdateManyArgs>(
    args: Subset<T, Unit85UpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Unit85.
   * @param {Unit85UpsertArgs} args - Arguments to update or create a Unit85.
   * @example
   * // Update or create a Unit85
   * const unit85 = await prisma.unit85.upsert({
   *   create: {
   *     // ... data to create a Unit85
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Unit85 we want to update
   *   }
   * })
  **/
  upsert<T extends Unit85UpsertArgs>(
    args: Subset<T, Unit85UpsertArgs>
  ): CheckSelect<T, Prisma__Unit85Client<Unit85>, Prisma__Unit85Client<Unit85GetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyUnit85Args, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Unit85.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Unit85Client<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  odontogram<T extends OdontogramArgs = {}>(args?: Subset<T, OdontogramArgs>): CheckSelect<T, Prisma__OdontogramClient<Odontogram | null>, Prisma__OdontogramClient<OdontogramGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Unit85 findOne
 */
export type FindOneUnit85Args = {
  /**
   * Select specific fields to fetch from the Unit85
  **/
  select?: Unit85Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit85Include | null
  /**
   * Filter, which Unit85 to fetch.
  **/
  where: Unit85WhereUniqueInput
}


/**
 * Unit85 findMany
 */
export type FindManyUnit85Args = {
  /**
   * Select specific fields to fetch from the Unit85
  **/
  select?: Unit85Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit85Include | null
  /**
   * Filter, which Unit85s to fetch.
  **/
  where?: Unit85WhereInput
  /**
   * Determine the order of the Unit85s to fetch.
  **/
  orderBy?: Unit85OrderByInput
  /**
   * Sets the position for listing Unit85s.
  **/
  cursor?: Unit85WhereUniqueInput
  /**
   * The number of Unit85s to fetch. If negative number, it will take Unit85s before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Unit85s.
  **/
  skip?: number
}


/**
 * Unit85 create
 */
export type Unit85CreateArgs = {
  /**
   * Select specific fields to fetch from the Unit85
  **/
  select?: Unit85Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit85Include | null
  /**
   * The data needed to create a Unit85.
  **/
  data: Unit85CreateInput
}


/**
 * Unit85 update
 */
export type Unit85UpdateArgs = {
  /**
   * Select specific fields to fetch from the Unit85
  **/
  select?: Unit85Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit85Include | null
  /**
   * The data needed to update a Unit85.
  **/
  data: Unit85UpdateInput
  /**
   * Choose, which Unit85 to update.
  **/
  where: Unit85WhereUniqueInput
}


/**
 * Unit85 updateMany
 */
export type Unit85UpdateManyArgs = {
  data: Unit85UpdateManyMutationInput
  where?: Unit85WhereInput
}


/**
 * Unit85 upsert
 */
export type Unit85UpsertArgs = {
  /**
   * Select specific fields to fetch from the Unit85
  **/
  select?: Unit85Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit85Include | null
  /**
   * The filter to search for the Unit85 to update in case it exists.
  **/
  where: Unit85WhereUniqueInput
  /**
   * In case the Unit85 found by the `where` argument doesn't exist, create a new Unit85 with this data.
  **/
  create: Unit85CreateInput
  /**
   * In case the Unit85 was found with the provided `where` argument, update it with this data.
  **/
  update: Unit85UpdateInput
}


/**
 * Unit85 delete
 */
export type Unit85DeleteArgs = {
  /**
   * Select specific fields to fetch from the Unit85
  **/
  select?: Unit85Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit85Include | null
  /**
   * Filter which Unit85 to delete.
  **/
  where: Unit85WhereUniqueInput
}


/**
 * Unit85 deleteMany
 */
export type Unit85DeleteManyArgs = {
  where?: Unit85WhereInput
}


/**
 * Unit85 without action
 */
export type Unit85Args = {
  /**
   * Select specific fields to fetch from the Unit85
  **/
  select?: Unit85Select | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Unit85Include | null
}



/**
 * Model Anamnesis
 */

export type Anamnesis = {
  id: string
  anamnesis_type: Questionnaires[]
  patient_id: string
  last_dentist_visit: Date
  last_procedure: Date
  what_was_done: string | null
  treatment_is_planed: boolean
  What_treatment_is_planed: string | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type AnamnesisSelect = {
  id?: boolean
  anamnesis_type?: boolean
  patient?: boolean | PatientArgs
  patient_id?: boolean
  last_dentist_visit?: boolean
  last_procedure?: boolean
  what_was_done?: boolean
  treatment_is_planed?: boolean
  What_treatment_is_planed?: boolean
  main_anamnesis_questionnaire?: boolean | Main_anamnesis_questionnaireArgs
  vital_signs_questionnaire?: boolean | Vital_signs_questionnaireArgs
  oral_health_questionnaire?: boolean | Oral_health_questionnaireArgs
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
  Diet_questionnaire?: boolean | FindManyDiet_questionnaireArgs
}

export type AnamnesisInclude = {
  patient?: boolean | PatientArgs
  main_anamnesis_questionnaire?: boolean | Main_anamnesis_questionnaireArgs
  vital_signs_questionnaire?: boolean | Vital_signs_questionnaireArgs
  oral_health_questionnaire?: boolean | Oral_health_questionnaireArgs
  Diet_questionnaire?: boolean | FindManyDiet_questionnaireArgs
}

export type AnamnesisGetPayload<
  S extends boolean | null | undefined | AnamnesisArgs,
  U = keyof S
> = S extends true
  ? Anamnesis
  : S extends undefined
  ? never
  : S extends AnamnesisArgs | FindManyAnamnesisArgs
  ? 'include' extends U
    ? Anamnesis  & {
      [P in TrueKeys<S['include']>]:
      P extends 'patient'
      ? PatientGetPayload<S['include'][P]> :
      P extends 'main_anamnesis_questionnaire'
      ? Main_anamnesis_questionnaireGetPayload<S['include'][P]> | null :
      P extends 'vital_signs_questionnaire'
      ? Vital_signs_questionnaireGetPayload<S['include'][P]> | null :
      P extends 'oral_health_questionnaire'
      ? Oral_health_questionnaireGetPayload<S['include'][P]> | null :
      P extends 'Diet_questionnaire'
      ? Array<Diet_questionnaireGetPayload<S['include'][P]>> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Anamnesis ? Anamnesis[P]
: 
      P extends 'patient'
      ? PatientGetPayload<S['select'][P]> :
      P extends 'main_anamnesis_questionnaire'
      ? Main_anamnesis_questionnaireGetPayload<S['select'][P]> | null :
      P extends 'vital_signs_questionnaire'
      ? Vital_signs_questionnaireGetPayload<S['select'][P]> | null :
      P extends 'oral_health_questionnaire'
      ? Oral_health_questionnaireGetPayload<S['select'][P]> | null :
      P extends 'Diet_questionnaire'
      ? Array<Diet_questionnaireGetPayload<S['select'][P]>> : never
    }
  : Anamnesis
: Anamnesis


export interface AnamnesisDelegate {
  /**
   * Find zero or one Anamnesis.
   * @param {FindOneAnamnesisArgs} args - Arguments to find a Anamnesis
   * @example
   * // Get one Anamnesis
   * const anamnesis = await prisma.anamnesis.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneAnamnesisArgs>(
    args: Subset<T, FindOneAnamnesisArgs>
  ): CheckSelect<T, Prisma__AnamnesisClient<Anamnesis | null>, Prisma__AnamnesisClient<AnamnesisGetPayload<T> | null>>
  /**
   * Find zero or more Anamneses.
   * @param {FindManyAnamnesisArgs=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Anamneses
   * const anamneses = await prisma.anamnesis.findMany()
   * 
   * // Get first 10 Anamneses
   * const anamneses = await prisma.anamnesis.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const anamnesisWithIdOnly = await prisma.anamnesis.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyAnamnesisArgs>(
    args?: Subset<T, FindManyAnamnesisArgs>
  ): CheckSelect<T, Promise<Array<Anamnesis>>, Promise<Array<AnamnesisGetPayload<T>>>>
  /**
   * Create a Anamnesis.
   * @param {AnamnesisCreateArgs} args - Arguments to create a Anamnesis.
   * @example
   * // Create one Anamnesis
   * const Anamnesis = await prisma.anamnesis.create({
   *   data: {
   *     // ... data to create a Anamnesis
   *   }
   * })
   * 
  **/
  create<T extends AnamnesisCreateArgs>(
    args: Subset<T, AnamnesisCreateArgs>
  ): CheckSelect<T, Prisma__AnamnesisClient<Anamnesis>, Prisma__AnamnesisClient<AnamnesisGetPayload<T>>>
  /**
   * Delete a Anamnesis.
   * @param {AnamnesisDeleteArgs} args - Arguments to delete one Anamnesis.
   * @example
   * // Delete one Anamnesis
   * const Anamnesis = await prisma.anamnesis.delete({
   *   where: {
   *     // ... filter to delete one Anamnesis
   *   }
   * })
   * 
  **/
  delete<T extends AnamnesisDeleteArgs>(
    args: Subset<T, AnamnesisDeleteArgs>
  ): CheckSelect<T, Prisma__AnamnesisClient<Anamnesis>, Prisma__AnamnesisClient<AnamnesisGetPayload<T>>>
  /**
   * Update one Anamnesis.
   * @param {AnamnesisUpdateArgs} args - Arguments to update one Anamnesis.
   * @example
   * // Update one Anamnesis
   * const anamnesis = await prisma.anamnesis.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends AnamnesisUpdateArgs>(
    args: Subset<T, AnamnesisUpdateArgs>
  ): CheckSelect<T, Prisma__AnamnesisClient<Anamnesis>, Prisma__AnamnesisClient<AnamnesisGetPayload<T>>>
  /**
   * Delete zero or more Anamneses.
   * @param {AnamnesisDeleteManyArgs} args - Arguments to filter Anamneses to delete.
   * @example
   * // Delete a few Anamneses
   * const { count } = await prisma.anamnesis.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends AnamnesisDeleteManyArgs>(
    args: Subset<T, AnamnesisDeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Anamneses.
   * @param {AnamnesisUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Anamneses
   * const anamnesis = await prisma.anamnesis.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends AnamnesisUpdateManyArgs>(
    args: Subset<T, AnamnesisUpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Anamnesis.
   * @param {AnamnesisUpsertArgs} args - Arguments to update or create a Anamnesis.
   * @example
   * // Update or create a Anamnesis
   * const anamnesis = await prisma.anamnesis.upsert({
   *   create: {
   *     // ... data to create a Anamnesis
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Anamnesis we want to update
   *   }
   * })
  **/
  upsert<T extends AnamnesisUpsertArgs>(
    args: Subset<T, AnamnesisUpsertArgs>
  ): CheckSelect<T, Prisma__AnamnesisClient<Anamnesis>, Prisma__AnamnesisClient<AnamnesisGetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyAnamnesisArgs, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Anamnesis.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__AnamnesisClient<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  patient<T extends PatientArgs = {}>(args?: Subset<T, PatientArgs>): CheckSelect<T, Prisma__PatientClient<Patient | null>, Prisma__PatientClient<PatientGetPayload<T> | null>>;

  main_anamnesis_questionnaire<T extends Main_anamnesis_questionnaireArgs = {}>(args?: Subset<T, Main_anamnesis_questionnaireArgs>): CheckSelect<T, Prisma__Main_anamnesis_questionnaireClient<Main_anamnesis_questionnaire | null>, Prisma__Main_anamnesis_questionnaireClient<Main_anamnesis_questionnaireGetPayload<T> | null>>;

  vital_signs_questionnaire<T extends Vital_signs_questionnaireArgs = {}>(args?: Subset<T, Vital_signs_questionnaireArgs>): CheckSelect<T, Prisma__Vital_signs_questionnaireClient<Vital_signs_questionnaire | null>, Prisma__Vital_signs_questionnaireClient<Vital_signs_questionnaireGetPayload<T> | null>>;

  oral_health_questionnaire<T extends Oral_health_questionnaireArgs = {}>(args?: Subset<T, Oral_health_questionnaireArgs>): CheckSelect<T, Prisma__Oral_health_questionnaireClient<Oral_health_questionnaire | null>, Prisma__Oral_health_questionnaireClient<Oral_health_questionnaireGetPayload<T> | null>>;

  Diet_questionnaire<T extends FindManyDiet_questionnaireArgs = {}>(args?: Subset<T, FindManyDiet_questionnaireArgs>): CheckSelect<T, Promise<Array<Diet_questionnaire>>, Promise<Array<Diet_questionnaireGetPayload<T>>>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Anamnesis findOne
 */
export type FindOneAnamnesisArgs = {
  /**
   * Select specific fields to fetch from the Anamnesis
  **/
  select?: AnamnesisSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: AnamnesisInclude | null
  /**
   * Filter, which Anamnesis to fetch.
  **/
  where: AnamnesisWhereUniqueInput
}


/**
 * Anamnesis findMany
 */
export type FindManyAnamnesisArgs = {
  /**
   * Select specific fields to fetch from the Anamnesis
  **/
  select?: AnamnesisSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: AnamnesisInclude | null
  /**
   * Filter, which Anamneses to fetch.
  **/
  where?: AnamnesisWhereInput
  /**
   * Determine the order of the Anamneses to fetch.
  **/
  orderBy?: AnamnesisOrderByInput
  /**
   * Sets the position for listing Anamneses.
  **/
  cursor?: AnamnesisWhereUniqueInput
  /**
   * The number of Anamneses to fetch. If negative number, it will take Anamneses before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Anamneses.
  **/
  skip?: number
}


/**
 * Anamnesis create
 */
export type AnamnesisCreateArgs = {
  /**
   * Select specific fields to fetch from the Anamnesis
  **/
  select?: AnamnesisSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: AnamnesisInclude | null
  /**
   * The data needed to create a Anamnesis.
  **/
  data: AnamnesisCreateInput
}


/**
 * Anamnesis update
 */
export type AnamnesisUpdateArgs = {
  /**
   * Select specific fields to fetch from the Anamnesis
  **/
  select?: AnamnesisSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: AnamnesisInclude | null
  /**
   * The data needed to update a Anamnesis.
  **/
  data: AnamnesisUpdateInput
  /**
   * Choose, which Anamnesis to update.
  **/
  where: AnamnesisWhereUniqueInput
}


/**
 * Anamnesis updateMany
 */
export type AnamnesisUpdateManyArgs = {
  data: AnamnesisUpdateManyMutationInput
  where?: AnamnesisWhereInput
}


/**
 * Anamnesis upsert
 */
export type AnamnesisUpsertArgs = {
  /**
   * Select specific fields to fetch from the Anamnesis
  **/
  select?: AnamnesisSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: AnamnesisInclude | null
  /**
   * The filter to search for the Anamnesis to update in case it exists.
  **/
  where: AnamnesisWhereUniqueInput
  /**
   * In case the Anamnesis found by the `where` argument doesn't exist, create a new Anamnesis with this data.
  **/
  create: AnamnesisCreateInput
  /**
   * In case the Anamnesis was found with the provided `where` argument, update it with this data.
  **/
  update: AnamnesisUpdateInput
}


/**
 * Anamnesis delete
 */
export type AnamnesisDeleteArgs = {
  /**
   * Select specific fields to fetch from the Anamnesis
  **/
  select?: AnamnesisSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: AnamnesisInclude | null
  /**
   * Filter which Anamnesis to delete.
  **/
  where: AnamnesisWhereUniqueInput
}


/**
 * Anamnesis deleteMany
 */
export type AnamnesisDeleteManyArgs = {
  where?: AnamnesisWhereInput
}


/**
 * Anamnesis without action
 */
export type AnamnesisArgs = {
  /**
   * Select specific fields to fetch from the Anamnesis
  **/
  select?: AnamnesisSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: AnamnesisInclude | null
}



/**
 * Model Implantology
 */

export type Implantology = {
  id: string
  patient_id: string
  professional_ids: string[]
  implant_type: Implant_types
  if_type_unitary_dental_units_reabilited: string[]
  if_type_multiple_instaled_implants_number: number | null
  if_type_multiple_dental_units_reabilited: string[]
  next_review_consult: Date
  notes: string | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type ImplantologySelect = {
  id?: boolean
  patient?: boolean | PatientArgs
  patient_id?: boolean
  implantology_questionnaire?: boolean | Implantology_questionnaireArgs
  professionals?: boolean | FindManyDentistArgs
  professional_ids?: boolean
  implant_type?: boolean
  if_type_unitary_dental_units_reabilited?: boolean
  if_type_multiple_instaled_implants_number?: boolean
  if_type_multiple_dental_units_reabilited?: boolean
  next_review_consult?: boolean
  notes?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type ImplantologyInclude = {
  patient?: boolean | PatientArgs
  implantology_questionnaire?: boolean | Implantology_questionnaireArgs
  professionals?: boolean | FindManyDentistArgs
}

export type ImplantologyGetPayload<
  S extends boolean | null | undefined | ImplantologyArgs,
  U = keyof S
> = S extends true
  ? Implantology
  : S extends undefined
  ? never
  : S extends ImplantologyArgs | FindManyImplantologyArgs
  ? 'include' extends U
    ? Implantology  & {
      [P in TrueKeys<S['include']>]:
      P extends 'patient'
      ? PatientGetPayload<S['include'][P]> :
      P extends 'implantology_questionnaire'
      ? Implantology_questionnaireGetPayload<S['include'][P]> :
      P extends 'professionals'
      ? Array<DentistGetPayload<S['include'][P]>> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Implantology ? Implantology[P]
: 
      P extends 'patient'
      ? PatientGetPayload<S['select'][P]> :
      P extends 'implantology_questionnaire'
      ? Implantology_questionnaireGetPayload<S['select'][P]> :
      P extends 'professionals'
      ? Array<DentistGetPayload<S['select'][P]>> : never
    }
  : Implantology
: Implantology


export interface ImplantologyDelegate {
  /**
   * Find zero or one Implantology.
   * @param {FindOneImplantologyArgs} args - Arguments to find a Implantology
   * @example
   * // Get one Implantology
   * const implantology = await prisma.implantology.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneImplantologyArgs>(
    args: Subset<T, FindOneImplantologyArgs>
  ): CheckSelect<T, Prisma__ImplantologyClient<Implantology | null>, Prisma__ImplantologyClient<ImplantologyGetPayload<T> | null>>
  /**
   * Find zero or more Implantologies.
   * @param {FindManyImplantologyArgs=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Implantologies
   * const implantologies = await prisma.implantology.findMany()
   * 
   * // Get first 10 Implantologies
   * const implantologies = await prisma.implantology.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const implantologyWithIdOnly = await prisma.implantology.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyImplantologyArgs>(
    args?: Subset<T, FindManyImplantologyArgs>
  ): CheckSelect<T, Promise<Array<Implantology>>, Promise<Array<ImplantologyGetPayload<T>>>>
  /**
   * Create a Implantology.
   * @param {ImplantologyCreateArgs} args - Arguments to create a Implantology.
   * @example
   * // Create one Implantology
   * const Implantology = await prisma.implantology.create({
   *   data: {
   *     // ... data to create a Implantology
   *   }
   * })
   * 
  **/
  create<T extends ImplantologyCreateArgs>(
    args: Subset<T, ImplantologyCreateArgs>
  ): CheckSelect<T, Prisma__ImplantologyClient<Implantology>, Prisma__ImplantologyClient<ImplantologyGetPayload<T>>>
  /**
   * Delete a Implantology.
   * @param {ImplantologyDeleteArgs} args - Arguments to delete one Implantology.
   * @example
   * // Delete one Implantology
   * const Implantology = await prisma.implantology.delete({
   *   where: {
   *     // ... filter to delete one Implantology
   *   }
   * })
   * 
  **/
  delete<T extends ImplantologyDeleteArgs>(
    args: Subset<T, ImplantologyDeleteArgs>
  ): CheckSelect<T, Prisma__ImplantologyClient<Implantology>, Prisma__ImplantologyClient<ImplantologyGetPayload<T>>>
  /**
   * Update one Implantology.
   * @param {ImplantologyUpdateArgs} args - Arguments to update one Implantology.
   * @example
   * // Update one Implantology
   * const implantology = await prisma.implantology.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends ImplantologyUpdateArgs>(
    args: Subset<T, ImplantologyUpdateArgs>
  ): CheckSelect<T, Prisma__ImplantologyClient<Implantology>, Prisma__ImplantologyClient<ImplantologyGetPayload<T>>>
  /**
   * Delete zero or more Implantologies.
   * @param {ImplantologyDeleteManyArgs} args - Arguments to filter Implantologies to delete.
   * @example
   * // Delete a few Implantologies
   * const { count } = await prisma.implantology.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends ImplantologyDeleteManyArgs>(
    args: Subset<T, ImplantologyDeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Implantologies.
   * @param {ImplantologyUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Implantologies
   * const implantology = await prisma.implantology.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends ImplantologyUpdateManyArgs>(
    args: Subset<T, ImplantologyUpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Implantology.
   * @param {ImplantologyUpsertArgs} args - Arguments to update or create a Implantology.
   * @example
   * // Update or create a Implantology
   * const implantology = await prisma.implantology.upsert({
   *   create: {
   *     // ... data to create a Implantology
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Implantology we want to update
   *   }
   * })
  **/
  upsert<T extends ImplantologyUpsertArgs>(
    args: Subset<T, ImplantologyUpsertArgs>
  ): CheckSelect<T, Prisma__ImplantologyClient<Implantology>, Prisma__ImplantologyClient<ImplantologyGetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyImplantologyArgs, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Implantology.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__ImplantologyClient<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  patient<T extends PatientArgs = {}>(args?: Subset<T, PatientArgs>): CheckSelect<T, Prisma__PatientClient<Patient | null>, Prisma__PatientClient<PatientGetPayload<T> | null>>;

  implantology_questionnaire<T extends Implantology_questionnaireArgs = {}>(args?: Subset<T, Implantology_questionnaireArgs>): CheckSelect<T, Prisma__Implantology_questionnaireClient<Implantology_questionnaire | null>, Prisma__Implantology_questionnaireClient<Implantology_questionnaireGetPayload<T> | null>>;

  professionals<T extends FindManyDentistArgs = {}>(args?: Subset<T, FindManyDentistArgs>): CheckSelect<T, Promise<Array<Dentist>>, Promise<Array<DentistGetPayload<T>>>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Implantology findOne
 */
export type FindOneImplantologyArgs = {
  /**
   * Select specific fields to fetch from the Implantology
  **/
  select?: ImplantologySelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: ImplantologyInclude | null
  /**
   * Filter, which Implantology to fetch.
  **/
  where: ImplantologyWhereUniqueInput
}


/**
 * Implantology findMany
 */
export type FindManyImplantologyArgs = {
  /**
   * Select specific fields to fetch from the Implantology
  **/
  select?: ImplantologySelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: ImplantologyInclude | null
  /**
   * Filter, which Implantologies to fetch.
  **/
  where?: ImplantologyWhereInput
  /**
   * Determine the order of the Implantologies to fetch.
  **/
  orderBy?: ImplantologyOrderByInput
  /**
   * Sets the position for listing Implantologies.
  **/
  cursor?: ImplantologyWhereUniqueInput
  /**
   * The number of Implantologies to fetch. If negative number, it will take Implantologies before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Implantologies.
  **/
  skip?: number
}


/**
 * Implantology create
 */
export type ImplantologyCreateArgs = {
  /**
   * Select specific fields to fetch from the Implantology
  **/
  select?: ImplantologySelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: ImplantologyInclude | null
  /**
   * The data needed to create a Implantology.
  **/
  data: ImplantologyCreateInput
}


/**
 * Implantology update
 */
export type ImplantologyUpdateArgs = {
  /**
   * Select specific fields to fetch from the Implantology
  **/
  select?: ImplantologySelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: ImplantologyInclude | null
  /**
   * The data needed to update a Implantology.
  **/
  data: ImplantologyUpdateInput
  /**
   * Choose, which Implantology to update.
  **/
  where: ImplantologyWhereUniqueInput
}


/**
 * Implantology updateMany
 */
export type ImplantologyUpdateManyArgs = {
  data: ImplantologyUpdateManyMutationInput
  where?: ImplantologyWhereInput
}


/**
 * Implantology upsert
 */
export type ImplantologyUpsertArgs = {
  /**
   * Select specific fields to fetch from the Implantology
  **/
  select?: ImplantologySelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: ImplantologyInclude | null
  /**
   * The filter to search for the Implantology to update in case it exists.
  **/
  where: ImplantologyWhereUniqueInput
  /**
   * In case the Implantology found by the `where` argument doesn't exist, create a new Implantology with this data.
  **/
  create: ImplantologyCreateInput
  /**
   * In case the Implantology was found with the provided `where` argument, update it with this data.
  **/
  update: ImplantologyUpdateInput
}


/**
 * Implantology delete
 */
export type ImplantologyDeleteArgs = {
  /**
   * Select specific fields to fetch from the Implantology
  **/
  select?: ImplantologySelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: ImplantologyInclude | null
  /**
   * Filter which Implantology to delete.
  **/
  where: ImplantologyWhereUniqueInput
}


/**
 * Implantology deleteMany
 */
export type ImplantologyDeleteManyArgs = {
  where?: ImplantologyWhereInput
}


/**
 * Implantology without action
 */
export type ImplantologyArgs = {
  /**
   * Select specific fields to fetch from the Implantology
  **/
  select?: ImplantologySelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: ImplantologyInclude | null
}



/**
 * Model Implantology_questionnaire
 */

export type Implantology_questionnaire = {
  id: string
  implantology_questionnaire_id: string
  have_implant: boolean
  if_yes_when_puted: string | null
  if_yes_last_review_consult: string | null
  if_yes_the_cirurgy_needed_bone_graft: boolean | null
  want_to_put_implants: boolean
  if_yes_why_do_you_want: string | null
  if_yes_already_looked_for_professional: boolean | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Implantology_questionnaireSelect = {
  id?: boolean
  implantology_questionnaire?: boolean | ImplantologyArgs
  implantology_questionnaire_id?: boolean
  have_implant?: boolean
  if_yes_when_puted?: boolean
  if_yes_last_review_consult?: boolean
  if_yes_the_cirurgy_needed_bone_graft?: boolean
  want_to_put_implants?: boolean
  if_yes_why_do_you_want?: boolean
  if_yes_already_looked_for_professional?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Implantology_questionnaireInclude = {
  implantology_questionnaire?: boolean | ImplantologyArgs
}

export type Implantology_questionnaireGetPayload<
  S extends boolean | null | undefined | Implantology_questionnaireArgs,
  U = keyof S
> = S extends true
  ? Implantology_questionnaire
  : S extends undefined
  ? never
  : S extends Implantology_questionnaireArgs | FindManyImplantology_questionnaireArgs
  ? 'include' extends U
    ? Implantology_questionnaire  & {
      [P in TrueKeys<S['include']>]:
      P extends 'implantology_questionnaire'
      ? ImplantologyGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Implantology_questionnaire ? Implantology_questionnaire[P]
: 
      P extends 'implantology_questionnaire'
      ? ImplantologyGetPayload<S['select'][P]> : never
    }
  : Implantology_questionnaire
: Implantology_questionnaire


export interface Implantology_questionnaireDelegate {
  /**
   * Find zero or one Implantology_questionnaire.
   * @param {FindOneImplantology_questionnaireArgs} args - Arguments to find a Implantology_questionnaire
   * @example
   * // Get one Implantology_questionnaire
   * const implantology_questionnaire = await prisma.implantology_questionnaire.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneImplantology_questionnaireArgs>(
    args: Subset<T, FindOneImplantology_questionnaireArgs>
  ): CheckSelect<T, Prisma__Implantology_questionnaireClient<Implantology_questionnaire | null>, Prisma__Implantology_questionnaireClient<Implantology_questionnaireGetPayload<T> | null>>
  /**
   * Find zero or more Implantology_questionnaires.
   * @param {FindManyImplantology_questionnaireArgs=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Implantology_questionnaires
   * const implantology_questionnaires = await prisma.implantology_questionnaire.findMany()
   * 
   * // Get first 10 Implantology_questionnaires
   * const implantology_questionnaires = await prisma.implantology_questionnaire.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const implantology_questionnaireWithIdOnly = await prisma.implantology_questionnaire.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyImplantology_questionnaireArgs>(
    args?: Subset<T, FindManyImplantology_questionnaireArgs>
  ): CheckSelect<T, Promise<Array<Implantology_questionnaire>>, Promise<Array<Implantology_questionnaireGetPayload<T>>>>
  /**
   * Create a Implantology_questionnaire.
   * @param {Implantology_questionnaireCreateArgs} args - Arguments to create a Implantology_questionnaire.
   * @example
   * // Create one Implantology_questionnaire
   * const Implantology_questionnaire = await prisma.implantology_questionnaire.create({
   *   data: {
   *     // ... data to create a Implantology_questionnaire
   *   }
   * })
   * 
  **/
  create<T extends Implantology_questionnaireCreateArgs>(
    args: Subset<T, Implantology_questionnaireCreateArgs>
  ): CheckSelect<T, Prisma__Implantology_questionnaireClient<Implantology_questionnaire>, Prisma__Implantology_questionnaireClient<Implantology_questionnaireGetPayload<T>>>
  /**
   * Delete a Implantology_questionnaire.
   * @param {Implantology_questionnaireDeleteArgs} args - Arguments to delete one Implantology_questionnaire.
   * @example
   * // Delete one Implantology_questionnaire
   * const Implantology_questionnaire = await prisma.implantology_questionnaire.delete({
   *   where: {
   *     // ... filter to delete one Implantology_questionnaire
   *   }
   * })
   * 
  **/
  delete<T extends Implantology_questionnaireDeleteArgs>(
    args: Subset<T, Implantology_questionnaireDeleteArgs>
  ): CheckSelect<T, Prisma__Implantology_questionnaireClient<Implantology_questionnaire>, Prisma__Implantology_questionnaireClient<Implantology_questionnaireGetPayload<T>>>
  /**
   * Update one Implantology_questionnaire.
   * @param {Implantology_questionnaireUpdateArgs} args - Arguments to update one Implantology_questionnaire.
   * @example
   * // Update one Implantology_questionnaire
   * const implantology_questionnaire = await prisma.implantology_questionnaire.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Implantology_questionnaireUpdateArgs>(
    args: Subset<T, Implantology_questionnaireUpdateArgs>
  ): CheckSelect<T, Prisma__Implantology_questionnaireClient<Implantology_questionnaire>, Prisma__Implantology_questionnaireClient<Implantology_questionnaireGetPayload<T>>>
  /**
   * Delete zero or more Implantology_questionnaires.
   * @param {Implantology_questionnaireDeleteManyArgs} args - Arguments to filter Implantology_questionnaires to delete.
   * @example
   * // Delete a few Implantology_questionnaires
   * const { count } = await prisma.implantology_questionnaire.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Implantology_questionnaireDeleteManyArgs>(
    args: Subset<T, Implantology_questionnaireDeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Implantology_questionnaires.
   * @param {Implantology_questionnaireUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Implantology_questionnaires
   * const implantology_questionnaire = await prisma.implantology_questionnaire.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Implantology_questionnaireUpdateManyArgs>(
    args: Subset<T, Implantology_questionnaireUpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Implantology_questionnaire.
   * @param {Implantology_questionnaireUpsertArgs} args - Arguments to update or create a Implantology_questionnaire.
   * @example
   * // Update or create a Implantology_questionnaire
   * const implantology_questionnaire = await prisma.implantology_questionnaire.upsert({
   *   create: {
   *     // ... data to create a Implantology_questionnaire
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Implantology_questionnaire we want to update
   *   }
   * })
  **/
  upsert<T extends Implantology_questionnaireUpsertArgs>(
    args: Subset<T, Implantology_questionnaireUpsertArgs>
  ): CheckSelect<T, Prisma__Implantology_questionnaireClient<Implantology_questionnaire>, Prisma__Implantology_questionnaireClient<Implantology_questionnaireGetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyImplantology_questionnaireArgs, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Implantology_questionnaire.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Implantology_questionnaireClient<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  implantology_questionnaire<T extends ImplantologyArgs = {}>(args?: Subset<T, ImplantologyArgs>): CheckSelect<T, Prisma__ImplantologyClient<Implantology | null>, Prisma__ImplantologyClient<ImplantologyGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Implantology_questionnaire findOne
 */
export type FindOneImplantology_questionnaireArgs = {
  /**
   * Select specific fields to fetch from the Implantology_questionnaire
  **/
  select?: Implantology_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Implantology_questionnaireInclude | null
  /**
   * Filter, which Implantology_questionnaire to fetch.
  **/
  where: Implantology_questionnaireWhereUniqueInput
}


/**
 * Implantology_questionnaire findMany
 */
export type FindManyImplantology_questionnaireArgs = {
  /**
   * Select specific fields to fetch from the Implantology_questionnaire
  **/
  select?: Implantology_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Implantology_questionnaireInclude | null
  /**
   * Filter, which Implantology_questionnaires to fetch.
  **/
  where?: Implantology_questionnaireWhereInput
  /**
   * Determine the order of the Implantology_questionnaires to fetch.
  **/
  orderBy?: Implantology_questionnaireOrderByInput
  /**
   * Sets the position for listing Implantology_questionnaires.
  **/
  cursor?: Implantology_questionnaireWhereUniqueInput
  /**
   * The number of Implantology_questionnaires to fetch. If negative number, it will take Implantology_questionnaires before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Implantology_questionnaires.
  **/
  skip?: number
}


/**
 * Implantology_questionnaire create
 */
export type Implantology_questionnaireCreateArgs = {
  /**
   * Select specific fields to fetch from the Implantology_questionnaire
  **/
  select?: Implantology_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Implantology_questionnaireInclude | null
  /**
   * The data needed to create a Implantology_questionnaire.
  **/
  data: Implantology_questionnaireCreateInput
}


/**
 * Implantology_questionnaire update
 */
export type Implantology_questionnaireUpdateArgs = {
  /**
   * Select specific fields to fetch from the Implantology_questionnaire
  **/
  select?: Implantology_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Implantology_questionnaireInclude | null
  /**
   * The data needed to update a Implantology_questionnaire.
  **/
  data: Implantology_questionnaireUpdateInput
  /**
   * Choose, which Implantology_questionnaire to update.
  **/
  where: Implantology_questionnaireWhereUniqueInput
}


/**
 * Implantology_questionnaire updateMany
 */
export type Implantology_questionnaireUpdateManyArgs = {
  data: Implantology_questionnaireUpdateManyMutationInput
  where?: Implantology_questionnaireWhereInput
}


/**
 * Implantology_questionnaire upsert
 */
export type Implantology_questionnaireUpsertArgs = {
  /**
   * Select specific fields to fetch from the Implantology_questionnaire
  **/
  select?: Implantology_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Implantology_questionnaireInclude | null
  /**
   * The filter to search for the Implantology_questionnaire to update in case it exists.
  **/
  where: Implantology_questionnaireWhereUniqueInput
  /**
   * In case the Implantology_questionnaire found by the `where` argument doesn't exist, create a new Implantology_questionnaire with this data.
  **/
  create: Implantology_questionnaireCreateInput
  /**
   * In case the Implantology_questionnaire was found with the provided `where` argument, update it with this data.
  **/
  update: Implantology_questionnaireUpdateInput
}


/**
 * Implantology_questionnaire delete
 */
export type Implantology_questionnaireDeleteArgs = {
  /**
   * Select specific fields to fetch from the Implantology_questionnaire
  **/
  select?: Implantology_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Implantology_questionnaireInclude | null
  /**
   * Filter which Implantology_questionnaire to delete.
  **/
  where: Implantology_questionnaireWhereUniqueInput
}


/**
 * Implantology_questionnaire deleteMany
 */
export type Implantology_questionnaireDeleteManyArgs = {
  where?: Implantology_questionnaireWhereInput
}


/**
 * Implantology_questionnaire without action
 */
export type Implantology_questionnaireArgs = {
  /**
   * Select specific fields to fetch from the Implantology_questionnaire
  **/
  select?: Implantology_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Implantology_questionnaireInclude | null
}



/**
 * Model Ortodontics
 */

export type Ortodontics = {
  id: string
  patient_id: string
  professional_ids: string[]
  face_profile: string | null
  face_simetrics: string | null
  bite: string | null
  class: string | null
  ideal_occlusion: yes_no | null
  if_no_whats_wrong_in_oclusion: string | null
  spee: string | null
  overbite: string | null
  overjet: string | null
  prevision_of_end: string | null
  ortodontics_treatment_type: Ortodontic_treatment_type | null
  notes: string | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type OrtodonticsSelect = {
  id?: boolean
  patient?: boolean | PatientArgs
  patient_id?: boolean
  ortodontic_questionnaire?: boolean | Ortodontics_questionnaireArgs
  TMJ_questionnaire?: boolean | TMJ_problems_questionnaireArgs
  professionals?: boolean | FindManyDentistArgs
  professional_ids?: boolean
  face_profile?: boolean
  face_simetrics?: boolean
  bite?: boolean
  class?: boolean
  ideal_occlusion?: boolean
  if_no_whats_wrong_in_oclusion?: boolean
  spee?: boolean
  overbite?: boolean
  overjet?: boolean
  prevision_of_end?: boolean
  ortodontics_treatment_type?: boolean
  notes?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type OrtodonticsInclude = {
  patient?: boolean | PatientArgs
  ortodontic_questionnaire?: boolean | Ortodontics_questionnaireArgs
  TMJ_questionnaire?: boolean | TMJ_problems_questionnaireArgs
  professionals?: boolean | FindManyDentistArgs
}

export type OrtodonticsGetPayload<
  S extends boolean | null | undefined | OrtodonticsArgs,
  U = keyof S
> = S extends true
  ? Ortodontics
  : S extends undefined
  ? never
  : S extends OrtodonticsArgs | FindManyOrtodonticsArgs
  ? 'include' extends U
    ? Ortodontics  & {
      [P in TrueKeys<S['include']>]:
      P extends 'patient'
      ? PatientGetPayload<S['include'][P]> :
      P extends 'ortodontic_questionnaire'
      ? Ortodontics_questionnaireGetPayload<S['include'][P]> :
      P extends 'TMJ_questionnaire'
      ? TMJ_problems_questionnaireGetPayload<S['include'][P]> :
      P extends 'professionals'
      ? Array<DentistGetPayload<S['include'][P]>> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Ortodontics ? Ortodontics[P]
: 
      P extends 'patient'
      ? PatientGetPayload<S['select'][P]> :
      P extends 'ortodontic_questionnaire'
      ? Ortodontics_questionnaireGetPayload<S['select'][P]> :
      P extends 'TMJ_questionnaire'
      ? TMJ_problems_questionnaireGetPayload<S['select'][P]> :
      P extends 'professionals'
      ? Array<DentistGetPayload<S['select'][P]>> : never
    }
  : Ortodontics
: Ortodontics


export interface OrtodonticsDelegate {
  /**
   * Find zero or one Ortodontics.
   * @param {FindOneOrtodonticsArgs} args - Arguments to find a Ortodontics
   * @example
   * // Get one Ortodontics
   * const ortodontics = await prisma.ortodontics.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneOrtodonticsArgs>(
    args: Subset<T, FindOneOrtodonticsArgs>
  ): CheckSelect<T, Prisma__OrtodonticsClient<Ortodontics | null>, Prisma__OrtodonticsClient<OrtodonticsGetPayload<T> | null>>
  /**
   * Find zero or more Ortodontics.
   * @param {FindManyOrtodonticsArgs=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Ortodontics
   * const ortodontics = await prisma.ortodontics.findMany()
   * 
   * // Get first 10 Ortodontics
   * const ortodontics = await prisma.ortodontics.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const ortodonticsWithIdOnly = await prisma.ortodontics.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyOrtodonticsArgs>(
    args?: Subset<T, FindManyOrtodonticsArgs>
  ): CheckSelect<T, Promise<Array<Ortodontics>>, Promise<Array<OrtodonticsGetPayload<T>>>>
  /**
   * Create a Ortodontics.
   * @param {OrtodonticsCreateArgs} args - Arguments to create a Ortodontics.
   * @example
   * // Create one Ortodontics
   * const Ortodontics = await prisma.ortodontics.create({
   *   data: {
   *     // ... data to create a Ortodontics
   *   }
   * })
   * 
  **/
  create<T extends OrtodonticsCreateArgs>(
    args: Subset<T, OrtodonticsCreateArgs>
  ): CheckSelect<T, Prisma__OrtodonticsClient<Ortodontics>, Prisma__OrtodonticsClient<OrtodonticsGetPayload<T>>>
  /**
   * Delete a Ortodontics.
   * @param {OrtodonticsDeleteArgs} args - Arguments to delete one Ortodontics.
   * @example
   * // Delete one Ortodontics
   * const Ortodontics = await prisma.ortodontics.delete({
   *   where: {
   *     // ... filter to delete one Ortodontics
   *   }
   * })
   * 
  **/
  delete<T extends OrtodonticsDeleteArgs>(
    args: Subset<T, OrtodonticsDeleteArgs>
  ): CheckSelect<T, Prisma__OrtodonticsClient<Ortodontics>, Prisma__OrtodonticsClient<OrtodonticsGetPayload<T>>>
  /**
   * Update one Ortodontics.
   * @param {OrtodonticsUpdateArgs} args - Arguments to update one Ortodontics.
   * @example
   * // Update one Ortodontics
   * const ortodontics = await prisma.ortodontics.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends OrtodonticsUpdateArgs>(
    args: Subset<T, OrtodonticsUpdateArgs>
  ): CheckSelect<T, Prisma__OrtodonticsClient<Ortodontics>, Prisma__OrtodonticsClient<OrtodonticsGetPayload<T>>>
  /**
   * Delete zero or more Ortodontics.
   * @param {OrtodonticsDeleteManyArgs} args - Arguments to filter Ortodontics to delete.
   * @example
   * // Delete a few Ortodontics
   * const { count } = await prisma.ortodontics.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends OrtodonticsDeleteManyArgs>(
    args: Subset<T, OrtodonticsDeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Ortodontics.
   * @param {OrtodonticsUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Ortodontics
   * const ortodontics = await prisma.ortodontics.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends OrtodonticsUpdateManyArgs>(
    args: Subset<T, OrtodonticsUpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Ortodontics.
   * @param {OrtodonticsUpsertArgs} args - Arguments to update or create a Ortodontics.
   * @example
   * // Update or create a Ortodontics
   * const ortodontics = await prisma.ortodontics.upsert({
   *   create: {
   *     // ... data to create a Ortodontics
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Ortodontics we want to update
   *   }
   * })
  **/
  upsert<T extends OrtodonticsUpsertArgs>(
    args: Subset<T, OrtodonticsUpsertArgs>
  ): CheckSelect<T, Prisma__OrtodonticsClient<Ortodontics>, Prisma__OrtodonticsClient<OrtodonticsGetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyOrtodonticsArgs, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Ortodontics.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__OrtodonticsClient<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  patient<T extends PatientArgs = {}>(args?: Subset<T, PatientArgs>): CheckSelect<T, Prisma__PatientClient<Patient | null>, Prisma__PatientClient<PatientGetPayload<T> | null>>;

  ortodontic_questionnaire<T extends Ortodontics_questionnaireArgs = {}>(args?: Subset<T, Ortodontics_questionnaireArgs>): CheckSelect<T, Prisma__Ortodontics_questionnaireClient<Ortodontics_questionnaire | null>, Prisma__Ortodontics_questionnaireClient<Ortodontics_questionnaireGetPayload<T> | null>>;

  TMJ_questionnaire<T extends TMJ_problems_questionnaireArgs = {}>(args?: Subset<T, TMJ_problems_questionnaireArgs>): CheckSelect<T, Prisma__TMJ_problems_questionnaireClient<TMJ_problems_questionnaire | null>, Prisma__TMJ_problems_questionnaireClient<TMJ_problems_questionnaireGetPayload<T> | null>>;

  professionals<T extends FindManyDentistArgs = {}>(args?: Subset<T, FindManyDentistArgs>): CheckSelect<T, Promise<Array<Dentist>>, Promise<Array<DentistGetPayload<T>>>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Ortodontics findOne
 */
export type FindOneOrtodonticsArgs = {
  /**
   * Select specific fields to fetch from the Ortodontics
  **/
  select?: OrtodonticsSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: OrtodonticsInclude | null
  /**
   * Filter, which Ortodontics to fetch.
  **/
  where: OrtodonticsWhereUniqueInput
}


/**
 * Ortodontics findMany
 */
export type FindManyOrtodonticsArgs = {
  /**
   * Select specific fields to fetch from the Ortodontics
  **/
  select?: OrtodonticsSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: OrtodonticsInclude | null
  /**
   * Filter, which Ortodontics to fetch.
  **/
  where?: OrtodonticsWhereInput
  /**
   * Determine the order of the Ortodontics to fetch.
  **/
  orderBy?: OrtodonticsOrderByInput
  /**
   * Sets the position for listing Ortodontics.
  **/
  cursor?: OrtodonticsWhereUniqueInput
  /**
   * The number of Ortodontics to fetch. If negative number, it will take Ortodontics before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Ortodontics.
  **/
  skip?: number
}


/**
 * Ortodontics create
 */
export type OrtodonticsCreateArgs = {
  /**
   * Select specific fields to fetch from the Ortodontics
  **/
  select?: OrtodonticsSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: OrtodonticsInclude | null
  /**
   * The data needed to create a Ortodontics.
  **/
  data: OrtodonticsCreateInput
}


/**
 * Ortodontics update
 */
export type OrtodonticsUpdateArgs = {
  /**
   * Select specific fields to fetch from the Ortodontics
  **/
  select?: OrtodonticsSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: OrtodonticsInclude | null
  /**
   * The data needed to update a Ortodontics.
  **/
  data: OrtodonticsUpdateInput
  /**
   * Choose, which Ortodontics to update.
  **/
  where: OrtodonticsWhereUniqueInput
}


/**
 * Ortodontics updateMany
 */
export type OrtodonticsUpdateManyArgs = {
  data: OrtodonticsUpdateManyMutationInput
  where?: OrtodonticsWhereInput
}


/**
 * Ortodontics upsert
 */
export type OrtodonticsUpsertArgs = {
  /**
   * Select specific fields to fetch from the Ortodontics
  **/
  select?: OrtodonticsSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: OrtodonticsInclude | null
  /**
   * The filter to search for the Ortodontics to update in case it exists.
  **/
  where: OrtodonticsWhereUniqueInput
  /**
   * In case the Ortodontics found by the `where` argument doesn't exist, create a new Ortodontics with this data.
  **/
  create: OrtodonticsCreateInput
  /**
   * In case the Ortodontics was found with the provided `where` argument, update it with this data.
  **/
  update: OrtodonticsUpdateInput
}


/**
 * Ortodontics delete
 */
export type OrtodonticsDeleteArgs = {
  /**
   * Select specific fields to fetch from the Ortodontics
  **/
  select?: OrtodonticsSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: OrtodonticsInclude | null
  /**
   * Filter which Ortodontics to delete.
  **/
  where: OrtodonticsWhereUniqueInput
}


/**
 * Ortodontics deleteMany
 */
export type OrtodonticsDeleteManyArgs = {
  where?: OrtodonticsWhereInput
}


/**
 * Ortodontics without action
 */
export type OrtodonticsArgs = {
  /**
   * Select specific fields to fetch from the Ortodontics
  **/
  select?: OrtodonticsSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: OrtodonticsInclude | null
}



/**
 * Model Ortodontics_questionnaire
 */

export type Ortodontics_questionnaire = {
  id: string
  ortodontic_prontuary_id: string
  reason_for_tratment: string
  already_have_in_treatment: yes_no
  if_yes_how_long_takes_previus_treatment: string | null
  if_yes_you_have_panoramic_radiography: yes_no | null
  if_yes_when_panoramic_radiography_was_taken: Date | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Ortodontics_questionnaireSelect = {
  id?: boolean
  ortodontic_prontuary?: boolean | OrtodonticsArgs
  ortodontic_prontuary_id?: boolean
  reason_for_tratment?: boolean
  already_have_in_treatment?: boolean
  if_yes_how_long_takes_previus_treatment?: boolean
  if_yes_you_have_panoramic_radiography?: boolean
  if_yes_when_panoramic_radiography_was_taken?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Ortodontics_questionnaireInclude = {
  ortodontic_prontuary?: boolean | OrtodonticsArgs
}

export type Ortodontics_questionnaireGetPayload<
  S extends boolean | null | undefined | Ortodontics_questionnaireArgs,
  U = keyof S
> = S extends true
  ? Ortodontics_questionnaire
  : S extends undefined
  ? never
  : S extends Ortodontics_questionnaireArgs | FindManyOrtodontics_questionnaireArgs
  ? 'include' extends U
    ? Ortodontics_questionnaire  & {
      [P in TrueKeys<S['include']>]:
      P extends 'ortodontic_prontuary'
      ? OrtodonticsGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Ortodontics_questionnaire ? Ortodontics_questionnaire[P]
: 
      P extends 'ortodontic_prontuary'
      ? OrtodonticsGetPayload<S['select'][P]> : never
    }
  : Ortodontics_questionnaire
: Ortodontics_questionnaire


export interface Ortodontics_questionnaireDelegate {
  /**
   * Find zero or one Ortodontics_questionnaire.
   * @param {FindOneOrtodontics_questionnaireArgs} args - Arguments to find a Ortodontics_questionnaire
   * @example
   * // Get one Ortodontics_questionnaire
   * const ortodontics_questionnaire = await prisma.ortodontics_questionnaire.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneOrtodontics_questionnaireArgs>(
    args: Subset<T, FindOneOrtodontics_questionnaireArgs>
  ): CheckSelect<T, Prisma__Ortodontics_questionnaireClient<Ortodontics_questionnaire | null>, Prisma__Ortodontics_questionnaireClient<Ortodontics_questionnaireGetPayload<T> | null>>
  /**
   * Find zero or more Ortodontics_questionnaires.
   * @param {FindManyOrtodontics_questionnaireArgs=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Ortodontics_questionnaires
   * const ortodontics_questionnaires = await prisma.ortodontics_questionnaire.findMany()
   * 
   * // Get first 10 Ortodontics_questionnaires
   * const ortodontics_questionnaires = await prisma.ortodontics_questionnaire.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const ortodontics_questionnaireWithIdOnly = await prisma.ortodontics_questionnaire.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyOrtodontics_questionnaireArgs>(
    args?: Subset<T, FindManyOrtodontics_questionnaireArgs>
  ): CheckSelect<T, Promise<Array<Ortodontics_questionnaire>>, Promise<Array<Ortodontics_questionnaireGetPayload<T>>>>
  /**
   * Create a Ortodontics_questionnaire.
   * @param {Ortodontics_questionnaireCreateArgs} args - Arguments to create a Ortodontics_questionnaire.
   * @example
   * // Create one Ortodontics_questionnaire
   * const Ortodontics_questionnaire = await prisma.ortodontics_questionnaire.create({
   *   data: {
   *     // ... data to create a Ortodontics_questionnaire
   *   }
   * })
   * 
  **/
  create<T extends Ortodontics_questionnaireCreateArgs>(
    args: Subset<T, Ortodontics_questionnaireCreateArgs>
  ): CheckSelect<T, Prisma__Ortodontics_questionnaireClient<Ortodontics_questionnaire>, Prisma__Ortodontics_questionnaireClient<Ortodontics_questionnaireGetPayload<T>>>
  /**
   * Delete a Ortodontics_questionnaire.
   * @param {Ortodontics_questionnaireDeleteArgs} args - Arguments to delete one Ortodontics_questionnaire.
   * @example
   * // Delete one Ortodontics_questionnaire
   * const Ortodontics_questionnaire = await prisma.ortodontics_questionnaire.delete({
   *   where: {
   *     // ... filter to delete one Ortodontics_questionnaire
   *   }
   * })
   * 
  **/
  delete<T extends Ortodontics_questionnaireDeleteArgs>(
    args: Subset<T, Ortodontics_questionnaireDeleteArgs>
  ): CheckSelect<T, Prisma__Ortodontics_questionnaireClient<Ortodontics_questionnaire>, Prisma__Ortodontics_questionnaireClient<Ortodontics_questionnaireGetPayload<T>>>
  /**
   * Update one Ortodontics_questionnaire.
   * @param {Ortodontics_questionnaireUpdateArgs} args - Arguments to update one Ortodontics_questionnaire.
   * @example
   * // Update one Ortodontics_questionnaire
   * const ortodontics_questionnaire = await prisma.ortodontics_questionnaire.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Ortodontics_questionnaireUpdateArgs>(
    args: Subset<T, Ortodontics_questionnaireUpdateArgs>
  ): CheckSelect<T, Prisma__Ortodontics_questionnaireClient<Ortodontics_questionnaire>, Prisma__Ortodontics_questionnaireClient<Ortodontics_questionnaireGetPayload<T>>>
  /**
   * Delete zero or more Ortodontics_questionnaires.
   * @param {Ortodontics_questionnaireDeleteManyArgs} args - Arguments to filter Ortodontics_questionnaires to delete.
   * @example
   * // Delete a few Ortodontics_questionnaires
   * const { count } = await prisma.ortodontics_questionnaire.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Ortodontics_questionnaireDeleteManyArgs>(
    args: Subset<T, Ortodontics_questionnaireDeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Ortodontics_questionnaires.
   * @param {Ortodontics_questionnaireUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Ortodontics_questionnaires
   * const ortodontics_questionnaire = await prisma.ortodontics_questionnaire.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Ortodontics_questionnaireUpdateManyArgs>(
    args: Subset<T, Ortodontics_questionnaireUpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Ortodontics_questionnaire.
   * @param {Ortodontics_questionnaireUpsertArgs} args - Arguments to update or create a Ortodontics_questionnaire.
   * @example
   * // Update or create a Ortodontics_questionnaire
   * const ortodontics_questionnaire = await prisma.ortodontics_questionnaire.upsert({
   *   create: {
   *     // ... data to create a Ortodontics_questionnaire
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Ortodontics_questionnaire we want to update
   *   }
   * })
  **/
  upsert<T extends Ortodontics_questionnaireUpsertArgs>(
    args: Subset<T, Ortodontics_questionnaireUpsertArgs>
  ): CheckSelect<T, Prisma__Ortodontics_questionnaireClient<Ortodontics_questionnaire>, Prisma__Ortodontics_questionnaireClient<Ortodontics_questionnaireGetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyOrtodontics_questionnaireArgs, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Ortodontics_questionnaire.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Ortodontics_questionnaireClient<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  ortodontic_prontuary<T extends OrtodonticsArgs = {}>(args?: Subset<T, OrtodonticsArgs>): CheckSelect<T, Prisma__OrtodonticsClient<Ortodontics | null>, Prisma__OrtodonticsClient<OrtodonticsGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Ortodontics_questionnaire findOne
 */
export type FindOneOrtodontics_questionnaireArgs = {
  /**
   * Select specific fields to fetch from the Ortodontics_questionnaire
  **/
  select?: Ortodontics_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Ortodontics_questionnaireInclude | null
  /**
   * Filter, which Ortodontics_questionnaire to fetch.
  **/
  where: Ortodontics_questionnaireWhereUniqueInput
}


/**
 * Ortodontics_questionnaire findMany
 */
export type FindManyOrtodontics_questionnaireArgs = {
  /**
   * Select specific fields to fetch from the Ortodontics_questionnaire
  **/
  select?: Ortodontics_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Ortodontics_questionnaireInclude | null
  /**
   * Filter, which Ortodontics_questionnaires to fetch.
  **/
  where?: Ortodontics_questionnaireWhereInput
  /**
   * Determine the order of the Ortodontics_questionnaires to fetch.
  **/
  orderBy?: Ortodontics_questionnaireOrderByInput
  /**
   * Sets the position for listing Ortodontics_questionnaires.
  **/
  cursor?: Ortodontics_questionnaireWhereUniqueInput
  /**
   * The number of Ortodontics_questionnaires to fetch. If negative number, it will take Ortodontics_questionnaires before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Ortodontics_questionnaires.
  **/
  skip?: number
}


/**
 * Ortodontics_questionnaire create
 */
export type Ortodontics_questionnaireCreateArgs = {
  /**
   * Select specific fields to fetch from the Ortodontics_questionnaire
  **/
  select?: Ortodontics_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Ortodontics_questionnaireInclude | null
  /**
   * The data needed to create a Ortodontics_questionnaire.
  **/
  data: Ortodontics_questionnaireCreateInput
}


/**
 * Ortodontics_questionnaire update
 */
export type Ortodontics_questionnaireUpdateArgs = {
  /**
   * Select specific fields to fetch from the Ortodontics_questionnaire
  **/
  select?: Ortodontics_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Ortodontics_questionnaireInclude | null
  /**
   * The data needed to update a Ortodontics_questionnaire.
  **/
  data: Ortodontics_questionnaireUpdateInput
  /**
   * Choose, which Ortodontics_questionnaire to update.
  **/
  where: Ortodontics_questionnaireWhereUniqueInput
}


/**
 * Ortodontics_questionnaire updateMany
 */
export type Ortodontics_questionnaireUpdateManyArgs = {
  data: Ortodontics_questionnaireUpdateManyMutationInput
  where?: Ortodontics_questionnaireWhereInput
}


/**
 * Ortodontics_questionnaire upsert
 */
export type Ortodontics_questionnaireUpsertArgs = {
  /**
   * Select specific fields to fetch from the Ortodontics_questionnaire
  **/
  select?: Ortodontics_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Ortodontics_questionnaireInclude | null
  /**
   * The filter to search for the Ortodontics_questionnaire to update in case it exists.
  **/
  where: Ortodontics_questionnaireWhereUniqueInput
  /**
   * In case the Ortodontics_questionnaire found by the `where` argument doesn't exist, create a new Ortodontics_questionnaire with this data.
  **/
  create: Ortodontics_questionnaireCreateInput
  /**
   * In case the Ortodontics_questionnaire was found with the provided `where` argument, update it with this data.
  **/
  update: Ortodontics_questionnaireUpdateInput
}


/**
 * Ortodontics_questionnaire delete
 */
export type Ortodontics_questionnaireDeleteArgs = {
  /**
   * Select specific fields to fetch from the Ortodontics_questionnaire
  **/
  select?: Ortodontics_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Ortodontics_questionnaireInclude | null
  /**
   * Filter which Ortodontics_questionnaire to delete.
  **/
  where: Ortodontics_questionnaireWhereUniqueInput
}


/**
 * Ortodontics_questionnaire deleteMany
 */
export type Ortodontics_questionnaireDeleteManyArgs = {
  where?: Ortodontics_questionnaireWhereInput
}


/**
 * Ortodontics_questionnaire without action
 */
export type Ortodontics_questionnaireArgs = {
  /**
   * Select specific fields to fetch from the Ortodontics_questionnaire
  **/
  select?: Ortodontics_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Ortodontics_questionnaireInclude | null
}



/**
 * Model Oral_health_questionnaire
 */

export type Oral_health_questionnaire = {
  id: string
  anamnesis_prontuary_id: string
  you_use_anykind_protesis: yes_no
  whats_the_protesis: string | null
  type_of_teeth_brush: string | null
  how_many_times_by_day: number | null
  you_floss: yes_no | null
  if_yes_how_many_times: number | null
  you_use_any_mouthwash: yes_no | null
  if_yes_how_often: How_often | null
  dental_clenching: yes_no
  if_yes_when_in_day: string | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Oral_health_questionnaireSelect = {
  id?: boolean
  anamnesis_prontuary?: boolean | AnamnesisArgs
  anamnesis_prontuary_id?: boolean
  you_use_anykind_protesis?: boolean
  whats_the_protesis?: boolean
  type_of_teeth_brush?: boolean
  how_many_times_by_day?: boolean
  you_floss?: boolean
  if_yes_how_many_times?: boolean
  you_use_any_mouthwash?: boolean
  if_yes_how_often?: boolean
  dental_clenching?: boolean
  if_yes_when_in_day?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Oral_health_questionnaireInclude = {
  anamnesis_prontuary?: boolean | AnamnesisArgs
}

export type Oral_health_questionnaireGetPayload<
  S extends boolean | null | undefined | Oral_health_questionnaireArgs,
  U = keyof S
> = S extends true
  ? Oral_health_questionnaire
  : S extends undefined
  ? never
  : S extends Oral_health_questionnaireArgs | FindManyOral_health_questionnaireArgs
  ? 'include' extends U
    ? Oral_health_questionnaire  & {
      [P in TrueKeys<S['include']>]:
      P extends 'anamnesis_prontuary'
      ? AnamnesisGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Oral_health_questionnaire ? Oral_health_questionnaire[P]
: 
      P extends 'anamnesis_prontuary'
      ? AnamnesisGetPayload<S['select'][P]> : never
    }
  : Oral_health_questionnaire
: Oral_health_questionnaire


export interface Oral_health_questionnaireDelegate {
  /**
   * Find zero or one Oral_health_questionnaire.
   * @param {FindOneOral_health_questionnaireArgs} args - Arguments to find a Oral_health_questionnaire
   * @example
   * // Get one Oral_health_questionnaire
   * const oral_health_questionnaire = await prisma.oral_health_questionnaire.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneOral_health_questionnaireArgs>(
    args: Subset<T, FindOneOral_health_questionnaireArgs>
  ): CheckSelect<T, Prisma__Oral_health_questionnaireClient<Oral_health_questionnaire | null>, Prisma__Oral_health_questionnaireClient<Oral_health_questionnaireGetPayload<T> | null>>
  /**
   * Find zero or more Oral_health_questionnaires.
   * @param {FindManyOral_health_questionnaireArgs=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Oral_health_questionnaires
   * const oral_health_questionnaires = await prisma.oral_health_questionnaire.findMany()
   * 
   * // Get first 10 Oral_health_questionnaires
   * const oral_health_questionnaires = await prisma.oral_health_questionnaire.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const oral_health_questionnaireWithIdOnly = await prisma.oral_health_questionnaire.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyOral_health_questionnaireArgs>(
    args?: Subset<T, FindManyOral_health_questionnaireArgs>
  ): CheckSelect<T, Promise<Array<Oral_health_questionnaire>>, Promise<Array<Oral_health_questionnaireGetPayload<T>>>>
  /**
   * Create a Oral_health_questionnaire.
   * @param {Oral_health_questionnaireCreateArgs} args - Arguments to create a Oral_health_questionnaire.
   * @example
   * // Create one Oral_health_questionnaire
   * const Oral_health_questionnaire = await prisma.oral_health_questionnaire.create({
   *   data: {
   *     // ... data to create a Oral_health_questionnaire
   *   }
   * })
   * 
  **/
  create<T extends Oral_health_questionnaireCreateArgs>(
    args: Subset<T, Oral_health_questionnaireCreateArgs>
  ): CheckSelect<T, Prisma__Oral_health_questionnaireClient<Oral_health_questionnaire>, Prisma__Oral_health_questionnaireClient<Oral_health_questionnaireGetPayload<T>>>
  /**
   * Delete a Oral_health_questionnaire.
   * @param {Oral_health_questionnaireDeleteArgs} args - Arguments to delete one Oral_health_questionnaire.
   * @example
   * // Delete one Oral_health_questionnaire
   * const Oral_health_questionnaire = await prisma.oral_health_questionnaire.delete({
   *   where: {
   *     // ... filter to delete one Oral_health_questionnaire
   *   }
   * })
   * 
  **/
  delete<T extends Oral_health_questionnaireDeleteArgs>(
    args: Subset<T, Oral_health_questionnaireDeleteArgs>
  ): CheckSelect<T, Prisma__Oral_health_questionnaireClient<Oral_health_questionnaire>, Prisma__Oral_health_questionnaireClient<Oral_health_questionnaireGetPayload<T>>>
  /**
   * Update one Oral_health_questionnaire.
   * @param {Oral_health_questionnaireUpdateArgs} args - Arguments to update one Oral_health_questionnaire.
   * @example
   * // Update one Oral_health_questionnaire
   * const oral_health_questionnaire = await prisma.oral_health_questionnaire.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Oral_health_questionnaireUpdateArgs>(
    args: Subset<T, Oral_health_questionnaireUpdateArgs>
  ): CheckSelect<T, Prisma__Oral_health_questionnaireClient<Oral_health_questionnaire>, Prisma__Oral_health_questionnaireClient<Oral_health_questionnaireGetPayload<T>>>
  /**
   * Delete zero or more Oral_health_questionnaires.
   * @param {Oral_health_questionnaireDeleteManyArgs} args - Arguments to filter Oral_health_questionnaires to delete.
   * @example
   * // Delete a few Oral_health_questionnaires
   * const { count } = await prisma.oral_health_questionnaire.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Oral_health_questionnaireDeleteManyArgs>(
    args: Subset<T, Oral_health_questionnaireDeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Oral_health_questionnaires.
   * @param {Oral_health_questionnaireUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Oral_health_questionnaires
   * const oral_health_questionnaire = await prisma.oral_health_questionnaire.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Oral_health_questionnaireUpdateManyArgs>(
    args: Subset<T, Oral_health_questionnaireUpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Oral_health_questionnaire.
   * @param {Oral_health_questionnaireUpsertArgs} args - Arguments to update or create a Oral_health_questionnaire.
   * @example
   * // Update or create a Oral_health_questionnaire
   * const oral_health_questionnaire = await prisma.oral_health_questionnaire.upsert({
   *   create: {
   *     // ... data to create a Oral_health_questionnaire
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Oral_health_questionnaire we want to update
   *   }
   * })
  **/
  upsert<T extends Oral_health_questionnaireUpsertArgs>(
    args: Subset<T, Oral_health_questionnaireUpsertArgs>
  ): CheckSelect<T, Prisma__Oral_health_questionnaireClient<Oral_health_questionnaire>, Prisma__Oral_health_questionnaireClient<Oral_health_questionnaireGetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyOral_health_questionnaireArgs, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Oral_health_questionnaire.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Oral_health_questionnaireClient<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  anamnesis_prontuary<T extends AnamnesisArgs = {}>(args?: Subset<T, AnamnesisArgs>): CheckSelect<T, Prisma__AnamnesisClient<Anamnesis | null>, Prisma__AnamnesisClient<AnamnesisGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Oral_health_questionnaire findOne
 */
export type FindOneOral_health_questionnaireArgs = {
  /**
   * Select specific fields to fetch from the Oral_health_questionnaire
  **/
  select?: Oral_health_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Oral_health_questionnaireInclude | null
  /**
   * Filter, which Oral_health_questionnaire to fetch.
  **/
  where: Oral_health_questionnaireWhereUniqueInput
}


/**
 * Oral_health_questionnaire findMany
 */
export type FindManyOral_health_questionnaireArgs = {
  /**
   * Select specific fields to fetch from the Oral_health_questionnaire
  **/
  select?: Oral_health_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Oral_health_questionnaireInclude | null
  /**
   * Filter, which Oral_health_questionnaires to fetch.
  **/
  where?: Oral_health_questionnaireWhereInput
  /**
   * Determine the order of the Oral_health_questionnaires to fetch.
  **/
  orderBy?: Oral_health_questionnaireOrderByInput
  /**
   * Sets the position for listing Oral_health_questionnaires.
  **/
  cursor?: Oral_health_questionnaireWhereUniqueInput
  /**
   * The number of Oral_health_questionnaires to fetch. If negative number, it will take Oral_health_questionnaires before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Oral_health_questionnaires.
  **/
  skip?: number
}


/**
 * Oral_health_questionnaire create
 */
export type Oral_health_questionnaireCreateArgs = {
  /**
   * Select specific fields to fetch from the Oral_health_questionnaire
  **/
  select?: Oral_health_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Oral_health_questionnaireInclude | null
  /**
   * The data needed to create a Oral_health_questionnaire.
  **/
  data: Oral_health_questionnaireCreateInput
}


/**
 * Oral_health_questionnaire update
 */
export type Oral_health_questionnaireUpdateArgs = {
  /**
   * Select specific fields to fetch from the Oral_health_questionnaire
  **/
  select?: Oral_health_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Oral_health_questionnaireInclude | null
  /**
   * The data needed to update a Oral_health_questionnaire.
  **/
  data: Oral_health_questionnaireUpdateInput
  /**
   * Choose, which Oral_health_questionnaire to update.
  **/
  where: Oral_health_questionnaireWhereUniqueInput
}


/**
 * Oral_health_questionnaire updateMany
 */
export type Oral_health_questionnaireUpdateManyArgs = {
  data: Oral_health_questionnaireUpdateManyMutationInput
  where?: Oral_health_questionnaireWhereInput
}


/**
 * Oral_health_questionnaire upsert
 */
export type Oral_health_questionnaireUpsertArgs = {
  /**
   * Select specific fields to fetch from the Oral_health_questionnaire
  **/
  select?: Oral_health_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Oral_health_questionnaireInclude | null
  /**
   * The filter to search for the Oral_health_questionnaire to update in case it exists.
  **/
  where: Oral_health_questionnaireWhereUniqueInput
  /**
   * In case the Oral_health_questionnaire found by the `where` argument doesn't exist, create a new Oral_health_questionnaire with this data.
  **/
  create: Oral_health_questionnaireCreateInput
  /**
   * In case the Oral_health_questionnaire was found with the provided `where` argument, update it with this data.
  **/
  update: Oral_health_questionnaireUpdateInput
}


/**
 * Oral_health_questionnaire delete
 */
export type Oral_health_questionnaireDeleteArgs = {
  /**
   * Select specific fields to fetch from the Oral_health_questionnaire
  **/
  select?: Oral_health_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Oral_health_questionnaireInclude | null
  /**
   * Filter which Oral_health_questionnaire to delete.
  **/
  where: Oral_health_questionnaireWhereUniqueInput
}


/**
 * Oral_health_questionnaire deleteMany
 */
export type Oral_health_questionnaireDeleteManyArgs = {
  where?: Oral_health_questionnaireWhereInput
}


/**
 * Oral_health_questionnaire without action
 */
export type Oral_health_questionnaireArgs = {
  /**
   * Select specific fields to fetch from the Oral_health_questionnaire
  **/
  select?: Oral_health_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Oral_health_questionnaireInclude | null
}



/**
 * Model TMJ_problems_questionnaire
 */

export type TMJ_problems_questionnaire = {
  id: string
  ortodontic_prontuary_id: string
  you_consider_have_TMJ_problem: yes_no
  when_the_simptoms_start: string | null
  difficulty_opening_your_mouth: yes_no
  pain_when_opening_closing_mouth: yes_no
  crackles_when_opening_closing_mouth: yes_no
  if_yes_one_or_both_sides: string | null
  if_one_whats_side_crackles: string | null
  TMJ_pain_at_rest: yes_no
  already_looked_for_profissional_treatment: yes_no
  if_yes_when_was_treated: string | null
  if_yes_you_made_any_image_exams: yes_no | null
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type TMJ_problems_questionnaireSelect = {
  id?: boolean
  ortodontic_prontuary?: boolean | OrtodonticsArgs
  ortodontic_prontuary_id?: boolean
  you_consider_have_TMJ_problem?: boolean
  when_the_simptoms_start?: boolean
  difficulty_opening_your_mouth?: boolean
  pain_when_opening_closing_mouth?: boolean
  crackles_when_opening_closing_mouth?: boolean
  if_yes_one_or_both_sides?: boolean
  if_one_whats_side_crackles?: boolean
  TMJ_pain_at_rest?: boolean
  already_looked_for_profissional_treatment?: boolean
  if_yes_when_was_treated?: boolean
  if_yes_you_made_any_image_exams?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type TMJ_problems_questionnaireInclude = {
  ortodontic_prontuary?: boolean | OrtodonticsArgs
}

export type TMJ_problems_questionnaireGetPayload<
  S extends boolean | null | undefined | TMJ_problems_questionnaireArgs,
  U = keyof S
> = S extends true
  ? TMJ_problems_questionnaire
  : S extends undefined
  ? never
  : S extends TMJ_problems_questionnaireArgs | FindManyTMJ_problems_questionnaireArgs
  ? 'include' extends U
    ? TMJ_problems_questionnaire  & {
      [P in TrueKeys<S['include']>]:
      P extends 'ortodontic_prontuary'
      ? OrtodonticsGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof TMJ_problems_questionnaire ? TMJ_problems_questionnaire[P]
: 
      P extends 'ortodontic_prontuary'
      ? OrtodonticsGetPayload<S['select'][P]> : never
    }
  : TMJ_problems_questionnaire
: TMJ_problems_questionnaire


export interface TMJ_problems_questionnaireDelegate {
  /**
   * Find zero or one TMJ_problems_questionnaire.
   * @param {FindOneTMJ_problems_questionnaireArgs} args - Arguments to find a TMJ_problems_questionnaire
   * @example
   * // Get one TMJ_problems_questionnaire
   * const tMJ_problems_questionnaire = await prisma.tMJ_problems_questionnaire.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneTMJ_problems_questionnaireArgs>(
    args: Subset<T, FindOneTMJ_problems_questionnaireArgs>
  ): CheckSelect<T, Prisma__TMJ_problems_questionnaireClient<TMJ_problems_questionnaire | null>, Prisma__TMJ_problems_questionnaireClient<TMJ_problems_questionnaireGetPayload<T> | null>>
  /**
   * Find zero or more TMJ_problems_questionnaires.
   * @param {FindManyTMJ_problems_questionnaireArgs=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all TMJ_problems_questionnaires
   * const tMJ_problems_questionnaires = await prisma.tMJ_problems_questionnaire.findMany()
   * 
   * // Get first 10 TMJ_problems_questionnaires
   * const tMJ_problems_questionnaires = await prisma.tMJ_problems_questionnaire.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const tMJ_problems_questionnaireWithIdOnly = await prisma.tMJ_problems_questionnaire.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyTMJ_problems_questionnaireArgs>(
    args?: Subset<T, FindManyTMJ_problems_questionnaireArgs>
  ): CheckSelect<T, Promise<Array<TMJ_problems_questionnaire>>, Promise<Array<TMJ_problems_questionnaireGetPayload<T>>>>
  /**
   * Create a TMJ_problems_questionnaire.
   * @param {TMJ_problems_questionnaireCreateArgs} args - Arguments to create a TMJ_problems_questionnaire.
   * @example
   * // Create one TMJ_problems_questionnaire
   * const TMJ_problems_questionnaire = await prisma.tMJ_problems_questionnaire.create({
   *   data: {
   *     // ... data to create a TMJ_problems_questionnaire
   *   }
   * })
   * 
  **/
  create<T extends TMJ_problems_questionnaireCreateArgs>(
    args: Subset<T, TMJ_problems_questionnaireCreateArgs>
  ): CheckSelect<T, Prisma__TMJ_problems_questionnaireClient<TMJ_problems_questionnaire>, Prisma__TMJ_problems_questionnaireClient<TMJ_problems_questionnaireGetPayload<T>>>
  /**
   * Delete a TMJ_problems_questionnaire.
   * @param {TMJ_problems_questionnaireDeleteArgs} args - Arguments to delete one TMJ_problems_questionnaire.
   * @example
   * // Delete one TMJ_problems_questionnaire
   * const TMJ_problems_questionnaire = await prisma.tMJ_problems_questionnaire.delete({
   *   where: {
   *     // ... filter to delete one TMJ_problems_questionnaire
   *   }
   * })
   * 
  **/
  delete<T extends TMJ_problems_questionnaireDeleteArgs>(
    args: Subset<T, TMJ_problems_questionnaireDeleteArgs>
  ): CheckSelect<T, Prisma__TMJ_problems_questionnaireClient<TMJ_problems_questionnaire>, Prisma__TMJ_problems_questionnaireClient<TMJ_problems_questionnaireGetPayload<T>>>
  /**
   * Update one TMJ_problems_questionnaire.
   * @param {TMJ_problems_questionnaireUpdateArgs} args - Arguments to update one TMJ_problems_questionnaire.
   * @example
   * // Update one TMJ_problems_questionnaire
   * const tMJ_problems_questionnaire = await prisma.tMJ_problems_questionnaire.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends TMJ_problems_questionnaireUpdateArgs>(
    args: Subset<T, TMJ_problems_questionnaireUpdateArgs>
  ): CheckSelect<T, Prisma__TMJ_problems_questionnaireClient<TMJ_problems_questionnaire>, Prisma__TMJ_problems_questionnaireClient<TMJ_problems_questionnaireGetPayload<T>>>
  /**
   * Delete zero or more TMJ_problems_questionnaires.
   * @param {TMJ_problems_questionnaireDeleteManyArgs} args - Arguments to filter TMJ_problems_questionnaires to delete.
   * @example
   * // Delete a few TMJ_problems_questionnaires
   * const { count } = await prisma.tMJ_problems_questionnaire.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends TMJ_problems_questionnaireDeleteManyArgs>(
    args: Subset<T, TMJ_problems_questionnaireDeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more TMJ_problems_questionnaires.
   * @param {TMJ_problems_questionnaireUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many TMJ_problems_questionnaires
   * const tMJ_problems_questionnaire = await prisma.tMJ_problems_questionnaire.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends TMJ_problems_questionnaireUpdateManyArgs>(
    args: Subset<T, TMJ_problems_questionnaireUpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one TMJ_problems_questionnaire.
   * @param {TMJ_problems_questionnaireUpsertArgs} args - Arguments to update or create a TMJ_problems_questionnaire.
   * @example
   * // Update or create a TMJ_problems_questionnaire
   * const tMJ_problems_questionnaire = await prisma.tMJ_problems_questionnaire.upsert({
   *   create: {
   *     // ... data to create a TMJ_problems_questionnaire
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the TMJ_problems_questionnaire we want to update
   *   }
   * })
  **/
  upsert<T extends TMJ_problems_questionnaireUpsertArgs>(
    args: Subset<T, TMJ_problems_questionnaireUpsertArgs>
  ): CheckSelect<T, Prisma__TMJ_problems_questionnaireClient<TMJ_problems_questionnaire>, Prisma__TMJ_problems_questionnaireClient<TMJ_problems_questionnaireGetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyTMJ_problems_questionnaireArgs, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for TMJ_problems_questionnaire.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__TMJ_problems_questionnaireClient<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  ortodontic_prontuary<T extends OrtodonticsArgs = {}>(args?: Subset<T, OrtodonticsArgs>): CheckSelect<T, Prisma__OrtodonticsClient<Ortodontics | null>, Prisma__OrtodonticsClient<OrtodonticsGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * TMJ_problems_questionnaire findOne
 */
export type FindOneTMJ_problems_questionnaireArgs = {
  /**
   * Select specific fields to fetch from the TMJ_problems_questionnaire
  **/
  select?: TMJ_problems_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: TMJ_problems_questionnaireInclude | null
  /**
   * Filter, which TMJ_problems_questionnaire to fetch.
  **/
  where: TMJ_problems_questionnaireWhereUniqueInput
}


/**
 * TMJ_problems_questionnaire findMany
 */
export type FindManyTMJ_problems_questionnaireArgs = {
  /**
   * Select specific fields to fetch from the TMJ_problems_questionnaire
  **/
  select?: TMJ_problems_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: TMJ_problems_questionnaireInclude | null
  /**
   * Filter, which TMJ_problems_questionnaires to fetch.
  **/
  where?: TMJ_problems_questionnaireWhereInput
  /**
   * Determine the order of the TMJ_problems_questionnaires to fetch.
  **/
  orderBy?: TMJ_problems_questionnaireOrderByInput
  /**
   * Sets the position for listing TMJ_problems_questionnaires.
  **/
  cursor?: TMJ_problems_questionnaireWhereUniqueInput
  /**
   * The number of TMJ_problems_questionnaires to fetch. If negative number, it will take TMJ_problems_questionnaires before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` TMJ_problems_questionnaires.
  **/
  skip?: number
}


/**
 * TMJ_problems_questionnaire create
 */
export type TMJ_problems_questionnaireCreateArgs = {
  /**
   * Select specific fields to fetch from the TMJ_problems_questionnaire
  **/
  select?: TMJ_problems_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: TMJ_problems_questionnaireInclude | null
  /**
   * The data needed to create a TMJ_problems_questionnaire.
  **/
  data: TMJ_problems_questionnaireCreateInput
}


/**
 * TMJ_problems_questionnaire update
 */
export type TMJ_problems_questionnaireUpdateArgs = {
  /**
   * Select specific fields to fetch from the TMJ_problems_questionnaire
  **/
  select?: TMJ_problems_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: TMJ_problems_questionnaireInclude | null
  /**
   * The data needed to update a TMJ_problems_questionnaire.
  **/
  data: TMJ_problems_questionnaireUpdateInput
  /**
   * Choose, which TMJ_problems_questionnaire to update.
  **/
  where: TMJ_problems_questionnaireWhereUniqueInput
}


/**
 * TMJ_problems_questionnaire updateMany
 */
export type TMJ_problems_questionnaireUpdateManyArgs = {
  data: TMJ_problems_questionnaireUpdateManyMutationInput
  where?: TMJ_problems_questionnaireWhereInput
}


/**
 * TMJ_problems_questionnaire upsert
 */
export type TMJ_problems_questionnaireUpsertArgs = {
  /**
   * Select specific fields to fetch from the TMJ_problems_questionnaire
  **/
  select?: TMJ_problems_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: TMJ_problems_questionnaireInclude | null
  /**
   * The filter to search for the TMJ_problems_questionnaire to update in case it exists.
  **/
  where: TMJ_problems_questionnaireWhereUniqueInput
  /**
   * In case the TMJ_problems_questionnaire found by the `where` argument doesn't exist, create a new TMJ_problems_questionnaire with this data.
  **/
  create: TMJ_problems_questionnaireCreateInput
  /**
   * In case the TMJ_problems_questionnaire was found with the provided `where` argument, update it with this data.
  **/
  update: TMJ_problems_questionnaireUpdateInput
}


/**
 * TMJ_problems_questionnaire delete
 */
export type TMJ_problems_questionnaireDeleteArgs = {
  /**
   * Select specific fields to fetch from the TMJ_problems_questionnaire
  **/
  select?: TMJ_problems_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: TMJ_problems_questionnaireInclude | null
  /**
   * Filter which TMJ_problems_questionnaire to delete.
  **/
  where: TMJ_problems_questionnaireWhereUniqueInput
}


/**
 * TMJ_problems_questionnaire deleteMany
 */
export type TMJ_problems_questionnaireDeleteManyArgs = {
  where?: TMJ_problems_questionnaireWhereInput
}


/**
 * TMJ_problems_questionnaire without action
 */
export type TMJ_problems_questionnaireArgs = {
  /**
   * Select specific fields to fetch from the TMJ_problems_questionnaire
  **/
  select?: TMJ_problems_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: TMJ_problems_questionnaireInclude | null
}



/**
 * Model Vital_signs_questionnaire
 */

export type Vital_signs_questionnaire = {
  id: string
  anamnesis_prontuary_id: string
  heart_beats_per_minute: number | null
  arterial_pressure: string | null
  breaths_per_minute: number | null
  temperature_in_celcius: number | null
  createdAt: Date
  updatedAt: Date
  what_is_updated: string[]
}



export type Vital_signs_questionnaireSelect = {
  id?: boolean
  anamnesis_prontuary?: boolean | AnamnesisArgs
  anamnesis_prontuary_id?: boolean
  heart_beats_per_minute?: boolean
  arterial_pressure?: boolean
  breaths_per_minute?: boolean
  temperature_in_celcius?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_is_updated?: boolean
}

export type Vital_signs_questionnaireInclude = {
  anamnesis_prontuary?: boolean | AnamnesisArgs
}

export type Vital_signs_questionnaireGetPayload<
  S extends boolean | null | undefined | Vital_signs_questionnaireArgs,
  U = keyof S
> = S extends true
  ? Vital_signs_questionnaire
  : S extends undefined
  ? never
  : S extends Vital_signs_questionnaireArgs | FindManyVital_signs_questionnaireArgs
  ? 'include' extends U
    ? Vital_signs_questionnaire  & {
      [P in TrueKeys<S['include']>]:
      P extends 'anamnesis_prontuary'
      ? AnamnesisGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Vital_signs_questionnaire ? Vital_signs_questionnaire[P]
: 
      P extends 'anamnesis_prontuary'
      ? AnamnesisGetPayload<S['select'][P]> : never
    }
  : Vital_signs_questionnaire
: Vital_signs_questionnaire


export interface Vital_signs_questionnaireDelegate {
  /**
   * Find zero or one Vital_signs_questionnaire.
   * @param {FindOneVital_signs_questionnaireArgs} args - Arguments to find a Vital_signs_questionnaire
   * @example
   * // Get one Vital_signs_questionnaire
   * const vital_signs_questionnaire = await prisma.vital_signs_questionnaire.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneVital_signs_questionnaireArgs>(
    args: Subset<T, FindOneVital_signs_questionnaireArgs>
  ): CheckSelect<T, Prisma__Vital_signs_questionnaireClient<Vital_signs_questionnaire | null>, Prisma__Vital_signs_questionnaireClient<Vital_signs_questionnaireGetPayload<T> | null>>
  /**
   * Find zero or more Vital_signs_questionnaires.
   * @param {FindManyVital_signs_questionnaireArgs=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Vital_signs_questionnaires
   * const vital_signs_questionnaires = await prisma.vital_signs_questionnaire.findMany()
   * 
   * // Get first 10 Vital_signs_questionnaires
   * const vital_signs_questionnaires = await prisma.vital_signs_questionnaire.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const vital_signs_questionnaireWithIdOnly = await prisma.vital_signs_questionnaire.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyVital_signs_questionnaireArgs>(
    args?: Subset<T, FindManyVital_signs_questionnaireArgs>
  ): CheckSelect<T, Promise<Array<Vital_signs_questionnaire>>, Promise<Array<Vital_signs_questionnaireGetPayload<T>>>>
  /**
   * Create a Vital_signs_questionnaire.
   * @param {Vital_signs_questionnaireCreateArgs} args - Arguments to create a Vital_signs_questionnaire.
   * @example
   * // Create one Vital_signs_questionnaire
   * const Vital_signs_questionnaire = await prisma.vital_signs_questionnaire.create({
   *   data: {
   *     // ... data to create a Vital_signs_questionnaire
   *   }
   * })
   * 
  **/
  create<T extends Vital_signs_questionnaireCreateArgs>(
    args: Subset<T, Vital_signs_questionnaireCreateArgs>
  ): CheckSelect<T, Prisma__Vital_signs_questionnaireClient<Vital_signs_questionnaire>, Prisma__Vital_signs_questionnaireClient<Vital_signs_questionnaireGetPayload<T>>>
  /**
   * Delete a Vital_signs_questionnaire.
   * @param {Vital_signs_questionnaireDeleteArgs} args - Arguments to delete one Vital_signs_questionnaire.
   * @example
   * // Delete one Vital_signs_questionnaire
   * const Vital_signs_questionnaire = await prisma.vital_signs_questionnaire.delete({
   *   where: {
   *     // ... filter to delete one Vital_signs_questionnaire
   *   }
   * })
   * 
  **/
  delete<T extends Vital_signs_questionnaireDeleteArgs>(
    args: Subset<T, Vital_signs_questionnaireDeleteArgs>
  ): CheckSelect<T, Prisma__Vital_signs_questionnaireClient<Vital_signs_questionnaire>, Prisma__Vital_signs_questionnaireClient<Vital_signs_questionnaireGetPayload<T>>>
  /**
   * Update one Vital_signs_questionnaire.
   * @param {Vital_signs_questionnaireUpdateArgs} args - Arguments to update one Vital_signs_questionnaire.
   * @example
   * // Update one Vital_signs_questionnaire
   * const vital_signs_questionnaire = await prisma.vital_signs_questionnaire.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Vital_signs_questionnaireUpdateArgs>(
    args: Subset<T, Vital_signs_questionnaireUpdateArgs>
  ): CheckSelect<T, Prisma__Vital_signs_questionnaireClient<Vital_signs_questionnaire>, Prisma__Vital_signs_questionnaireClient<Vital_signs_questionnaireGetPayload<T>>>
  /**
   * Delete zero or more Vital_signs_questionnaires.
   * @param {Vital_signs_questionnaireDeleteManyArgs} args - Arguments to filter Vital_signs_questionnaires to delete.
   * @example
   * // Delete a few Vital_signs_questionnaires
   * const { count } = await prisma.vital_signs_questionnaire.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Vital_signs_questionnaireDeleteManyArgs>(
    args: Subset<T, Vital_signs_questionnaireDeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Vital_signs_questionnaires.
   * @param {Vital_signs_questionnaireUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Vital_signs_questionnaires
   * const vital_signs_questionnaire = await prisma.vital_signs_questionnaire.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Vital_signs_questionnaireUpdateManyArgs>(
    args: Subset<T, Vital_signs_questionnaireUpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Vital_signs_questionnaire.
   * @param {Vital_signs_questionnaireUpsertArgs} args - Arguments to update or create a Vital_signs_questionnaire.
   * @example
   * // Update or create a Vital_signs_questionnaire
   * const vital_signs_questionnaire = await prisma.vital_signs_questionnaire.upsert({
   *   create: {
   *     // ... data to create a Vital_signs_questionnaire
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Vital_signs_questionnaire we want to update
   *   }
   * })
  **/
  upsert<T extends Vital_signs_questionnaireUpsertArgs>(
    args: Subset<T, Vital_signs_questionnaireUpsertArgs>
  ): CheckSelect<T, Prisma__Vital_signs_questionnaireClient<Vital_signs_questionnaire>, Prisma__Vital_signs_questionnaireClient<Vital_signs_questionnaireGetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyVital_signs_questionnaireArgs, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Vital_signs_questionnaire.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Vital_signs_questionnaireClient<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  anamnesis_prontuary<T extends AnamnesisArgs = {}>(args?: Subset<T, AnamnesisArgs>): CheckSelect<T, Prisma__AnamnesisClient<Anamnesis | null>, Prisma__AnamnesisClient<AnamnesisGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Vital_signs_questionnaire findOne
 */
export type FindOneVital_signs_questionnaireArgs = {
  /**
   * Select specific fields to fetch from the Vital_signs_questionnaire
  **/
  select?: Vital_signs_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Vital_signs_questionnaireInclude | null
  /**
   * Filter, which Vital_signs_questionnaire to fetch.
  **/
  where: Vital_signs_questionnaireWhereUniqueInput
}


/**
 * Vital_signs_questionnaire findMany
 */
export type FindManyVital_signs_questionnaireArgs = {
  /**
   * Select specific fields to fetch from the Vital_signs_questionnaire
  **/
  select?: Vital_signs_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Vital_signs_questionnaireInclude | null
  /**
   * Filter, which Vital_signs_questionnaires to fetch.
  **/
  where?: Vital_signs_questionnaireWhereInput
  /**
   * Determine the order of the Vital_signs_questionnaires to fetch.
  **/
  orderBy?: Vital_signs_questionnaireOrderByInput
  /**
   * Sets the position for listing Vital_signs_questionnaires.
  **/
  cursor?: Vital_signs_questionnaireWhereUniqueInput
  /**
   * The number of Vital_signs_questionnaires to fetch. If negative number, it will take Vital_signs_questionnaires before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Vital_signs_questionnaires.
  **/
  skip?: number
}


/**
 * Vital_signs_questionnaire create
 */
export type Vital_signs_questionnaireCreateArgs = {
  /**
   * Select specific fields to fetch from the Vital_signs_questionnaire
  **/
  select?: Vital_signs_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Vital_signs_questionnaireInclude | null
  /**
   * The data needed to create a Vital_signs_questionnaire.
  **/
  data: Vital_signs_questionnaireCreateInput
}


/**
 * Vital_signs_questionnaire update
 */
export type Vital_signs_questionnaireUpdateArgs = {
  /**
   * Select specific fields to fetch from the Vital_signs_questionnaire
  **/
  select?: Vital_signs_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Vital_signs_questionnaireInclude | null
  /**
   * The data needed to update a Vital_signs_questionnaire.
  **/
  data: Vital_signs_questionnaireUpdateInput
  /**
   * Choose, which Vital_signs_questionnaire to update.
  **/
  where: Vital_signs_questionnaireWhereUniqueInput
}


/**
 * Vital_signs_questionnaire updateMany
 */
export type Vital_signs_questionnaireUpdateManyArgs = {
  data: Vital_signs_questionnaireUpdateManyMutationInput
  where?: Vital_signs_questionnaireWhereInput
}


/**
 * Vital_signs_questionnaire upsert
 */
export type Vital_signs_questionnaireUpsertArgs = {
  /**
   * Select specific fields to fetch from the Vital_signs_questionnaire
  **/
  select?: Vital_signs_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Vital_signs_questionnaireInclude | null
  /**
   * The filter to search for the Vital_signs_questionnaire to update in case it exists.
  **/
  where: Vital_signs_questionnaireWhereUniqueInput
  /**
   * In case the Vital_signs_questionnaire found by the `where` argument doesn't exist, create a new Vital_signs_questionnaire with this data.
  **/
  create: Vital_signs_questionnaireCreateInput
  /**
   * In case the Vital_signs_questionnaire was found with the provided `where` argument, update it with this data.
  **/
  update: Vital_signs_questionnaireUpdateInput
}


/**
 * Vital_signs_questionnaire delete
 */
export type Vital_signs_questionnaireDeleteArgs = {
  /**
   * Select specific fields to fetch from the Vital_signs_questionnaire
  **/
  select?: Vital_signs_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Vital_signs_questionnaireInclude | null
  /**
   * Filter which Vital_signs_questionnaire to delete.
  **/
  where: Vital_signs_questionnaireWhereUniqueInput
}


/**
 * Vital_signs_questionnaire deleteMany
 */
export type Vital_signs_questionnaireDeleteManyArgs = {
  where?: Vital_signs_questionnaireWhereInput
}


/**
 * Vital_signs_questionnaire without action
 */
export type Vital_signs_questionnaireArgs = {
  /**
   * Select specific fields to fetch from the Vital_signs_questionnaire
  **/
  select?: Vital_signs_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Vital_signs_questionnaireInclude | null
}



/**
 * Model Diet_questionnaire
 */

export type Diet_questionnaire = {
  id: string
  anamnesis_prontuary_id: string
  already_instructed_in_diet_by_a_CD: yes_no
  if_yes_what_the_instructions: string | null
  importance_of_diet_in_oral_health: yes_no
  createdAt: Date
  updatedAt: Date
  what_is_updated: string[]
}



export type Diet_questionnaireSelect = {
  id?: boolean
  anamnesis_prontuary?: boolean | AnamnesisArgs
  anamnesis_prontuary_id?: boolean
  already_instructed_in_diet_by_a_CD?: boolean
  if_yes_what_the_instructions?: boolean
  importance_of_diet_in_oral_health?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_is_updated?: boolean
}

export type Diet_questionnaireInclude = {
  anamnesis_prontuary?: boolean | AnamnesisArgs
}

export type Diet_questionnaireGetPayload<
  S extends boolean | null | undefined | Diet_questionnaireArgs,
  U = keyof S
> = S extends true
  ? Diet_questionnaire
  : S extends undefined
  ? never
  : S extends Diet_questionnaireArgs | FindManyDiet_questionnaireArgs
  ? 'include' extends U
    ? Diet_questionnaire  & {
      [P in TrueKeys<S['include']>]:
      P extends 'anamnesis_prontuary'
      ? AnamnesisGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Diet_questionnaire ? Diet_questionnaire[P]
: 
      P extends 'anamnesis_prontuary'
      ? AnamnesisGetPayload<S['select'][P]> : never
    }
  : Diet_questionnaire
: Diet_questionnaire


export interface Diet_questionnaireDelegate {
  /**
   * Find zero or one Diet_questionnaire.
   * @param {FindOneDiet_questionnaireArgs} args - Arguments to find a Diet_questionnaire
   * @example
   * // Get one Diet_questionnaire
   * const diet_questionnaire = await prisma.diet_questionnaire.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneDiet_questionnaireArgs>(
    args: Subset<T, FindOneDiet_questionnaireArgs>
  ): CheckSelect<T, Prisma__Diet_questionnaireClient<Diet_questionnaire | null>, Prisma__Diet_questionnaireClient<Diet_questionnaireGetPayload<T> | null>>
  /**
   * Find zero or more Diet_questionnaires.
   * @param {FindManyDiet_questionnaireArgs=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Diet_questionnaires
   * const diet_questionnaires = await prisma.diet_questionnaire.findMany()
   * 
   * // Get first 10 Diet_questionnaires
   * const diet_questionnaires = await prisma.diet_questionnaire.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const diet_questionnaireWithIdOnly = await prisma.diet_questionnaire.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyDiet_questionnaireArgs>(
    args?: Subset<T, FindManyDiet_questionnaireArgs>
  ): CheckSelect<T, Promise<Array<Diet_questionnaire>>, Promise<Array<Diet_questionnaireGetPayload<T>>>>
  /**
   * Create a Diet_questionnaire.
   * @param {Diet_questionnaireCreateArgs} args - Arguments to create a Diet_questionnaire.
   * @example
   * // Create one Diet_questionnaire
   * const Diet_questionnaire = await prisma.diet_questionnaire.create({
   *   data: {
   *     // ... data to create a Diet_questionnaire
   *   }
   * })
   * 
  **/
  create<T extends Diet_questionnaireCreateArgs>(
    args: Subset<T, Diet_questionnaireCreateArgs>
  ): CheckSelect<T, Prisma__Diet_questionnaireClient<Diet_questionnaire>, Prisma__Diet_questionnaireClient<Diet_questionnaireGetPayload<T>>>
  /**
   * Delete a Diet_questionnaire.
   * @param {Diet_questionnaireDeleteArgs} args - Arguments to delete one Diet_questionnaire.
   * @example
   * // Delete one Diet_questionnaire
   * const Diet_questionnaire = await prisma.diet_questionnaire.delete({
   *   where: {
   *     // ... filter to delete one Diet_questionnaire
   *   }
   * })
   * 
  **/
  delete<T extends Diet_questionnaireDeleteArgs>(
    args: Subset<T, Diet_questionnaireDeleteArgs>
  ): CheckSelect<T, Prisma__Diet_questionnaireClient<Diet_questionnaire>, Prisma__Diet_questionnaireClient<Diet_questionnaireGetPayload<T>>>
  /**
   * Update one Diet_questionnaire.
   * @param {Diet_questionnaireUpdateArgs} args - Arguments to update one Diet_questionnaire.
   * @example
   * // Update one Diet_questionnaire
   * const diet_questionnaire = await prisma.diet_questionnaire.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Diet_questionnaireUpdateArgs>(
    args: Subset<T, Diet_questionnaireUpdateArgs>
  ): CheckSelect<T, Prisma__Diet_questionnaireClient<Diet_questionnaire>, Prisma__Diet_questionnaireClient<Diet_questionnaireGetPayload<T>>>
  /**
   * Delete zero or more Diet_questionnaires.
   * @param {Diet_questionnaireDeleteManyArgs} args - Arguments to filter Diet_questionnaires to delete.
   * @example
   * // Delete a few Diet_questionnaires
   * const { count } = await prisma.diet_questionnaire.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Diet_questionnaireDeleteManyArgs>(
    args: Subset<T, Diet_questionnaireDeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Diet_questionnaires.
   * @param {Diet_questionnaireUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Diet_questionnaires
   * const diet_questionnaire = await prisma.diet_questionnaire.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Diet_questionnaireUpdateManyArgs>(
    args: Subset<T, Diet_questionnaireUpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Diet_questionnaire.
   * @param {Diet_questionnaireUpsertArgs} args - Arguments to update or create a Diet_questionnaire.
   * @example
   * // Update or create a Diet_questionnaire
   * const diet_questionnaire = await prisma.diet_questionnaire.upsert({
   *   create: {
   *     // ... data to create a Diet_questionnaire
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Diet_questionnaire we want to update
   *   }
   * })
  **/
  upsert<T extends Diet_questionnaireUpsertArgs>(
    args: Subset<T, Diet_questionnaireUpsertArgs>
  ): CheckSelect<T, Prisma__Diet_questionnaireClient<Diet_questionnaire>, Prisma__Diet_questionnaireClient<Diet_questionnaireGetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyDiet_questionnaireArgs, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Diet_questionnaire.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Diet_questionnaireClient<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  anamnesis_prontuary<T extends AnamnesisArgs = {}>(args?: Subset<T, AnamnesisArgs>): CheckSelect<T, Prisma__AnamnesisClient<Anamnesis | null>, Prisma__AnamnesisClient<AnamnesisGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Diet_questionnaire findOne
 */
export type FindOneDiet_questionnaireArgs = {
  /**
   * Select specific fields to fetch from the Diet_questionnaire
  **/
  select?: Diet_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Diet_questionnaireInclude | null
  /**
   * Filter, which Diet_questionnaire to fetch.
  **/
  where: Diet_questionnaireWhereUniqueInput
}


/**
 * Diet_questionnaire findMany
 */
export type FindManyDiet_questionnaireArgs = {
  /**
   * Select specific fields to fetch from the Diet_questionnaire
  **/
  select?: Diet_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Diet_questionnaireInclude | null
  /**
   * Filter, which Diet_questionnaires to fetch.
  **/
  where?: Diet_questionnaireWhereInput
  /**
   * Determine the order of the Diet_questionnaires to fetch.
  **/
  orderBy?: Diet_questionnaireOrderByInput
  /**
   * Sets the position for listing Diet_questionnaires.
  **/
  cursor?: Diet_questionnaireWhereUniqueInput
  /**
   * The number of Diet_questionnaires to fetch. If negative number, it will take Diet_questionnaires before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Diet_questionnaires.
  **/
  skip?: number
}


/**
 * Diet_questionnaire create
 */
export type Diet_questionnaireCreateArgs = {
  /**
   * Select specific fields to fetch from the Diet_questionnaire
  **/
  select?: Diet_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Diet_questionnaireInclude | null
  /**
   * The data needed to create a Diet_questionnaire.
  **/
  data: Diet_questionnaireCreateInput
}


/**
 * Diet_questionnaire update
 */
export type Diet_questionnaireUpdateArgs = {
  /**
   * Select specific fields to fetch from the Diet_questionnaire
  **/
  select?: Diet_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Diet_questionnaireInclude | null
  /**
   * The data needed to update a Diet_questionnaire.
  **/
  data: Diet_questionnaireUpdateInput
  /**
   * Choose, which Diet_questionnaire to update.
  **/
  where: Diet_questionnaireWhereUniqueInput
}


/**
 * Diet_questionnaire updateMany
 */
export type Diet_questionnaireUpdateManyArgs = {
  data: Diet_questionnaireUpdateManyMutationInput
  where?: Diet_questionnaireWhereInput
}


/**
 * Diet_questionnaire upsert
 */
export type Diet_questionnaireUpsertArgs = {
  /**
   * Select specific fields to fetch from the Diet_questionnaire
  **/
  select?: Diet_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Diet_questionnaireInclude | null
  /**
   * The filter to search for the Diet_questionnaire to update in case it exists.
  **/
  where: Diet_questionnaireWhereUniqueInput
  /**
   * In case the Diet_questionnaire found by the `where` argument doesn't exist, create a new Diet_questionnaire with this data.
  **/
  create: Diet_questionnaireCreateInput
  /**
   * In case the Diet_questionnaire was found with the provided `where` argument, update it with this data.
  **/
  update: Diet_questionnaireUpdateInput
}


/**
 * Diet_questionnaire delete
 */
export type Diet_questionnaireDeleteArgs = {
  /**
   * Select specific fields to fetch from the Diet_questionnaire
  **/
  select?: Diet_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Diet_questionnaireInclude | null
  /**
   * Filter which Diet_questionnaire to delete.
  **/
  where: Diet_questionnaireWhereUniqueInput
}


/**
 * Diet_questionnaire deleteMany
 */
export type Diet_questionnaireDeleteManyArgs = {
  where?: Diet_questionnaireWhereInput
}


/**
 * Diet_questionnaire without action
 */
export type Diet_questionnaireArgs = {
  /**
   * Select specific fields to fetch from the Diet_questionnaire
  **/
  select?: Diet_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Diet_questionnaireInclude | null
}



/**
 * Model Main_anamnesis_questionnaire
 */

export type Main_anamnesis_questionnaire = {
  id: string
  anamnesis_prontuary_id: string
  main_issue: string
  recent_disease_history: string
  undergoing_medical_treatment: yes_no
  if_yes_what_treatment: string | null
  taking_any_medication: yes_no
  if_yes_what_medication: string | null
  already_used_local_anestesics: yes_no
  you_presented_reaction: yes_no
  allergic_to_any_medicine: yes_no
  if_yes_what_medicine: string | null
  allergic_to_latex: yes_no
  has_any_know_blood_issues: yes_no
  use_acetil_salicilic_acid: yes_no
  if_yes_for_what: string | null
  you_have_already_made_blood_testing: yes_no
  if_yes_when_made_it: Date | null
  has_any_importanting_bleeding: yes_no
  if_yes_when: Date | null
  if_yes_how_long_to_stop: string
  have_problems_with_healing: yes_no
  has_any_know_tireoids_issues: yes_no
  has_any_know_hormonal_issues: yes_no
  you_are_using_any_corticosteroids: yes_no
  diabetes_mellitus: yes_no
  if_yes_any_treatment_for_diabetes: string | null
  any_heart_problems: yes_no
  if_yes_what_hearth_problem: string | null
  arterial_hypertension: yes_no
  if_yes_any_treatment_for_hypertension: string | null
  breathing_problems: yes_no
  if_yes_what_breathing_problem: string | null
  kidney_damage: yes_no
  if_yes_what_kidney_problem: string | null
  gastric_problems: yes_no
  if_yes_you_looked_for_gastric_doctor: yes_no | null
  if_yes_what_gastric_problems: string | null
  have_rheumatic_fever: yes_no
  joints_problems_or_reumatics: yes_no
  if_yes_you_looked_for_reaumatics_doctor: string | null
  use_drugs: yes_no
  if_yes_what_drug: string | null
  smoker: yes_no
  if_yes_how_many_cigarretes_perday: number | null
  consider_a_alcolic_addicted: yes_no
  if_yes_when_was_the_last_drink: string | null
  family_background: yes_no
  if_yes_what_familys_problems: string | null
  preagnant: yes_no
  if_yes_how_many_months: string | null
  take_contraceptives: yes_no
  what_contraceptives: string | null
  are_breastfeeding: yes_no
  entered_the_process_of_menopause: yes_no
  if_yes_guided_by_the_gynecologist: yes_no | null
  take_hormone: yes_no
  take_calcium: yes_no
  terms_readed: yes_no
  patient_signed: yes_no
  signed_date: Date
  createdAt: Date
  updatedAt: Date
  what_was_updated: string[]
}



export type Main_anamnesis_questionnaireSelect = {
  id?: boolean
  anamnesis_prontuary?: boolean | AnamnesisArgs
  anamnesis_prontuary_id?: boolean
  main_issue?: boolean
  recent_disease_history?: boolean
  undergoing_medical_treatment?: boolean
  if_yes_what_treatment?: boolean
  taking_any_medication?: boolean
  if_yes_what_medication?: boolean
  already_used_local_anestesics?: boolean
  you_presented_reaction?: boolean
  allergic_to_any_medicine?: boolean
  if_yes_what_medicine?: boolean
  allergic_to_latex?: boolean
  has_any_know_blood_issues?: boolean
  use_acetil_salicilic_acid?: boolean
  if_yes_for_what?: boolean
  you_have_already_made_blood_testing?: boolean
  if_yes_when_made_it?: boolean
  has_any_importanting_bleeding?: boolean
  if_yes_when?: boolean
  if_yes_how_long_to_stop?: boolean
  have_problems_with_healing?: boolean
  has_any_know_tireoids_issues?: boolean
  has_any_know_hormonal_issues?: boolean
  you_are_using_any_corticosteroids?: boolean
  diabetes_mellitus?: boolean
  if_yes_any_treatment_for_diabetes?: boolean
  any_heart_problems?: boolean
  if_yes_what_hearth_problem?: boolean
  arterial_hypertension?: boolean
  if_yes_any_treatment_for_hypertension?: boolean
  breathing_problems?: boolean
  if_yes_what_breathing_problem?: boolean
  kidney_damage?: boolean
  if_yes_what_kidney_problem?: boolean
  gastric_problems?: boolean
  if_yes_you_looked_for_gastric_doctor?: boolean
  if_yes_what_gastric_problems?: boolean
  have_rheumatic_fever?: boolean
  joints_problems_or_reumatics?: boolean
  if_yes_you_looked_for_reaumatics_doctor?: boolean
  use_drugs?: boolean
  if_yes_what_drug?: boolean
  smoker?: boolean
  if_yes_how_many_cigarretes_perday?: boolean
  consider_a_alcolic_addicted?: boolean
  if_yes_when_was_the_last_drink?: boolean
  family_background?: boolean
  if_yes_what_familys_problems?: boolean
  preagnant?: boolean
  if_yes_how_many_months?: boolean
  take_contraceptives?: boolean
  what_contraceptives?: boolean
  are_breastfeeding?: boolean
  entered_the_process_of_menopause?: boolean
  if_yes_guided_by_the_gynecologist?: boolean
  take_hormone?: boolean
  take_calcium?: boolean
  terms_readed?: boolean
  patient_signed?: boolean
  signed_date?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  what_was_updated?: boolean
}

export type Main_anamnesis_questionnaireInclude = {
  anamnesis_prontuary?: boolean | AnamnesisArgs
}

export type Main_anamnesis_questionnaireGetPayload<
  S extends boolean | null | undefined | Main_anamnesis_questionnaireArgs,
  U = keyof S
> = S extends true
  ? Main_anamnesis_questionnaire
  : S extends undefined
  ? never
  : S extends Main_anamnesis_questionnaireArgs | FindManyMain_anamnesis_questionnaireArgs
  ? 'include' extends U
    ? Main_anamnesis_questionnaire  & {
      [P in TrueKeys<S['include']>]:
      P extends 'anamnesis_prontuary'
      ? AnamnesisGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Main_anamnesis_questionnaire ? Main_anamnesis_questionnaire[P]
: 
      P extends 'anamnesis_prontuary'
      ? AnamnesisGetPayload<S['select'][P]> : never
    }
  : Main_anamnesis_questionnaire
: Main_anamnesis_questionnaire


export interface Main_anamnesis_questionnaireDelegate {
  /**
   * Find zero or one Main_anamnesis_questionnaire.
   * @param {FindOneMain_anamnesis_questionnaireArgs} args - Arguments to find a Main_anamnesis_questionnaire
   * @example
   * // Get one Main_anamnesis_questionnaire
   * const main_anamnesis_questionnaire = await prisma.main_anamnesis_questionnaire.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneMain_anamnesis_questionnaireArgs>(
    args: Subset<T, FindOneMain_anamnesis_questionnaireArgs>
  ): CheckSelect<T, Prisma__Main_anamnesis_questionnaireClient<Main_anamnesis_questionnaire | null>, Prisma__Main_anamnesis_questionnaireClient<Main_anamnesis_questionnaireGetPayload<T> | null>>
  /**
   * Find zero or more Main_anamnesis_questionnaires.
   * @param {FindManyMain_anamnesis_questionnaireArgs=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Main_anamnesis_questionnaires
   * const main_anamnesis_questionnaires = await prisma.main_anamnesis_questionnaire.findMany()
   * 
   * // Get first 10 Main_anamnesis_questionnaires
   * const main_anamnesis_questionnaires = await prisma.main_anamnesis_questionnaire.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const main_anamnesis_questionnaireWithIdOnly = await prisma.main_anamnesis_questionnaire.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyMain_anamnesis_questionnaireArgs>(
    args?: Subset<T, FindManyMain_anamnesis_questionnaireArgs>
  ): CheckSelect<T, Promise<Array<Main_anamnesis_questionnaire>>, Promise<Array<Main_anamnesis_questionnaireGetPayload<T>>>>
  /**
   * Create a Main_anamnesis_questionnaire.
   * @param {Main_anamnesis_questionnaireCreateArgs} args - Arguments to create a Main_anamnesis_questionnaire.
   * @example
   * // Create one Main_anamnesis_questionnaire
   * const Main_anamnesis_questionnaire = await prisma.main_anamnesis_questionnaire.create({
   *   data: {
   *     // ... data to create a Main_anamnesis_questionnaire
   *   }
   * })
   * 
  **/
  create<T extends Main_anamnesis_questionnaireCreateArgs>(
    args: Subset<T, Main_anamnesis_questionnaireCreateArgs>
  ): CheckSelect<T, Prisma__Main_anamnesis_questionnaireClient<Main_anamnesis_questionnaire>, Prisma__Main_anamnesis_questionnaireClient<Main_anamnesis_questionnaireGetPayload<T>>>
  /**
   * Delete a Main_anamnesis_questionnaire.
   * @param {Main_anamnesis_questionnaireDeleteArgs} args - Arguments to delete one Main_anamnesis_questionnaire.
   * @example
   * // Delete one Main_anamnesis_questionnaire
   * const Main_anamnesis_questionnaire = await prisma.main_anamnesis_questionnaire.delete({
   *   where: {
   *     // ... filter to delete one Main_anamnesis_questionnaire
   *   }
   * })
   * 
  **/
  delete<T extends Main_anamnesis_questionnaireDeleteArgs>(
    args: Subset<T, Main_anamnesis_questionnaireDeleteArgs>
  ): CheckSelect<T, Prisma__Main_anamnesis_questionnaireClient<Main_anamnesis_questionnaire>, Prisma__Main_anamnesis_questionnaireClient<Main_anamnesis_questionnaireGetPayload<T>>>
  /**
   * Update one Main_anamnesis_questionnaire.
   * @param {Main_anamnesis_questionnaireUpdateArgs} args - Arguments to update one Main_anamnesis_questionnaire.
   * @example
   * // Update one Main_anamnesis_questionnaire
   * const main_anamnesis_questionnaire = await prisma.main_anamnesis_questionnaire.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Main_anamnesis_questionnaireUpdateArgs>(
    args: Subset<T, Main_anamnesis_questionnaireUpdateArgs>
  ): CheckSelect<T, Prisma__Main_anamnesis_questionnaireClient<Main_anamnesis_questionnaire>, Prisma__Main_anamnesis_questionnaireClient<Main_anamnesis_questionnaireGetPayload<T>>>
  /**
   * Delete zero or more Main_anamnesis_questionnaires.
   * @param {Main_anamnesis_questionnaireDeleteManyArgs} args - Arguments to filter Main_anamnesis_questionnaires to delete.
   * @example
   * // Delete a few Main_anamnesis_questionnaires
   * const { count } = await prisma.main_anamnesis_questionnaire.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Main_anamnesis_questionnaireDeleteManyArgs>(
    args: Subset<T, Main_anamnesis_questionnaireDeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Main_anamnesis_questionnaires.
   * @param {Main_anamnesis_questionnaireUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Main_anamnesis_questionnaires
   * const main_anamnesis_questionnaire = await prisma.main_anamnesis_questionnaire.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Main_anamnesis_questionnaireUpdateManyArgs>(
    args: Subset<T, Main_anamnesis_questionnaireUpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Main_anamnesis_questionnaire.
   * @param {Main_anamnesis_questionnaireUpsertArgs} args - Arguments to update or create a Main_anamnesis_questionnaire.
   * @example
   * // Update or create a Main_anamnesis_questionnaire
   * const main_anamnesis_questionnaire = await prisma.main_anamnesis_questionnaire.upsert({
   *   create: {
   *     // ... data to create a Main_anamnesis_questionnaire
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Main_anamnesis_questionnaire we want to update
   *   }
   * })
  **/
  upsert<T extends Main_anamnesis_questionnaireUpsertArgs>(
    args: Subset<T, Main_anamnesis_questionnaireUpsertArgs>
  ): CheckSelect<T, Prisma__Main_anamnesis_questionnaireClient<Main_anamnesis_questionnaire>, Prisma__Main_anamnesis_questionnaireClient<Main_anamnesis_questionnaireGetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyMain_anamnesis_questionnaireArgs, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Main_anamnesis_questionnaire.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Main_anamnesis_questionnaireClient<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  anamnesis_prontuary<T extends AnamnesisArgs = {}>(args?: Subset<T, AnamnesisArgs>): CheckSelect<T, Prisma__AnamnesisClient<Anamnesis | null>, Prisma__AnamnesisClient<AnamnesisGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Main_anamnesis_questionnaire findOne
 */
export type FindOneMain_anamnesis_questionnaireArgs = {
  /**
   * Select specific fields to fetch from the Main_anamnesis_questionnaire
  **/
  select?: Main_anamnesis_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Main_anamnesis_questionnaireInclude | null
  /**
   * Filter, which Main_anamnesis_questionnaire to fetch.
  **/
  where: Main_anamnesis_questionnaireWhereUniqueInput
}


/**
 * Main_anamnesis_questionnaire findMany
 */
export type FindManyMain_anamnesis_questionnaireArgs = {
  /**
   * Select specific fields to fetch from the Main_anamnesis_questionnaire
  **/
  select?: Main_anamnesis_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Main_anamnesis_questionnaireInclude | null
  /**
   * Filter, which Main_anamnesis_questionnaires to fetch.
  **/
  where?: Main_anamnesis_questionnaireWhereInput
  /**
   * Determine the order of the Main_anamnesis_questionnaires to fetch.
  **/
  orderBy?: Main_anamnesis_questionnaireOrderByInput
  /**
   * Sets the position for listing Main_anamnesis_questionnaires.
  **/
  cursor?: Main_anamnesis_questionnaireWhereUniqueInput
  /**
   * The number of Main_anamnesis_questionnaires to fetch. If negative number, it will take Main_anamnesis_questionnaires before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Main_anamnesis_questionnaires.
  **/
  skip?: number
}


/**
 * Main_anamnesis_questionnaire create
 */
export type Main_anamnesis_questionnaireCreateArgs = {
  /**
   * Select specific fields to fetch from the Main_anamnesis_questionnaire
  **/
  select?: Main_anamnesis_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Main_anamnesis_questionnaireInclude | null
  /**
   * The data needed to create a Main_anamnesis_questionnaire.
  **/
  data: Main_anamnesis_questionnaireCreateInput
}


/**
 * Main_anamnesis_questionnaire update
 */
export type Main_anamnesis_questionnaireUpdateArgs = {
  /**
   * Select specific fields to fetch from the Main_anamnesis_questionnaire
  **/
  select?: Main_anamnesis_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Main_anamnesis_questionnaireInclude | null
  /**
   * The data needed to update a Main_anamnesis_questionnaire.
  **/
  data: Main_anamnesis_questionnaireUpdateInput
  /**
   * Choose, which Main_anamnesis_questionnaire to update.
  **/
  where: Main_anamnesis_questionnaireWhereUniqueInput
}


/**
 * Main_anamnesis_questionnaire updateMany
 */
export type Main_anamnesis_questionnaireUpdateManyArgs = {
  data: Main_anamnesis_questionnaireUpdateManyMutationInput
  where?: Main_anamnesis_questionnaireWhereInput
}


/**
 * Main_anamnesis_questionnaire upsert
 */
export type Main_anamnesis_questionnaireUpsertArgs = {
  /**
   * Select specific fields to fetch from the Main_anamnesis_questionnaire
  **/
  select?: Main_anamnesis_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Main_anamnesis_questionnaireInclude | null
  /**
   * The filter to search for the Main_anamnesis_questionnaire to update in case it exists.
  **/
  where: Main_anamnesis_questionnaireWhereUniqueInput
  /**
   * In case the Main_anamnesis_questionnaire found by the `where` argument doesn't exist, create a new Main_anamnesis_questionnaire with this data.
  **/
  create: Main_anamnesis_questionnaireCreateInput
  /**
   * In case the Main_anamnesis_questionnaire was found with the provided `where` argument, update it with this data.
  **/
  update: Main_anamnesis_questionnaireUpdateInput
}


/**
 * Main_anamnesis_questionnaire delete
 */
export type Main_anamnesis_questionnaireDeleteArgs = {
  /**
   * Select specific fields to fetch from the Main_anamnesis_questionnaire
  **/
  select?: Main_anamnesis_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Main_anamnesis_questionnaireInclude | null
  /**
   * Filter which Main_anamnesis_questionnaire to delete.
  **/
  where: Main_anamnesis_questionnaireWhereUniqueInput
}


/**
 * Main_anamnesis_questionnaire deleteMany
 */
export type Main_anamnesis_questionnaireDeleteManyArgs = {
  where?: Main_anamnesis_questionnaireWhereInput
}


/**
 * Main_anamnesis_questionnaire without action
 */
export type Main_anamnesis_questionnaireArgs = {
  /**
   * Select specific fields to fetch from the Main_anamnesis_questionnaire
  **/
  select?: Main_anamnesis_questionnaireSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Main_anamnesis_questionnaireInclude | null
}



/**
 * Model Dont_know_questions
 */

export type Dont_know_questions = {
  id: string
  question: string
  questionnaire_id: string
}



export type Dont_know_questionsSelect = {
  id?: boolean
  question?: boolean
  questionnaire_id?: boolean
  Patient?: boolean | FindManyPatientArgs
}

export type Dont_know_questionsInclude = {
  Patient?: boolean | FindManyPatientArgs
}

export type Dont_know_questionsGetPayload<
  S extends boolean | null | undefined | Dont_know_questionsArgs,
  U = keyof S
> = S extends true
  ? Dont_know_questions
  : S extends undefined
  ? never
  : S extends Dont_know_questionsArgs | FindManyDont_know_questionsArgs
  ? 'include' extends U
    ? Dont_know_questions  & {
      [P in TrueKeys<S['include']>]:
      P extends 'Patient'
      ? Array<PatientGetPayload<S['include'][P]>> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Dont_know_questions ? Dont_know_questions[P]
: 
      P extends 'Patient'
      ? Array<PatientGetPayload<S['select'][P]>> : never
    }
  : Dont_know_questions
: Dont_know_questions


export interface Dont_know_questionsDelegate {
  /**
   * Find zero or one Dont_know_questions.
   * @param {FindOneDont_know_questionsArgs} args - Arguments to find a Dont_know_questions
   * @example
   * // Get one Dont_know_questions
   * const dont_know_questions = await prisma.dont_know_questions.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneDont_know_questionsArgs>(
    args: Subset<T, FindOneDont_know_questionsArgs>
  ): CheckSelect<T, Prisma__Dont_know_questionsClient<Dont_know_questions | null>, Prisma__Dont_know_questionsClient<Dont_know_questionsGetPayload<T> | null>>
  /**
   * Find zero or more Dont_know_questions.
   * @param {FindManyDont_know_questionsArgs=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Dont_know_questions
   * const dont_know_questions = await prisma.dont_know_questions.findMany()
   * 
   * // Get first 10 Dont_know_questions
   * const dont_know_questions = await prisma.dont_know_questions.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const dont_know_questionsWithIdOnly = await prisma.dont_know_questions.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyDont_know_questionsArgs>(
    args?: Subset<T, FindManyDont_know_questionsArgs>
  ): CheckSelect<T, Promise<Array<Dont_know_questions>>, Promise<Array<Dont_know_questionsGetPayload<T>>>>
  /**
   * Create a Dont_know_questions.
   * @param {Dont_know_questionsCreateArgs} args - Arguments to create a Dont_know_questions.
   * @example
   * // Create one Dont_know_questions
   * const Dont_know_questions = await prisma.dont_know_questions.create({
   *   data: {
   *     // ... data to create a Dont_know_questions
   *   }
   * })
   * 
  **/
  create<T extends Dont_know_questionsCreateArgs>(
    args: Subset<T, Dont_know_questionsCreateArgs>
  ): CheckSelect<T, Prisma__Dont_know_questionsClient<Dont_know_questions>, Prisma__Dont_know_questionsClient<Dont_know_questionsGetPayload<T>>>
  /**
   * Delete a Dont_know_questions.
   * @param {Dont_know_questionsDeleteArgs} args - Arguments to delete one Dont_know_questions.
   * @example
   * // Delete one Dont_know_questions
   * const Dont_know_questions = await prisma.dont_know_questions.delete({
   *   where: {
   *     // ... filter to delete one Dont_know_questions
   *   }
   * })
   * 
  **/
  delete<T extends Dont_know_questionsDeleteArgs>(
    args: Subset<T, Dont_know_questionsDeleteArgs>
  ): CheckSelect<T, Prisma__Dont_know_questionsClient<Dont_know_questions>, Prisma__Dont_know_questionsClient<Dont_know_questionsGetPayload<T>>>
  /**
   * Update one Dont_know_questions.
   * @param {Dont_know_questionsUpdateArgs} args - Arguments to update one Dont_know_questions.
   * @example
   * // Update one Dont_know_questions
   * const dont_know_questions = await prisma.dont_know_questions.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Dont_know_questionsUpdateArgs>(
    args: Subset<T, Dont_know_questionsUpdateArgs>
  ): CheckSelect<T, Prisma__Dont_know_questionsClient<Dont_know_questions>, Prisma__Dont_know_questionsClient<Dont_know_questionsGetPayload<T>>>
  /**
   * Delete zero or more Dont_know_questions.
   * @param {Dont_know_questionsDeleteManyArgs} args - Arguments to filter Dont_know_questions to delete.
   * @example
   * // Delete a few Dont_know_questions
   * const { count } = await prisma.dont_know_questions.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Dont_know_questionsDeleteManyArgs>(
    args: Subset<T, Dont_know_questionsDeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Dont_know_questions.
   * @param {Dont_know_questionsUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Dont_know_questions
   * const dont_know_questions = await prisma.dont_know_questions.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Dont_know_questionsUpdateManyArgs>(
    args: Subset<T, Dont_know_questionsUpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Dont_know_questions.
   * @param {Dont_know_questionsUpsertArgs} args - Arguments to update or create a Dont_know_questions.
   * @example
   * // Update or create a Dont_know_questions
   * const dont_know_questions = await prisma.dont_know_questions.upsert({
   *   create: {
   *     // ... data to create a Dont_know_questions
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Dont_know_questions we want to update
   *   }
   * })
  **/
  upsert<T extends Dont_know_questionsUpsertArgs>(
    args: Subset<T, Dont_know_questionsUpsertArgs>
  ): CheckSelect<T, Prisma__Dont_know_questionsClient<Dont_know_questions>, Prisma__Dont_know_questionsClient<Dont_know_questionsGetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyDont_know_questionsArgs, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Dont_know_questions.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Dont_know_questionsClient<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  Patient<T extends FindManyPatientArgs = {}>(args?: Subset<T, FindManyPatientArgs>): CheckSelect<T, Promise<Array<Patient>>, Promise<Array<PatientGetPayload<T>>>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Dont_know_questions findOne
 */
export type FindOneDont_know_questionsArgs = {
  /**
   * Select specific fields to fetch from the Dont_know_questions
  **/
  select?: Dont_know_questionsSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Dont_know_questionsInclude | null
  /**
   * Filter, which Dont_know_questions to fetch.
  **/
  where: Dont_know_questionsWhereUniqueInput
}


/**
 * Dont_know_questions findMany
 */
export type FindManyDont_know_questionsArgs = {
  /**
   * Select specific fields to fetch from the Dont_know_questions
  **/
  select?: Dont_know_questionsSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Dont_know_questionsInclude | null
  /**
   * Filter, which Dont_know_questions to fetch.
  **/
  where?: Dont_know_questionsWhereInput
  /**
   * Determine the order of the Dont_know_questions to fetch.
  **/
  orderBy?: Dont_know_questionsOrderByInput
  /**
   * Sets the position for listing Dont_know_questions.
  **/
  cursor?: Dont_know_questionsWhereUniqueInput
  /**
   * The number of Dont_know_questions to fetch. If negative number, it will take Dont_know_questions before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Dont_know_questions.
  **/
  skip?: number
}


/**
 * Dont_know_questions create
 */
export type Dont_know_questionsCreateArgs = {
  /**
   * Select specific fields to fetch from the Dont_know_questions
  **/
  select?: Dont_know_questionsSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Dont_know_questionsInclude | null
  /**
   * The data needed to create a Dont_know_questions.
  **/
  data: Dont_know_questionsCreateInput
}


/**
 * Dont_know_questions update
 */
export type Dont_know_questionsUpdateArgs = {
  /**
   * Select specific fields to fetch from the Dont_know_questions
  **/
  select?: Dont_know_questionsSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Dont_know_questionsInclude | null
  /**
   * The data needed to update a Dont_know_questions.
  **/
  data: Dont_know_questionsUpdateInput
  /**
   * Choose, which Dont_know_questions to update.
  **/
  where: Dont_know_questionsWhereUniqueInput
}


/**
 * Dont_know_questions updateMany
 */
export type Dont_know_questionsUpdateManyArgs = {
  data: Dont_know_questionsUpdateManyMutationInput
  where?: Dont_know_questionsWhereInput
}


/**
 * Dont_know_questions upsert
 */
export type Dont_know_questionsUpsertArgs = {
  /**
   * Select specific fields to fetch from the Dont_know_questions
  **/
  select?: Dont_know_questionsSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Dont_know_questionsInclude | null
  /**
   * The filter to search for the Dont_know_questions to update in case it exists.
  **/
  where: Dont_know_questionsWhereUniqueInput
  /**
   * In case the Dont_know_questions found by the `where` argument doesn't exist, create a new Dont_know_questions with this data.
  **/
  create: Dont_know_questionsCreateInput
  /**
   * In case the Dont_know_questions was found with the provided `where` argument, update it with this data.
  **/
  update: Dont_know_questionsUpdateInput
}


/**
 * Dont_know_questions delete
 */
export type Dont_know_questionsDeleteArgs = {
  /**
   * Select specific fields to fetch from the Dont_know_questions
  **/
  select?: Dont_know_questionsSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Dont_know_questionsInclude | null
  /**
   * Filter which Dont_know_questions to delete.
  **/
  where: Dont_know_questionsWhereUniqueInput
}


/**
 * Dont_know_questions deleteMany
 */
export type Dont_know_questionsDeleteManyArgs = {
  where?: Dont_know_questionsWhereInput
}


/**
 * Dont_know_questions without action
 */
export type Dont_know_questionsArgs = {
  /**
   * Select specific fields to fetch from the Dont_know_questions
  **/
  select?: Dont_know_questionsSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Dont_know_questionsInclude | null
}



/**
 * Model Dentist
 */

export type Dentist = {
  id: string
  CRO_number: string
  firstname: string
  lastname: string
  username: string
  password: string
  contactmeans: Contact_means | null
  cellphone_number: string | null
  clinic_id: string
  active: boolean
  comission: number | null
  createdAt: Date
  updatedAt: Date
  role: string
  clinicRegistered_id: string | null
}



export type DentistSelect = {
  id?: boolean
  CRO_number?: boolean
  firstname?: boolean
  lastname?: boolean
  username?: boolean
  password?: boolean
  contactmeans?: boolean
  shedule?: boolean | ScheduleArgs
  cellphone_number?: boolean
  clinic?: boolean | ClinicArgs
  clinic_id?: boolean
  email?: boolean | FindManyEmailArgs
  active?: boolean
  specialization?: boolean | FindManyClinic_specializationsArgs
  ortodontics_treatments?: boolean | FindManyOrtodonticsArgs
  implantology_treatments?: boolean | FindManyImplantologyArgs
  comission?: boolean
  patients?: boolean | FindManyPatientArgs
  createdAt?: boolean
  updatedAt?: boolean
  role?: boolean
  Clinic?: boolean | ClinicArgs
  clinicRegistered_id?: boolean
  Email?: boolean | FindManyEmailArgs
}

export type DentistInclude = {
  shedule?: boolean | ScheduleArgs
  clinic?: boolean | ClinicArgs
  email?: boolean | FindManyEmailArgs
  specialization?: boolean | FindManyClinic_specializationsArgs
  ortodontics_treatments?: boolean | FindManyOrtodonticsArgs
  implantology_treatments?: boolean | FindManyImplantologyArgs
  patients?: boolean | FindManyPatientArgs
  Clinic?: boolean | ClinicArgs
  Email?: boolean | FindManyEmailArgs
}

export type DentistGetPayload<
  S extends boolean | null | undefined | DentistArgs,
  U = keyof S
> = S extends true
  ? Dentist
  : S extends undefined
  ? never
  : S extends DentistArgs | FindManyDentistArgs
  ? 'include' extends U
    ? Dentist  & {
      [P in TrueKeys<S['include']>]:
      P extends 'shedule'
      ? ScheduleGetPayload<S['include'][P]> :
      P extends 'clinic'
      ? ClinicGetPayload<S['include'][P]> :
      P extends 'email'
      ? Array<EmailGetPayload<S['include'][P]>> :
      P extends 'specialization'
      ? Array<Clinic_specializationsGetPayload<S['include'][P]>> :
      P extends 'ortodontics_treatments'
      ? Array<OrtodonticsGetPayload<S['include'][P]>> :
      P extends 'implantology_treatments'
      ? Array<ImplantologyGetPayload<S['include'][P]>> :
      P extends 'patients'
      ? Array<PatientGetPayload<S['include'][P]>> :
      P extends 'Clinic'
      ? ClinicGetPayload<S['include'][P]> | null :
      P extends 'Email'
      ? Array<EmailGetPayload<S['include'][P]>> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Dentist ? Dentist[P]
: 
      P extends 'shedule'
      ? ScheduleGetPayload<S['select'][P]> :
      P extends 'clinic'
      ? ClinicGetPayload<S['select'][P]> :
      P extends 'email'
      ? Array<EmailGetPayload<S['select'][P]>> :
      P extends 'specialization'
      ? Array<Clinic_specializationsGetPayload<S['select'][P]>> :
      P extends 'ortodontics_treatments'
      ? Array<OrtodonticsGetPayload<S['select'][P]>> :
      P extends 'implantology_treatments'
      ? Array<ImplantologyGetPayload<S['select'][P]>> :
      P extends 'patients'
      ? Array<PatientGetPayload<S['select'][P]>> :
      P extends 'Clinic'
      ? ClinicGetPayload<S['select'][P]> | null :
      P extends 'Email'
      ? Array<EmailGetPayload<S['select'][P]>> : never
    }
  : Dentist
: Dentist


export interface DentistDelegate {
  /**
   * Find zero or one Dentist.
   * @param {FindOneDentistArgs} args - Arguments to find a Dentist
   * @example
   * // Get one Dentist
   * const dentist = await prisma.dentist.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneDentistArgs>(
    args: Subset<T, FindOneDentistArgs>
  ): CheckSelect<T, Prisma__DentistClient<Dentist | null>, Prisma__DentistClient<DentistGetPayload<T> | null>>
  /**
   * Find zero or more Dentists.
   * @param {FindManyDentistArgs=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Dentists
   * const dentists = await prisma.dentist.findMany()
   * 
   * // Get first 10 Dentists
   * const dentists = await prisma.dentist.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const dentistWithIdOnly = await prisma.dentist.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyDentistArgs>(
    args?: Subset<T, FindManyDentistArgs>
  ): CheckSelect<T, Promise<Array<Dentist>>, Promise<Array<DentistGetPayload<T>>>>
  /**
   * Create a Dentist.
   * @param {DentistCreateArgs} args - Arguments to create a Dentist.
   * @example
   * // Create one Dentist
   * const Dentist = await prisma.dentist.create({
   *   data: {
   *     // ... data to create a Dentist
   *   }
   * })
   * 
  **/
  create<T extends DentistCreateArgs>(
    args: Subset<T, DentistCreateArgs>
  ): CheckSelect<T, Prisma__DentistClient<Dentist>, Prisma__DentistClient<DentistGetPayload<T>>>
  /**
   * Delete a Dentist.
   * @param {DentistDeleteArgs} args - Arguments to delete one Dentist.
   * @example
   * // Delete one Dentist
   * const Dentist = await prisma.dentist.delete({
   *   where: {
   *     // ... filter to delete one Dentist
   *   }
   * })
   * 
  **/
  delete<T extends DentistDeleteArgs>(
    args: Subset<T, DentistDeleteArgs>
  ): CheckSelect<T, Prisma__DentistClient<Dentist>, Prisma__DentistClient<DentistGetPayload<T>>>
  /**
   * Update one Dentist.
   * @param {DentistUpdateArgs} args - Arguments to update one Dentist.
   * @example
   * // Update one Dentist
   * const dentist = await prisma.dentist.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends DentistUpdateArgs>(
    args: Subset<T, DentistUpdateArgs>
  ): CheckSelect<T, Prisma__DentistClient<Dentist>, Prisma__DentistClient<DentistGetPayload<T>>>
  /**
   * Delete zero or more Dentists.
   * @param {DentistDeleteManyArgs} args - Arguments to filter Dentists to delete.
   * @example
   * // Delete a few Dentists
   * const { count } = await prisma.dentist.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends DentistDeleteManyArgs>(
    args: Subset<T, DentistDeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Dentists.
   * @param {DentistUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Dentists
   * const dentist = await prisma.dentist.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends DentistUpdateManyArgs>(
    args: Subset<T, DentistUpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Dentist.
   * @param {DentistUpsertArgs} args - Arguments to update or create a Dentist.
   * @example
   * // Update or create a Dentist
   * const dentist = await prisma.dentist.upsert({
   *   create: {
   *     // ... data to create a Dentist
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Dentist we want to update
   *   }
   * })
  **/
  upsert<T extends DentistUpsertArgs>(
    args: Subset<T, DentistUpsertArgs>
  ): CheckSelect<T, Prisma__DentistClient<Dentist>, Prisma__DentistClient<DentistGetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyDentistArgs, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Dentist.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__DentistClient<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  shedule<T extends ScheduleArgs = {}>(args?: Subset<T, ScheduleArgs>): CheckSelect<T, Prisma__ScheduleClient<Schedule | null>, Prisma__ScheduleClient<ScheduleGetPayload<T> | null>>;

  clinic<T extends ClinicArgs = {}>(args?: Subset<T, ClinicArgs>): CheckSelect<T, Prisma__ClinicClient<Clinic | null>, Prisma__ClinicClient<ClinicGetPayload<T> | null>>;

  email<T extends FindManyEmailArgs = {}>(args?: Subset<T, FindManyEmailArgs>): CheckSelect<T, Promise<Array<Email>>, Promise<Array<EmailGetPayload<T>>>>;

  specialization<T extends FindManyClinic_specializationsArgs = {}>(args?: Subset<T, FindManyClinic_specializationsArgs>): CheckSelect<T, Promise<Array<Clinic_specializations>>, Promise<Array<Clinic_specializationsGetPayload<T>>>>;

  ortodontics_treatments<T extends FindManyOrtodonticsArgs = {}>(args?: Subset<T, FindManyOrtodonticsArgs>): CheckSelect<T, Promise<Array<Ortodontics>>, Promise<Array<OrtodonticsGetPayload<T>>>>;

  implantology_treatments<T extends FindManyImplantologyArgs = {}>(args?: Subset<T, FindManyImplantologyArgs>): CheckSelect<T, Promise<Array<Implantology>>, Promise<Array<ImplantologyGetPayload<T>>>>;

  patients<T extends FindManyPatientArgs = {}>(args?: Subset<T, FindManyPatientArgs>): CheckSelect<T, Promise<Array<Patient>>, Promise<Array<PatientGetPayload<T>>>>;

  Clinic<T extends ClinicArgs = {}>(args?: Subset<T, ClinicArgs>): CheckSelect<T, Prisma__ClinicClient<Clinic | null>, Prisma__ClinicClient<ClinicGetPayload<T> | null>>;

  Email<T extends FindManyEmailArgs = {}>(args?: Subset<T, FindManyEmailArgs>): CheckSelect<T, Promise<Array<Email>>, Promise<Array<EmailGetPayload<T>>>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Dentist findOne
 */
export type FindOneDentistArgs = {
  /**
   * Select specific fields to fetch from the Dentist
  **/
  select?: DentistSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: DentistInclude | null
  /**
   * Filter, which Dentist to fetch.
  **/
  where: DentistWhereUniqueInput
}


/**
 * Dentist findMany
 */
export type FindManyDentistArgs = {
  /**
   * Select specific fields to fetch from the Dentist
  **/
  select?: DentistSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: DentistInclude | null
  /**
   * Filter, which Dentists to fetch.
  **/
  where?: DentistWhereInput
  /**
   * Determine the order of the Dentists to fetch.
  **/
  orderBy?: DentistOrderByInput
  /**
   * Sets the position for listing Dentists.
  **/
  cursor?: DentistWhereUniqueInput
  /**
   * The number of Dentists to fetch. If negative number, it will take Dentists before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Dentists.
  **/
  skip?: number
}


/**
 * Dentist create
 */
export type DentistCreateArgs = {
  /**
   * Select specific fields to fetch from the Dentist
  **/
  select?: DentistSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: DentistInclude | null
  /**
   * The data needed to create a Dentist.
  **/
  data: DentistCreateInput
}


/**
 * Dentist update
 */
export type DentistUpdateArgs = {
  /**
   * Select specific fields to fetch from the Dentist
  **/
  select?: DentistSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: DentistInclude | null
  /**
   * The data needed to update a Dentist.
  **/
  data: DentistUpdateInput
  /**
   * Choose, which Dentist to update.
  **/
  where: DentistWhereUniqueInput
}


/**
 * Dentist updateMany
 */
export type DentistUpdateManyArgs = {
  data: DentistUpdateManyMutationInput
  where?: DentistWhereInput
}


/**
 * Dentist upsert
 */
export type DentistUpsertArgs = {
  /**
   * Select specific fields to fetch from the Dentist
  **/
  select?: DentistSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: DentistInclude | null
  /**
   * The filter to search for the Dentist to update in case it exists.
  **/
  where: DentistWhereUniqueInput
  /**
   * In case the Dentist found by the `where` argument doesn't exist, create a new Dentist with this data.
  **/
  create: DentistCreateInput
  /**
   * In case the Dentist was found with the provided `where` argument, update it with this data.
  **/
  update: DentistUpdateInput
}


/**
 * Dentist delete
 */
export type DentistDeleteArgs = {
  /**
   * Select specific fields to fetch from the Dentist
  **/
  select?: DentistSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: DentistInclude | null
  /**
   * Filter which Dentist to delete.
  **/
  where: DentistWhereUniqueInput
}


/**
 * Dentist deleteMany
 */
export type DentistDeleteManyArgs = {
  where?: DentistWhereInput
}


/**
 * Dentist without action
 */
export type DentistArgs = {
  /**
   * Select specific fields to fetch from the Dentist
  **/
  select?: DentistSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: DentistInclude | null
}



/**
 * Model Clinic_specializations
 */

export type Clinic_specializations = {
  id: number
  specialization: Specializations
  createdAt: Date
  updatedAt: Date
  dentistId: string | null
}



export type Clinic_specializationsSelect = {
  id?: boolean
  specialization?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  Dentist?: boolean | DentistArgs
  dentistId?: boolean
}

export type Clinic_specializationsInclude = {
  Dentist?: boolean | DentistArgs
}

export type Clinic_specializationsGetPayload<
  S extends boolean | null | undefined | Clinic_specializationsArgs,
  U = keyof S
> = S extends true
  ? Clinic_specializations
  : S extends undefined
  ? never
  : S extends Clinic_specializationsArgs | FindManyClinic_specializationsArgs
  ? 'include' extends U
    ? Clinic_specializations  & {
      [P in TrueKeys<S['include']>]:
      P extends 'Dentist'
      ? DentistGetPayload<S['include'][P]> | null : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Clinic_specializations ? Clinic_specializations[P]
: 
      P extends 'Dentist'
      ? DentistGetPayload<S['select'][P]> | null : never
    }
  : Clinic_specializations
: Clinic_specializations


export interface Clinic_specializationsDelegate {
  /**
   * Find zero or one Clinic_specializations.
   * @param {FindOneClinic_specializationsArgs} args - Arguments to find a Clinic_specializations
   * @example
   * // Get one Clinic_specializations
   * const clinic_specializations = await prisma.clinic_specializations.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneClinic_specializationsArgs>(
    args: Subset<T, FindOneClinic_specializationsArgs>
  ): CheckSelect<T, Prisma__Clinic_specializationsClient<Clinic_specializations | null>, Prisma__Clinic_specializationsClient<Clinic_specializationsGetPayload<T> | null>>
  /**
   * Find zero or more Clinic_specializations.
   * @param {FindManyClinic_specializationsArgs=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Clinic_specializations
   * const clinic_specializations = await prisma.clinic_specializations.findMany()
   * 
   * // Get first 10 Clinic_specializations
   * const clinic_specializations = await prisma.clinic_specializations.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const clinic_specializationsWithIdOnly = await prisma.clinic_specializations.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyClinic_specializationsArgs>(
    args?: Subset<T, FindManyClinic_specializationsArgs>
  ): CheckSelect<T, Promise<Array<Clinic_specializations>>, Promise<Array<Clinic_specializationsGetPayload<T>>>>
  /**
   * Create a Clinic_specializations.
   * @param {Clinic_specializationsCreateArgs} args - Arguments to create a Clinic_specializations.
   * @example
   * // Create one Clinic_specializations
   * const Clinic_specializations = await prisma.clinic_specializations.create({
   *   data: {
   *     // ... data to create a Clinic_specializations
   *   }
   * })
   * 
  **/
  create<T extends Clinic_specializationsCreateArgs>(
    args: Subset<T, Clinic_specializationsCreateArgs>
  ): CheckSelect<T, Prisma__Clinic_specializationsClient<Clinic_specializations>, Prisma__Clinic_specializationsClient<Clinic_specializationsGetPayload<T>>>
  /**
   * Delete a Clinic_specializations.
   * @param {Clinic_specializationsDeleteArgs} args - Arguments to delete one Clinic_specializations.
   * @example
   * // Delete one Clinic_specializations
   * const Clinic_specializations = await prisma.clinic_specializations.delete({
   *   where: {
   *     // ... filter to delete one Clinic_specializations
   *   }
   * })
   * 
  **/
  delete<T extends Clinic_specializationsDeleteArgs>(
    args: Subset<T, Clinic_specializationsDeleteArgs>
  ): CheckSelect<T, Prisma__Clinic_specializationsClient<Clinic_specializations>, Prisma__Clinic_specializationsClient<Clinic_specializationsGetPayload<T>>>
  /**
   * Update one Clinic_specializations.
   * @param {Clinic_specializationsUpdateArgs} args - Arguments to update one Clinic_specializations.
   * @example
   * // Update one Clinic_specializations
   * const clinic_specializations = await prisma.clinic_specializations.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Clinic_specializationsUpdateArgs>(
    args: Subset<T, Clinic_specializationsUpdateArgs>
  ): CheckSelect<T, Prisma__Clinic_specializationsClient<Clinic_specializations>, Prisma__Clinic_specializationsClient<Clinic_specializationsGetPayload<T>>>
  /**
   * Delete zero or more Clinic_specializations.
   * @param {Clinic_specializationsDeleteManyArgs} args - Arguments to filter Clinic_specializations to delete.
   * @example
   * // Delete a few Clinic_specializations
   * const { count } = await prisma.clinic_specializations.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Clinic_specializationsDeleteManyArgs>(
    args: Subset<T, Clinic_specializationsDeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Clinic_specializations.
   * @param {Clinic_specializationsUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Clinic_specializations
   * const clinic_specializations = await prisma.clinic_specializations.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Clinic_specializationsUpdateManyArgs>(
    args: Subset<T, Clinic_specializationsUpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Clinic_specializations.
   * @param {Clinic_specializationsUpsertArgs} args - Arguments to update or create a Clinic_specializations.
   * @example
   * // Update or create a Clinic_specializations
   * const clinic_specializations = await prisma.clinic_specializations.upsert({
   *   create: {
   *     // ... data to create a Clinic_specializations
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Clinic_specializations we want to update
   *   }
   * })
  **/
  upsert<T extends Clinic_specializationsUpsertArgs>(
    args: Subset<T, Clinic_specializationsUpsertArgs>
  ): CheckSelect<T, Prisma__Clinic_specializationsClient<Clinic_specializations>, Prisma__Clinic_specializationsClient<Clinic_specializationsGetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyClinic_specializationsArgs, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Clinic_specializations.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Clinic_specializationsClient<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  Dentist<T extends DentistArgs = {}>(args?: Subset<T, DentistArgs>): CheckSelect<T, Prisma__DentistClient<Dentist | null>, Prisma__DentistClient<DentistGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Clinic_specializations findOne
 */
export type FindOneClinic_specializationsArgs = {
  /**
   * Select specific fields to fetch from the Clinic_specializations
  **/
  select?: Clinic_specializationsSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_specializationsInclude | null
  /**
   * Filter, which Clinic_specializations to fetch.
  **/
  where: Clinic_specializationsWhereUniqueInput
}


/**
 * Clinic_specializations findMany
 */
export type FindManyClinic_specializationsArgs = {
  /**
   * Select specific fields to fetch from the Clinic_specializations
  **/
  select?: Clinic_specializationsSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_specializationsInclude | null
  /**
   * Filter, which Clinic_specializations to fetch.
  **/
  where?: Clinic_specializationsWhereInput
  /**
   * Determine the order of the Clinic_specializations to fetch.
  **/
  orderBy?: Clinic_specializationsOrderByInput
  /**
   * Sets the position for listing Clinic_specializations.
  **/
  cursor?: Clinic_specializationsWhereUniqueInput
  /**
   * The number of Clinic_specializations to fetch. If negative number, it will take Clinic_specializations before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Clinic_specializations.
  **/
  skip?: number
}


/**
 * Clinic_specializations create
 */
export type Clinic_specializationsCreateArgs = {
  /**
   * Select specific fields to fetch from the Clinic_specializations
  **/
  select?: Clinic_specializationsSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_specializationsInclude | null
  /**
   * The data needed to create a Clinic_specializations.
  **/
  data: Clinic_specializationsCreateInput
}


/**
 * Clinic_specializations update
 */
export type Clinic_specializationsUpdateArgs = {
  /**
   * Select specific fields to fetch from the Clinic_specializations
  **/
  select?: Clinic_specializationsSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_specializationsInclude | null
  /**
   * The data needed to update a Clinic_specializations.
  **/
  data: Clinic_specializationsUpdateInput
  /**
   * Choose, which Clinic_specializations to update.
  **/
  where: Clinic_specializationsWhereUniqueInput
}


/**
 * Clinic_specializations updateMany
 */
export type Clinic_specializationsUpdateManyArgs = {
  data: Clinic_specializationsUpdateManyMutationInput
  where?: Clinic_specializationsWhereInput
}


/**
 * Clinic_specializations upsert
 */
export type Clinic_specializationsUpsertArgs = {
  /**
   * Select specific fields to fetch from the Clinic_specializations
  **/
  select?: Clinic_specializationsSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_specializationsInclude | null
  /**
   * The filter to search for the Clinic_specializations to update in case it exists.
  **/
  where: Clinic_specializationsWhereUniqueInput
  /**
   * In case the Clinic_specializations found by the `where` argument doesn't exist, create a new Clinic_specializations with this data.
  **/
  create: Clinic_specializationsCreateInput
  /**
   * In case the Clinic_specializations was found with the provided `where` argument, update it with this data.
  **/
  update: Clinic_specializationsUpdateInput
}


/**
 * Clinic_specializations delete
 */
export type Clinic_specializationsDeleteArgs = {
  /**
   * Select specific fields to fetch from the Clinic_specializations
  **/
  select?: Clinic_specializationsSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_specializationsInclude | null
  /**
   * Filter which Clinic_specializations to delete.
  **/
  where: Clinic_specializationsWhereUniqueInput
}


/**
 * Clinic_specializations deleteMany
 */
export type Clinic_specializationsDeleteManyArgs = {
  where?: Clinic_specializationsWhereInput
}


/**
 * Clinic_specializations without action
 */
export type Clinic_specializationsArgs = {
  /**
   * Select specific fields to fetch from the Clinic_specializations
  **/
  select?: Clinic_specializationsSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_specializationsInclude | null
}



/**
 * Model Employeer
 */

export type Employeer = {
  id: string
  firstname: string
  lastname: string
  username: string
  password: string
  clinic_id: string
  role_id: string
  createdAt: Date
  updatedAt: Date
}



export type EmployeerSelect = {
  id?: boolean
  firstname?: boolean
  lastname?: boolean
  username?: boolean
  password?: boolean
  clinic?: boolean | ClinicArgs
  clinic_id?: boolean
  role?: boolean | Clinic_RolesArgs
  role_id?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type EmployeerInclude = {
  clinic?: boolean | ClinicArgs
  role?: boolean | Clinic_RolesArgs
}

export type EmployeerGetPayload<
  S extends boolean | null | undefined | EmployeerArgs,
  U = keyof S
> = S extends true
  ? Employeer
  : S extends undefined
  ? never
  : S extends EmployeerArgs | FindManyEmployeerArgs
  ? 'include' extends U
    ? Employeer  & {
      [P in TrueKeys<S['include']>]:
      P extends 'clinic'
      ? ClinicGetPayload<S['include'][P]> :
      P extends 'role'
      ? Clinic_RolesGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Employeer ? Employeer[P]
: 
      P extends 'clinic'
      ? ClinicGetPayload<S['select'][P]> :
      P extends 'role'
      ? Clinic_RolesGetPayload<S['select'][P]> : never
    }
  : Employeer
: Employeer


export interface EmployeerDelegate {
  /**
   * Find zero or one Employeer.
   * @param {FindOneEmployeerArgs} args - Arguments to find a Employeer
   * @example
   * // Get one Employeer
   * const employeer = await prisma.employeer.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneEmployeerArgs>(
    args: Subset<T, FindOneEmployeerArgs>
  ): CheckSelect<T, Prisma__EmployeerClient<Employeer | null>, Prisma__EmployeerClient<EmployeerGetPayload<T> | null>>
  /**
   * Find zero or more Employeers.
   * @param {FindManyEmployeerArgs=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Employeers
   * const employeers = await prisma.employeer.findMany()
   * 
   * // Get first 10 Employeers
   * const employeers = await prisma.employeer.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const employeerWithIdOnly = await prisma.employeer.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyEmployeerArgs>(
    args?: Subset<T, FindManyEmployeerArgs>
  ): CheckSelect<T, Promise<Array<Employeer>>, Promise<Array<EmployeerGetPayload<T>>>>
  /**
   * Create a Employeer.
   * @param {EmployeerCreateArgs} args - Arguments to create a Employeer.
   * @example
   * // Create one Employeer
   * const Employeer = await prisma.employeer.create({
   *   data: {
   *     // ... data to create a Employeer
   *   }
   * })
   * 
  **/
  create<T extends EmployeerCreateArgs>(
    args: Subset<T, EmployeerCreateArgs>
  ): CheckSelect<T, Prisma__EmployeerClient<Employeer>, Prisma__EmployeerClient<EmployeerGetPayload<T>>>
  /**
   * Delete a Employeer.
   * @param {EmployeerDeleteArgs} args - Arguments to delete one Employeer.
   * @example
   * // Delete one Employeer
   * const Employeer = await prisma.employeer.delete({
   *   where: {
   *     // ... filter to delete one Employeer
   *   }
   * })
   * 
  **/
  delete<T extends EmployeerDeleteArgs>(
    args: Subset<T, EmployeerDeleteArgs>
  ): CheckSelect<T, Prisma__EmployeerClient<Employeer>, Prisma__EmployeerClient<EmployeerGetPayload<T>>>
  /**
   * Update one Employeer.
   * @param {EmployeerUpdateArgs} args - Arguments to update one Employeer.
   * @example
   * // Update one Employeer
   * const employeer = await prisma.employeer.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends EmployeerUpdateArgs>(
    args: Subset<T, EmployeerUpdateArgs>
  ): CheckSelect<T, Prisma__EmployeerClient<Employeer>, Prisma__EmployeerClient<EmployeerGetPayload<T>>>
  /**
   * Delete zero or more Employeers.
   * @param {EmployeerDeleteManyArgs} args - Arguments to filter Employeers to delete.
   * @example
   * // Delete a few Employeers
   * const { count } = await prisma.employeer.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends EmployeerDeleteManyArgs>(
    args: Subset<T, EmployeerDeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Employeers.
   * @param {EmployeerUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Employeers
   * const employeer = await prisma.employeer.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends EmployeerUpdateManyArgs>(
    args: Subset<T, EmployeerUpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Employeer.
   * @param {EmployeerUpsertArgs} args - Arguments to update or create a Employeer.
   * @example
   * // Update or create a Employeer
   * const employeer = await prisma.employeer.upsert({
   *   create: {
   *     // ... data to create a Employeer
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Employeer we want to update
   *   }
   * })
  **/
  upsert<T extends EmployeerUpsertArgs>(
    args: Subset<T, EmployeerUpsertArgs>
  ): CheckSelect<T, Prisma__EmployeerClient<Employeer>, Prisma__EmployeerClient<EmployeerGetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyEmployeerArgs, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Employeer.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__EmployeerClient<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  clinic<T extends ClinicArgs = {}>(args?: Subset<T, ClinicArgs>): CheckSelect<T, Prisma__ClinicClient<Clinic | null>, Prisma__ClinicClient<ClinicGetPayload<T> | null>>;

  role<T extends Clinic_RolesArgs = {}>(args?: Subset<T, Clinic_RolesArgs>): CheckSelect<T, Prisma__Clinic_RolesClient<Clinic_Roles | null>, Prisma__Clinic_RolesClient<Clinic_RolesGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Employeer findOne
 */
export type FindOneEmployeerArgs = {
  /**
   * Select specific fields to fetch from the Employeer
  **/
  select?: EmployeerSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: EmployeerInclude | null
  /**
   * Filter, which Employeer to fetch.
  **/
  where: EmployeerWhereUniqueInput
}


/**
 * Employeer findMany
 */
export type FindManyEmployeerArgs = {
  /**
   * Select specific fields to fetch from the Employeer
  **/
  select?: EmployeerSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: EmployeerInclude | null
  /**
   * Filter, which Employeers to fetch.
  **/
  where?: EmployeerWhereInput
  /**
   * Determine the order of the Employeers to fetch.
  **/
  orderBy?: EmployeerOrderByInput
  /**
   * Sets the position for listing Employeers.
  **/
  cursor?: EmployeerWhereUniqueInput
  /**
   * The number of Employeers to fetch. If negative number, it will take Employeers before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Employeers.
  **/
  skip?: number
}


/**
 * Employeer create
 */
export type EmployeerCreateArgs = {
  /**
   * Select specific fields to fetch from the Employeer
  **/
  select?: EmployeerSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: EmployeerInclude | null
  /**
   * The data needed to create a Employeer.
  **/
  data: EmployeerCreateInput
}


/**
 * Employeer update
 */
export type EmployeerUpdateArgs = {
  /**
   * Select specific fields to fetch from the Employeer
  **/
  select?: EmployeerSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: EmployeerInclude | null
  /**
   * The data needed to update a Employeer.
  **/
  data: EmployeerUpdateInput
  /**
   * Choose, which Employeer to update.
  **/
  where: EmployeerWhereUniqueInput
}


/**
 * Employeer updateMany
 */
export type EmployeerUpdateManyArgs = {
  data: EmployeerUpdateManyMutationInput
  where?: EmployeerWhereInput
}


/**
 * Employeer upsert
 */
export type EmployeerUpsertArgs = {
  /**
   * Select specific fields to fetch from the Employeer
  **/
  select?: EmployeerSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: EmployeerInclude | null
  /**
   * The filter to search for the Employeer to update in case it exists.
  **/
  where: EmployeerWhereUniqueInput
  /**
   * In case the Employeer found by the `where` argument doesn't exist, create a new Employeer with this data.
  **/
  create: EmployeerCreateInput
  /**
   * In case the Employeer was found with the provided `where` argument, update it with this data.
  **/
  update: EmployeerUpdateInput
}


/**
 * Employeer delete
 */
export type EmployeerDeleteArgs = {
  /**
   * Select specific fields to fetch from the Employeer
  **/
  select?: EmployeerSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: EmployeerInclude | null
  /**
   * Filter which Employeer to delete.
  **/
  where: EmployeerWhereUniqueInput
}


/**
 * Employeer deleteMany
 */
export type EmployeerDeleteManyArgs = {
  where?: EmployeerWhereInput
}


/**
 * Employeer without action
 */
export type EmployeerArgs = {
  /**
   * Select specific fields to fetch from the Employeer
  **/
  select?: EmployeerSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: EmployeerInclude | null
}



/**
 * Model Clinic_Roles
 */

export type Clinic_Roles = {
  id: string
  name: string
  description: string | null
  createdAt: Date
  updatedAt: Date
}



export type Clinic_RolesSelect = {
  id?: boolean
  name?: boolean
  description?: boolean
  employer?: boolean | FindManyEmployeerArgs
  createdAt?: boolean
  updatedAt?: boolean
}

export type Clinic_RolesInclude = {
  employer?: boolean | FindManyEmployeerArgs
}

export type Clinic_RolesGetPayload<
  S extends boolean | null | undefined | Clinic_RolesArgs,
  U = keyof S
> = S extends true
  ? Clinic_Roles
  : S extends undefined
  ? never
  : S extends Clinic_RolesArgs | FindManyClinic_RolesArgs
  ? 'include' extends U
    ? Clinic_Roles  & {
      [P in TrueKeys<S['include']>]:
      P extends 'employer'
      ? Array<EmployeerGetPayload<S['include'][P]>> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Clinic_Roles ? Clinic_Roles[P]
: 
      P extends 'employer'
      ? Array<EmployeerGetPayload<S['select'][P]>> : never
    }
  : Clinic_Roles
: Clinic_Roles


export interface Clinic_RolesDelegate {
  /**
   * Find zero or one Clinic_Roles.
   * @param {FindOneClinic_RolesArgs} args - Arguments to find a Clinic_Roles
   * @example
   * // Get one Clinic_Roles
   * const clinic_Roles = await prisma.clinic_Roles.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneClinic_RolesArgs>(
    args: Subset<T, FindOneClinic_RolesArgs>
  ): CheckSelect<T, Prisma__Clinic_RolesClient<Clinic_Roles | null>, Prisma__Clinic_RolesClient<Clinic_RolesGetPayload<T> | null>>
  /**
   * Find zero or more Clinic_Roles.
   * @param {FindManyClinic_RolesArgs=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Clinic_Roles
   * const clinic_Roles = await prisma.clinic_Roles.findMany()
   * 
   * // Get first 10 Clinic_Roles
   * const clinic_Roles = await prisma.clinic_Roles.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const clinic_RolesWithIdOnly = await prisma.clinic_Roles.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyClinic_RolesArgs>(
    args?: Subset<T, FindManyClinic_RolesArgs>
  ): CheckSelect<T, Promise<Array<Clinic_Roles>>, Promise<Array<Clinic_RolesGetPayload<T>>>>
  /**
   * Create a Clinic_Roles.
   * @param {Clinic_RolesCreateArgs} args - Arguments to create a Clinic_Roles.
   * @example
   * // Create one Clinic_Roles
   * const Clinic_Roles = await prisma.clinic_Roles.create({
   *   data: {
   *     // ... data to create a Clinic_Roles
   *   }
   * })
   * 
  **/
  create<T extends Clinic_RolesCreateArgs>(
    args: Subset<T, Clinic_RolesCreateArgs>
  ): CheckSelect<T, Prisma__Clinic_RolesClient<Clinic_Roles>, Prisma__Clinic_RolesClient<Clinic_RolesGetPayload<T>>>
  /**
   * Delete a Clinic_Roles.
   * @param {Clinic_RolesDeleteArgs} args - Arguments to delete one Clinic_Roles.
   * @example
   * // Delete one Clinic_Roles
   * const Clinic_Roles = await prisma.clinic_Roles.delete({
   *   where: {
   *     // ... filter to delete one Clinic_Roles
   *   }
   * })
   * 
  **/
  delete<T extends Clinic_RolesDeleteArgs>(
    args: Subset<T, Clinic_RolesDeleteArgs>
  ): CheckSelect<T, Prisma__Clinic_RolesClient<Clinic_Roles>, Prisma__Clinic_RolesClient<Clinic_RolesGetPayload<T>>>
  /**
   * Update one Clinic_Roles.
   * @param {Clinic_RolesUpdateArgs} args - Arguments to update one Clinic_Roles.
   * @example
   * // Update one Clinic_Roles
   * const clinic_Roles = await prisma.clinic_Roles.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Clinic_RolesUpdateArgs>(
    args: Subset<T, Clinic_RolesUpdateArgs>
  ): CheckSelect<T, Prisma__Clinic_RolesClient<Clinic_Roles>, Prisma__Clinic_RolesClient<Clinic_RolesGetPayload<T>>>
  /**
   * Delete zero or more Clinic_Roles.
   * @param {Clinic_RolesDeleteManyArgs} args - Arguments to filter Clinic_Roles to delete.
   * @example
   * // Delete a few Clinic_Roles
   * const { count } = await prisma.clinic_Roles.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Clinic_RolesDeleteManyArgs>(
    args: Subset<T, Clinic_RolesDeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Clinic_Roles.
   * @param {Clinic_RolesUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Clinic_Roles
   * const clinic_Roles = await prisma.clinic_Roles.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Clinic_RolesUpdateManyArgs>(
    args: Subset<T, Clinic_RolesUpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Clinic_Roles.
   * @param {Clinic_RolesUpsertArgs} args - Arguments to update or create a Clinic_Roles.
   * @example
   * // Update or create a Clinic_Roles
   * const clinic_Roles = await prisma.clinic_Roles.upsert({
   *   create: {
   *     // ... data to create a Clinic_Roles
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Clinic_Roles we want to update
   *   }
   * })
  **/
  upsert<T extends Clinic_RolesUpsertArgs>(
    args: Subset<T, Clinic_RolesUpsertArgs>
  ): CheckSelect<T, Prisma__Clinic_RolesClient<Clinic_Roles>, Prisma__Clinic_RolesClient<Clinic_RolesGetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyClinic_RolesArgs, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Clinic_Roles.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Clinic_RolesClient<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  employer<T extends FindManyEmployeerArgs = {}>(args?: Subset<T, FindManyEmployeerArgs>): CheckSelect<T, Promise<Array<Employeer>>, Promise<Array<EmployeerGetPayload<T>>>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Clinic_Roles findOne
 */
export type FindOneClinic_RolesArgs = {
  /**
   * Select specific fields to fetch from the Clinic_Roles
  **/
  select?: Clinic_RolesSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_RolesInclude | null
  /**
   * Filter, which Clinic_Roles to fetch.
  **/
  where: Clinic_RolesWhereUniqueInput
}


/**
 * Clinic_Roles findMany
 */
export type FindManyClinic_RolesArgs = {
  /**
   * Select specific fields to fetch from the Clinic_Roles
  **/
  select?: Clinic_RolesSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_RolesInclude | null
  /**
   * Filter, which Clinic_Roles to fetch.
  **/
  where?: Clinic_RolesWhereInput
  /**
   * Determine the order of the Clinic_Roles to fetch.
  **/
  orderBy?: Clinic_RolesOrderByInput
  /**
   * Sets the position for listing Clinic_Roles.
  **/
  cursor?: Clinic_RolesWhereUniqueInput
  /**
   * The number of Clinic_Roles to fetch. If negative number, it will take Clinic_Roles before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Clinic_Roles.
  **/
  skip?: number
}


/**
 * Clinic_Roles create
 */
export type Clinic_RolesCreateArgs = {
  /**
   * Select specific fields to fetch from the Clinic_Roles
  **/
  select?: Clinic_RolesSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_RolesInclude | null
  /**
   * The data needed to create a Clinic_Roles.
  **/
  data: Clinic_RolesCreateInput
}


/**
 * Clinic_Roles update
 */
export type Clinic_RolesUpdateArgs = {
  /**
   * Select specific fields to fetch from the Clinic_Roles
  **/
  select?: Clinic_RolesSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_RolesInclude | null
  /**
   * The data needed to update a Clinic_Roles.
  **/
  data: Clinic_RolesUpdateInput
  /**
   * Choose, which Clinic_Roles to update.
  **/
  where: Clinic_RolesWhereUniqueInput
}


/**
 * Clinic_Roles updateMany
 */
export type Clinic_RolesUpdateManyArgs = {
  data: Clinic_RolesUpdateManyMutationInput
  where?: Clinic_RolesWhereInput
}


/**
 * Clinic_Roles upsert
 */
export type Clinic_RolesUpsertArgs = {
  /**
   * Select specific fields to fetch from the Clinic_Roles
  **/
  select?: Clinic_RolesSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_RolesInclude | null
  /**
   * The filter to search for the Clinic_Roles to update in case it exists.
  **/
  where: Clinic_RolesWhereUniqueInput
  /**
   * In case the Clinic_Roles found by the `where` argument doesn't exist, create a new Clinic_Roles with this data.
  **/
  create: Clinic_RolesCreateInput
  /**
   * In case the Clinic_Roles was found with the provided `where` argument, update it with this data.
  **/
  update: Clinic_RolesUpdateInput
}


/**
 * Clinic_Roles delete
 */
export type Clinic_RolesDeleteArgs = {
  /**
   * Select specific fields to fetch from the Clinic_Roles
  **/
  select?: Clinic_RolesSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_RolesInclude | null
  /**
   * Filter which Clinic_Roles to delete.
  **/
  where: Clinic_RolesWhereUniqueInput
}


/**
 * Clinic_Roles deleteMany
 */
export type Clinic_RolesDeleteManyArgs = {
  where?: Clinic_RolesWhereInput
}


/**
 * Clinic_Roles without action
 */
export type Clinic_RolesArgs = {
  /**
   * Select specific fields to fetch from the Clinic_Roles
  **/
  select?: Clinic_RolesSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Clinic_RolesInclude | null
}



/**
 * Model Dental_insurance
 */

export type Dental_insurance = {
  id: string
  name: string
  compensation_date: number | null
  compensation_value: number | null
  active: boolean
  createdAt: Date
  updatedAt: Date
}



export type Dental_insuranceSelect = {
  id?: boolean
  name?: boolean
  clinic?: boolean | FindManyClinicArgs
  compensation_date?: boolean
  compensation_value?: boolean
  procedures_values?: boolean | Clinic_procedures_insurance_valuesArgs
  active?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type Dental_insuranceInclude = {
  clinic?: boolean | FindManyClinicArgs
  procedures_values?: boolean | Clinic_procedures_insurance_valuesArgs
}

export type Dental_insuranceGetPayload<
  S extends boolean | null | undefined | Dental_insuranceArgs,
  U = keyof S
> = S extends true
  ? Dental_insurance
  : S extends undefined
  ? never
  : S extends Dental_insuranceArgs | FindManyDental_insuranceArgs
  ? 'include' extends U
    ? Dental_insurance  & {
      [P in TrueKeys<S['include']>]:
      P extends 'clinic'
      ? Array<ClinicGetPayload<S['include'][P]>> :
      P extends 'procedures_values'
      ? Clinic_procedures_insurance_valuesGetPayload<S['include'][P]> : never
    }
  : 'select' extends U
    ? {
      [P in TrueKeys<S['select']>]:P extends keyof Dental_insurance ? Dental_insurance[P]
: 
      P extends 'clinic'
      ? Array<ClinicGetPayload<S['select'][P]>> :
      P extends 'procedures_values'
      ? Clinic_procedures_insurance_valuesGetPayload<S['select'][P]> : never
    }
  : Dental_insurance
: Dental_insurance


export interface Dental_insuranceDelegate {
  /**
   * Find zero or one Dental_insurance.
   * @param {FindOneDental_insuranceArgs} args - Arguments to find a Dental_insurance
   * @example
   * // Get one Dental_insurance
   * const dental_insurance = await prisma.dental_insurance.findOne({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
  **/
  findOne<T extends FindOneDental_insuranceArgs>(
    args: Subset<T, FindOneDental_insuranceArgs>
  ): CheckSelect<T, Prisma__Dental_insuranceClient<Dental_insurance | null>, Prisma__Dental_insuranceClient<Dental_insuranceGetPayload<T> | null>>
  /**
   * Find zero or more Dental_insurances.
   * @param {FindManyDental_insuranceArgs=} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Dental_insurances
   * const dental_insurances = await prisma.dental_insurance.findMany()
   * 
   * // Get first 10 Dental_insurances
   * const dental_insurances = await prisma.dental_insurance.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const dental_insuranceWithIdOnly = await prisma.dental_insurance.findMany({ select: { id: true } })
   * 
  **/
  findMany<T extends FindManyDental_insuranceArgs>(
    args?: Subset<T, FindManyDental_insuranceArgs>
  ): CheckSelect<T, Promise<Array<Dental_insurance>>, Promise<Array<Dental_insuranceGetPayload<T>>>>
  /**
   * Create a Dental_insurance.
   * @param {Dental_insuranceCreateArgs} args - Arguments to create a Dental_insurance.
   * @example
   * // Create one Dental_insurance
   * const Dental_insurance = await prisma.dental_insurance.create({
   *   data: {
   *     // ... data to create a Dental_insurance
   *   }
   * })
   * 
  **/
  create<T extends Dental_insuranceCreateArgs>(
    args: Subset<T, Dental_insuranceCreateArgs>
  ): CheckSelect<T, Prisma__Dental_insuranceClient<Dental_insurance>, Prisma__Dental_insuranceClient<Dental_insuranceGetPayload<T>>>
  /**
   * Delete a Dental_insurance.
   * @param {Dental_insuranceDeleteArgs} args - Arguments to delete one Dental_insurance.
   * @example
   * // Delete one Dental_insurance
   * const Dental_insurance = await prisma.dental_insurance.delete({
   *   where: {
   *     // ... filter to delete one Dental_insurance
   *   }
   * })
   * 
  **/
  delete<T extends Dental_insuranceDeleteArgs>(
    args: Subset<T, Dental_insuranceDeleteArgs>
  ): CheckSelect<T, Prisma__Dental_insuranceClient<Dental_insurance>, Prisma__Dental_insuranceClient<Dental_insuranceGetPayload<T>>>
  /**
   * Update one Dental_insurance.
   * @param {Dental_insuranceUpdateArgs} args - Arguments to update one Dental_insurance.
   * @example
   * // Update one Dental_insurance
   * const dental_insurance = await prisma.dental_insurance.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  update<T extends Dental_insuranceUpdateArgs>(
    args: Subset<T, Dental_insuranceUpdateArgs>
  ): CheckSelect<T, Prisma__Dental_insuranceClient<Dental_insurance>, Prisma__Dental_insuranceClient<Dental_insuranceGetPayload<T>>>
  /**
   * Delete zero or more Dental_insurances.
   * @param {Dental_insuranceDeleteManyArgs} args - Arguments to filter Dental_insurances to delete.
   * @example
   * // Delete a few Dental_insurances
   * const { count } = await prisma.dental_insurance.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
  **/
  deleteMany<T extends Dental_insuranceDeleteManyArgs>(
    args: Subset<T, Dental_insuranceDeleteManyArgs>
  ): Promise<BatchPayload>
  /**
   * Update zero or more Dental_insurances.
   * @param {Dental_insuranceUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Dental_insurances
   * const dental_insurance = await prisma.dental_insurance.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
  **/
  updateMany<T extends Dental_insuranceUpdateManyArgs>(
    args: Subset<T, Dental_insuranceUpdateManyArgs>
  ): Promise<BatchPayload>
  /**
   * Create or update one Dental_insurance.
   * @param {Dental_insuranceUpsertArgs} args - Arguments to update or create a Dental_insurance.
   * @example
   * // Update or create a Dental_insurance
   * const dental_insurance = await prisma.dental_insurance.upsert({
   *   create: {
   *     // ... data to create a Dental_insurance
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Dental_insurance we want to update
   *   }
   * })
  **/
  upsert<T extends Dental_insuranceUpsertArgs>(
    args: Subset<T, Dental_insuranceUpsertArgs>
  ): CheckSelect<T, Prisma__Dental_insuranceClient<Dental_insurance>, Prisma__Dental_insuranceClient<Dental_insuranceGetPayload<T>>>
  /**
   * Count
   */
  count(args?: Omit<FindManyDental_insuranceArgs, 'select' | 'include'>): Promise<number>


}

/**
 * The delegate class that acts as a "Promise-like" for Dental_insurance.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in 
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export declare class Prisma__Dental_insuranceClient<T> implements Promise<T> {
  private readonly _dmmf;
  private readonly _fetcher;
  private readonly _queryType;
  private readonly _rootField;
  private readonly _clientMethod;
  private readonly _args;
  private readonly _dataPath;
  private readonly _errorFormat;
  private readonly _measurePerformance?;
  private _isList;
  private _callsite;
  private _requestPromise?;
  private _collectTimestamps?;
  constructor(_dmmf: DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
  readonly [Symbol.toStringTag]: 'PrismaClientPromise';

  clinic<T extends FindManyClinicArgs = {}>(args?: Subset<T, FindManyClinicArgs>): CheckSelect<T, Promise<Array<Clinic>>, Promise<Array<ClinicGetPayload<T>>>>;

  procedures_values<T extends Clinic_procedures_insurance_valuesArgs = {}>(args?: Subset<T, Clinic_procedures_insurance_valuesArgs>): CheckSelect<T, Prisma__Clinic_procedures_insurance_valuesClient<Clinic_procedures_insurance_values | null>, Prisma__Clinic_procedures_insurance_valuesClient<Clinic_procedures_insurance_valuesGetPayload<T> | null>>;

  private get _document();
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): Promise<T>;
}

// Custom InputTypes

/**
 * Dental_insurance findOne
 */
export type FindOneDental_insuranceArgs = {
  /**
   * Select specific fields to fetch from the Dental_insurance
  **/
  select?: Dental_insuranceSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Dental_insuranceInclude | null
  /**
   * Filter, which Dental_insurance to fetch.
  **/
  where: Dental_insuranceWhereUniqueInput
}


/**
 * Dental_insurance findMany
 */
export type FindManyDental_insuranceArgs = {
  /**
   * Select specific fields to fetch from the Dental_insurance
  **/
  select?: Dental_insuranceSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Dental_insuranceInclude | null
  /**
   * Filter, which Dental_insurances to fetch.
  **/
  where?: Dental_insuranceWhereInput
  /**
   * Determine the order of the Dental_insurances to fetch.
  **/
  orderBy?: Dental_insuranceOrderByInput
  /**
   * Sets the position for listing Dental_insurances.
  **/
  cursor?: Dental_insuranceWhereUniqueInput
  /**
   * The number of Dental_insurances to fetch. If negative number, it will take Dental_insurances before the `cursor`.
  **/
  take?: number
  /**
   * Skip the first `n` Dental_insurances.
  **/
  skip?: number
}


/**
 * Dental_insurance create
 */
export type Dental_insuranceCreateArgs = {
  /**
   * Select specific fields to fetch from the Dental_insurance
  **/
  select?: Dental_insuranceSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Dental_insuranceInclude | null
  /**
   * The data needed to create a Dental_insurance.
  **/
  data: Dental_insuranceCreateInput
}


/**
 * Dental_insurance update
 */
export type Dental_insuranceUpdateArgs = {
  /**
   * Select specific fields to fetch from the Dental_insurance
  **/
  select?: Dental_insuranceSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Dental_insuranceInclude | null
  /**
   * The data needed to update a Dental_insurance.
  **/
  data: Dental_insuranceUpdateInput
  /**
   * Choose, which Dental_insurance to update.
  **/
  where: Dental_insuranceWhereUniqueInput
}


/**
 * Dental_insurance updateMany
 */
export type Dental_insuranceUpdateManyArgs = {
  data: Dental_insuranceUpdateManyMutationInput
  where?: Dental_insuranceWhereInput
}


/**
 * Dental_insurance upsert
 */
export type Dental_insuranceUpsertArgs = {
  /**
   * Select specific fields to fetch from the Dental_insurance
  **/
  select?: Dental_insuranceSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Dental_insuranceInclude | null
  /**
   * The filter to search for the Dental_insurance to update in case it exists.
  **/
  where: Dental_insuranceWhereUniqueInput
  /**
   * In case the Dental_insurance found by the `where` argument doesn't exist, create a new Dental_insurance with this data.
  **/
  create: Dental_insuranceCreateInput
  /**
   * In case the Dental_insurance was found with the provided `where` argument, update it with this data.
  **/
  update: Dental_insuranceUpdateInput
}


/**
 * Dental_insurance delete
 */
export type Dental_insuranceDeleteArgs = {
  /**
   * Select specific fields to fetch from the Dental_insurance
  **/
  select?: Dental_insuranceSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Dental_insuranceInclude | null
  /**
   * Filter which Dental_insurance to delete.
  **/
  where: Dental_insuranceWhereUniqueInput
}


/**
 * Dental_insurance deleteMany
 */
export type Dental_insuranceDeleteManyArgs = {
  where?: Dental_insuranceWhereInput
}


/**
 * Dental_insurance without action
 */
export type Dental_insuranceArgs = {
  /**
   * Select specific fields to fetch from the Dental_insurance
  **/
  select?: Dental_insuranceSelect | null
  /**
   * Choose, which related nodes to fetch as well.
  **/
  include?: Dental_insuranceInclude | null
}



/**
 * Deep Input Types
 */


export type TechnicalmanagerWhereInput = {
  cpf?: string | StringFilter
  fullname?: string | StringFilter
  contactmeans?: Contact_means | Contact_meansFilter
  active?: boolean | BooleanFilter
  email?: EmailFilter | null
  clinid_id?: string | StringFilter
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  Email?: EmailFilter | null
  AND?: Enumerable<TechnicalmanagerWhereInput>
  OR?: Array<TechnicalmanagerWhereInput>
  NOT?: Enumerable<TechnicalmanagerWhereInput>
  clinic?: ClinicWhereInput | null
}

export type LegalresponsibleWhereInput = {
  cpf?: string | StringFilter
  fullname?: string | StringFilter
  contactmeans?: Contact_means | NullableContact_meansFilter | null
  active?: boolean | BooleanFilter
  email?: EmailFilter | null
  clinid_id?: string | StringFilter
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  Email?: EmailFilter | null
  AND?: Enumerable<LegalresponsibleWhereInput>
  OR?: Array<LegalresponsibleWhereInput>
  NOT?: Enumerable<LegalresponsibleWhereInput>
  clinic?: ClinicWhereInput | null
}

export type Main_anamnesis_questionnaireWhereInput = {
  id?: string | StringFilter
  anamnesis_prontuary_id?: string | StringFilter
  main_issue?: string | StringFilter
  recent_disease_history?: string | StringFilter
  undergoing_medical_treatment?: yes_no | yes_noFilter
  if_yes_what_treatment?: string | NullableStringFilter | null
  taking_any_medication?: yes_no | yes_noFilter
  if_yes_what_medication?: string | NullableStringFilter | null
  already_used_local_anestesics?: yes_no | yes_noFilter
  you_presented_reaction?: yes_no | yes_noFilter
  allergic_to_any_medicine?: yes_no | yes_noFilter
  if_yes_what_medicine?: string | NullableStringFilter | null
  allergic_to_latex?: yes_no | yes_noFilter
  has_any_know_blood_issues?: yes_no | yes_noFilter
  use_acetil_salicilic_acid?: yes_no | yes_noFilter
  if_yes_for_what?: string | NullableStringFilter | null
  you_have_already_made_blood_testing?: yes_no | yes_noFilter
  if_yes_when_made_it?: Date | string | NullableDateTimeFilter | null
  has_any_importanting_bleeding?: yes_no | yes_noFilter
  if_yes_when?: Date | string | NullableDateTimeFilter | null
  if_yes_how_long_to_stop?: string | StringFilter
  have_problems_with_healing?: yes_no | yes_noFilter
  has_any_know_tireoids_issues?: yes_no | yes_noFilter
  has_any_know_hormonal_issues?: yes_no | yes_noFilter
  you_are_using_any_corticosteroids?: yes_no | yes_noFilter
  diabetes_mellitus?: yes_no | yes_noFilter
  if_yes_any_treatment_for_diabetes?: string | NullableStringFilter | null
  any_heart_problems?: yes_no | yes_noFilter
  if_yes_what_hearth_problem?: string | NullableStringFilter | null
  arterial_hypertension?: yes_no | yes_noFilter
  if_yes_any_treatment_for_hypertension?: string | NullableStringFilter | null
  breathing_problems?: yes_no | yes_noFilter
  if_yes_what_breathing_problem?: string | NullableStringFilter | null
  kidney_damage?: yes_no | yes_noFilter
  if_yes_what_kidney_problem?: string | NullableStringFilter | null
  gastric_problems?: yes_no | yes_noFilter
  if_yes_you_looked_for_gastric_doctor?: yes_no | Nullableyes_noFilter | null
  if_yes_what_gastric_problems?: string | NullableStringFilter | null
  have_rheumatic_fever?: yes_no | yes_noFilter
  joints_problems_or_reumatics?: yes_no | yes_noFilter
  if_yes_you_looked_for_reaumatics_doctor?: string | NullableStringFilter | null
  use_drugs?: yes_no | yes_noFilter
  if_yes_what_drug?: string | NullableStringFilter | null
  smoker?: yes_no | yes_noFilter
  if_yes_how_many_cigarretes_perday?: number | NullableIntFilter | null
  consider_a_alcolic_addicted?: yes_no | yes_noFilter
  if_yes_when_was_the_last_drink?: string | NullableStringFilter | null
  family_background?: yes_no | yes_noFilter
  if_yes_what_familys_problems?: string | NullableStringFilter | null
  preagnant?: yes_no | yes_noFilter
  if_yes_how_many_months?: string | NullableStringFilter | null
  take_contraceptives?: yes_no | yes_noFilter
  what_contraceptives?: string | NullableStringFilter | null
  are_breastfeeding?: yes_no | yes_noFilter
  entered_the_process_of_menopause?: yes_no | yes_noFilter
  if_yes_guided_by_the_gynecologist?: yes_no | Nullableyes_noFilter | null
  take_hormone?: yes_no | yes_noFilter
  take_calcium?: yes_no | yes_noFilter
  terms_readed?: yes_no | yes_noFilter
  patient_signed?: yes_no | yes_noFilter
  signed_date?: Date | string | DateTimeFilter
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Main_anamnesis_questionnaireWhereInput>
  OR?: Array<Main_anamnesis_questionnaireWhereInput>
  NOT?: Enumerable<Main_anamnesis_questionnaireWhereInput>
  anamnesis_prontuary?: AnamnesisWhereInput | null
}

export type Vital_signs_questionnaireWhereInput = {
  id?: string | StringFilter
  anamnesis_prontuary_id?: string | StringFilter
  heart_beats_per_minute?: number | NullableIntFilter | null
  arterial_pressure?: string | NullableStringFilter | null
  breaths_per_minute?: number | NullableIntFilter | null
  temperature_in_celcius?: number | NullableIntFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Vital_signs_questionnaireWhereInput>
  OR?: Array<Vital_signs_questionnaireWhereInput>
  NOT?: Enumerable<Vital_signs_questionnaireWhereInput>
  anamnesis_prontuary?: AnamnesisWhereInput | null
}

export type Oral_health_questionnaireWhereInput = {
  id?: string | StringFilter
  anamnesis_prontuary_id?: string | StringFilter
  you_use_anykind_protesis?: yes_no | yes_noFilter
  whats_the_protesis?: string | NullableStringFilter | null
  type_of_teeth_brush?: string | NullableStringFilter | null
  how_many_times_by_day?: number | NullableIntFilter | null
  you_floss?: yes_no | Nullableyes_noFilter | null
  if_yes_how_many_times?: number | NullableIntFilter | null
  you_use_any_mouthwash?: yes_no | Nullableyes_noFilter | null
  if_yes_how_often?: How_often | NullableHow_oftenFilter | null
  dental_clenching?: yes_no | yes_noFilter
  if_yes_when_in_day?: string | NullableStringFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Oral_health_questionnaireWhereInput>
  OR?: Array<Oral_health_questionnaireWhereInput>
  NOT?: Enumerable<Oral_health_questionnaireWhereInput>
  anamnesis_prontuary?: AnamnesisWhereInput | null
}

export type Diet_questionnaireWhereInput = {
  id?: string | StringFilter
  anamnesis_prontuary_id?: string | StringFilter
  already_instructed_in_diet_by_a_CD?: yes_no | yes_noFilter
  if_yes_what_the_instructions?: string | NullableStringFilter | null
  importance_of_diet_in_oral_health?: yes_no | yes_noFilter
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Diet_questionnaireWhereInput>
  OR?: Array<Diet_questionnaireWhereInput>
  NOT?: Enumerable<Diet_questionnaireWhereInput>
  anamnesis_prontuary?: AnamnesisWhereInput | null
}

export type AnamnesisWhereInput = {
  id?: string | StringFilter
  patient_id?: string | StringFilter
  last_dentist_visit?: Date | string | DateTimeFilter
  last_procedure?: Date | string | DateTimeFilter
  what_was_done?: string | NullableStringFilter | null
  treatment_is_planed?: boolean | BooleanFilter
  What_treatment_is_planed?: string | NullableStringFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  Diet_questionnaire?: Diet_questionnaireFilter | null
  AND?: Enumerable<AnamnesisWhereInput>
  OR?: Array<AnamnesisWhereInput>
  NOT?: Enumerable<AnamnesisWhereInput>
  patient?: PatientWhereInput | null
  main_anamnesis_questionnaire?: Main_anamnesis_questionnaireWhereInput | null
  vital_signs_questionnaire?: Vital_signs_questionnaireWhereInput | null
  oral_health_questionnaire?: Oral_health_questionnaireWhereInput | null
}

export type Implantology_questionnaireWhereInput = {
  id?: string | StringFilter
  implantology_questionnaire_id?: string | StringFilter
  have_implant?: boolean | BooleanFilter
  if_yes_when_puted?: string | NullableStringFilter | null
  if_yes_last_review_consult?: string | NullableStringFilter | null
  if_yes_the_cirurgy_needed_bone_graft?: boolean | NullableBooleanFilter | null
  want_to_put_implants?: boolean | BooleanFilter
  if_yes_why_do_you_want?: string | NullableStringFilter | null
  if_yes_already_looked_for_professional?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Implantology_questionnaireWhereInput>
  OR?: Array<Implantology_questionnaireWhereInput>
  NOT?: Enumerable<Implantology_questionnaireWhereInput>
  implantology_questionnaire?: ImplantologyWhereInput | null
}

export type ImplantologyWhereInput = {
  id?: string | StringFilter
  patient_id?: string | StringFilter
  professionals?: DentistFilter | null
  implant_type?: Implant_types | Implant_typesFilter
  if_type_multiple_instaled_implants_number?: number | NullableIntFilter | null
  next_review_consult?: Date | string | DateTimeFilter
  notes?: string | NullableStringFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<ImplantologyWhereInput>
  OR?: Array<ImplantologyWhereInput>
  NOT?: Enumerable<ImplantologyWhereInput>
  patient?: PatientWhereInput | null
  implantology_questionnaire?: Implantology_questionnaireWhereInput | null
}

export type Ortodontics_questionnaireWhereInput = {
  id?: string | StringFilter
  ortodontic_prontuary_id?: string | StringFilter
  reason_for_tratment?: string | StringFilter
  already_have_in_treatment?: yes_no | yes_noFilter
  if_yes_how_long_takes_previus_treatment?: string | NullableStringFilter | null
  if_yes_you_have_panoramic_radiography?: yes_no | Nullableyes_noFilter | null
  if_yes_when_panoramic_radiography_was_taken?: Date | string | NullableDateTimeFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Ortodontics_questionnaireWhereInput>
  OR?: Array<Ortodontics_questionnaireWhereInput>
  NOT?: Enumerable<Ortodontics_questionnaireWhereInput>
  ortodontic_prontuary?: OrtodonticsWhereInput | null
}

export type TMJ_problems_questionnaireWhereInput = {
  id?: string | StringFilter
  ortodontic_prontuary_id?: string | StringFilter
  you_consider_have_TMJ_problem?: yes_no | yes_noFilter
  when_the_simptoms_start?: string | NullableStringFilter | null
  difficulty_opening_your_mouth?: yes_no | yes_noFilter
  pain_when_opening_closing_mouth?: yes_no | yes_noFilter
  crackles_when_opening_closing_mouth?: yes_no | yes_noFilter
  if_yes_one_or_both_sides?: string | NullableStringFilter | null
  if_one_whats_side_crackles?: string | NullableStringFilter | null
  TMJ_pain_at_rest?: yes_no | yes_noFilter
  already_looked_for_profissional_treatment?: yes_no | yes_noFilter
  if_yes_when_was_treated?: string | NullableStringFilter | null
  if_yes_you_made_any_image_exams?: yes_no | Nullableyes_noFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<TMJ_problems_questionnaireWhereInput>
  OR?: Array<TMJ_problems_questionnaireWhereInput>
  NOT?: Enumerable<TMJ_problems_questionnaireWhereInput>
  ortodontic_prontuary?: OrtodonticsWhereInput | null
}

export type OrtodonticsWhereInput = {
  id?: string | StringFilter
  patient_id?: string | StringFilter
  professionals?: DentistFilter | null
  face_profile?: string | NullableStringFilter | null
  face_simetrics?: string | NullableStringFilter | null
  bite?: string | NullableStringFilter | null
  class?: string | NullableStringFilter | null
  ideal_occlusion?: yes_no | Nullableyes_noFilter | null
  if_no_whats_wrong_in_oclusion?: string | NullableStringFilter | null
  spee?: string | NullableStringFilter | null
  overbite?: string | NullableStringFilter | null
  overjet?: string | NullableStringFilter | null
  prevision_of_end?: string | NullableStringFilter | null
  ortodontics_treatment_type?: Ortodontic_treatment_type | NullableOrtodontic_treatment_typeFilter | null
  notes?: string | NullableStringFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<OrtodonticsWhereInput>
  OR?: Array<OrtodonticsWhereInput>
  NOT?: Enumerable<OrtodonticsWhereInput>
  patient?: PatientWhereInput | null
  ortodontic_questionnaire?: Ortodontics_questionnaireWhereInput | null
  TMJ_questionnaire?: TMJ_problems_questionnaireWhereInput | null
}

export type Unit11WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit11WhereInput>
  OR?: Array<Unit11WhereInput>
  NOT?: Enumerable<Unit11WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit12WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit12WhereInput>
  OR?: Array<Unit12WhereInput>
  NOT?: Enumerable<Unit12WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit13WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit13WhereInput>
  OR?: Array<Unit13WhereInput>
  NOT?: Enumerable<Unit13WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit14WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit14WhereInput>
  OR?: Array<Unit14WhereInput>
  NOT?: Enumerable<Unit14WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit15WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit15WhereInput>
  OR?: Array<Unit15WhereInput>
  NOT?: Enumerable<Unit15WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit16WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit16WhereInput>
  OR?: Array<Unit16WhereInput>
  NOT?: Enumerable<Unit16WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit17WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit17WhereInput>
  OR?: Array<Unit17WhereInput>
  NOT?: Enumerable<Unit17WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit18WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit18WhereInput>
  OR?: Array<Unit18WhereInput>
  NOT?: Enumerable<Unit18WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit21WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit21WhereInput>
  OR?: Array<Unit21WhereInput>
  NOT?: Enumerable<Unit21WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit22WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit22WhereInput>
  OR?: Array<Unit22WhereInput>
  NOT?: Enumerable<Unit22WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit23WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit23WhereInput>
  OR?: Array<Unit23WhereInput>
  NOT?: Enumerable<Unit23WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit24WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit24WhereInput>
  OR?: Array<Unit24WhereInput>
  NOT?: Enumerable<Unit24WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit25WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit25WhereInput>
  OR?: Array<Unit25WhereInput>
  NOT?: Enumerable<Unit25WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit26WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit26WhereInput>
  OR?: Array<Unit26WhereInput>
  NOT?: Enumerable<Unit26WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit27WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit27WhereInput>
  OR?: Array<Unit27WhereInput>
  NOT?: Enumerable<Unit27WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit28WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit28WhereInput>
  OR?: Array<Unit28WhereInput>
  NOT?: Enumerable<Unit28WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit31WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit31WhereInput>
  OR?: Array<Unit31WhereInput>
  NOT?: Enumerable<Unit31WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit32WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit32WhereInput>
  OR?: Array<Unit32WhereInput>
  NOT?: Enumerable<Unit32WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit33WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit33WhereInput>
  OR?: Array<Unit33WhereInput>
  NOT?: Enumerable<Unit33WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit34WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit34WhereInput>
  OR?: Array<Unit34WhereInput>
  NOT?: Enumerable<Unit34WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit35WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit35WhereInput>
  OR?: Array<Unit35WhereInput>
  NOT?: Enumerable<Unit35WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit36WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit36WhereInput>
  OR?: Array<Unit36WhereInput>
  NOT?: Enumerable<Unit36WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit37WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit37WhereInput>
  OR?: Array<Unit37WhereInput>
  NOT?: Enumerable<Unit37WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit38WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit38WhereInput>
  OR?: Array<Unit38WhereInput>
  NOT?: Enumerable<Unit38WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit41WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit41WhereInput>
  OR?: Array<Unit41WhereInput>
  NOT?: Enumerable<Unit41WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit42WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit42WhereInput>
  OR?: Array<Unit42WhereInput>
  NOT?: Enumerable<Unit42WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit43WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit43WhereInput>
  OR?: Array<Unit43WhereInput>
  NOT?: Enumerable<Unit43WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit44WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit44WhereInput>
  OR?: Array<Unit44WhereInput>
  NOT?: Enumerable<Unit44WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit45WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit45WhereInput>
  OR?: Array<Unit45WhereInput>
  NOT?: Enumerable<Unit45WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit46WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit46WhereInput>
  OR?: Array<Unit46WhereInput>
  NOT?: Enumerable<Unit46WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit47WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit47WhereInput>
  OR?: Array<Unit47WhereInput>
  NOT?: Enumerable<Unit47WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit48WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit48WhereInput>
  OR?: Array<Unit48WhereInput>
  NOT?: Enumerable<Unit48WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit51WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit51WhereInput>
  OR?: Array<Unit51WhereInput>
  NOT?: Enumerable<Unit51WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit52WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit52WhereInput>
  OR?: Array<Unit52WhereInput>
  NOT?: Enumerable<Unit52WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit53WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit53WhereInput>
  OR?: Array<Unit53WhereInput>
  NOT?: Enumerable<Unit53WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit54WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit54WhereInput>
  OR?: Array<Unit54WhereInput>
  NOT?: Enumerable<Unit54WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit55WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit55WhereInput>
  OR?: Array<Unit55WhereInput>
  NOT?: Enumerable<Unit55WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit61WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit61WhereInput>
  OR?: Array<Unit61WhereInput>
  NOT?: Enumerable<Unit61WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit62WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit62WhereInput>
  OR?: Array<Unit62WhereInput>
  NOT?: Enumerable<Unit62WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit63WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit63WhereInput>
  OR?: Array<Unit63WhereInput>
  NOT?: Enumerable<Unit63WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit64WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit64WhereInput>
  OR?: Array<Unit64WhereInput>
  NOT?: Enumerable<Unit64WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit65WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit65WhereInput>
  OR?: Array<Unit65WhereInput>
  NOT?: Enumerable<Unit65WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit71WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit71WhereInput>
  OR?: Array<Unit71WhereInput>
  NOT?: Enumerable<Unit71WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit72WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit72WhereInput>
  OR?: Array<Unit72WhereInput>
  NOT?: Enumerable<Unit72WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit73WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit73WhereInput>
  OR?: Array<Unit73WhereInput>
  NOT?: Enumerable<Unit73WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit74WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit74WhereInput>
  OR?: Array<Unit74WhereInput>
  NOT?: Enumerable<Unit74WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit75WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit75WhereInput>
  OR?: Array<Unit75WhereInput>
  NOT?: Enumerable<Unit75WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit81WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit81WhereInput>
  OR?: Array<Unit81WhereInput>
  NOT?: Enumerable<Unit81WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit82WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit82WhereInput>
  OR?: Array<Unit82WhereInput>
  NOT?: Enumerable<Unit82WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit83WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit83WhereInput>
  OR?: Array<Unit83WhereInput>
  NOT?: Enumerable<Unit83WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit84WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit84WhereInput>
  OR?: Array<Unit84WhereInput>
  NOT?: Enumerable<Unit84WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type Unit85WhereInput = {
  id?: string | StringFilter
  odontogram_id?: string | StringFilter
  abscent?: boolean | BooleanFilter
  notes?: string | NullableStringFilter | null
  mesial_vestibular_depth?: number | NullableFloatFilter | null
  mesial_vestibular_gmh?: number | NullableFloatFilter | null
  mesial_vestibular_lci?: number | NullableFloatFilter | null
  mesial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_vestibular_depth?: number | NullableFloatFilter | null
  medial_vestibular_gmh?: number | NullableFloatFilter | null
  medial_vestibular_lci?: number | NullableFloatFilter | null
  medial_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_vestibular_depth?: number | NullableFloatFilter | null
  distal_vestibular_gmh?: number | NullableFloatFilter | null
  distal_vestibular_lci?: number | NullableFloatFilter | null
  distal_vestibular_probing_bleeding?: boolean | NullableBooleanFilter | null
  mesial_lingual_depth?: number | NullableFloatFilter | null
  mesial_lingual_gmh?: number | NullableFloatFilter | null
  mesial_lingual_lci?: number | NullableFloatFilter | null
  mesial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  medial_lingual_depth?: number | NullableFloatFilter | null
  medial_lingual_gmh?: number | NullableFloatFilter | null
  medial_lingual_lci?: number | NullableFloatFilter | null
  medial_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  distal_lingual_depth?: number | NullableFloatFilter | null
  distal_lingual_gmh?: number | NullableFloatFilter | null
  distal_lingual_lci?: number | NullableFloatFilter | null
  distal_lingual_probing_bleeding?: boolean | NullableBooleanFilter | null
  mobility?: boolean | NullableBooleanFilter | null
  if_yes_mobility_level?: string | NullableStringFilter | null
  periogram_date?: Date | string | NullableDateTimeFilter | null
  higid?: boolean | NullableBooleanFilter | null
  vestibular_biofilm?: boolean | NullableBooleanFilter | null
  palatin_biofilm?: boolean | NullableBooleanFilter | null
  oclusal_biofilm?: boolean | NullableBooleanFilter | null
  mesial_biofilm?: boolean | NullableBooleanFilter | null
  distal_biofilm?: boolean | NullableBooleanFilter | null
  poor_restoration?: boolean | NullableBooleanFilter | null
  if_yes_what_type_of_restoration?: Restorations_types | NullableRestorations_typesFilter | null
  caries_white_spot_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_white_lesion?: string | NullableStringFilter | null
  active_carie?: boolean | NullableBooleanFilter | null
  inative_carie?: boolean | NullableBooleanFilter | null
  cavity_caries_lesion?: boolean | NullableBooleanFilter | null
  if_yes_where_cavity_lesion?: string | NullableStringFilter | null
  if_yes_depth?: number | NullableFloatFilter | null
  extense_carie_lesion?: boolean | NullableBooleanFilter | null
  fluorosis_white_lesions?: boolean | NullableBooleanFilter | null
  if_yes_fuorosis_level?: string | NullableStringFilter | null
  black_hash?: boolean | NullableBooleanFilter | null
  enamel_fissure?: boolean | NullableBooleanFilter | null
  dentin_fissure?: boolean | NullableBooleanFilter | null
  if_yes_fissure_direction?: string | NullableStringFilter | null
  enamel_fracture?: boolean | NullableBooleanFilter | null
  if_yes_fracture_size?: string | NullableStringFilter | null
  dental_erosion?: boolean | NullableBooleanFilter | null
  dental_abfraction?: boolean | NullableBooleanFilter | null
  dental_atriction?: boolean | NullableBooleanFilter | null
  dental_abrasion?: boolean | NullableBooleanFilter | null
  dental_anomaly?: boolean | NullableBooleanFilter | null
  if_yes_anomaly_description?: string | NullableStringFilter | null
  initial_radiograph?: boolean | NullableBooleanFilter | null
  final_radiograph?: boolean | NullableBooleanFilter | null
  pulp_status?: Pulp_states | NullablePulp_statesFilter | null
  canal_calcifications?: boolean | NullableBooleanFilter | null
  atresic_pulp_chamber?: boolean | NullableBooleanFilter | null
  canal_depth_probing?: boolean | NullableBooleanFilter | null
  canal_depth_in_mm?: number | NullableFloatFilter | null
  number_of_roots?: number | NullableIntFilter | null
  number_of_canals?: number | NullableIntFilter | null
  acessory_canal?: boolean | NullableBooleanFilter | null
  lateral_canal?: boolean | NullableBooleanFilter | null
  hiper_cementosis?: boolean | NullableBooleanFilter | null
  bone_petrosis?: boolean | NullableBooleanFilter | null
  root_dilacerations?: boolean | NullableBooleanFilter | null
  cirurgy_indication?: boolean | NullableBooleanFilter | null
  reason_of_indication?: string | NullableStringFilter | null
  simple_removal?: boolean | NullableBooleanFilter | null
  difficult_removal?: boolean | NullableBooleanFilter | null
  antibiotcs_prevention_needed?: boolean | NullableBooleanFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Unit85WhereInput>
  OR?: Array<Unit85WhereInput>
  NOT?: Enumerable<Unit85WhereInput>
  odontogram?: OdontogramWhereInput | null
}

export type OdontogramWhereInput = {
  id?: string | StringFilter
  patient_id?: string | StringFilter
  PSR_maded?: boolean | NullableBooleanFilter | null
  PSR_date?: Date | string | NullableDateTimeFilter | null
  first_sextant?: number | NullableIntFilter | null
  second_sextant?: number | NullableIntFilter | null
  third_sextant?: number | NullableIntFilter | null
  fourth_sextant?: number | NullableIntFilter | null
  fifth_sextant?: number | NullableIntFilter | null
  sixth_sextant?: number | NullableIntFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<OdontogramWhereInput>
  OR?: Array<OdontogramWhereInput>
  NOT?: Enumerable<OdontogramWhereInput>
  patient?: PatientWhereInput | null
  unit_11?: Unit11WhereInput | null
  unit_12?: Unit12WhereInput | null
  unit_13?: Unit13WhereInput | null
  unit_14?: Unit14WhereInput | null
  unit_15?: Unit15WhereInput | null
  unit_16?: Unit16WhereInput | null
  unit_17?: Unit17WhereInput | null
  unit_18?: Unit18WhereInput | null
  unit_21?: Unit21WhereInput | null
  unit_22?: Unit22WhereInput | null
  unit_23?: Unit23WhereInput | null
  unit_24?: Unit24WhereInput | null
  unit_25?: Unit25WhereInput | null
  unit_26?: Unit26WhereInput | null
  unit_27?: Unit27WhereInput | null
  unit_28?: Unit28WhereInput | null
  unit_31?: Unit31WhereInput | null
  unit_32?: Unit32WhereInput | null
  unit_33?: Unit33WhereInput | null
  unit_34?: Unit34WhereInput | null
  unit_35?: Unit35WhereInput | null
  unit_36?: Unit36WhereInput | null
  unit_37?: Unit37WhereInput | null
  unit_38?: Unit38WhereInput | null
  unit_41?: Unit41WhereInput | null
  unit_42?: Unit42WhereInput | null
  unit_43?: Unit43WhereInput | null
  unit_44?: Unit44WhereInput | null
  unit_45?: Unit45WhereInput | null
  unit_46?: Unit46WhereInput | null
  unit_47?: Unit47WhereInput | null
  unit_48?: Unit48WhereInput | null
  unit_51?: Unit51WhereInput | null
  unit_52?: Unit52WhereInput | null
  unit_53?: Unit53WhereInput | null
  unit_54?: Unit54WhereInput | null
  unit_55?: Unit55WhereInput | null
  unit_61?: Unit61WhereInput | null
  unit_62?: Unit62WhereInput | null
  unit_63?: Unit63WhereInput | null
  unit_64?: Unit64WhereInput | null
  unit_65?: Unit65WhereInput | null
  unit_71?: Unit71WhereInput | null
  unit_72?: Unit72WhereInput | null
  unit_73?: Unit73WhereInput | null
  unit_74?: Unit74WhereInput | null
  unit_75?: Unit75WhereInput | null
  unit_81?: Unit81WhereInput | null
  unit_82?: Unit82WhereInput | null
  unit_83?: Unit83WhereInput | null
  unit_84?: Unit84WhereInput | null
  unit_85?: Unit85WhereInput | null
}

export type Dont_know_questionsWhereInput = {
  id?: string | StringFilter
  question?: string | StringFilter
  questionnaire_id?: string | StringFilter
  Patient?: PatientFilter | null
  AND?: Enumerable<Dont_know_questionsWhereInput>
  OR?: Array<Dont_know_questionsWhereInput>
  NOT?: Enumerable<Dont_know_questionsWhereInput>
}

export type Clinic_procedures_particular_valuesWhereInput = {
  procedure_id?: string | StringFilter
  cust?: number | FloatFilter
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Clinic_procedures_particular_valuesWhereInput>
  OR?: Array<Clinic_procedures_particular_valuesWhereInput>
  NOT?: Enumerable<Clinic_procedures_particular_valuesWhereInput>
  procedure_CID?: ProceduresWhereInput | null
}

export type Dental_insuranceWhereInput = {
  id?: string | StringFilter
  name?: string | StringFilter
  clinic?: ClinicFilter | null
  compensation_date?: number | NullableIntFilter | null
  compensation_value?: number | NullableIntFilter | null
  active?: boolean | BooleanFilter
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Dental_insuranceWhereInput>
  OR?: Array<Dental_insuranceWhereInput>
  NOT?: Enumerable<Dental_insuranceWhereInput>
  procedures_values?: Clinic_procedures_insurance_valuesWhereInput | null
}

export type Clinic_procedures_insurance_valuesWhereInput = {
  procedure_id?: string | StringFilter
  insurance_id?: string | StringFilter
  cust?: number | FloatFilter
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Clinic_procedures_insurance_valuesWhereInput>
  OR?: Array<Clinic_procedures_insurance_valuesWhereInput>
  NOT?: Enumerable<Clinic_procedures_insurance_valuesWhereInput>
  procedure_CID?: ProceduresWhereInput | null
  insurance?: Dental_insuranceWhereInput | null
}

export type ProceduresWhereInput = {
  codigo_CID?: string | StringFilter
  treatment_evolution?: Treatment_evolutionFilter | null
  insurance_procedures_values?: Clinic_procedures_insurance_valuesFilter | null
  name?: string | StringFilter
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<ProceduresWhereInput>
  OR?: Array<ProceduresWhereInput>
  NOT?: Enumerable<ProceduresWhereInput>
  particular_procedures_values?: Clinic_procedures_particular_valuesWhereInput | null
}

export type Clinic_finance_procedureWhereInput = {
  id?: string | StringFilter
  clinid_id?: string | StringFilter
  treatment_evolution_registry_id?: string | StringFilter
  payment_status?: Payment_status | Payment_statusFilter
  client_payment_type?: Payment_method | Payment_methodFilter
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Clinic_finance_procedureWhereInput>
  OR?: Array<Clinic_finance_procedureWhereInput>
  NOT?: Enumerable<Clinic_finance_procedureWhereInput>
  clinic?: ClinicWhereInput | null
  treatment?: Treatment_evolutionWhereInput | null
}

export type Treatment_evolutionWhereInput = {
  id?: string | StringFilter
  hour?: Date | string | DateTimeFilter
  date?: Date | string | DateTimeFilter
  dentist_id?: string | StringFilter
  treatment?: ProceduresFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  Clinic_finance_procedure?: Clinic_finance_procedureFilter | null
  Patient?: PatientFilter | null
  AND?: Enumerable<Treatment_evolutionWhereInput>
  OR?: Array<Treatment_evolutionWhereInput>
  NOT?: Enumerable<Treatment_evolutionWhereInput>
  shedule?: ScheduleWhereInput | null
}

export type PatientWhereInput = {
  id?: string | UUIDFilter
  clinic_prontuary_number?: number | IntFilter
  fullname?: string | StringFilter
  birth_date?: Date | string | DateTimeFilter
  age?: number | IntFilter
  gender?: Gender | GenderFilter
  brazilian_cpf?: string | NullableStringFilter | null
  brazilian_rg?: string | NullableStringFilter | null
  password?: string | StringFilter
  clinic_id?: string | StringFilter
  cellphone_number?: string | NullableStringFilter | null
  email?: EmailFilter | null
  dont_know_id?: string | NullableStringFilter | null
  treatment_evolution_id?: string | NullableStringFilter | null
  dentists?: DentistFilter | null
  contactmeans?: Contact_means | NullableContact_meansFilter | null
  last_visit_dentist?: Date | string | DateTimeFilter
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  role?: string | StringFilter
  clinicRegistered_id?: string | NullableStringFilter | null
  Email?: EmailFilter | null
  AND?: Enumerable<PatientWhereInput>
  OR?: Array<PatientWhereInput>
  NOT?: Enumerable<PatientWhereInput>
  clinic?: ClinicWhereInput | null
  schedule?: ScheduleWhereInput | null
  anamnesis?: AnamnesisWhereInput | null
  implantology?: ImplantologyWhereInput | null
  ortodontics?: OrtodonticsWhereInput | null
  odontogram?: OdontogramWhereInput | null
  dont_know?: Dont_know_questionsWhereInput | null
  treatment_evolution?: Treatment_evolutionWhereInput | null
  Clinic?: ClinicWhereInput | null
}

export type ScheduleWhereInput = {
  date?: Date | string | DateTimeFilter
  hour?: Date | string | DateTimeFilter
  dentist_id?: string | StringFilter
  patient_id?: string | NullableStringFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<ScheduleWhereInput>
  OR?: Array<ScheduleWhereInput>
  NOT?: Enumerable<ScheduleWhereInput>
  dentist?: DentistWhereInput | null
  patient?: PatientWhereInput | null
  treatment_evolution?: Treatment_evolutionWhereInput | null
}

export type Clinic_specializationsWhereInput = {
  id?: number | IntFilter
  specialization?: Specializations | SpecializationsFilter
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  dentistId?: string | NullableStringFilter | null
  AND?: Enumerable<Clinic_specializationsWhereInput>
  OR?: Array<Clinic_specializationsWhereInput>
  NOT?: Enumerable<Clinic_specializationsWhereInput>
  Dentist?: DentistWhereInput | null
}

export type DentistWhereInput = {
  id?: string | UUIDFilter
  CRO_number?: string | StringFilter
  firstname?: string | StringFilter
  lastname?: string | StringFilter
  username?: string | StringFilter
  password?: string | StringFilter
  contactmeans?: Contact_means | NullableContact_meansFilter | null
  cellphone_number?: string | NullableStringFilter | null
  clinic_id?: string | StringFilter
  email?: EmailFilter | null
  active?: boolean | BooleanFilter
  specialization?: Clinic_specializationsFilter | null
  ortodontics_treatments?: OrtodonticsFilter | null
  implantology_treatments?: ImplantologyFilter | null
  comission?: number | NullableFloatFilter | null
  patients?: PatientFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  role?: string | StringFilter
  clinicRegistered_id?: string | NullableStringFilter | null
  Email?: EmailFilter | null
  AND?: Enumerable<DentistWhereInput>
  OR?: Array<DentistWhereInput>
  NOT?: Enumerable<DentistWhereInput>
  shedule?: ScheduleWhereInput | null
  clinic?: ClinicWhereInput | null
  Clinic?: ClinicWhereInput | null
}

export type EmailWhereInput = {
  id?: string | StringFilter
  email?: string | StringFilter
  clinid_id?: string | NullableStringFilter | null
  techinical_mananger_id?: string | NullableStringFilter | null
  legal_responsible_id?: string | NullableStringFilter | null
  dentist_id?: string | NullableStringFilter | null
  patient_id?: string | NullableStringFilter | null
  technicalmanagerCpf?: string | NullableStringFilter | null
  legalresponsibleCpf?: string | NullableStringFilter | null
  patientId?: string | NullableStringFilter | null
  dentistId?: string | NullableStringFilter | null
  AND?: Enumerable<EmailWhereInput>
  OR?: Array<EmailWhereInput>
  NOT?: Enumerable<EmailWhereInput>
  clinic?: ClinicWhereInput | null
  techinical_mananger?: TechnicalmanagerWhereInput | null
  legal_responsible?: LegalresponsibleWhereInput | null
  dentist?: DentistWhereInput | null
  patient?: PatientWhereInput | null
  Technicalmanager?: TechnicalmanagerWhereInput | null
  Legalresponsible?: LegalresponsibleWhereInput | null
  Patient?: PatientWhereInput | null
  Dentist?: DentistWhereInput | null
}

export type Clinic_phonesWhereInput = {
  id?: string | StringFilter
  clinic_id?: string | StringFilter
  phonetype?: Phonetypes | PhonetypesFilter
  phone_number?: string | StringFilter
  AND?: Enumerable<Clinic_phonesWhereInput>
  OR?: Array<Clinic_phonesWhereInput>
  NOT?: Enumerable<Clinic_phonesWhereInput>
  clinic?: ClinicWhereInput | null
}

export type Clinic_RolesWhereInput = {
  id?: string | StringFilter
  name?: string | StringFilter
  description?: string | NullableStringFilter | null
  employer?: EmployeerFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Clinic_RolesWhereInput>
  OR?: Array<Clinic_RolesWhereInput>
  NOT?: Enumerable<Clinic_RolesWhereInput>
}

export type EmployeerWhereInput = {
  id?: string | UUIDFilter
  firstname?: string | StringFilter
  lastname?: string | StringFilter
  username?: string | StringFilter
  password?: string | StringFilter
  clinic_id?: string | StringFilter
  role_id?: string | StringFilter
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<EmployeerWhereInput>
  OR?: Array<EmployeerWhereInput>
  NOT?: Enumerable<EmployeerWhereInput>
  clinic?: ClinicWhereInput | null
  role?: Clinic_RolesWhereInput | null
}

export type LogsWhereInput = {
  id?: number | IntFilter
  clinic_id?: string | StringFilter
  description?: string | StringFilter
  createdAt?: Date | string | DateTimeFilter
  AND?: Enumerable<LogsWhereInput>
  OR?: Array<LogsWhereInput>
  NOT?: Enumerable<LogsWhereInput>
  clinic?: ClinicWhereInput | null
}

export type Clinic_payment_informationWhereInput = {
  id?: string | StringFilter
  clinic_id?: string | StringFilter
  payment_method?: Payment_method | Payment_methodFilter
  registered_credit_card?: boolean | BooleanFilter
  registered_debit_card?: boolean | BooleanFilter
  payment_day?: number | NullableIntFilter | null
  next_payment?: Date | string | NullableDateTimeFilter | null
  credit_card_number?: string | NullableStringFilter | null
  credit_card_CCV?: string | NullableStringFilter | null
  credit_card_name?: string | NullableStringFilter | null
  debit_card_number?: string | NullableStringFilter | null
  debit_card_CCV?: string | NullableStringFilter | null
  debit_card_name?: string | NullableStringFilter | null
  delayed_payment?: boolean | NullableBooleanFilter | null
  delayed_days?: number | NullableIntFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Clinic_payment_informationWhereInput>
  OR?: Array<Clinic_payment_informationWhereInput>
  NOT?: Enumerable<Clinic_payment_informationWhereInput>
  clinic?: ClinicWhereInput | null
}

export type Clinic_finance_optionsWhereInput = {
  id?: string | StringFilter
  calculation_hour_of_day?: number | IntFilter
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Clinic_finance_optionsWhereInput>
  OR?: Array<Clinic_finance_optionsWhereInput>
  NOT?: Enumerable<Clinic_finance_optionsWhereInput>
  clinic?: ClinicWhereInput | null
}

export type Clinic_finance_monthWhereInput = {
  id?: string | StringFilter
  clinid_id?: string | StringFilter
  month?: number | IntFilter
  year?: number | IntFilter
  wage_payment_day?: number | NullableIntFilter | null
  wages_paid?: boolean | NullableBooleanFilter | null
  total_wage?: number | NullableFloatFilter | null
  dentists_comissions?: number | NullableFloatFilter | null
  month_all_profit?: number | NullableFloatFilter | null
  month_discounts?: number | NullableFloatFilter | null
  month_brute_profit?: number | NullableFloatFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Clinic_finance_monthWhereInput>
  OR?: Array<Clinic_finance_monthWhereInput>
  NOT?: Enumerable<Clinic_finance_monthWhereInput>
  clinic?: ClinicWhereInput | null
}

export type Clinic_finance_dayWhereInput = {
  id?: string | StringFilter
  clinid_id?: string | StringFilter
  day?: number | IntFilter
  month?: number | IntFilter
  year?: number | IntFilter
  total_income?: number | NullableFloatFilter | null
  dentists_part?: number | NullableFloatFilter | null
  clinic_income?: number | NullableFloatFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Clinic_finance_dayWhereInput>
  OR?: Array<Clinic_finance_dayWhereInput>
  NOT?: Enumerable<Clinic_finance_dayWhereInput>
  clinic?: ClinicWhereInput | null
}

export type Chair_finance_dayWhereInput = {
  chair_id?: string | StringFilter
  clinid_id?: string | StringFilter
  day?: number | IntFilter
  month?: number | IntFilter
  year?: number | IntFilter
  total_income?: number | NullableFloatFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Chair_finance_dayWhereInput>
  OR?: Array<Chair_finance_dayWhereInput>
  NOT?: Enumerable<Chair_finance_dayWhereInput>
  chair?: ChairsWhereInput | null
  clinic?: ClinicWhereInput | null
}

export type ChairsWhereInput = {
  id?: string | StringFilter
  name?: string | StringFilter
  clinid_id?: string | StringFilter
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  Chair_finance_day?: Chair_finance_dayFilter | null
  AND?: Enumerable<ChairsWhereInput>
  OR?: Array<ChairsWhereInput>
  NOT?: Enumerable<ChairsWhereInput>
  clinic?: ClinicWhereInput | null
}

export type ClinicWhereInput = {
  registered_id?: string | UUIDFilter
  cnpj?: string | StringFilter
  socialreason?: string | StringFilter
  fantasy_name?: string | StringFilter
  multipleclinics?: boolean | BooleanFilter
  numberofbranches?: number | IntFilter
  dentalchairs?: number | NullableIntFilter | null
  averagepatientsperday?: number | NullableIntFilter | null
  country?: string | NullableStringFilter | null
  state?: string | NullableStringFilter | null
  city?: string | NullableStringFilter | null
  neighborhood?: string | NullableStringFilter | null
  CEP?: string | NullableStringFilter | null
  website?: string | NullableStringFilter | null
  emails?: EmailFilter | null
  clinic_phones?: Clinic_phonesFilter | null
  patients?: PatientFilter | null
  destists?: DentistFilter | null
  employeers?: EmployeerFilter | null
  password?: string | NullableStringFilter | null
  ssl_enabled?: boolean | NullableBooleanFilter | null
  two_factor_autentication?: boolean | NullableBooleanFilter | null
  insuranses?: Dental_insuranceFilter | null
  access_blocked?: boolean | NullableBooleanFilter | null
  free_trial?: boolean | BooleanFilter
  free_trial_days_left?: number | IntFilter
  language?: Language | LanguageFilter
  logs?: LogsFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  Clinic_payment_information?: Clinic_payment_informationFilter | null
  Clinic_finance_options?: Clinic_finance_optionsFilter | null
  Clinic_finance_month?: Clinic_finance_monthFilter | null
  Clinic_finance_day?: Clinic_finance_dayFilter | null
  Chairs?: ChairsFilter | null
  Chair_finance_day?: Chair_finance_dayFilter | null
  Clinic_finance_procedure?: Clinic_finance_procedureFilter | null
  Patient?: PatientFilter | null
  Dentist?: DentistFilter | null
  AND?: Enumerable<ClinicWhereInput>
  OR?: Array<ClinicWhereInput>
  NOT?: Enumerable<ClinicWhereInput>
  technicalmanager?: TechnicalmanagerWhereInput | null
  legalresponsible?: LegalresponsibleWhereInput | null
}

export type SocialreasonCnpjCompoundUniqueInput = {
  socialreason: string
  cnpj: string
}

export type ClinicWhereUniqueInput = {
  registered_id?: string
  socialreason_cnpj?: SocialreasonCnpjCompoundUniqueInput
}

export type IdEmailCompoundUniqueInput = {
  id: string
  email: string
}

export type EmailWhereUniqueInput = {
  email?: string
  id_email?: IdEmailCompoundUniqueInput
}

export type Diet_questionnaireWhereUniqueInput = {
  id?: string
}

export type DentistWhereUniqueInput = {
  id?: string
  CRO_number?: string
}

export type PatientWhereUniqueInput = {
  id?: string
  brazilian_cpf?: string | null
  brazilian_rg?: string | null
}

export type ProceduresWhereUniqueInput = {
  codigo_CID?: string
}

export type Treatment_evolutionWhereUniqueInput = {
  id?: string
}

export type Procedure_idInsurance_idCompoundUniqueInput = {
  procedure_id: string
  insurance_id: string
}

export type Clinic_procedures_insurance_valuesWhereUniqueInput = {
  procedure_id_insurance_id?: Procedure_idInsurance_idCompoundUniqueInput
}

export type Clinic_finance_procedureWhereUniqueInput = {
  id?: string
}

export type Clinic_specializationsWhereUniqueInput = {
  id?: number
}

export type OrtodonticsWhereUniqueInput = {
  id?: string
}

export type ImplantologyWhereUniqueInput = {
  id?: string
}

export type Clinic_phonesWhereUniqueInput = {
  id?: string
  phone_number?: string
}

export type EmployeerWhereUniqueInput = {
  id?: string
}

export type Dental_insuranceWhereUniqueInput = {
  id?: string
  name?: string
}

export type LogsWhereUniqueInput = {
  id?: number
}

export type Clinic_payment_informationWhereUniqueInput = {
  id?: string
}

export type Clinic_finance_optionsWhereUniqueInput = {
  id?: string
}

export type IdMonthYearCompoundUniqueInput = {
  id: string
  month: number
  year: number
}

export type Clinic_finance_monthWhereUniqueInput = {
  id_month_year?: IdMonthYearCompoundUniqueInput
}

export type IdDayMonthYearCompoundUniqueInput = {
  id: string
  day: number
  month: number
  year: number
}

export type Clinic_finance_dayWhereUniqueInput = {
  id_day_month_year?: IdDayMonthYearCompoundUniqueInput
}

export type ChairsWhereUniqueInput = {
  id?: string
}

export type Chair_idDayMonthYearCompoundUniqueInput = {
  chair_id: string
  day: number
  month: number
  year: number
}

export type Chair_finance_dayWhereUniqueInput = {
  chair_id_day_month_year?: Chair_idDayMonthYearCompoundUniqueInput
}

export type Clinic_procedures_particular_valuesWhereUniqueInput = {
  procedure_id?: string
}

export type DateHourDentist_idCompoundUniqueInput = {
  date: Date | string
  hour: Date | string
  dentist_id: string
}

export type ScheduleWhereUniqueInput = {
  date_hour_dentist_id?: DateHourDentist_idCompoundUniqueInput
}

export type TechnicalmanagerWhereUniqueInput = {
  cpf?: string
}

export type LegalresponsibleWhereUniqueInput = {
  cpf?: string
}

export type OdontogramWhereUniqueInput = {
  id?: string
}

export type Unit11WhereUniqueInput = {
  id?: string
}

export type Unit12WhereUniqueInput = {
  id?: string
}

export type Unit13WhereUniqueInput = {
  id?: string
}

export type Unit14WhereUniqueInput = {
  id?: string
}

export type Unit15WhereUniqueInput = {
  id?: string
}

export type Unit16WhereUniqueInput = {
  id?: string
}

export type Unit17WhereUniqueInput = {
  id?: string
}

export type Unit18WhereUniqueInput = {
  id?: string
}

export type Unit21WhereUniqueInput = {
  id?: string
}

export type Unit22WhereUniqueInput = {
  id?: string
}

export type Unit23WhereUniqueInput = {
  id?: string
}

export type Unit24WhereUniqueInput = {
  id?: string
}

export type Unit25WhereUniqueInput = {
  id?: string
}

export type Unit26WhereUniqueInput = {
  id?: string
}

export type Unit27WhereUniqueInput = {
  id?: string
}

export type Unit28WhereUniqueInput = {
  id?: string
}

export type Unit31WhereUniqueInput = {
  id?: string
}

export type Unit32WhereUniqueInput = {
  id?: string
}

export type Unit33WhereUniqueInput = {
  id?: string
}

export type Unit34WhereUniqueInput = {
  id?: string
}

export type Unit35WhereUniqueInput = {
  id?: string
}

export type Unit36WhereUniqueInput = {
  id?: string
}

export type Unit37WhereUniqueInput = {
  id?: string
}

export type Unit38WhereUniqueInput = {
  id?: string
}

export type Unit41WhereUniqueInput = {
  id?: string
}

export type Unit42WhereUniqueInput = {
  id?: string
}

export type Unit43WhereUniqueInput = {
  id?: string
}

export type Unit44WhereUniqueInput = {
  id?: string
}

export type Unit45WhereUniqueInput = {
  id?: string
}

export type Unit46WhereUniqueInput = {
  id?: string
}

export type Unit47WhereUniqueInput = {
  id?: string
}

export type Unit48WhereUniqueInput = {
  id?: string
}

export type Unit51WhereUniqueInput = {
  id?: string
}

export type Unit52WhereUniqueInput = {
  id?: string
}

export type Unit53WhereUniqueInput = {
  id?: string
}

export type Unit54WhereUniqueInput = {
  id?: string
}

export type Unit55WhereUniqueInput = {
  id?: string
}

export type Unit61WhereUniqueInput = {
  id?: string
}

export type Unit62WhereUniqueInput = {
  id?: string
}

export type Unit63WhereUniqueInput = {
  id?: string
}

export type Unit64WhereUniqueInput = {
  id?: string
}

export type Unit65WhereUniqueInput = {
  id?: string
}

export type Unit71WhereUniqueInput = {
  id?: string
}

export type Unit72WhereUniqueInput = {
  id?: string
}

export type Unit73WhereUniqueInput = {
  id?: string
}

export type Unit74WhereUniqueInput = {
  id?: string
}

export type Unit75WhereUniqueInput = {
  id?: string
}

export type Unit81WhereUniqueInput = {
  id?: string
}

export type Unit82WhereUniqueInput = {
  id?: string
}

export type Unit83WhereUniqueInput = {
  id?: string
}

export type Unit84WhereUniqueInput = {
  id?: string
}

export type Unit85WhereUniqueInput = {
  id?: string
}

export type AnamnesisWhereUniqueInput = {
  id?: string
}

export type Implantology_questionnaireWhereUniqueInput = {
  id?: string
}

export type Ortodontics_questionnaireWhereUniqueInput = {
  id?: string
}

export type Oral_health_questionnaireWhereUniqueInput = {
  id?: string
}

export type TMJ_problems_questionnaireWhereUniqueInput = {
  id?: string
}

export type Vital_signs_questionnaireWhereUniqueInput = {
  id?: string
}

export type Main_anamnesis_questionnaireWhereUniqueInput = {
  id?: string
}

export type Dont_know_questionsWhereUniqueInput = {
  id?: string
}

export type Clinic_RolesWhereUniqueInput = {
  id?: string
}

export type TechnicalmanagerCreatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Clinic_phonesCreateWithoutClinicInput = {
  id?: string
  phonetype: Phonetypes
  phone_number: string
}

export type Clinic_phonesCreateManyWithoutClinicInput = {
  create?: Enumerable<Clinic_phonesCreateWithoutClinicInput>
  connect?: Enumerable<Clinic_phonesWhereUniqueInput>
}

export type PatientCreatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type LegalresponsibleCreatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Clinic_RolesCreateWithoutEmployerInput = {
  id?: string
  name: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type Clinic_RolesCreateOneWithoutEmployerInput = {
  create?: Clinic_RolesCreateWithoutEmployerInput
  connect?: Clinic_RolesWhereUniqueInput
}

export type EmployeerCreateWithoutClinicInput = {
  id?: string
  firstname: string
  lastname: string
  username?: string
  password?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  role: Clinic_RolesCreateOneWithoutEmployerInput
}

export type EmployeerCreateManyWithoutClinicInput = {
  create?: Enumerable<EmployeerCreateWithoutClinicInput>
  connect?: Enumerable<EmployeerWhereUniqueInput>
}

export type EmailCreateWithoutDentistInput = {
  id?: string
  email: string
  clinic?: ClinicCreateOneWithoutEmailsInput | null
  techinical_mananger?: TechnicalmanagerCreateOneWithoutEmailInput | null
  legal_responsible?: LegalresponsibleCreateOneWithoutEmailInput | null
  dentist?: DentistCreateOneWithoutEmailInput | null
  patient?: PatientCreateOneWithoutEmailInput | null
  Technicalmanager?: TechnicalmanagerCreateOneWithoutEmailInput | null
  Legalresponsible?: LegalresponsibleCreateOneWithoutEmailInput | null
  Patient?: PatientCreateOneWithoutEmailInput | null
}

export type EmailCreateManyWithoutDentistInput = {
  create?: Enumerable<EmailCreateWithoutDentistInput>
  connect?: Enumerable<EmailWhereUniqueInput>
}

export type Clinic_specializationsCreateWithoutDentistInput = {
  specialization: Specializations
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type Clinic_specializationsCreateManyWithoutDentistInput = {
  create?: Enumerable<Clinic_specializationsCreateWithoutDentistInput>
  connect?: Enumerable<Clinic_specializationsWhereUniqueInput>
}

export type OrtodonticsCreateprofessional_idsInput = {
  set?: Enumerable<string> | null
}

export type OrtodonticsCreatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type AnamnesisCreateanamnesis_typeInput = {
  set?: Enumerable<Questionnaires> | null
}

export type AnamnesisCreatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Main_anamnesis_questionnaireCreatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Main_anamnesis_questionnaireCreateWithoutAnamnesis_prontuaryInput = {
  id?: string
  main_issue: string
  recent_disease_history: string
  undergoing_medical_treatment: yes_no
  if_yes_what_treatment?: string | null
  taking_any_medication: yes_no
  if_yes_what_medication?: string | null
  already_used_local_anestesics: yes_no
  you_presented_reaction: yes_no
  allergic_to_any_medicine: yes_no
  if_yes_what_medicine?: string | null
  allergic_to_latex: yes_no
  has_any_know_blood_issues: yes_no
  use_acetil_salicilic_acid: yes_no
  if_yes_for_what?: string | null
  you_have_already_made_blood_testing: yes_no
  if_yes_when_made_it?: Date | string | null
  has_any_importanting_bleeding: yes_no
  if_yes_when?: Date | string | null
  if_yes_how_long_to_stop: string
  have_problems_with_healing: yes_no
  has_any_know_tireoids_issues: yes_no
  has_any_know_hormonal_issues: yes_no
  you_are_using_any_corticosteroids: yes_no
  diabetes_mellitus: yes_no
  if_yes_any_treatment_for_diabetes?: string | null
  any_heart_problems: yes_no
  if_yes_what_hearth_problem?: string | null
  arterial_hypertension: yes_no
  if_yes_any_treatment_for_hypertension?: string | null
  breathing_problems: yes_no
  if_yes_what_breathing_problem?: string | null
  kidney_damage: yes_no
  if_yes_what_kidney_problem?: string | null
  gastric_problems: yes_no
  if_yes_you_looked_for_gastric_doctor?: yes_no | null
  if_yes_what_gastric_problems?: string | null
  have_rheumatic_fever: yes_no
  joints_problems_or_reumatics: yes_no
  if_yes_you_looked_for_reaumatics_doctor?: string | null
  use_drugs: yes_no
  if_yes_what_drug?: string | null
  smoker: yes_no
  if_yes_how_many_cigarretes_perday?: number | null
  consider_a_alcolic_addicted: yes_no
  if_yes_when_was_the_last_drink?: string | null
  family_background: yes_no
  if_yes_what_familys_problems?: string | null
  preagnant: yes_no
  if_yes_how_many_months?: string | null
  take_contraceptives: yes_no
  what_contraceptives?: string | null
  are_breastfeeding: yes_no
  entered_the_process_of_menopause: yes_no
  if_yes_guided_by_the_gynecologist?: yes_no | null
  take_hormone: yes_no
  take_calcium: yes_no
  terms_readed: yes_no
  patient_signed: yes_no
  signed_date: Date | string
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Main_anamnesis_questionnaireCreatewhat_was_updatedInput
}

export type Main_anamnesis_questionnaireCreateOneWithoutAnamnesis_prontuaryInput = {
  create?: Main_anamnesis_questionnaireCreateWithoutAnamnesis_prontuaryInput
  connect?: Main_anamnesis_questionnaireWhereUniqueInput
}

export type Vital_signs_questionnaireCreatewhat_is_updatedInput = {
  set?: Enumerable<string> | null
}

export type Vital_signs_questionnaireCreateWithoutAnamnesis_prontuaryInput = {
  id?: string
  heart_beats_per_minute?: number | null
  arterial_pressure?: string | null
  breaths_per_minute?: number | null
  temperature_in_celcius?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_is_updated?: Vital_signs_questionnaireCreatewhat_is_updatedInput
}

export type Vital_signs_questionnaireCreateOneWithoutAnamnesis_prontuaryInput = {
  create?: Vital_signs_questionnaireCreateWithoutAnamnesis_prontuaryInput
  connect?: Vital_signs_questionnaireWhereUniqueInput
}

export type Oral_health_questionnaireCreatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Oral_health_questionnaireCreateWithoutAnamnesis_prontuaryInput = {
  id?: string
  you_use_anykind_protesis: yes_no
  whats_the_protesis?: string | null
  type_of_teeth_brush?: string | null
  how_many_times_by_day?: number | null
  you_floss?: yes_no | null
  if_yes_how_many_times?: number | null
  you_use_any_mouthwash?: yes_no | null
  if_yes_how_often?: How_often | null
  dental_clenching: yes_no
  if_yes_when_in_day?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Oral_health_questionnaireCreatewhat_was_updatedInput
}

export type Oral_health_questionnaireCreateOneWithoutAnamnesis_prontuaryInput = {
  create?: Oral_health_questionnaireCreateWithoutAnamnesis_prontuaryInput
  connect?: Oral_health_questionnaireWhereUniqueInput
}

export type Diet_questionnaireCreatewhat_is_updatedInput = {
  set?: Enumerable<string> | null
}

export type Diet_questionnaireCreateWithoutAnamnesis_prontuaryInput = {
  id?: string
  already_instructed_in_diet_by_a_CD: yes_no
  if_yes_what_the_instructions?: string | null
  importance_of_diet_in_oral_health: yes_no
  createdAt?: Date | string
  updatedAt?: Date | string
  what_is_updated?: Diet_questionnaireCreatewhat_is_updatedInput
}

export type Diet_questionnaireCreateManyWithoutAnamnesis_prontuaryInput = {
  create?: Enumerable<Diet_questionnaireCreateWithoutAnamnesis_prontuaryInput>
  connect?: Enumerable<Diet_questionnaireWhereUniqueInput>
}

export type AnamnesisCreateWithoutPatientInput = {
  id?: string
  last_dentist_visit: Date | string
  last_procedure: Date | string
  what_was_done?: string | null
  treatment_is_planed?: boolean
  What_treatment_is_planed?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  anamnesis_type?: AnamnesisCreateanamnesis_typeInput
  what_was_updated?: AnamnesisCreatewhat_was_updatedInput
  main_anamnesis_questionnaire?: Main_anamnesis_questionnaireCreateOneWithoutAnamnesis_prontuaryInput | null
  vital_signs_questionnaire?: Vital_signs_questionnaireCreateOneWithoutAnamnesis_prontuaryInput | null
  oral_health_questionnaire?: Oral_health_questionnaireCreateOneWithoutAnamnesis_prontuaryInput | null
  Diet_questionnaire?: Diet_questionnaireCreateManyWithoutAnamnesis_prontuaryInput | null
}

export type AnamnesisCreateOneWithoutPatientInput = {
  create?: AnamnesisCreateWithoutPatientInput
  connect?: AnamnesisWhereUniqueInput
}

export type ImplantologyCreateprofessional_idsInput = {
  set?: Enumerable<string> | null
}

export type ImplantologyCreateif_type_unitary_dental_units_reabilitedInput = {
  set?: Enumerable<string> | null
}

export type ImplantologyCreateif_type_multiple_dental_units_reabilitedInput = {
  set?: Enumerable<string> | null
}

export type ImplantologyCreatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Implantology_questionnaireCreatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Implantology_questionnaireCreateWithoutImplantology_questionnaireInput = {
  id?: string
  have_implant: boolean
  if_yes_when_puted?: string | null
  if_yes_last_review_consult?: string | null
  if_yes_the_cirurgy_needed_bone_graft?: boolean | null
  want_to_put_implants: boolean
  if_yes_why_do_you_want?: string | null
  if_yes_already_looked_for_professional?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Implantology_questionnaireCreatewhat_was_updatedInput
}

export type Implantology_questionnaireCreateOneWithoutImplantology_questionnaireInput = {
  create?: Implantology_questionnaireCreateWithoutImplantology_questionnaireInput
  connect?: Implantology_questionnaireWhereUniqueInput
}

export type Ortodontics_questionnaireCreatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Ortodontics_questionnaireCreateWithoutOrtodontic_prontuaryInput = {
  id?: string
  reason_for_tratment: string
  already_have_in_treatment: yes_no
  if_yes_how_long_takes_previus_treatment?: string | null
  if_yes_you_have_panoramic_radiography?: yes_no | null
  if_yes_when_panoramic_radiography_was_taken?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Ortodontics_questionnaireCreatewhat_was_updatedInput
}

export type Ortodontics_questionnaireCreateOneWithoutOrtodontic_prontuaryInput = {
  create?: Ortodontics_questionnaireCreateWithoutOrtodontic_prontuaryInput
  connect?: Ortodontics_questionnaireWhereUniqueInput
}

export type TMJ_problems_questionnaireCreatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type TMJ_problems_questionnaireCreateWithoutOrtodontic_prontuaryInput = {
  id?: string
  you_consider_have_TMJ_problem: yes_no
  when_the_simptoms_start?: string | null
  difficulty_opening_your_mouth: yes_no
  pain_when_opening_closing_mouth: yes_no
  crackles_when_opening_closing_mouth: yes_no
  if_yes_one_or_both_sides?: string | null
  if_one_whats_side_crackles?: string | null
  TMJ_pain_at_rest: yes_no
  already_looked_for_profissional_treatment: yes_no
  if_yes_when_was_treated?: string | null
  if_yes_you_made_any_image_exams?: yes_no | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: TMJ_problems_questionnaireCreatewhat_was_updatedInput
}

export type TMJ_problems_questionnaireCreateOneWithoutOrtodontic_prontuaryInput = {
  create?: TMJ_problems_questionnaireCreateWithoutOrtodontic_prontuaryInput
  connect?: TMJ_problems_questionnaireWhereUniqueInput
}

export type OdontogramCreatefirst_sextant_notesInput = {
  set?: Enumerable<string> | null
}

export type OdontogramCreatesecond_sextant_notesInput = {
  set?: Enumerable<string> | null
}

export type OdontogramCreatethird_sextant_notesInput = {
  set?: Enumerable<string> | null
}

export type OdontogramCreatefourth_sextant_notesInput = {
  set?: Enumerable<string> | null
}

export type OdontogramCreatefifth_sextant_notesInput = {
  set?: Enumerable<string> | null
}

export type OdontogramCreatesixth_sextant_notesInput = {
  set?: Enumerable<string> | null
}

export type OdontogramCreatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit11Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit11CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit11Createwhat_was_updatedInput
}

export type Unit11CreateOneWithoutOdontogramInput = {
  create?: Unit11CreateWithoutOdontogramInput
  connect?: Unit11WhereUniqueInput
}

export type Unit12Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit12CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit12Createwhat_was_updatedInput
}

export type Unit12CreateOneWithoutOdontogramInput = {
  create?: Unit12CreateWithoutOdontogramInput
  connect?: Unit12WhereUniqueInput
}

export type Unit13Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit13CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit13Createwhat_was_updatedInput
}

export type Unit13CreateOneWithoutOdontogramInput = {
  create?: Unit13CreateWithoutOdontogramInput
  connect?: Unit13WhereUniqueInput
}

export type Unit14Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit14CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit14Createwhat_was_updatedInput
}

export type Unit14CreateOneWithoutOdontogramInput = {
  create?: Unit14CreateWithoutOdontogramInput
  connect?: Unit14WhereUniqueInput
}

export type Unit15Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit15CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit15Createwhat_was_updatedInput
}

export type Unit15CreateOneWithoutOdontogramInput = {
  create?: Unit15CreateWithoutOdontogramInput
  connect?: Unit15WhereUniqueInput
}

export type Unit16Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit16CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit16Createwhat_was_updatedInput
}

export type Unit16CreateOneWithoutOdontogramInput = {
  create?: Unit16CreateWithoutOdontogramInput
  connect?: Unit16WhereUniqueInput
}

export type Unit17Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit17CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit17Createwhat_was_updatedInput
}

export type Unit17CreateOneWithoutOdontogramInput = {
  create?: Unit17CreateWithoutOdontogramInput
  connect?: Unit17WhereUniqueInput
}

export type Unit18Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit18CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit18Createwhat_was_updatedInput
}

export type Unit18CreateOneWithoutOdontogramInput = {
  create?: Unit18CreateWithoutOdontogramInput
  connect?: Unit18WhereUniqueInput
}

export type Unit21Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit21CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit21Createwhat_was_updatedInput
}

export type Unit21CreateOneWithoutOdontogramInput = {
  create?: Unit21CreateWithoutOdontogramInput
  connect?: Unit21WhereUniqueInput
}

export type Unit22Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit22CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit22Createwhat_was_updatedInput
}

export type Unit22CreateOneWithoutOdontogramInput = {
  create?: Unit22CreateWithoutOdontogramInput
  connect?: Unit22WhereUniqueInput
}

export type Unit23Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit23CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit23Createwhat_was_updatedInput
}

export type Unit23CreateOneWithoutOdontogramInput = {
  create?: Unit23CreateWithoutOdontogramInput
  connect?: Unit23WhereUniqueInput
}

export type Unit24Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit24CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit24Createwhat_was_updatedInput
}

export type Unit24CreateOneWithoutOdontogramInput = {
  create?: Unit24CreateWithoutOdontogramInput
  connect?: Unit24WhereUniqueInput
}

export type Unit25Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit25CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit25Createwhat_was_updatedInput
}

export type Unit25CreateOneWithoutOdontogramInput = {
  create?: Unit25CreateWithoutOdontogramInput
  connect?: Unit25WhereUniqueInput
}

export type Unit26Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit26CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit26Createwhat_was_updatedInput
}

export type Unit26CreateOneWithoutOdontogramInput = {
  create?: Unit26CreateWithoutOdontogramInput
  connect?: Unit26WhereUniqueInput
}

export type Unit27Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit27CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit27Createwhat_was_updatedInput
}

export type Unit27CreateOneWithoutOdontogramInput = {
  create?: Unit27CreateWithoutOdontogramInput
  connect?: Unit27WhereUniqueInput
}

export type Unit28Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit28CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit28Createwhat_was_updatedInput
}

export type Unit28CreateOneWithoutOdontogramInput = {
  create?: Unit28CreateWithoutOdontogramInput
  connect?: Unit28WhereUniqueInput
}

export type Unit31Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit31CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit31Createwhat_was_updatedInput
}

export type Unit31CreateOneWithoutOdontogramInput = {
  create?: Unit31CreateWithoutOdontogramInput
  connect?: Unit31WhereUniqueInput
}

export type Unit32Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit32CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit32Createwhat_was_updatedInput
}

export type Unit32CreateOneWithoutOdontogramInput = {
  create?: Unit32CreateWithoutOdontogramInput
  connect?: Unit32WhereUniqueInput
}

export type Unit33Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit33CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit33Createwhat_was_updatedInput
}

export type Unit33CreateOneWithoutOdontogramInput = {
  create?: Unit33CreateWithoutOdontogramInput
  connect?: Unit33WhereUniqueInput
}

export type Unit34Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit34CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit34Createwhat_was_updatedInput
}

export type Unit34CreateOneWithoutOdontogramInput = {
  create?: Unit34CreateWithoutOdontogramInput
  connect?: Unit34WhereUniqueInput
}

export type Unit35Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit35CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit35Createwhat_was_updatedInput
}

export type Unit35CreateOneWithoutOdontogramInput = {
  create?: Unit35CreateWithoutOdontogramInput
  connect?: Unit35WhereUniqueInput
}

export type Unit36Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit36CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit36Createwhat_was_updatedInput
}

export type Unit36CreateOneWithoutOdontogramInput = {
  create?: Unit36CreateWithoutOdontogramInput
  connect?: Unit36WhereUniqueInput
}

export type Unit37Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit37CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit37Createwhat_was_updatedInput
}

export type Unit37CreateOneWithoutOdontogramInput = {
  create?: Unit37CreateWithoutOdontogramInput
  connect?: Unit37WhereUniqueInput
}

export type Unit38Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit38CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit38Createwhat_was_updatedInput
}

export type Unit38CreateOneWithoutOdontogramInput = {
  create?: Unit38CreateWithoutOdontogramInput
  connect?: Unit38WhereUniqueInput
}

export type Unit41Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit41CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit41Createwhat_was_updatedInput
}

export type Unit41CreateOneWithoutOdontogramInput = {
  create?: Unit41CreateWithoutOdontogramInput
  connect?: Unit41WhereUniqueInput
}

export type Unit42Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit42CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit42Createwhat_was_updatedInput
}

export type Unit42CreateOneWithoutOdontogramInput = {
  create?: Unit42CreateWithoutOdontogramInput
  connect?: Unit42WhereUniqueInput
}

export type Unit43Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit43CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit43Createwhat_was_updatedInput
}

export type Unit43CreateOneWithoutOdontogramInput = {
  create?: Unit43CreateWithoutOdontogramInput
  connect?: Unit43WhereUniqueInput
}

export type Unit44Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit44CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit44Createwhat_was_updatedInput
}

export type Unit44CreateOneWithoutOdontogramInput = {
  create?: Unit44CreateWithoutOdontogramInput
  connect?: Unit44WhereUniqueInput
}

export type Unit45Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit45CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit45Createwhat_was_updatedInput
}

export type Unit45CreateOneWithoutOdontogramInput = {
  create?: Unit45CreateWithoutOdontogramInput
  connect?: Unit45WhereUniqueInput
}

export type Unit46Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit46CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit46Createwhat_was_updatedInput
}

export type Unit46CreateOneWithoutOdontogramInput = {
  create?: Unit46CreateWithoutOdontogramInput
  connect?: Unit46WhereUniqueInput
}

export type Unit47Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit47CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit47Createwhat_was_updatedInput
}

export type Unit47CreateOneWithoutOdontogramInput = {
  create?: Unit47CreateWithoutOdontogramInput
  connect?: Unit47WhereUniqueInput
}

export type Unit48Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit48CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit48Createwhat_was_updatedInput
}

export type Unit48CreateOneWithoutOdontogramInput = {
  create?: Unit48CreateWithoutOdontogramInput
  connect?: Unit48WhereUniqueInput
}

export type Unit51Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit51CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit51Createwhat_was_updatedInput
}

export type Unit51CreateOneWithoutOdontogramInput = {
  create?: Unit51CreateWithoutOdontogramInput
  connect?: Unit51WhereUniqueInput
}

export type Unit52Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit52CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit52Createwhat_was_updatedInput
}

export type Unit52CreateOneWithoutOdontogramInput = {
  create?: Unit52CreateWithoutOdontogramInput
  connect?: Unit52WhereUniqueInput
}

export type Unit53Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit53CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit53Createwhat_was_updatedInput
}

export type Unit53CreateOneWithoutOdontogramInput = {
  create?: Unit53CreateWithoutOdontogramInput
  connect?: Unit53WhereUniqueInput
}

export type Unit54Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit54CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit54Createwhat_was_updatedInput
}

export type Unit54CreateOneWithoutOdontogramInput = {
  create?: Unit54CreateWithoutOdontogramInput
  connect?: Unit54WhereUniqueInput
}

export type Unit55Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit55CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit55Createwhat_was_updatedInput
}

export type Unit55CreateOneWithoutOdontogramInput = {
  create?: Unit55CreateWithoutOdontogramInput
  connect?: Unit55WhereUniqueInput
}

export type Unit61Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit61CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit61Createwhat_was_updatedInput
}

export type Unit61CreateOneWithoutOdontogramInput = {
  create?: Unit61CreateWithoutOdontogramInput
  connect?: Unit61WhereUniqueInput
}

export type Unit62Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit62CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit62Createwhat_was_updatedInput
}

export type Unit62CreateOneWithoutOdontogramInput = {
  create?: Unit62CreateWithoutOdontogramInput
  connect?: Unit62WhereUniqueInput
}

export type Unit63Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit63CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit63Createwhat_was_updatedInput
}

export type Unit63CreateOneWithoutOdontogramInput = {
  create?: Unit63CreateWithoutOdontogramInput
  connect?: Unit63WhereUniqueInput
}

export type Unit64Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit64CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit64Createwhat_was_updatedInput
}

export type Unit64CreateOneWithoutOdontogramInput = {
  create?: Unit64CreateWithoutOdontogramInput
  connect?: Unit64WhereUniqueInput
}

export type Unit65Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit65CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit65Createwhat_was_updatedInput
}

export type Unit65CreateOneWithoutOdontogramInput = {
  create?: Unit65CreateWithoutOdontogramInput
  connect?: Unit65WhereUniqueInput
}

export type Unit71Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit71CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit71Createwhat_was_updatedInput
}

export type Unit71CreateOneWithoutOdontogramInput = {
  create?: Unit71CreateWithoutOdontogramInput
  connect?: Unit71WhereUniqueInput
}

export type Unit72Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit72CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit72Createwhat_was_updatedInput
}

export type Unit72CreateOneWithoutOdontogramInput = {
  create?: Unit72CreateWithoutOdontogramInput
  connect?: Unit72WhereUniqueInput
}

export type Unit73Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit73CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit73Createwhat_was_updatedInput
}

export type Unit73CreateOneWithoutOdontogramInput = {
  create?: Unit73CreateWithoutOdontogramInput
  connect?: Unit73WhereUniqueInput
}

export type Unit74Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit74CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit74Createwhat_was_updatedInput
}

export type Unit74CreateOneWithoutOdontogramInput = {
  create?: Unit74CreateWithoutOdontogramInput
  connect?: Unit74WhereUniqueInput
}

export type Unit75Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit75CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit75Createwhat_was_updatedInput
}

export type Unit75CreateOneWithoutOdontogramInput = {
  create?: Unit75CreateWithoutOdontogramInput
  connect?: Unit75WhereUniqueInput
}

export type Unit81Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit81CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit81Createwhat_was_updatedInput
}

export type Unit81CreateOneWithoutOdontogramInput = {
  create?: Unit81CreateWithoutOdontogramInput
  connect?: Unit81WhereUniqueInput
}

export type Unit82Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit82CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit82Createwhat_was_updatedInput
}

export type Unit82CreateOneWithoutOdontogramInput = {
  create?: Unit82CreateWithoutOdontogramInput
  connect?: Unit82WhereUniqueInput
}

export type Unit83Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit83CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit83Createwhat_was_updatedInput
}

export type Unit83CreateOneWithoutOdontogramInput = {
  create?: Unit83CreateWithoutOdontogramInput
  connect?: Unit83WhereUniqueInput
}

export type Unit84Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit84CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit84Createwhat_was_updatedInput
}

export type Unit84CreateOneWithoutOdontogramInput = {
  create?: Unit84CreateWithoutOdontogramInput
  connect?: Unit84WhereUniqueInput
}

export type Unit85Createwhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit85CreateWithoutOdontogramInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit85Createwhat_was_updatedInput
}

export type Unit85CreateOneWithoutOdontogramInput = {
  create?: Unit85CreateWithoutOdontogramInput
  connect?: Unit85WhereUniqueInput
}

export type OdontogramCreateWithoutPatientInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutPatientInput = {
  create?: OdontogramCreateWithoutPatientInput
  connect?: OdontogramWhereUniqueInput
}

export type Dont_know_questionsCreateWithoutPatientInput = {
  id?: string
  question: string
  questionnaire_id: string
}

export type Dont_know_questionsCreateOneWithoutPatientInput = {
  create?: Dont_know_questionsCreateWithoutPatientInput
  connect?: Dont_know_questionsWhereUniqueInput
}

export type Treatment_evolutionCreatetreatment_procedures_idsInput = {
  set?: Enumerable<string> | null
}

export type Treatment_evolutionCreatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type ScheduleCreateWithoutTreatment_evolutionInput = {
  date: Date | string
  hour: Date | string
  createdAt?: Date | string
  updatedAt?: Date | string
  dentist: DentistCreateOneWithoutSheduleInput
  patient?: PatientCreateOneWithoutScheduleInput | null
}

export type ScheduleCreateOneWithoutTreatment_evolutionInput = {
  create?: ScheduleCreateWithoutTreatment_evolutionInput
  connect?: ScheduleWhereUniqueInput
}

export type Clinic_procedures_particular_valuesCreateWithoutProcedure_CIDInput = {
  cust: number
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type Clinic_procedures_particular_valuesCreateOneWithoutProcedure_CIDInput = {
  create?: Clinic_procedures_particular_valuesCreateWithoutProcedure_CIDInput
  connect?: Clinic_procedures_particular_valuesWhereUniqueInput
}

export type EmailCreateWithoutLegal_responsibleInput = {
  id?: string
  email: string
  clinic?: ClinicCreateOneWithoutEmailsInput | null
  techinical_mananger?: TechnicalmanagerCreateOneWithoutEmailInput | null
  dentist?: DentistCreateOneWithoutEmailInput | null
  patient?: PatientCreateOneWithoutEmailInput | null
  Technicalmanager?: TechnicalmanagerCreateOneWithoutEmailInput | null
  Legalresponsible?: LegalresponsibleCreateOneWithoutEmailInput | null
  Patient?: PatientCreateOneWithoutEmailInput | null
  Dentist?: DentistCreateOneWithoutEmailInput | null
}

export type EmailCreateManyWithoutLegal_responsibleInput = {
  create?: Enumerable<EmailCreateWithoutLegal_responsibleInput>
  connect?: Enumerable<EmailWhereUniqueInput>
}

export type LegalresponsibleCreateWithoutClinicInput = {
  cpf: string
  fullname: string
  contactmeans?: Contact_means | null
  active?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: LegalresponsibleCreatewhat_was_updatedInput
  email?: EmailCreateManyWithoutLegalresponsibleInput | null
  Email?: EmailCreateManyWithoutLegal_responsibleInput | null
}

export type LegalresponsibleCreateOneWithoutClinicInput = {
  create?: LegalresponsibleCreateWithoutClinicInput
  connect?: LegalresponsibleWhereUniqueInput
}

export type LogsCreateWithoutClinicInput = {
  description: string
  createdAt?: Date | string
}

export type LogsCreateManyWithoutClinicInput = {
  create?: Enumerable<LogsCreateWithoutClinicInput>
  connect?: Enumerable<LogsWhereUniqueInput>
}

export type Clinic_payment_informationCreatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Clinic_payment_informationCreateWithoutClinicInput = {
  id?: string
  payment_method: Payment_method
  registered_credit_card: boolean
  registered_debit_card: boolean
  payment_day?: number | null
  next_payment?: Date | string | null
  credit_card_number?: string | null
  credit_card_CCV?: string | null
  credit_card_name?: string | null
  debit_card_number?: string | null
  debit_card_CCV?: string | null
  debit_card_name?: string | null
  delayed_payment?: boolean | null
  delayed_days?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Clinic_payment_informationCreatewhat_was_updatedInput
}

export type Clinic_payment_informationCreateManyWithoutClinicInput = {
  create?: Enumerable<Clinic_payment_informationCreateWithoutClinicInput>
  connect?: Enumerable<Clinic_payment_informationWhereUniqueInput>
}

export type Clinic_finance_optionsCreatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Clinic_finance_optionsCreateWithoutClinicInput = {
  calculation_hour_of_day: number
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Clinic_finance_optionsCreatewhat_was_updatedInput
}

export type Clinic_finance_optionsCreateManyWithoutClinicInput = {
  create?: Enumerable<Clinic_finance_optionsCreateWithoutClinicInput>
  connect?: Enumerable<Clinic_finance_optionsWhereUniqueInput>
}

export type Clinic_finance_monthCreatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Clinic_finance_monthCreateWithoutClinicInput = {
  id?: string
  month: number
  year: number
  wage_payment_day?: number | null
  wages_paid?: boolean | null
  total_wage?: number | null
  dentists_comissions?: number | null
  month_all_profit?: number | null
  month_discounts?: number | null
  month_brute_profit?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Clinic_finance_monthCreatewhat_was_updatedInput
}

export type Clinic_finance_monthCreateManyWithoutClinicInput = {
  create?: Enumerable<Clinic_finance_monthCreateWithoutClinicInput>
  connect?: Enumerable<Clinic_finance_monthWhereUniqueInput>
}

export type Clinic_finance_dayCreatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Clinic_finance_dayCreateWithoutClinicInput = {
  id?: string
  day: number
  month: number
  year: number
  total_income?: number | null
  dentists_part?: number | null
  clinic_income?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Clinic_finance_dayCreatewhat_was_updatedInput
}

export type Clinic_finance_dayCreateManyWithoutClinicInput = {
  create?: Enumerable<Clinic_finance_dayCreateWithoutClinicInput>
  connect?: Enumerable<Clinic_finance_dayWhereUniqueInput>
}

export type ChairsCreatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Chair_finance_dayCreatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Clinic_finance_procedureCreatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type ClinicCreateWithoutDestistsInput = {
  registered_id?: string
  cnpj: string
  socialreason: string
  fantasy_name: string
  multipleclinics?: boolean
  numberofbranches?: number
  dentalchairs?: number | null
  averagepatientsperday?: number | null
  country?: string | null
  state?: string | null
  city?: string | null
  neighborhood?: string | null
  CEP?: string | null
  website?: string | null
  password?: string | null
  ssl_enabled?: boolean | null
  two_factor_autentication?: boolean | null
  access_blocked?: boolean | null
  free_trial?: boolean
  free_trial_days_left?: number
  language?: Language
  createdAt?: Date | string
  updatedAt?: Date | string
  emails?: EmailCreateManyWithoutClinicInput | null
  clinic_phones?: Clinic_phonesCreateManyWithoutClinicInput | null
  patients?: PatientCreateManyWithoutClinicInput | null
  employeers?: EmployeerCreateManyWithoutClinicInput | null
  technicalmanager?: TechnicalmanagerCreateOneWithoutClinicInput | null
  legalresponsible?: LegalresponsibleCreateOneWithoutClinicInput | null
  insuranses?: Dental_insuranceCreateManyWithoutClinicInput | null
  logs?: LogsCreateManyWithoutClinicInput | null
  Clinic_payment_information?: Clinic_payment_informationCreateManyWithoutClinicInput | null
  Clinic_finance_options?: Clinic_finance_optionsCreateManyWithoutClinicInput | null
  Clinic_finance_month?: Clinic_finance_monthCreateManyWithoutClinicInput | null
  Clinic_finance_day?: Clinic_finance_dayCreateManyWithoutClinicInput | null
  Chairs?: ChairsCreateManyWithoutClinicInput | null
  Chair_finance_day?: Chair_finance_dayCreateManyWithoutClinicInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureCreateManyWithoutClinicInput | null
  Patient?: PatientCreateManyWithoutClinicInput | null
  Dentist?: DentistCreateManyWithoutClinicInput | null
}

export type ClinicCreateOneWithoutDestistsInput = {
  create?: ClinicCreateWithoutDestistsInput
  connect?: ClinicWhereUniqueInput
}

export type DentistCreateWithoutPatientsInput = {
  id?: string
  CRO_number: string
  firstname: string
  lastname: string
  username?: string
  password?: string
  contactmeans?: Contact_means | null
  cellphone_number?: string | null
  active?: boolean
  comission?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: string
  shedule: ScheduleCreateOneWithoutDentistInput
  clinic: ClinicCreateOneWithoutDentistInput
  email?: EmailCreateManyWithoutDentistInput | null
  specialization?: Clinic_specializationsCreateManyWithoutDentistInput | null
  ortodontics_treatments?: OrtodonticsCreateManyWithoutProfessionalsInput | null
  implantology_treatments?: ImplantologyCreateManyWithoutProfessionalsInput | null
  Clinic?: ClinicCreateOneWithoutDestistsInput | null
  Email?: EmailCreateManyWithoutDentistInput | null
}

export type DentistCreateManyWithoutPatientsInput = {
  create?: Enumerable<DentistCreateWithoutPatientsInput>
  connect?: Enumerable<DentistWhereUniqueInput>
}

export type ClinicCreateWithoutPatientsInput = {
  registered_id?: string
  cnpj: string
  socialreason: string
  fantasy_name: string
  multipleclinics?: boolean
  numberofbranches?: number
  dentalchairs?: number | null
  averagepatientsperday?: number | null
  country?: string | null
  state?: string | null
  city?: string | null
  neighborhood?: string | null
  CEP?: string | null
  website?: string | null
  password?: string | null
  ssl_enabled?: boolean | null
  two_factor_autentication?: boolean | null
  access_blocked?: boolean | null
  free_trial?: boolean
  free_trial_days_left?: number
  language?: Language
  createdAt?: Date | string
  updatedAt?: Date | string
  emails?: EmailCreateManyWithoutClinicInput | null
  clinic_phones?: Clinic_phonesCreateManyWithoutClinicInput | null
  destists?: DentistCreateManyWithoutClinicInput | null
  employeers?: EmployeerCreateManyWithoutClinicInput | null
  technicalmanager?: TechnicalmanagerCreateOneWithoutClinicInput | null
  legalresponsible?: LegalresponsibleCreateOneWithoutClinicInput | null
  insuranses?: Dental_insuranceCreateManyWithoutClinicInput | null
  logs?: LogsCreateManyWithoutClinicInput | null
  Clinic_payment_information?: Clinic_payment_informationCreateManyWithoutClinicInput | null
  Clinic_finance_options?: Clinic_finance_optionsCreateManyWithoutClinicInput | null
  Clinic_finance_month?: Clinic_finance_monthCreateManyWithoutClinicInput | null
  Clinic_finance_day?: Clinic_finance_dayCreateManyWithoutClinicInput | null
  Chairs?: ChairsCreateManyWithoutClinicInput | null
  Chair_finance_day?: Chair_finance_dayCreateManyWithoutClinicInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureCreateManyWithoutClinicInput | null
  Patient?: PatientCreateManyWithoutClinicInput | null
  Dentist?: DentistCreateManyWithoutClinicInput | null
}

export type ClinicCreateOneWithoutPatientsInput = {
  create?: ClinicCreateWithoutPatientsInput
  connect?: ClinicWhereUniqueInput
}

export type PatientCreateWithoutTreatment_evolutionInput = {
  id?: string
  clinic_prontuary_number: number
  fullname: string
  birth_date: Date | string
  age: number
  gender: Gender
  brazilian_cpf?: string | null
  brazilian_rg?: string | null
  password: string
  cellphone_number?: string | null
  contactmeans?: Contact_means | null
  last_visit_dentist: Date | string
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: string
  what_was_updated?: PatientCreatewhat_was_updatedInput
  clinic: ClinicCreateOneWithoutPatientInput
  schedule?: ScheduleCreateOneWithoutPatientInput | null
  email?: EmailCreateManyWithoutPatientInput | null
  anamnesis?: AnamnesisCreateOneWithoutPatientInput | null
  implantology?: ImplantologyCreateOneWithoutPatientInput | null
  ortodontics?: OrtodonticsCreateOneWithoutPatientInput | null
  odontogram?: OdontogramCreateOneWithoutPatientInput | null
  dont_know?: Dont_know_questionsCreateOneWithoutPatientInput | null
  dentists?: DentistCreateManyWithoutPatientsInput | null
  Clinic?: ClinicCreateOneWithoutPatientsInput | null
  Email?: EmailCreateManyWithoutPatientInput | null
}

export type PatientCreateManyWithoutTreatment_evolutionInput = {
  create?: Enumerable<PatientCreateWithoutTreatment_evolutionInput>
  connect?: Enumerable<PatientWhereUniqueInput>
}

export type Treatment_evolutionCreateWithoutClinic_finance_procedureInput = {
  id?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  treatment_procedures_ids?: Treatment_evolutionCreatetreatment_procedures_idsInput
  what_was_updated?: Treatment_evolutionCreatewhat_was_updatedInput
  shedule: ScheduleCreateOneWithoutTreatment_evolutionInput
  treatment?: ProceduresCreateManyWithoutTreatment_evolutionInput | null
  Patient?: PatientCreateManyWithoutTreatment_evolutionInput | null
}

export type Treatment_evolutionCreateOneWithoutClinic_finance_procedureInput = {
  create?: Treatment_evolutionCreateWithoutClinic_finance_procedureInput
  connect?: Treatment_evolutionWhereUniqueInput
}

export type Clinic_finance_procedureCreateWithoutClinicInput = {
  id?: string
  payment_status: Payment_status
  client_payment_type: Payment_method
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Clinic_finance_procedureCreatewhat_was_updatedInput
  treatment: Treatment_evolutionCreateOneWithoutClinic_finance_procedureInput
}

export type Clinic_finance_procedureCreateManyWithoutClinicInput = {
  create?: Enumerable<Clinic_finance_procedureCreateWithoutClinicInput>
  connect?: Enumerable<Clinic_finance_procedureWhereUniqueInput>
}

export type ClinicCreateWithoutChairsInput = {
  registered_id?: string
  cnpj: string
  socialreason: string
  fantasy_name: string
  multipleclinics?: boolean
  numberofbranches?: number
  dentalchairs?: number | null
  averagepatientsperday?: number | null
  country?: string | null
  state?: string | null
  city?: string | null
  neighborhood?: string | null
  CEP?: string | null
  website?: string | null
  password?: string | null
  ssl_enabled?: boolean | null
  two_factor_autentication?: boolean | null
  access_blocked?: boolean | null
  free_trial?: boolean
  free_trial_days_left?: number
  language?: Language
  createdAt?: Date | string
  updatedAt?: Date | string
  emails?: EmailCreateManyWithoutClinicInput | null
  clinic_phones?: Clinic_phonesCreateManyWithoutClinicInput | null
  patients?: PatientCreateManyWithoutClinicInput | null
  destists?: DentistCreateManyWithoutClinicInput | null
  employeers?: EmployeerCreateManyWithoutClinicInput | null
  technicalmanager?: TechnicalmanagerCreateOneWithoutClinicInput | null
  legalresponsible?: LegalresponsibleCreateOneWithoutClinicInput | null
  insuranses?: Dental_insuranceCreateManyWithoutClinicInput | null
  logs?: LogsCreateManyWithoutClinicInput | null
  Clinic_payment_information?: Clinic_payment_informationCreateManyWithoutClinicInput | null
  Clinic_finance_options?: Clinic_finance_optionsCreateManyWithoutClinicInput | null
  Clinic_finance_month?: Clinic_finance_monthCreateManyWithoutClinicInput | null
  Clinic_finance_day?: Clinic_finance_dayCreateManyWithoutClinicInput | null
  Chair_finance_day?: Chair_finance_dayCreateManyWithoutClinicInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureCreateManyWithoutClinicInput | null
  Patient?: PatientCreateManyWithoutClinicInput | null
  Dentist?: DentistCreateManyWithoutClinicInput | null
}

export type ClinicCreateOneWithoutChairsInput = {
  create?: ClinicCreateWithoutChairsInput
  connect?: ClinicWhereUniqueInput
}

export type ChairsCreateWithoutChair_finance_dayInput = {
  id?: string
  name: string
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: ChairsCreatewhat_was_updatedInput
  clinic: ClinicCreateOneWithoutChairsInput
}

export type ChairsCreateOneWithoutChair_finance_dayInput = {
  create?: ChairsCreateWithoutChair_finance_dayInput
  connect?: ChairsWhereUniqueInput
}

export type Chair_finance_dayCreateWithoutClinicInput = {
  day: number
  month: number
  year: number
  total_income?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Chair_finance_dayCreatewhat_was_updatedInput
  chair: ChairsCreateOneWithoutChair_finance_dayInput
}

export type Chair_finance_dayCreateManyWithoutClinicInput = {
  create?: Enumerable<Chair_finance_dayCreateWithoutClinicInput>
  connect?: Enumerable<Chair_finance_dayWhereUniqueInput>
}

export type ClinicCreateWithoutClinic_finance_procedureInput = {
  registered_id?: string
  cnpj: string
  socialreason: string
  fantasy_name: string
  multipleclinics?: boolean
  numberofbranches?: number
  dentalchairs?: number | null
  averagepatientsperday?: number | null
  country?: string | null
  state?: string | null
  city?: string | null
  neighborhood?: string | null
  CEP?: string | null
  website?: string | null
  password?: string | null
  ssl_enabled?: boolean | null
  two_factor_autentication?: boolean | null
  access_blocked?: boolean | null
  free_trial?: boolean
  free_trial_days_left?: number
  language?: Language
  createdAt?: Date | string
  updatedAt?: Date | string
  emails?: EmailCreateManyWithoutClinicInput | null
  clinic_phones?: Clinic_phonesCreateManyWithoutClinicInput | null
  patients?: PatientCreateManyWithoutClinicInput | null
  destists?: DentistCreateManyWithoutClinicInput | null
  employeers?: EmployeerCreateManyWithoutClinicInput | null
  technicalmanager?: TechnicalmanagerCreateOneWithoutClinicInput | null
  legalresponsible?: LegalresponsibleCreateOneWithoutClinicInput | null
  insuranses?: Dental_insuranceCreateManyWithoutClinicInput | null
  logs?: LogsCreateManyWithoutClinicInput | null
  Clinic_payment_information?: Clinic_payment_informationCreateManyWithoutClinicInput | null
  Clinic_finance_options?: Clinic_finance_optionsCreateManyWithoutClinicInput | null
  Clinic_finance_month?: Clinic_finance_monthCreateManyWithoutClinicInput | null
  Clinic_finance_day?: Clinic_finance_dayCreateManyWithoutClinicInput | null
  Chairs?: ChairsCreateManyWithoutClinicInput | null
  Chair_finance_day?: Chair_finance_dayCreateManyWithoutClinicInput | null
  Patient?: PatientCreateManyWithoutClinicInput | null
  Dentist?: DentistCreateManyWithoutClinicInput | null
}

export type ClinicCreateOneWithoutClinic_finance_procedureInput = {
  create?: ClinicCreateWithoutClinic_finance_procedureInput
  connect?: ClinicWhereUniqueInput
}

export type Clinic_finance_procedureCreateWithoutTreatmentInput = {
  id?: string
  payment_status: Payment_status
  client_payment_type: Payment_method
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Clinic_finance_procedureCreatewhat_was_updatedInput
  clinic: ClinicCreateOneWithoutClinic_finance_procedureInput
}

export type Clinic_finance_procedureCreateManyWithoutTreatmentInput = {
  create?: Enumerable<Clinic_finance_procedureCreateWithoutTreatmentInput>
  connect?: Enumerable<Clinic_finance_procedureWhereUniqueInput>
}

export type Treatment_evolutionCreateWithoutTreatmentInput = {
  id?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  treatment_procedures_ids?: Treatment_evolutionCreatetreatment_procedures_idsInput
  what_was_updated?: Treatment_evolutionCreatewhat_was_updatedInput
  shedule: ScheduleCreateOneWithoutTreatment_evolutionInput
  Clinic_finance_procedure?: Clinic_finance_procedureCreateManyWithoutTreatmentInput | null
  Patient?: PatientCreateManyWithoutTreatment_evolutionInput | null
}

export type Treatment_evolutionCreateManyWithoutTreatmentInput = {
  create?: Enumerable<Treatment_evolutionCreateWithoutTreatmentInput>
  connect?: Enumerable<Treatment_evolutionWhereUniqueInput>
}

export type ProceduresCreateWithoutInsurance_procedures_valuesInput = {
  codigo_CID: string
  name: string
  createdAt?: Date | string
  updatedAt?: Date | string
  treatment_evolution?: Treatment_evolutionCreateManyWithoutTreatmentInput | null
  particular_procedures_values: Clinic_procedures_particular_valuesCreateOneWithoutProcedure_CIDInput
}

export type ProceduresCreateOneWithoutInsurance_procedures_valuesInput = {
  create?: ProceduresCreateWithoutInsurance_procedures_valuesInput
  connect?: ProceduresWhereUniqueInput
}

export type Clinic_procedures_insurance_valuesCreateWithoutInsuranceInput = {
  cust: number
  createdAt?: Date | string
  updatedAt?: Date | string
  procedure_CID: ProceduresCreateOneWithoutInsurance_procedures_valuesInput
}

export type Clinic_procedures_insurance_valuesCreateOneWithoutInsuranceInput = {
  create?: Clinic_procedures_insurance_valuesCreateWithoutInsuranceInput
  connect?: Clinic_procedures_insurance_valuesWhereUniqueInput
}

export type Dental_insuranceCreateWithoutClinicInput = {
  id?: string
  name: string
  compensation_date?: number | null
  compensation_value?: number | null
  active?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  procedures_values: Clinic_procedures_insurance_valuesCreateOneWithoutInsuranceInput
}

export type Dental_insuranceCreateManyWithoutClinicInput = {
  create?: Enumerable<Dental_insuranceCreateWithoutClinicInput>
  connect?: Enumerable<Dental_insuranceWhereUniqueInput>
}

export type ClinicCreateWithoutChair_finance_dayInput = {
  registered_id?: string
  cnpj: string
  socialreason: string
  fantasy_name: string
  multipleclinics?: boolean
  numberofbranches?: number
  dentalchairs?: number | null
  averagepatientsperday?: number | null
  country?: string | null
  state?: string | null
  city?: string | null
  neighborhood?: string | null
  CEP?: string | null
  website?: string | null
  password?: string | null
  ssl_enabled?: boolean | null
  two_factor_autentication?: boolean | null
  access_blocked?: boolean | null
  free_trial?: boolean
  free_trial_days_left?: number
  language?: Language
  createdAt?: Date | string
  updatedAt?: Date | string
  emails?: EmailCreateManyWithoutClinicInput | null
  clinic_phones?: Clinic_phonesCreateManyWithoutClinicInput | null
  patients?: PatientCreateManyWithoutClinicInput | null
  destists?: DentistCreateManyWithoutClinicInput | null
  employeers?: EmployeerCreateManyWithoutClinicInput | null
  technicalmanager?: TechnicalmanagerCreateOneWithoutClinicInput | null
  legalresponsible?: LegalresponsibleCreateOneWithoutClinicInput | null
  insuranses?: Dental_insuranceCreateManyWithoutClinicInput | null
  logs?: LogsCreateManyWithoutClinicInput | null
  Clinic_payment_information?: Clinic_payment_informationCreateManyWithoutClinicInput | null
  Clinic_finance_options?: Clinic_finance_optionsCreateManyWithoutClinicInput | null
  Clinic_finance_month?: Clinic_finance_monthCreateManyWithoutClinicInput | null
  Clinic_finance_day?: Clinic_finance_dayCreateManyWithoutClinicInput | null
  Chairs?: ChairsCreateManyWithoutClinicInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureCreateManyWithoutClinicInput | null
  Patient?: PatientCreateManyWithoutClinicInput | null
  Dentist?: DentistCreateManyWithoutClinicInput | null
}

export type ClinicCreateOneWithoutChair_finance_dayInput = {
  create?: ClinicCreateWithoutChair_finance_dayInput
  connect?: ClinicWhereUniqueInput
}

export type Chair_finance_dayCreateWithoutChairInput = {
  day: number
  month: number
  year: number
  total_income?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Chair_finance_dayCreatewhat_was_updatedInput
  clinic: ClinicCreateOneWithoutChair_finance_dayInput
}

export type Chair_finance_dayCreateManyWithoutChairInput = {
  create?: Enumerable<Chair_finance_dayCreateWithoutChairInput>
  connect?: Enumerable<Chair_finance_dayWhereUniqueInput>
}

export type ChairsCreateWithoutClinicInput = {
  id?: string
  name: string
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: ChairsCreatewhat_was_updatedInput
  Chair_finance_day?: Chair_finance_dayCreateManyWithoutChairInput | null
}

export type ChairsCreateManyWithoutClinicInput = {
  create?: Enumerable<ChairsCreateWithoutClinicInput>
  connect?: Enumerable<ChairsWhereUniqueInput>
}

export type ClinicCreateWithoutInsuransesInput = {
  registered_id?: string
  cnpj: string
  socialreason: string
  fantasy_name: string
  multipleclinics?: boolean
  numberofbranches?: number
  dentalchairs?: number | null
  averagepatientsperday?: number | null
  country?: string | null
  state?: string | null
  city?: string | null
  neighborhood?: string | null
  CEP?: string | null
  website?: string | null
  password?: string | null
  ssl_enabled?: boolean | null
  two_factor_autentication?: boolean | null
  access_blocked?: boolean | null
  free_trial?: boolean
  free_trial_days_left?: number
  language?: Language
  createdAt?: Date | string
  updatedAt?: Date | string
  emails?: EmailCreateManyWithoutClinicInput | null
  clinic_phones?: Clinic_phonesCreateManyWithoutClinicInput | null
  patients?: PatientCreateManyWithoutClinicInput | null
  destists?: DentistCreateManyWithoutClinicInput | null
  employeers?: EmployeerCreateManyWithoutClinicInput | null
  technicalmanager?: TechnicalmanagerCreateOneWithoutClinicInput | null
  legalresponsible?: LegalresponsibleCreateOneWithoutClinicInput | null
  logs?: LogsCreateManyWithoutClinicInput | null
  Clinic_payment_information?: Clinic_payment_informationCreateManyWithoutClinicInput | null
  Clinic_finance_options?: Clinic_finance_optionsCreateManyWithoutClinicInput | null
  Clinic_finance_month?: Clinic_finance_monthCreateManyWithoutClinicInput | null
  Clinic_finance_day?: Clinic_finance_dayCreateManyWithoutClinicInput | null
  Chairs?: ChairsCreateManyWithoutClinicInput | null
  Chair_finance_day?: Chair_finance_dayCreateManyWithoutClinicInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureCreateManyWithoutClinicInput | null
  Patient?: PatientCreateManyWithoutClinicInput | null
  Dentist?: DentistCreateManyWithoutClinicInput | null
}

export type ClinicCreateManyWithoutInsuransesInput = {
  create?: Enumerable<ClinicCreateWithoutInsuransesInput>
  connect?: Enumerable<ClinicWhereUniqueInput>
}

export type Dental_insuranceCreateWithoutProcedures_valuesInput = {
  id?: string
  name: string
  compensation_date?: number | null
  compensation_value?: number | null
  active?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  clinic?: ClinicCreateManyWithoutInsuransesInput | null
}

export type Dental_insuranceCreateOneWithoutProcedures_valuesInput = {
  create?: Dental_insuranceCreateWithoutProcedures_valuesInput
  connect?: Dental_insuranceWhereUniqueInput
}

export type Clinic_procedures_insurance_valuesCreateWithoutProcedure_CIDInput = {
  cust: number
  createdAt?: Date | string
  updatedAt?: Date | string
  insurance: Dental_insuranceCreateOneWithoutProcedures_valuesInput
}

export type Clinic_procedures_insurance_valuesCreateManyWithoutProcedure_CIDInput = {
  create?: Enumerable<Clinic_procedures_insurance_valuesCreateWithoutProcedure_CIDInput>
  connect?: Enumerable<Clinic_procedures_insurance_valuesWhereUniqueInput>
}

export type ProceduresCreateWithoutTreatment_evolutionInput = {
  codigo_CID: string
  name: string
  createdAt?: Date | string
  updatedAt?: Date | string
  particular_procedures_values: Clinic_procedures_particular_valuesCreateOneWithoutProcedure_CIDInput
  insurance_procedures_values?: Clinic_procedures_insurance_valuesCreateManyWithoutProcedure_CIDInput | null
}

export type ProceduresCreateManyWithoutTreatment_evolutionInput = {
  create?: Enumerable<ProceduresCreateWithoutTreatment_evolutionInput>
  connect?: Enumerable<ProceduresWhereUniqueInput>
}

export type Treatment_evolutionCreateWithoutPatientInput = {
  id?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  treatment_procedures_ids?: Treatment_evolutionCreatetreatment_procedures_idsInput
  what_was_updated?: Treatment_evolutionCreatewhat_was_updatedInput
  shedule: ScheduleCreateOneWithoutTreatment_evolutionInput
  treatment?: ProceduresCreateManyWithoutTreatment_evolutionInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureCreateManyWithoutTreatmentInput | null
}

export type Treatment_evolutionCreateOneWithoutPatientInput = {
  create?: Treatment_evolutionCreateWithoutPatientInput
  connect?: Treatment_evolutionWhereUniqueInput
}

export type PatientCreateWithoutImplantologyInput = {
  id?: string
  clinic_prontuary_number: number
  fullname: string
  birth_date: Date | string
  age: number
  gender: Gender
  brazilian_cpf?: string | null
  brazilian_rg?: string | null
  password: string
  cellphone_number?: string | null
  contactmeans?: Contact_means | null
  last_visit_dentist: Date | string
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: string
  what_was_updated?: PatientCreatewhat_was_updatedInput
  clinic: ClinicCreateOneWithoutPatientInput
  schedule?: ScheduleCreateOneWithoutPatientInput | null
  email?: EmailCreateManyWithoutPatientInput | null
  anamnesis?: AnamnesisCreateOneWithoutPatientInput | null
  ortodontics?: OrtodonticsCreateOneWithoutPatientInput | null
  odontogram?: OdontogramCreateOneWithoutPatientInput | null
  dont_know?: Dont_know_questionsCreateOneWithoutPatientInput | null
  treatment_evolution?: Treatment_evolutionCreateOneWithoutPatientInput | null
  dentists?: DentistCreateManyWithoutPatientsInput | null
  Clinic?: ClinicCreateOneWithoutPatientsInput | null
  Email?: EmailCreateManyWithoutPatientInput | null
}

export type PatientCreateOneWithoutImplantologyInput = {
  create?: PatientCreateWithoutImplantologyInput
  connect?: PatientWhereUniqueInput
}

export type ImplantologyCreateWithoutProfessionalsInput = {
  id?: string
  implant_type: Implant_types
  if_type_multiple_instaled_implants_number?: number | null
  next_review_consult: Date | string
  notes?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  professional_ids?: ImplantologyCreateprofessional_idsInput
  if_type_unitary_dental_units_reabilited?: ImplantologyCreateif_type_unitary_dental_units_reabilitedInput
  if_type_multiple_dental_units_reabilited?: ImplantologyCreateif_type_multiple_dental_units_reabilitedInput
  what_was_updated?: ImplantologyCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutImplantologyInput
  implantology_questionnaire: Implantology_questionnaireCreateOneWithoutImplantology_questionnaireInput
}

export type ImplantologyCreateManyWithoutProfessionalsInput = {
  create?: Enumerable<ImplantologyCreateWithoutProfessionalsInput>
  connect?: Enumerable<ImplantologyWhereUniqueInput>
}

export type DentistCreateWithoutOrtodontics_treatmentsInput = {
  id?: string
  CRO_number: string
  firstname: string
  lastname: string
  username?: string
  password?: string
  contactmeans?: Contact_means | null
  cellphone_number?: string | null
  active?: boolean
  comission?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: string
  shedule: ScheduleCreateOneWithoutDentistInput
  clinic: ClinicCreateOneWithoutDentistInput
  email?: EmailCreateManyWithoutDentistInput | null
  specialization?: Clinic_specializationsCreateManyWithoutDentistInput | null
  implantology_treatments?: ImplantologyCreateManyWithoutProfessionalsInput | null
  patients?: PatientCreateManyWithoutDentistsInput | null
  Clinic?: ClinicCreateOneWithoutDestistsInput | null
  Email?: EmailCreateManyWithoutDentistInput | null
}

export type DentistCreateManyWithoutOrtodontics_treatmentsInput = {
  create?: Enumerable<DentistCreateWithoutOrtodontics_treatmentsInput>
  connect?: Enumerable<DentistWhereUniqueInput>
}

export type OrtodonticsCreateWithoutPatientInput = {
  id?: string
  face_profile?: string | null
  face_simetrics?: string | null
  bite?: string | null
  class?: string | null
  ideal_occlusion?: yes_no | null
  if_no_whats_wrong_in_oclusion?: string | null
  spee?: string | null
  overbite?: string | null
  overjet?: string | null
  prevision_of_end?: string | null
  ortodontics_treatment_type?: Ortodontic_treatment_type | null
  notes?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  professional_ids?: OrtodonticsCreateprofessional_idsInput
  what_was_updated?: OrtodonticsCreatewhat_was_updatedInput
  ortodontic_questionnaire: Ortodontics_questionnaireCreateOneWithoutOrtodontic_prontuaryInput
  TMJ_questionnaire: TMJ_problems_questionnaireCreateOneWithoutOrtodontic_prontuaryInput
  professionals?: DentistCreateManyWithoutOrtodontics_treatmentsInput | null
}

export type OrtodonticsCreateOneWithoutPatientInput = {
  create?: OrtodonticsCreateWithoutPatientInput
  connect?: OrtodonticsWhereUniqueInput
}

export type PatientCreateWithoutDentistsInput = {
  id?: string
  clinic_prontuary_number: number
  fullname: string
  birth_date: Date | string
  age: number
  gender: Gender
  brazilian_cpf?: string | null
  brazilian_rg?: string | null
  password: string
  cellphone_number?: string | null
  contactmeans?: Contact_means | null
  last_visit_dentist: Date | string
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: string
  what_was_updated?: PatientCreatewhat_was_updatedInput
  clinic: ClinicCreateOneWithoutPatientInput
  schedule?: ScheduleCreateOneWithoutPatientInput | null
  email?: EmailCreateManyWithoutPatientInput | null
  anamnesis?: AnamnesisCreateOneWithoutPatientInput | null
  implantology?: ImplantologyCreateOneWithoutPatientInput | null
  ortodontics?: OrtodonticsCreateOneWithoutPatientInput | null
  odontogram?: OdontogramCreateOneWithoutPatientInput | null
  dont_know?: Dont_know_questionsCreateOneWithoutPatientInput | null
  treatment_evolution?: Treatment_evolutionCreateOneWithoutPatientInput | null
  Clinic?: ClinicCreateOneWithoutPatientsInput | null
  Email?: EmailCreateManyWithoutPatientInput | null
}

export type PatientCreateManyWithoutDentistsInput = {
  create?: Enumerable<PatientCreateWithoutDentistsInput>
  connect?: Enumerable<PatientWhereUniqueInput>
}

export type DentistCreateWithoutImplantology_treatmentsInput = {
  id?: string
  CRO_number: string
  firstname: string
  lastname: string
  username?: string
  password?: string
  contactmeans?: Contact_means | null
  cellphone_number?: string | null
  active?: boolean
  comission?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: string
  shedule: ScheduleCreateOneWithoutDentistInput
  clinic: ClinicCreateOneWithoutDentistInput
  email?: EmailCreateManyWithoutDentistInput | null
  specialization?: Clinic_specializationsCreateManyWithoutDentistInput | null
  ortodontics_treatments?: OrtodonticsCreateManyWithoutProfessionalsInput | null
  patients?: PatientCreateManyWithoutDentistsInput | null
  Clinic?: ClinicCreateOneWithoutDestistsInput | null
  Email?: EmailCreateManyWithoutDentistInput | null
}

export type DentistCreateManyWithoutImplantology_treatmentsInput = {
  create?: Enumerable<DentistCreateWithoutImplantology_treatmentsInput>
  connect?: Enumerable<DentistWhereUniqueInput>
}

export type ImplantologyCreateWithoutPatientInput = {
  id?: string
  implant_type: Implant_types
  if_type_multiple_instaled_implants_number?: number | null
  next_review_consult: Date | string
  notes?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  professional_ids?: ImplantologyCreateprofessional_idsInput
  if_type_unitary_dental_units_reabilited?: ImplantologyCreateif_type_unitary_dental_units_reabilitedInput
  if_type_multiple_dental_units_reabilited?: ImplantologyCreateif_type_multiple_dental_units_reabilitedInput
  what_was_updated?: ImplantologyCreatewhat_was_updatedInput
  implantology_questionnaire: Implantology_questionnaireCreateOneWithoutImplantology_questionnaireInput
  professionals?: DentistCreateManyWithoutImplantology_treatmentsInput | null
}

export type ImplantologyCreateOneWithoutPatientInput = {
  create?: ImplantologyCreateWithoutPatientInput
  connect?: ImplantologyWhereUniqueInput
}

export type PatientCreateWithoutOrtodonticsInput = {
  id?: string
  clinic_prontuary_number: number
  fullname: string
  birth_date: Date | string
  age: number
  gender: Gender
  brazilian_cpf?: string | null
  brazilian_rg?: string | null
  password: string
  cellphone_number?: string | null
  contactmeans?: Contact_means | null
  last_visit_dentist: Date | string
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: string
  what_was_updated?: PatientCreatewhat_was_updatedInput
  clinic: ClinicCreateOneWithoutPatientInput
  schedule?: ScheduleCreateOneWithoutPatientInput | null
  email?: EmailCreateManyWithoutPatientInput | null
  anamnesis?: AnamnesisCreateOneWithoutPatientInput | null
  implantology?: ImplantologyCreateOneWithoutPatientInput | null
  odontogram?: OdontogramCreateOneWithoutPatientInput | null
  dont_know?: Dont_know_questionsCreateOneWithoutPatientInput | null
  treatment_evolution?: Treatment_evolutionCreateOneWithoutPatientInput | null
  dentists?: DentistCreateManyWithoutPatientsInput | null
  Clinic?: ClinicCreateOneWithoutPatientsInput | null
  Email?: EmailCreateManyWithoutPatientInput | null
}

export type PatientCreateOneWithoutOrtodonticsInput = {
  create?: PatientCreateWithoutOrtodonticsInput
  connect?: PatientWhereUniqueInput
}

export type OrtodonticsCreateWithoutProfessionalsInput = {
  id?: string
  face_profile?: string | null
  face_simetrics?: string | null
  bite?: string | null
  class?: string | null
  ideal_occlusion?: yes_no | null
  if_no_whats_wrong_in_oclusion?: string | null
  spee?: string | null
  overbite?: string | null
  overjet?: string | null
  prevision_of_end?: string | null
  ortodontics_treatment_type?: Ortodontic_treatment_type | null
  notes?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  professional_ids?: OrtodonticsCreateprofessional_idsInput
  what_was_updated?: OrtodonticsCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOrtodonticsInput
  ortodontic_questionnaire: Ortodontics_questionnaireCreateOneWithoutOrtodontic_prontuaryInput
  TMJ_questionnaire: TMJ_problems_questionnaireCreateOneWithoutOrtodontic_prontuaryInput
}

export type OrtodonticsCreateManyWithoutProfessionalsInput = {
  create?: Enumerable<OrtodonticsCreateWithoutProfessionalsInput>
  connect?: Enumerable<OrtodonticsWhereUniqueInput>
}

export type DentistCreateWithoutSheduleInput = {
  id?: string
  CRO_number: string
  firstname: string
  lastname: string
  username?: string
  password?: string
  contactmeans?: Contact_means | null
  cellphone_number?: string | null
  active?: boolean
  comission?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: string
  clinic: ClinicCreateOneWithoutDentistInput
  email?: EmailCreateManyWithoutDentistInput | null
  specialization?: Clinic_specializationsCreateManyWithoutDentistInput | null
  ortodontics_treatments?: OrtodonticsCreateManyWithoutProfessionalsInput | null
  implantology_treatments?: ImplantologyCreateManyWithoutProfessionalsInput | null
  patients?: PatientCreateManyWithoutDentistsInput | null
  Clinic?: ClinicCreateOneWithoutDestistsInput | null
  Email?: EmailCreateManyWithoutDentistInput | null
}

export type DentistCreateOneWithoutSheduleInput = {
  create?: DentistCreateWithoutSheduleInput
  connect?: DentistWhereUniqueInput
}

export type Treatment_evolutionCreateWithoutSheduleInput = {
  id?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  treatment_procedures_ids?: Treatment_evolutionCreatetreatment_procedures_idsInput
  what_was_updated?: Treatment_evolutionCreatewhat_was_updatedInput
  treatment?: ProceduresCreateManyWithoutTreatment_evolutionInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureCreateManyWithoutTreatmentInput | null
  Patient?: PatientCreateManyWithoutTreatment_evolutionInput | null
}

export type Treatment_evolutionCreateOneWithoutSheduleInput = {
  create?: Treatment_evolutionCreateWithoutSheduleInput
  connect?: Treatment_evolutionWhereUniqueInput
}

export type ScheduleCreateWithoutPatientInput = {
  date: Date | string
  hour: Date | string
  createdAt?: Date | string
  updatedAt?: Date | string
  dentist: DentistCreateOneWithoutSheduleInput
  treatment_evolution: Treatment_evolutionCreateOneWithoutSheduleInput
}

export type ScheduleCreateOneWithoutPatientInput = {
  create?: ScheduleCreateWithoutPatientInput
  connect?: ScheduleWhereUniqueInput
}

export type PatientCreateWithoutEmailInput = {
  id?: string
  clinic_prontuary_number: number
  fullname: string
  birth_date: Date | string
  age: number
  gender: Gender
  brazilian_cpf?: string | null
  brazilian_rg?: string | null
  password: string
  cellphone_number?: string | null
  contactmeans?: Contact_means | null
  last_visit_dentist: Date | string
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: string
  what_was_updated?: PatientCreatewhat_was_updatedInput
  clinic: ClinicCreateOneWithoutPatientInput
  schedule?: ScheduleCreateOneWithoutPatientInput | null
  email?: EmailCreateManyWithoutPatientInput | null
  anamnesis?: AnamnesisCreateOneWithoutPatientInput | null
  implantology?: ImplantologyCreateOneWithoutPatientInput | null
  ortodontics?: OrtodonticsCreateOneWithoutPatientInput | null
  odontogram?: OdontogramCreateOneWithoutPatientInput | null
  dont_know?: Dont_know_questionsCreateOneWithoutPatientInput | null
  treatment_evolution?: Treatment_evolutionCreateOneWithoutPatientInput | null
  dentists?: DentistCreateManyWithoutPatientsInput | null
  Clinic?: ClinicCreateOneWithoutPatientsInput | null
}

export type PatientCreateOneWithoutEmailInput = {
  create?: PatientCreateWithoutEmailInput
  connect?: PatientWhereUniqueInput
}

export type EmailCreateWithoutTechinical_manangerInput = {
  id?: string
  email: string
  clinic?: ClinicCreateOneWithoutEmailsInput | null
  legal_responsible?: LegalresponsibleCreateOneWithoutEmailInput | null
  dentist?: DentistCreateOneWithoutEmailInput | null
  patient?: PatientCreateOneWithoutEmailInput | null
  Technicalmanager?: TechnicalmanagerCreateOneWithoutEmailInput | null
  Legalresponsible?: LegalresponsibleCreateOneWithoutEmailInput | null
  Patient?: PatientCreateOneWithoutEmailInput | null
  Dentist?: DentistCreateOneWithoutEmailInput | null
}

export type EmailCreateManyWithoutTechinical_manangerInput = {
  create?: Enumerable<EmailCreateWithoutTechinical_manangerInput>
  connect?: Enumerable<EmailWhereUniqueInput>
}

export type TechnicalmanagerCreateWithoutClinicInput = {
  cpf: string
  fullname: string
  contactmeans: Contact_means
  active?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: TechnicalmanagerCreatewhat_was_updatedInput
  email?: EmailCreateManyWithoutTechnicalmanagerInput | null
  Email?: EmailCreateManyWithoutTechinical_manangerInput | null
}

export type TechnicalmanagerCreateOneWithoutClinicInput = {
  create?: TechnicalmanagerCreateWithoutClinicInput
  connect?: TechnicalmanagerWhereUniqueInput
}

export type ClinicCreateWithoutDentistInput = {
  registered_id?: string
  cnpj: string
  socialreason: string
  fantasy_name: string
  multipleclinics?: boolean
  numberofbranches?: number
  dentalchairs?: number | null
  averagepatientsperday?: number | null
  country?: string | null
  state?: string | null
  city?: string | null
  neighborhood?: string | null
  CEP?: string | null
  website?: string | null
  password?: string | null
  ssl_enabled?: boolean | null
  two_factor_autentication?: boolean | null
  access_blocked?: boolean | null
  free_trial?: boolean
  free_trial_days_left?: number
  language?: Language
  createdAt?: Date | string
  updatedAt?: Date | string
  emails?: EmailCreateManyWithoutClinicInput | null
  clinic_phones?: Clinic_phonesCreateManyWithoutClinicInput | null
  patients?: PatientCreateManyWithoutClinicInput | null
  destists?: DentistCreateManyWithoutClinicInput | null
  employeers?: EmployeerCreateManyWithoutClinicInput | null
  technicalmanager?: TechnicalmanagerCreateOneWithoutClinicInput | null
  legalresponsible?: LegalresponsibleCreateOneWithoutClinicInput | null
  insuranses?: Dental_insuranceCreateManyWithoutClinicInput | null
  logs?: LogsCreateManyWithoutClinicInput | null
  Clinic_payment_information?: Clinic_payment_informationCreateManyWithoutClinicInput | null
  Clinic_finance_options?: Clinic_finance_optionsCreateManyWithoutClinicInput | null
  Clinic_finance_month?: Clinic_finance_monthCreateManyWithoutClinicInput | null
  Clinic_finance_day?: Clinic_finance_dayCreateManyWithoutClinicInput | null
  Chairs?: ChairsCreateManyWithoutClinicInput | null
  Chair_finance_day?: Chair_finance_dayCreateManyWithoutClinicInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureCreateManyWithoutClinicInput | null
  Patient?: PatientCreateManyWithoutClinicInput | null
}

export type ClinicCreateOneWithoutDentistInput = {
  create?: ClinicCreateWithoutDentistInput
  connect?: ClinicWhereUniqueInput
}

export type DentistCreateWithoutEmailInput = {
  id?: string
  CRO_number: string
  firstname: string
  lastname: string
  username?: string
  password?: string
  contactmeans?: Contact_means | null
  cellphone_number?: string | null
  active?: boolean
  comission?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: string
  shedule: ScheduleCreateOneWithoutDentistInput
  clinic: ClinicCreateOneWithoutDentistInput
  email?: EmailCreateManyWithoutDentistInput | null
  specialization?: Clinic_specializationsCreateManyWithoutDentistInput | null
  ortodontics_treatments?: OrtodonticsCreateManyWithoutProfessionalsInput | null
  implantology_treatments?: ImplantologyCreateManyWithoutProfessionalsInput | null
  patients?: PatientCreateManyWithoutDentistsInput | null
  Clinic?: ClinicCreateOneWithoutDestistsInput | null
}

export type DentistCreateOneWithoutEmailInput = {
  create?: DentistCreateWithoutEmailInput
  connect?: DentistWhereUniqueInput
}

export type EmailCreateWithoutLegalresponsibleInput = {
  id?: string
  email: string
  clinic?: ClinicCreateOneWithoutEmailsInput | null
  techinical_mananger?: TechnicalmanagerCreateOneWithoutEmailInput | null
  legal_responsible?: LegalresponsibleCreateOneWithoutEmailInput | null
  dentist?: DentistCreateOneWithoutEmailInput | null
  patient?: PatientCreateOneWithoutEmailInput | null
  Technicalmanager?: TechnicalmanagerCreateOneWithoutEmailInput | null
  Patient?: PatientCreateOneWithoutEmailInput | null
  Dentist?: DentistCreateOneWithoutEmailInput | null
}

export type EmailCreateManyWithoutLegalresponsibleInput = {
  create?: Enumerable<EmailCreateWithoutLegalresponsibleInput>
  connect?: Enumerable<EmailWhereUniqueInput>
}

export type ClinicCreateWithoutLegalresponsibleInput = {
  registered_id?: string
  cnpj: string
  socialreason: string
  fantasy_name: string
  multipleclinics?: boolean
  numberofbranches?: number
  dentalchairs?: number | null
  averagepatientsperday?: number | null
  country?: string | null
  state?: string | null
  city?: string | null
  neighborhood?: string | null
  CEP?: string | null
  website?: string | null
  password?: string | null
  ssl_enabled?: boolean | null
  two_factor_autentication?: boolean | null
  access_blocked?: boolean | null
  free_trial?: boolean
  free_trial_days_left?: number
  language?: Language
  createdAt?: Date | string
  updatedAt?: Date | string
  emails?: EmailCreateManyWithoutClinicInput | null
  clinic_phones?: Clinic_phonesCreateManyWithoutClinicInput | null
  patients?: PatientCreateManyWithoutClinicInput | null
  destists?: DentistCreateManyWithoutClinicInput | null
  employeers?: EmployeerCreateManyWithoutClinicInput | null
  technicalmanager?: TechnicalmanagerCreateOneWithoutClinicInput | null
  insuranses?: Dental_insuranceCreateManyWithoutClinicInput | null
  logs?: LogsCreateManyWithoutClinicInput | null
  Clinic_payment_information?: Clinic_payment_informationCreateManyWithoutClinicInput | null
  Clinic_finance_options?: Clinic_finance_optionsCreateManyWithoutClinicInput | null
  Clinic_finance_month?: Clinic_finance_monthCreateManyWithoutClinicInput | null
  Clinic_finance_day?: Clinic_finance_dayCreateManyWithoutClinicInput | null
  Chairs?: ChairsCreateManyWithoutClinicInput | null
  Chair_finance_day?: Chair_finance_dayCreateManyWithoutClinicInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureCreateManyWithoutClinicInput | null
  Patient?: PatientCreateManyWithoutClinicInput | null
  Dentist?: DentistCreateManyWithoutClinicInput | null
}

export type ClinicCreateOneWithoutLegalresponsibleInput = {
  create?: ClinicCreateWithoutLegalresponsibleInput
  connect?: ClinicWhereUniqueInput
}

export type LegalresponsibleCreateWithoutEmailInput = {
  cpf: string
  fullname: string
  contactmeans?: Contact_means | null
  active?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: LegalresponsibleCreatewhat_was_updatedInput
  email?: EmailCreateManyWithoutLegalresponsibleInput | null
  clinic: ClinicCreateOneWithoutLegalresponsibleInput
}

export type LegalresponsibleCreateOneWithoutEmailInput = {
  create?: LegalresponsibleCreateWithoutEmailInput
  connect?: LegalresponsibleWhereUniqueInput
}

export type EmailCreateWithoutPatientInput = {
  id?: string
  email: string
  clinic?: ClinicCreateOneWithoutEmailsInput | null
  techinical_mananger?: TechnicalmanagerCreateOneWithoutEmailInput | null
  legal_responsible?: LegalresponsibleCreateOneWithoutEmailInput | null
  dentist?: DentistCreateOneWithoutEmailInput | null
  patient?: PatientCreateOneWithoutEmailInput | null
  Technicalmanager?: TechnicalmanagerCreateOneWithoutEmailInput | null
  Legalresponsible?: LegalresponsibleCreateOneWithoutEmailInput | null
  Dentist?: DentistCreateOneWithoutEmailInput | null
}

export type EmailCreateManyWithoutPatientInput = {
  create?: Enumerable<EmailCreateWithoutPatientInput>
  connect?: Enumerable<EmailWhereUniqueInput>
}

export type PatientCreateWithoutScheduleInput = {
  id?: string
  clinic_prontuary_number: number
  fullname: string
  birth_date: Date | string
  age: number
  gender: Gender
  brazilian_cpf?: string | null
  brazilian_rg?: string | null
  password: string
  cellphone_number?: string | null
  contactmeans?: Contact_means | null
  last_visit_dentist: Date | string
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: string
  what_was_updated?: PatientCreatewhat_was_updatedInput
  clinic: ClinicCreateOneWithoutPatientInput
  email?: EmailCreateManyWithoutPatientInput | null
  anamnesis?: AnamnesisCreateOneWithoutPatientInput | null
  implantology?: ImplantologyCreateOneWithoutPatientInput | null
  ortodontics?: OrtodonticsCreateOneWithoutPatientInput | null
  odontogram?: OdontogramCreateOneWithoutPatientInput | null
  dont_know?: Dont_know_questionsCreateOneWithoutPatientInput | null
  treatment_evolution?: Treatment_evolutionCreateOneWithoutPatientInput | null
  dentists?: DentistCreateManyWithoutPatientsInput | null
  Clinic?: ClinicCreateOneWithoutPatientsInput | null
  Email?: EmailCreateManyWithoutPatientInput | null
}

export type PatientCreateOneWithoutScheduleInput = {
  create?: PatientCreateWithoutScheduleInput
  connect?: PatientWhereUniqueInput
}

export type ScheduleCreateWithoutDentistInput = {
  date: Date | string
  hour: Date | string
  createdAt?: Date | string
  updatedAt?: Date | string
  patient?: PatientCreateOneWithoutScheduleInput | null
  treatment_evolution: Treatment_evolutionCreateOneWithoutSheduleInput
}

export type ScheduleCreateOneWithoutDentistInput = {
  create?: ScheduleCreateWithoutDentistInput
  connect?: ScheduleWhereUniqueInput
}

export type DentistCreateWithoutClinicInput = {
  id?: string
  CRO_number: string
  firstname: string
  lastname: string
  username?: string
  password?: string
  contactmeans?: Contact_means | null
  cellphone_number?: string | null
  active?: boolean
  comission?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: string
  shedule: ScheduleCreateOneWithoutDentistInput
  clinic: ClinicCreateOneWithoutDentistInput
  email?: EmailCreateManyWithoutDentistInput | null
  specialization?: Clinic_specializationsCreateManyWithoutDentistInput | null
  ortodontics_treatments?: OrtodonticsCreateManyWithoutProfessionalsInput | null
  implantology_treatments?: ImplantologyCreateManyWithoutProfessionalsInput | null
  patients?: PatientCreateManyWithoutDentistsInput | null
  Email?: EmailCreateManyWithoutDentistInput | null
}

export type DentistCreateManyWithoutClinicInput = {
  create?: Enumerable<DentistCreateWithoutClinicInput>
  connect?: Enumerable<DentistWhereUniqueInput>
}

export type ClinicCreateWithoutPatientInput = {
  registered_id?: string
  cnpj: string
  socialreason: string
  fantasy_name: string
  multipleclinics?: boolean
  numberofbranches?: number
  dentalchairs?: number | null
  averagepatientsperday?: number | null
  country?: string | null
  state?: string | null
  city?: string | null
  neighborhood?: string | null
  CEP?: string | null
  website?: string | null
  password?: string | null
  ssl_enabled?: boolean | null
  two_factor_autentication?: boolean | null
  access_blocked?: boolean | null
  free_trial?: boolean
  free_trial_days_left?: number
  language?: Language
  createdAt?: Date | string
  updatedAt?: Date | string
  emails?: EmailCreateManyWithoutClinicInput | null
  clinic_phones?: Clinic_phonesCreateManyWithoutClinicInput | null
  patients?: PatientCreateManyWithoutClinicInput | null
  destists?: DentistCreateManyWithoutClinicInput | null
  employeers?: EmployeerCreateManyWithoutClinicInput | null
  technicalmanager?: TechnicalmanagerCreateOneWithoutClinicInput | null
  legalresponsible?: LegalresponsibleCreateOneWithoutClinicInput | null
  insuranses?: Dental_insuranceCreateManyWithoutClinicInput | null
  logs?: LogsCreateManyWithoutClinicInput | null
  Clinic_payment_information?: Clinic_payment_informationCreateManyWithoutClinicInput | null
  Clinic_finance_options?: Clinic_finance_optionsCreateManyWithoutClinicInput | null
  Clinic_finance_month?: Clinic_finance_monthCreateManyWithoutClinicInput | null
  Clinic_finance_day?: Clinic_finance_dayCreateManyWithoutClinicInput | null
  Chairs?: ChairsCreateManyWithoutClinicInput | null
  Chair_finance_day?: Chair_finance_dayCreateManyWithoutClinicInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureCreateManyWithoutClinicInput | null
  Dentist?: DentistCreateManyWithoutClinicInput | null
}

export type ClinicCreateOneWithoutPatientInput = {
  create?: ClinicCreateWithoutPatientInput
  connect?: ClinicWhereUniqueInput
}

export type PatientCreateWithoutClinicInput = {
  id?: string
  clinic_prontuary_number: number
  fullname: string
  birth_date: Date | string
  age: number
  gender: Gender
  brazilian_cpf?: string | null
  brazilian_rg?: string | null
  password: string
  cellphone_number?: string | null
  contactmeans?: Contact_means | null
  last_visit_dentist: Date | string
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: string
  what_was_updated?: PatientCreatewhat_was_updatedInput
  clinic: ClinicCreateOneWithoutPatientInput
  schedule?: ScheduleCreateOneWithoutPatientInput | null
  email?: EmailCreateManyWithoutPatientInput | null
  anamnesis?: AnamnesisCreateOneWithoutPatientInput | null
  implantology?: ImplantologyCreateOneWithoutPatientInput | null
  ortodontics?: OrtodonticsCreateOneWithoutPatientInput | null
  odontogram?: OdontogramCreateOneWithoutPatientInput | null
  dont_know?: Dont_know_questionsCreateOneWithoutPatientInput | null
  treatment_evolution?: Treatment_evolutionCreateOneWithoutPatientInput | null
  dentists?: DentistCreateManyWithoutPatientsInput | null
  Email?: EmailCreateManyWithoutPatientInput | null
}

export type PatientCreateManyWithoutClinicInput = {
  create?: Enumerable<PatientCreateWithoutClinicInput>
  connect?: Enumerable<PatientWhereUniqueInput>
}

export type ClinicCreateWithoutEmailsInput = {
  registered_id?: string
  cnpj: string
  socialreason: string
  fantasy_name: string
  multipleclinics?: boolean
  numberofbranches?: number
  dentalchairs?: number | null
  averagepatientsperday?: number | null
  country?: string | null
  state?: string | null
  city?: string | null
  neighborhood?: string | null
  CEP?: string | null
  website?: string | null
  password?: string | null
  ssl_enabled?: boolean | null
  two_factor_autentication?: boolean | null
  access_blocked?: boolean | null
  free_trial?: boolean
  free_trial_days_left?: number
  language?: Language
  createdAt?: Date | string
  updatedAt?: Date | string
  clinic_phones?: Clinic_phonesCreateManyWithoutClinicInput | null
  patients?: PatientCreateManyWithoutClinicInput | null
  destists?: DentistCreateManyWithoutClinicInput | null
  employeers?: EmployeerCreateManyWithoutClinicInput | null
  technicalmanager?: TechnicalmanagerCreateOneWithoutClinicInput | null
  legalresponsible?: LegalresponsibleCreateOneWithoutClinicInput | null
  insuranses?: Dental_insuranceCreateManyWithoutClinicInput | null
  logs?: LogsCreateManyWithoutClinicInput | null
  Clinic_payment_information?: Clinic_payment_informationCreateManyWithoutClinicInput | null
  Clinic_finance_options?: Clinic_finance_optionsCreateManyWithoutClinicInput | null
  Clinic_finance_month?: Clinic_finance_monthCreateManyWithoutClinicInput | null
  Clinic_finance_day?: Clinic_finance_dayCreateManyWithoutClinicInput | null
  Chairs?: ChairsCreateManyWithoutClinicInput | null
  Chair_finance_day?: Chair_finance_dayCreateManyWithoutClinicInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureCreateManyWithoutClinicInput | null
  Patient?: PatientCreateManyWithoutClinicInput | null
  Dentist?: DentistCreateManyWithoutClinicInput | null
}

export type ClinicCreateOneWithoutEmailsInput = {
  create?: ClinicCreateWithoutEmailsInput
  connect?: ClinicWhereUniqueInput
}

export type EmailCreateWithoutTechnicalmanagerInput = {
  id?: string
  email: string
  clinic?: ClinicCreateOneWithoutEmailsInput | null
  techinical_mananger?: TechnicalmanagerCreateOneWithoutEmailInput | null
  legal_responsible?: LegalresponsibleCreateOneWithoutEmailInput | null
  dentist?: DentistCreateOneWithoutEmailInput | null
  patient?: PatientCreateOneWithoutEmailInput | null
  Legalresponsible?: LegalresponsibleCreateOneWithoutEmailInput | null
  Patient?: PatientCreateOneWithoutEmailInput | null
  Dentist?: DentistCreateOneWithoutEmailInput | null
}

export type EmailCreateManyWithoutTechnicalmanagerInput = {
  create?: Enumerable<EmailCreateWithoutTechnicalmanagerInput>
  connect?: Enumerable<EmailWhereUniqueInput>
}

export type ClinicCreateWithoutTechnicalmanagerInput = {
  registered_id?: string
  cnpj: string
  socialreason: string
  fantasy_name: string
  multipleclinics?: boolean
  numberofbranches?: number
  dentalchairs?: number | null
  averagepatientsperday?: number | null
  country?: string | null
  state?: string | null
  city?: string | null
  neighborhood?: string | null
  CEP?: string | null
  website?: string | null
  password?: string | null
  ssl_enabled?: boolean | null
  two_factor_autentication?: boolean | null
  access_blocked?: boolean | null
  free_trial?: boolean
  free_trial_days_left?: number
  language?: Language
  createdAt?: Date | string
  updatedAt?: Date | string
  emails?: EmailCreateManyWithoutClinicInput | null
  clinic_phones?: Clinic_phonesCreateManyWithoutClinicInput | null
  patients?: PatientCreateManyWithoutClinicInput | null
  destists?: DentistCreateManyWithoutClinicInput | null
  employeers?: EmployeerCreateManyWithoutClinicInput | null
  legalresponsible?: LegalresponsibleCreateOneWithoutClinicInput | null
  insuranses?: Dental_insuranceCreateManyWithoutClinicInput | null
  logs?: LogsCreateManyWithoutClinicInput | null
  Clinic_payment_information?: Clinic_payment_informationCreateManyWithoutClinicInput | null
  Clinic_finance_options?: Clinic_finance_optionsCreateManyWithoutClinicInput | null
  Clinic_finance_month?: Clinic_finance_monthCreateManyWithoutClinicInput | null
  Clinic_finance_day?: Clinic_finance_dayCreateManyWithoutClinicInput | null
  Chairs?: ChairsCreateManyWithoutClinicInput | null
  Chair_finance_day?: Chair_finance_dayCreateManyWithoutClinicInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureCreateManyWithoutClinicInput | null
  Patient?: PatientCreateManyWithoutClinicInput | null
  Dentist?: DentistCreateManyWithoutClinicInput | null
}

export type ClinicCreateOneWithoutTechnicalmanagerInput = {
  create?: ClinicCreateWithoutTechnicalmanagerInput
  connect?: ClinicWhereUniqueInput
}

export type TechnicalmanagerCreateWithoutEmailInput = {
  cpf: string
  fullname: string
  contactmeans: Contact_means
  active?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: TechnicalmanagerCreatewhat_was_updatedInput
  email?: EmailCreateManyWithoutTechnicalmanagerInput | null
  clinic: ClinicCreateOneWithoutTechnicalmanagerInput
}

export type TechnicalmanagerCreateOneWithoutEmailInput = {
  create?: TechnicalmanagerCreateWithoutEmailInput
  connect?: TechnicalmanagerWhereUniqueInput
}

export type EmailCreateWithoutClinicInput = {
  id?: string
  email: string
  techinical_mananger?: TechnicalmanagerCreateOneWithoutEmailInput | null
  legal_responsible?: LegalresponsibleCreateOneWithoutEmailInput | null
  dentist?: DentistCreateOneWithoutEmailInput | null
  patient?: PatientCreateOneWithoutEmailInput | null
  Technicalmanager?: TechnicalmanagerCreateOneWithoutEmailInput | null
  Legalresponsible?: LegalresponsibleCreateOneWithoutEmailInput | null
  Patient?: PatientCreateOneWithoutEmailInput | null
  Dentist?: DentistCreateOneWithoutEmailInput | null
}

export type EmailCreateManyWithoutClinicInput = {
  create?: Enumerable<EmailCreateWithoutClinicInput>
  connect?: Enumerable<EmailWhereUniqueInput>
}

export type ClinicCreateInput = {
  registered_id?: string
  cnpj: string
  socialreason: string
  fantasy_name: string
  multipleclinics?: boolean
  numberofbranches?: number
  dentalchairs?: number | null
  averagepatientsperday?: number | null
  country?: string | null
  state?: string | null
  city?: string | null
  neighborhood?: string | null
  CEP?: string | null
  website?: string | null
  password?: string | null
  ssl_enabled?: boolean | null
  two_factor_autentication?: boolean | null
  access_blocked?: boolean | null
  free_trial?: boolean
  free_trial_days_left?: number
  language?: Language
  createdAt?: Date | string
  updatedAt?: Date | string
  emails?: EmailCreateManyWithoutClinicInput | null
  clinic_phones?: Clinic_phonesCreateManyWithoutClinicInput | null
  patients?: PatientCreateManyWithoutClinicInput | null
  destists?: DentistCreateManyWithoutClinicInput | null
  employeers?: EmployeerCreateManyWithoutClinicInput | null
  technicalmanager?: TechnicalmanagerCreateOneWithoutClinicInput | null
  legalresponsible?: LegalresponsibleCreateOneWithoutClinicInput | null
  insuranses?: Dental_insuranceCreateManyWithoutClinicInput | null
  logs?: LogsCreateManyWithoutClinicInput | null
  Clinic_payment_information?: Clinic_payment_informationCreateManyWithoutClinicInput | null
  Clinic_finance_options?: Clinic_finance_optionsCreateManyWithoutClinicInput | null
  Clinic_finance_month?: Clinic_finance_monthCreateManyWithoutClinicInput | null
  Clinic_finance_day?: Clinic_finance_dayCreateManyWithoutClinicInput | null
  Chairs?: ChairsCreateManyWithoutClinicInput | null
  Chair_finance_day?: Chair_finance_dayCreateManyWithoutClinicInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureCreateManyWithoutClinicInput | null
  Patient?: PatientCreateManyWithoutClinicInput | null
  Dentist?: DentistCreateManyWithoutClinicInput | null
}

export type TechnicalmanagerUpdatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Clinic_phonesUpdateWithoutClinicDataInput = {
  id?: string
  phonetype?: Phonetypes
  phone_number?: string
}

export type Clinic_phonesUpdateWithWhereUniqueWithoutClinicInput = {
  where: Clinic_phonesWhereUniqueInput
  data: Clinic_phonesUpdateWithoutClinicDataInput
}

export type Clinic_phonesScalarWhereInput = {
  id?: string | StringFilter
  clinic_id?: string | StringFilter
  phonetype?: Phonetypes | PhonetypesFilter
  phone_number?: string | StringFilter
  AND?: Enumerable<Clinic_phonesScalarWhereInput>
  OR?: Array<Clinic_phonesScalarWhereInput>
  NOT?: Enumerable<Clinic_phonesScalarWhereInput>
}

export type Clinic_phonesUpdateManyDataInput = {
  id?: string
  phonetype?: Phonetypes
  phone_number?: string
}

export type Clinic_phonesUpdateManyWithWhereNestedInput = {
  where: Clinic_phonesScalarWhereInput
  data: Clinic_phonesUpdateManyDataInput
}

export type Clinic_phonesUpsertWithWhereUniqueWithoutClinicInput = {
  where: Clinic_phonesWhereUniqueInput
  update: Clinic_phonesUpdateWithoutClinicDataInput
  create: Clinic_phonesCreateWithoutClinicInput
}

export type Clinic_phonesUpdateManyWithoutClinicInput = {
  create?: Enumerable<Clinic_phonesCreateWithoutClinicInput>
  connect?: Enumerable<Clinic_phonesWhereUniqueInput>
  set?: Enumerable<Clinic_phonesWhereUniqueInput>
  disconnect?: Enumerable<Clinic_phonesWhereUniqueInput>
  delete?: Enumerable<Clinic_phonesWhereUniqueInput>
  update?: Enumerable<Clinic_phonesUpdateWithWhereUniqueWithoutClinicInput>
  updateMany?: Enumerable<Clinic_phonesUpdateManyWithWhereNestedInput> | null
  deleteMany?: Enumerable<Clinic_phonesScalarWhereInput>
  upsert?: Enumerable<Clinic_phonesUpsertWithWhereUniqueWithoutClinicInput>
}

export type PatientUpdatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type LegalresponsibleUpdatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Clinic_RolesUpdateWithoutEmployerDataInput = {
  id?: string
  name?: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type Clinic_RolesUpsertWithoutEmployerInput = {
  update: Clinic_RolesUpdateWithoutEmployerDataInput
  create: Clinic_RolesCreateWithoutEmployerInput
}

export type Clinic_RolesUpdateOneRequiredWithoutEmployerInput = {
  create?: Clinic_RolesCreateWithoutEmployerInput
  connect?: Clinic_RolesWhereUniqueInput
  update?: Clinic_RolesUpdateWithoutEmployerDataInput
  upsert?: Clinic_RolesUpsertWithoutEmployerInput
}

export type EmployeerUpdateWithoutClinicDataInput = {
  id?: string
  firstname?: string
  lastname?: string
  username?: string
  password?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: Clinic_RolesUpdateOneRequiredWithoutEmployerInput | null
}

export type EmployeerUpdateWithWhereUniqueWithoutClinicInput = {
  where: EmployeerWhereUniqueInput
  data: EmployeerUpdateWithoutClinicDataInput
}

export type EmployeerScalarWhereInput = {
  id?: string | UUIDFilter
  firstname?: string | StringFilter
  lastname?: string | StringFilter
  username?: string | StringFilter
  password?: string | StringFilter
  clinic_id?: string | StringFilter
  role_id?: string | StringFilter
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<EmployeerScalarWhereInput>
  OR?: Array<EmployeerScalarWhereInput>
  NOT?: Enumerable<EmployeerScalarWhereInput>
}

export type EmployeerUpdateManyDataInput = {
  id?: string
  firstname?: string
  lastname?: string
  username?: string
  password?: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type EmployeerUpdateManyWithWhereNestedInput = {
  where: EmployeerScalarWhereInput
  data: EmployeerUpdateManyDataInput
}

export type EmployeerUpsertWithWhereUniqueWithoutClinicInput = {
  where: EmployeerWhereUniqueInput
  update: EmployeerUpdateWithoutClinicDataInput
  create: EmployeerCreateWithoutClinicInput
}

export type EmployeerUpdateManyWithoutClinicInput = {
  create?: Enumerable<EmployeerCreateWithoutClinicInput>
  connect?: Enumerable<EmployeerWhereUniqueInput>
  set?: Enumerable<EmployeerWhereUniqueInput>
  disconnect?: Enumerable<EmployeerWhereUniqueInput>
  delete?: Enumerable<EmployeerWhereUniqueInput>
  update?: Enumerable<EmployeerUpdateWithWhereUniqueWithoutClinicInput>
  updateMany?: Enumerable<EmployeerUpdateManyWithWhereNestedInput> | null
  deleteMany?: Enumerable<EmployeerScalarWhereInput>
  upsert?: Enumerable<EmployeerUpsertWithWhereUniqueWithoutClinicInput>
}

export type EmailUpdateWithoutDentistDataInput = {
  id?: string
  email?: string
  clinic?: ClinicUpdateOneWithoutEmailsInput | null
  techinical_mananger?: TechnicalmanagerUpdateOneWithoutEmailInput | null
  legal_responsible?: LegalresponsibleUpdateOneWithoutEmailInput | null
  dentist?: DentistUpdateOneWithoutEmailInput | null
  patient?: PatientUpdateOneWithoutEmailInput | null
  Technicalmanager?: TechnicalmanagerUpdateOneWithoutEmailInput | null
  Legalresponsible?: LegalresponsibleUpdateOneWithoutEmailInput | null
  Patient?: PatientUpdateOneWithoutEmailInput | null
}

export type EmailUpdateWithWhereUniqueWithoutDentistInput = {
  where: EmailWhereUniqueInput
  data: EmailUpdateWithoutDentistDataInput
}

export type EmailScalarWhereInput = {
  id?: string | StringFilter
  email?: string | StringFilter
  clinid_id?: string | NullableStringFilter | null
  techinical_mananger_id?: string | NullableStringFilter | null
  legal_responsible_id?: string | NullableStringFilter | null
  dentist_id?: string | NullableStringFilter | null
  patient_id?: string | NullableStringFilter | null
  technicalmanagerCpf?: string | NullableStringFilter | null
  legalresponsibleCpf?: string | NullableStringFilter | null
  patientId?: string | NullableStringFilter | null
  dentistId?: string | NullableStringFilter | null
  AND?: Enumerable<EmailScalarWhereInput>
  OR?: Array<EmailScalarWhereInput>
  NOT?: Enumerable<EmailScalarWhereInput>
}

export type EmailUpdateManyDataInput = {
  id?: string
  email?: string
}

export type EmailUpdateManyWithWhereNestedInput = {
  where: EmailScalarWhereInput
  data: EmailUpdateManyDataInput
}

export type EmailUpsertWithWhereUniqueWithoutDentistInput = {
  where: EmailWhereUniqueInput
  update: EmailUpdateWithoutDentistDataInput
  create: EmailCreateWithoutDentistInput
}

export type EmailUpdateManyWithoutDentistInput = {
  create?: Enumerable<EmailCreateWithoutDentistInput>
  connect?: Enumerable<EmailWhereUniqueInput>
  set?: Enumerable<EmailWhereUniqueInput>
  disconnect?: Enumerable<EmailWhereUniqueInput>
  delete?: Enumerable<EmailWhereUniqueInput>
  update?: Enumerable<EmailUpdateWithWhereUniqueWithoutDentistInput>
  updateMany?: Enumerable<EmailUpdateManyWithWhereNestedInput> | null
  deleteMany?: Enumerable<EmailScalarWhereInput>
  upsert?: Enumerable<EmailUpsertWithWhereUniqueWithoutDentistInput>
}

export type Clinic_specializationsUpdateWithoutDentistDataInput = {
  id?: number
  specialization?: Specializations
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type Clinic_specializationsUpdateWithWhereUniqueWithoutDentistInput = {
  where: Clinic_specializationsWhereUniqueInput
  data: Clinic_specializationsUpdateWithoutDentistDataInput
}

export type Clinic_specializationsScalarWhereInput = {
  id?: number | IntFilter
  specialization?: Specializations | SpecializationsFilter
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  dentistId?: string | NullableStringFilter | null
  AND?: Enumerable<Clinic_specializationsScalarWhereInput>
  OR?: Array<Clinic_specializationsScalarWhereInput>
  NOT?: Enumerable<Clinic_specializationsScalarWhereInput>
}

export type Clinic_specializationsUpdateManyDataInput = {
  id?: number
  specialization?: Specializations
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type Clinic_specializationsUpdateManyWithWhereNestedInput = {
  where: Clinic_specializationsScalarWhereInput
  data: Clinic_specializationsUpdateManyDataInput
}

export type Clinic_specializationsUpsertWithWhereUniqueWithoutDentistInput = {
  where: Clinic_specializationsWhereUniqueInput
  update: Clinic_specializationsUpdateWithoutDentistDataInput
  create: Clinic_specializationsCreateWithoutDentistInput
}

export type Clinic_specializationsUpdateManyWithoutDentistInput = {
  create?: Enumerable<Clinic_specializationsCreateWithoutDentistInput>
  connect?: Enumerable<Clinic_specializationsWhereUniqueInput>
  set?: Enumerable<Clinic_specializationsWhereUniqueInput>
  disconnect?: Enumerable<Clinic_specializationsWhereUniqueInput>
  delete?: Enumerable<Clinic_specializationsWhereUniqueInput>
  update?: Enumerable<Clinic_specializationsUpdateWithWhereUniqueWithoutDentistInput>
  updateMany?: Enumerable<Clinic_specializationsUpdateManyWithWhereNestedInput> | null
  deleteMany?: Enumerable<Clinic_specializationsScalarWhereInput>
  upsert?: Enumerable<Clinic_specializationsUpsertWithWhereUniqueWithoutDentistInput>
}

export type OrtodonticsUpdateprofessional_idsInput = {
  set?: Enumerable<string> | null
}

export type OrtodonticsUpdatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type AnamnesisUpdateanamnesis_typeInput = {
  set?: Enumerable<Questionnaires> | null
}

export type AnamnesisUpdatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Main_anamnesis_questionnaireUpdatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Main_anamnesis_questionnaireUpdateWithoutAnamnesis_prontuaryDataInput = {
  id?: string
  main_issue?: string
  recent_disease_history?: string
  undergoing_medical_treatment?: yes_no
  if_yes_what_treatment?: string | null
  taking_any_medication?: yes_no
  if_yes_what_medication?: string | null
  already_used_local_anestesics?: yes_no
  you_presented_reaction?: yes_no
  allergic_to_any_medicine?: yes_no
  if_yes_what_medicine?: string | null
  allergic_to_latex?: yes_no
  has_any_know_blood_issues?: yes_no
  use_acetil_salicilic_acid?: yes_no
  if_yes_for_what?: string | null
  you_have_already_made_blood_testing?: yes_no
  if_yes_when_made_it?: Date | string | null
  has_any_importanting_bleeding?: yes_no
  if_yes_when?: Date | string | null
  if_yes_how_long_to_stop?: string
  have_problems_with_healing?: yes_no
  has_any_know_tireoids_issues?: yes_no
  has_any_know_hormonal_issues?: yes_no
  you_are_using_any_corticosteroids?: yes_no
  diabetes_mellitus?: yes_no
  if_yes_any_treatment_for_diabetes?: string | null
  any_heart_problems?: yes_no
  if_yes_what_hearth_problem?: string | null
  arterial_hypertension?: yes_no
  if_yes_any_treatment_for_hypertension?: string | null
  breathing_problems?: yes_no
  if_yes_what_breathing_problem?: string | null
  kidney_damage?: yes_no
  if_yes_what_kidney_problem?: string | null
  gastric_problems?: yes_no
  if_yes_you_looked_for_gastric_doctor?: yes_no | null
  if_yes_what_gastric_problems?: string | null
  have_rheumatic_fever?: yes_no
  joints_problems_or_reumatics?: yes_no
  if_yes_you_looked_for_reaumatics_doctor?: string | null
  use_drugs?: yes_no
  if_yes_what_drug?: string | null
  smoker?: yes_no
  if_yes_how_many_cigarretes_perday?: number | null
  consider_a_alcolic_addicted?: yes_no
  if_yes_when_was_the_last_drink?: string | null
  family_background?: yes_no
  if_yes_what_familys_problems?: string | null
  preagnant?: yes_no
  if_yes_how_many_months?: string | null
  take_contraceptives?: yes_no
  what_contraceptives?: string | null
  are_breastfeeding?: yes_no
  entered_the_process_of_menopause?: yes_no
  if_yes_guided_by_the_gynecologist?: yes_no | null
  take_hormone?: yes_no
  take_calcium?: yes_no
  terms_readed?: yes_no
  patient_signed?: yes_no
  signed_date?: Date | string
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Main_anamnesis_questionnaireUpdatewhat_was_updatedInput
}

export type Main_anamnesis_questionnaireUpsertWithoutAnamnesis_prontuaryInput = {
  update: Main_anamnesis_questionnaireUpdateWithoutAnamnesis_prontuaryDataInput
  create: Main_anamnesis_questionnaireCreateWithoutAnamnesis_prontuaryInput
}

export type Main_anamnesis_questionnaireUpdateOneWithoutAnamnesis_prontuaryInput = {
  create?: Main_anamnesis_questionnaireCreateWithoutAnamnesis_prontuaryInput
  connect?: Main_anamnesis_questionnaireWhereUniqueInput
  disconnect?: boolean
  delete?: boolean
  update?: Main_anamnesis_questionnaireUpdateWithoutAnamnesis_prontuaryDataInput
  upsert?: Main_anamnesis_questionnaireUpsertWithoutAnamnesis_prontuaryInput
}

export type Vital_signs_questionnaireUpdatewhat_is_updatedInput = {
  set?: Enumerable<string> | null
}

export type Vital_signs_questionnaireUpdateWithoutAnamnesis_prontuaryDataInput = {
  id?: string
  heart_beats_per_minute?: number | null
  arterial_pressure?: string | null
  breaths_per_minute?: number | null
  temperature_in_celcius?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_is_updated?: Vital_signs_questionnaireUpdatewhat_is_updatedInput
}

export type Vital_signs_questionnaireUpsertWithoutAnamnesis_prontuaryInput = {
  update: Vital_signs_questionnaireUpdateWithoutAnamnesis_prontuaryDataInput
  create: Vital_signs_questionnaireCreateWithoutAnamnesis_prontuaryInput
}

export type Vital_signs_questionnaireUpdateOneWithoutAnamnesis_prontuaryInput = {
  create?: Vital_signs_questionnaireCreateWithoutAnamnesis_prontuaryInput
  connect?: Vital_signs_questionnaireWhereUniqueInput
  disconnect?: boolean
  delete?: boolean
  update?: Vital_signs_questionnaireUpdateWithoutAnamnesis_prontuaryDataInput
  upsert?: Vital_signs_questionnaireUpsertWithoutAnamnesis_prontuaryInput
}

export type Oral_health_questionnaireUpdatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Oral_health_questionnaireUpdateWithoutAnamnesis_prontuaryDataInput = {
  id?: string
  you_use_anykind_protesis?: yes_no
  whats_the_protesis?: string | null
  type_of_teeth_brush?: string | null
  how_many_times_by_day?: number | null
  you_floss?: yes_no | null
  if_yes_how_many_times?: number | null
  you_use_any_mouthwash?: yes_no | null
  if_yes_how_often?: How_often | null
  dental_clenching?: yes_no
  if_yes_when_in_day?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Oral_health_questionnaireUpdatewhat_was_updatedInput
}

export type Oral_health_questionnaireUpsertWithoutAnamnesis_prontuaryInput = {
  update: Oral_health_questionnaireUpdateWithoutAnamnesis_prontuaryDataInput
  create: Oral_health_questionnaireCreateWithoutAnamnesis_prontuaryInput
}

export type Oral_health_questionnaireUpdateOneWithoutAnamnesis_prontuaryInput = {
  create?: Oral_health_questionnaireCreateWithoutAnamnesis_prontuaryInput
  connect?: Oral_health_questionnaireWhereUniqueInput
  disconnect?: boolean
  delete?: boolean
  update?: Oral_health_questionnaireUpdateWithoutAnamnesis_prontuaryDataInput
  upsert?: Oral_health_questionnaireUpsertWithoutAnamnesis_prontuaryInput
}

export type Diet_questionnaireUpdatewhat_is_updatedInput = {
  set?: Enumerable<string> | null
}

export type Diet_questionnaireUpdateWithoutAnamnesis_prontuaryDataInput = {
  id?: string
  already_instructed_in_diet_by_a_CD?: yes_no
  if_yes_what_the_instructions?: string | null
  importance_of_diet_in_oral_health?: yes_no
  createdAt?: Date | string
  updatedAt?: Date | string
  what_is_updated?: Diet_questionnaireUpdatewhat_is_updatedInput
}

export type Diet_questionnaireUpdateWithWhereUniqueWithoutAnamnesis_prontuaryInput = {
  where: Diet_questionnaireWhereUniqueInput
  data: Diet_questionnaireUpdateWithoutAnamnesis_prontuaryDataInput
}

export type Diet_questionnaireScalarWhereInput = {
  id?: string | StringFilter
  anamnesis_prontuary_id?: string | StringFilter
  already_instructed_in_diet_by_a_CD?: yes_no | yes_noFilter
  if_yes_what_the_instructions?: string | NullableStringFilter | null
  importance_of_diet_in_oral_health?: yes_no | yes_noFilter
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Diet_questionnaireScalarWhereInput>
  OR?: Array<Diet_questionnaireScalarWhereInput>
  NOT?: Enumerable<Diet_questionnaireScalarWhereInput>
}

export type Diet_questionnaireUpdateManyDataInput = {
  id?: string
  already_instructed_in_diet_by_a_CD?: yes_no
  if_yes_what_the_instructions?: string | null
  importance_of_diet_in_oral_health?: yes_no
  createdAt?: Date | string
  updatedAt?: Date | string
  what_is_updated?: Diet_questionnaireUpdatewhat_is_updatedInput
}

export type Diet_questionnaireUpdateManyWithWhereNestedInput = {
  where: Diet_questionnaireScalarWhereInput
  data: Diet_questionnaireUpdateManyDataInput
}

export type Diet_questionnaireUpsertWithWhereUniqueWithoutAnamnesis_prontuaryInput = {
  where: Diet_questionnaireWhereUniqueInput
  update: Diet_questionnaireUpdateWithoutAnamnesis_prontuaryDataInput
  create: Diet_questionnaireCreateWithoutAnamnesis_prontuaryInput
}

export type Diet_questionnaireUpdateManyWithoutAnamnesis_prontuaryInput = {
  create?: Enumerable<Diet_questionnaireCreateWithoutAnamnesis_prontuaryInput>
  connect?: Enumerable<Diet_questionnaireWhereUniqueInput>
  set?: Enumerable<Diet_questionnaireWhereUniqueInput>
  disconnect?: Enumerable<Diet_questionnaireWhereUniqueInput>
  delete?: Enumerable<Diet_questionnaireWhereUniqueInput>
  update?: Enumerable<Diet_questionnaireUpdateWithWhereUniqueWithoutAnamnesis_prontuaryInput>
  updateMany?: Enumerable<Diet_questionnaireUpdateManyWithWhereNestedInput> | null
  deleteMany?: Enumerable<Diet_questionnaireScalarWhereInput>
  upsert?: Enumerable<Diet_questionnaireUpsertWithWhereUniqueWithoutAnamnesis_prontuaryInput>
}

export type AnamnesisUpdateWithoutPatientDataInput = {
  id?: string
  last_dentist_visit?: Date | string
  last_procedure?: Date | string
  what_was_done?: string | null
  treatment_is_planed?: boolean
  What_treatment_is_planed?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  anamnesis_type?: AnamnesisUpdateanamnesis_typeInput
  what_was_updated?: AnamnesisUpdatewhat_was_updatedInput
  main_anamnesis_questionnaire?: Main_anamnesis_questionnaireUpdateOneWithoutAnamnesis_prontuaryInput | null
  vital_signs_questionnaire?: Vital_signs_questionnaireUpdateOneWithoutAnamnesis_prontuaryInput | null
  oral_health_questionnaire?: Oral_health_questionnaireUpdateOneWithoutAnamnesis_prontuaryInput | null
  Diet_questionnaire?: Diet_questionnaireUpdateManyWithoutAnamnesis_prontuaryInput | null
}

export type AnamnesisUpsertWithoutPatientInput = {
  update: AnamnesisUpdateWithoutPatientDataInput
  create: AnamnesisCreateWithoutPatientInput
}

export type AnamnesisUpdateOneWithoutPatientInput = {
  create?: AnamnesisCreateWithoutPatientInput
  connect?: AnamnesisWhereUniqueInput
  disconnect?: boolean
  delete?: boolean
  update?: AnamnesisUpdateWithoutPatientDataInput
  upsert?: AnamnesisUpsertWithoutPatientInput
}

export type ImplantologyUpdateprofessional_idsInput = {
  set?: Enumerable<string> | null
}

export type ImplantologyUpdateif_type_unitary_dental_units_reabilitedInput = {
  set?: Enumerable<string> | null
}

export type ImplantologyUpdateif_type_multiple_dental_units_reabilitedInput = {
  set?: Enumerable<string> | null
}

export type ImplantologyUpdatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Implantology_questionnaireUpdatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Implantology_questionnaireUpdateWithoutImplantology_questionnaireDataInput = {
  id?: string
  have_implant?: boolean
  if_yes_when_puted?: string | null
  if_yes_last_review_consult?: string | null
  if_yes_the_cirurgy_needed_bone_graft?: boolean | null
  want_to_put_implants?: boolean
  if_yes_why_do_you_want?: string | null
  if_yes_already_looked_for_professional?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Implantology_questionnaireUpdatewhat_was_updatedInput
}

export type Implantology_questionnaireUpsertWithoutImplantology_questionnaireInput = {
  update: Implantology_questionnaireUpdateWithoutImplantology_questionnaireDataInput
  create: Implantology_questionnaireCreateWithoutImplantology_questionnaireInput
}

export type Implantology_questionnaireUpdateOneRequiredWithoutImplantology_questionnaireInput = {
  create?: Implantology_questionnaireCreateWithoutImplantology_questionnaireInput
  connect?: Implantology_questionnaireWhereUniqueInput
  update?: Implantology_questionnaireUpdateWithoutImplantology_questionnaireDataInput
  upsert?: Implantology_questionnaireUpsertWithoutImplantology_questionnaireInput
}

export type Ortodontics_questionnaireUpdatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Ortodontics_questionnaireUpdateWithoutOrtodontic_prontuaryDataInput = {
  id?: string
  reason_for_tratment?: string
  already_have_in_treatment?: yes_no
  if_yes_how_long_takes_previus_treatment?: string | null
  if_yes_you_have_panoramic_radiography?: yes_no | null
  if_yes_when_panoramic_radiography_was_taken?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Ortodontics_questionnaireUpdatewhat_was_updatedInput
}

export type Ortodontics_questionnaireUpsertWithoutOrtodontic_prontuaryInput = {
  update: Ortodontics_questionnaireUpdateWithoutOrtodontic_prontuaryDataInput
  create: Ortodontics_questionnaireCreateWithoutOrtodontic_prontuaryInput
}

export type Ortodontics_questionnaireUpdateOneRequiredWithoutOrtodontic_prontuaryInput = {
  create?: Ortodontics_questionnaireCreateWithoutOrtodontic_prontuaryInput
  connect?: Ortodontics_questionnaireWhereUniqueInput
  update?: Ortodontics_questionnaireUpdateWithoutOrtodontic_prontuaryDataInput
  upsert?: Ortodontics_questionnaireUpsertWithoutOrtodontic_prontuaryInput
}

export type TMJ_problems_questionnaireUpdatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type TMJ_problems_questionnaireUpdateWithoutOrtodontic_prontuaryDataInput = {
  id?: string
  you_consider_have_TMJ_problem?: yes_no
  when_the_simptoms_start?: string | null
  difficulty_opening_your_mouth?: yes_no
  pain_when_opening_closing_mouth?: yes_no
  crackles_when_opening_closing_mouth?: yes_no
  if_yes_one_or_both_sides?: string | null
  if_one_whats_side_crackles?: string | null
  TMJ_pain_at_rest?: yes_no
  already_looked_for_profissional_treatment?: yes_no
  if_yes_when_was_treated?: string | null
  if_yes_you_made_any_image_exams?: yes_no | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: TMJ_problems_questionnaireUpdatewhat_was_updatedInput
}

export type TMJ_problems_questionnaireUpsertWithoutOrtodontic_prontuaryInput = {
  update: TMJ_problems_questionnaireUpdateWithoutOrtodontic_prontuaryDataInput
  create: TMJ_problems_questionnaireCreateWithoutOrtodontic_prontuaryInput
}

export type TMJ_problems_questionnaireUpdateOneRequiredWithoutOrtodontic_prontuaryInput = {
  create?: TMJ_problems_questionnaireCreateWithoutOrtodontic_prontuaryInput
  connect?: TMJ_problems_questionnaireWhereUniqueInput
  update?: TMJ_problems_questionnaireUpdateWithoutOrtodontic_prontuaryDataInput
  upsert?: TMJ_problems_questionnaireUpsertWithoutOrtodontic_prontuaryInput
}

export type OdontogramUpdatefirst_sextant_notesInput = {
  set?: Enumerable<string> | null
}

export type OdontogramUpdatesecond_sextant_notesInput = {
  set?: Enumerable<string> | null
}

export type OdontogramUpdatethird_sextant_notesInput = {
  set?: Enumerable<string> | null
}

export type OdontogramUpdatefourth_sextant_notesInput = {
  set?: Enumerable<string> | null
}

export type OdontogramUpdatefifth_sextant_notesInput = {
  set?: Enumerable<string> | null
}

export type OdontogramUpdatesixth_sextant_notesInput = {
  set?: Enumerable<string> | null
}

export type OdontogramUpdatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit11Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit11UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit11Updatewhat_was_updatedInput
}

export type Unit11UpsertWithoutOdontogramInput = {
  update: Unit11UpdateWithoutOdontogramDataInput
  create: Unit11CreateWithoutOdontogramInput
}

export type Unit11UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit11CreateWithoutOdontogramInput
  connect?: Unit11WhereUniqueInput
  update?: Unit11UpdateWithoutOdontogramDataInput
  upsert?: Unit11UpsertWithoutOdontogramInput
}

export type Unit12Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit12UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit12Updatewhat_was_updatedInput
}

export type Unit12UpsertWithoutOdontogramInput = {
  update: Unit12UpdateWithoutOdontogramDataInput
  create: Unit12CreateWithoutOdontogramInput
}

export type Unit12UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit12CreateWithoutOdontogramInput
  connect?: Unit12WhereUniqueInput
  update?: Unit12UpdateWithoutOdontogramDataInput
  upsert?: Unit12UpsertWithoutOdontogramInput
}

export type Unit13Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit13UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit13Updatewhat_was_updatedInput
}

export type Unit13UpsertWithoutOdontogramInput = {
  update: Unit13UpdateWithoutOdontogramDataInput
  create: Unit13CreateWithoutOdontogramInput
}

export type Unit13UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit13CreateWithoutOdontogramInput
  connect?: Unit13WhereUniqueInput
  update?: Unit13UpdateWithoutOdontogramDataInput
  upsert?: Unit13UpsertWithoutOdontogramInput
}

export type Unit14Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit14UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit14Updatewhat_was_updatedInput
}

export type Unit14UpsertWithoutOdontogramInput = {
  update: Unit14UpdateWithoutOdontogramDataInput
  create: Unit14CreateWithoutOdontogramInput
}

export type Unit14UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit14CreateWithoutOdontogramInput
  connect?: Unit14WhereUniqueInput
  update?: Unit14UpdateWithoutOdontogramDataInput
  upsert?: Unit14UpsertWithoutOdontogramInput
}

export type Unit15Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit15UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit15Updatewhat_was_updatedInput
}

export type Unit15UpsertWithoutOdontogramInput = {
  update: Unit15UpdateWithoutOdontogramDataInput
  create: Unit15CreateWithoutOdontogramInput
}

export type Unit15UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit15CreateWithoutOdontogramInput
  connect?: Unit15WhereUniqueInput
  update?: Unit15UpdateWithoutOdontogramDataInput
  upsert?: Unit15UpsertWithoutOdontogramInput
}

export type Unit16Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit16UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit16Updatewhat_was_updatedInput
}

export type Unit16UpsertWithoutOdontogramInput = {
  update: Unit16UpdateWithoutOdontogramDataInput
  create: Unit16CreateWithoutOdontogramInput
}

export type Unit16UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit16CreateWithoutOdontogramInput
  connect?: Unit16WhereUniqueInput
  update?: Unit16UpdateWithoutOdontogramDataInput
  upsert?: Unit16UpsertWithoutOdontogramInput
}

export type Unit17Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit17UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit17Updatewhat_was_updatedInput
}

export type Unit17UpsertWithoutOdontogramInput = {
  update: Unit17UpdateWithoutOdontogramDataInput
  create: Unit17CreateWithoutOdontogramInput
}

export type Unit17UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit17CreateWithoutOdontogramInput
  connect?: Unit17WhereUniqueInput
  update?: Unit17UpdateWithoutOdontogramDataInput
  upsert?: Unit17UpsertWithoutOdontogramInput
}

export type Unit18Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit18UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit18Updatewhat_was_updatedInput
}

export type Unit18UpsertWithoutOdontogramInput = {
  update: Unit18UpdateWithoutOdontogramDataInput
  create: Unit18CreateWithoutOdontogramInput
}

export type Unit18UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit18CreateWithoutOdontogramInput
  connect?: Unit18WhereUniqueInput
  update?: Unit18UpdateWithoutOdontogramDataInput
  upsert?: Unit18UpsertWithoutOdontogramInput
}

export type Unit21Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit21UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit21Updatewhat_was_updatedInput
}

export type Unit21UpsertWithoutOdontogramInput = {
  update: Unit21UpdateWithoutOdontogramDataInput
  create: Unit21CreateWithoutOdontogramInput
}

export type Unit21UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit21CreateWithoutOdontogramInput
  connect?: Unit21WhereUniqueInput
  update?: Unit21UpdateWithoutOdontogramDataInput
  upsert?: Unit21UpsertWithoutOdontogramInput
}

export type Unit22Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit22UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit22Updatewhat_was_updatedInput
}

export type Unit22UpsertWithoutOdontogramInput = {
  update: Unit22UpdateWithoutOdontogramDataInput
  create: Unit22CreateWithoutOdontogramInput
}

export type Unit22UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit22CreateWithoutOdontogramInput
  connect?: Unit22WhereUniqueInput
  update?: Unit22UpdateWithoutOdontogramDataInput
  upsert?: Unit22UpsertWithoutOdontogramInput
}

export type Unit23Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit23UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit23Updatewhat_was_updatedInput
}

export type Unit23UpsertWithoutOdontogramInput = {
  update: Unit23UpdateWithoutOdontogramDataInput
  create: Unit23CreateWithoutOdontogramInput
}

export type Unit23UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit23CreateWithoutOdontogramInput
  connect?: Unit23WhereUniqueInput
  update?: Unit23UpdateWithoutOdontogramDataInput
  upsert?: Unit23UpsertWithoutOdontogramInput
}

export type Unit24Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit24UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit24Updatewhat_was_updatedInput
}

export type Unit24UpsertWithoutOdontogramInput = {
  update: Unit24UpdateWithoutOdontogramDataInput
  create: Unit24CreateWithoutOdontogramInput
}

export type Unit24UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit24CreateWithoutOdontogramInput
  connect?: Unit24WhereUniqueInput
  update?: Unit24UpdateWithoutOdontogramDataInput
  upsert?: Unit24UpsertWithoutOdontogramInput
}

export type Unit25Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit25UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit25Updatewhat_was_updatedInput
}

export type Unit25UpsertWithoutOdontogramInput = {
  update: Unit25UpdateWithoutOdontogramDataInput
  create: Unit25CreateWithoutOdontogramInput
}

export type Unit25UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit25CreateWithoutOdontogramInput
  connect?: Unit25WhereUniqueInput
  update?: Unit25UpdateWithoutOdontogramDataInput
  upsert?: Unit25UpsertWithoutOdontogramInput
}

export type Unit26Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit26UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit26Updatewhat_was_updatedInput
}

export type Unit26UpsertWithoutOdontogramInput = {
  update: Unit26UpdateWithoutOdontogramDataInput
  create: Unit26CreateWithoutOdontogramInput
}

export type Unit26UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit26CreateWithoutOdontogramInput
  connect?: Unit26WhereUniqueInput
  update?: Unit26UpdateWithoutOdontogramDataInput
  upsert?: Unit26UpsertWithoutOdontogramInput
}

export type Unit27Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit27UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit27Updatewhat_was_updatedInput
}

export type Unit27UpsertWithoutOdontogramInput = {
  update: Unit27UpdateWithoutOdontogramDataInput
  create: Unit27CreateWithoutOdontogramInput
}

export type Unit27UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit27CreateWithoutOdontogramInput
  connect?: Unit27WhereUniqueInput
  update?: Unit27UpdateWithoutOdontogramDataInput
  upsert?: Unit27UpsertWithoutOdontogramInput
}

export type Unit28Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit28UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit28Updatewhat_was_updatedInput
}

export type Unit28UpsertWithoutOdontogramInput = {
  update: Unit28UpdateWithoutOdontogramDataInput
  create: Unit28CreateWithoutOdontogramInput
}

export type Unit28UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit28CreateWithoutOdontogramInput
  connect?: Unit28WhereUniqueInput
  update?: Unit28UpdateWithoutOdontogramDataInput
  upsert?: Unit28UpsertWithoutOdontogramInput
}

export type Unit31Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit31UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit31Updatewhat_was_updatedInput
}

export type Unit31UpsertWithoutOdontogramInput = {
  update: Unit31UpdateWithoutOdontogramDataInput
  create: Unit31CreateWithoutOdontogramInput
}

export type Unit31UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit31CreateWithoutOdontogramInput
  connect?: Unit31WhereUniqueInput
  update?: Unit31UpdateWithoutOdontogramDataInput
  upsert?: Unit31UpsertWithoutOdontogramInput
}

export type Unit32Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit32UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit32Updatewhat_was_updatedInput
}

export type Unit32UpsertWithoutOdontogramInput = {
  update: Unit32UpdateWithoutOdontogramDataInput
  create: Unit32CreateWithoutOdontogramInput
}

export type Unit32UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit32CreateWithoutOdontogramInput
  connect?: Unit32WhereUniqueInput
  update?: Unit32UpdateWithoutOdontogramDataInput
  upsert?: Unit32UpsertWithoutOdontogramInput
}

export type Unit33Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit33UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit33Updatewhat_was_updatedInput
}

export type Unit33UpsertWithoutOdontogramInput = {
  update: Unit33UpdateWithoutOdontogramDataInput
  create: Unit33CreateWithoutOdontogramInput
}

export type Unit33UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit33CreateWithoutOdontogramInput
  connect?: Unit33WhereUniqueInput
  update?: Unit33UpdateWithoutOdontogramDataInput
  upsert?: Unit33UpsertWithoutOdontogramInput
}

export type Unit34Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit34UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit34Updatewhat_was_updatedInput
}

export type Unit34UpsertWithoutOdontogramInput = {
  update: Unit34UpdateWithoutOdontogramDataInput
  create: Unit34CreateWithoutOdontogramInput
}

export type Unit34UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit34CreateWithoutOdontogramInput
  connect?: Unit34WhereUniqueInput
  update?: Unit34UpdateWithoutOdontogramDataInput
  upsert?: Unit34UpsertWithoutOdontogramInput
}

export type Unit35Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit35UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit35Updatewhat_was_updatedInput
}

export type Unit35UpsertWithoutOdontogramInput = {
  update: Unit35UpdateWithoutOdontogramDataInput
  create: Unit35CreateWithoutOdontogramInput
}

export type Unit35UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit35CreateWithoutOdontogramInput
  connect?: Unit35WhereUniqueInput
  update?: Unit35UpdateWithoutOdontogramDataInput
  upsert?: Unit35UpsertWithoutOdontogramInput
}

export type Unit36Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit36UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit36Updatewhat_was_updatedInput
}

export type Unit36UpsertWithoutOdontogramInput = {
  update: Unit36UpdateWithoutOdontogramDataInput
  create: Unit36CreateWithoutOdontogramInput
}

export type Unit36UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit36CreateWithoutOdontogramInput
  connect?: Unit36WhereUniqueInput
  update?: Unit36UpdateWithoutOdontogramDataInput
  upsert?: Unit36UpsertWithoutOdontogramInput
}

export type Unit37Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit37UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit37Updatewhat_was_updatedInput
}

export type Unit37UpsertWithoutOdontogramInput = {
  update: Unit37UpdateWithoutOdontogramDataInput
  create: Unit37CreateWithoutOdontogramInput
}

export type Unit37UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit37CreateWithoutOdontogramInput
  connect?: Unit37WhereUniqueInput
  update?: Unit37UpdateWithoutOdontogramDataInput
  upsert?: Unit37UpsertWithoutOdontogramInput
}

export type Unit38Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit38UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit38Updatewhat_was_updatedInput
}

export type Unit38UpsertWithoutOdontogramInput = {
  update: Unit38UpdateWithoutOdontogramDataInput
  create: Unit38CreateWithoutOdontogramInput
}

export type Unit38UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit38CreateWithoutOdontogramInput
  connect?: Unit38WhereUniqueInput
  update?: Unit38UpdateWithoutOdontogramDataInput
  upsert?: Unit38UpsertWithoutOdontogramInput
}

export type Unit41Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit41UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit41Updatewhat_was_updatedInput
}

export type Unit41UpsertWithoutOdontogramInput = {
  update: Unit41UpdateWithoutOdontogramDataInput
  create: Unit41CreateWithoutOdontogramInput
}

export type Unit41UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit41CreateWithoutOdontogramInput
  connect?: Unit41WhereUniqueInput
  update?: Unit41UpdateWithoutOdontogramDataInput
  upsert?: Unit41UpsertWithoutOdontogramInput
}

export type Unit42Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit42UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit42Updatewhat_was_updatedInput
}

export type Unit42UpsertWithoutOdontogramInput = {
  update: Unit42UpdateWithoutOdontogramDataInput
  create: Unit42CreateWithoutOdontogramInput
}

export type Unit42UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit42CreateWithoutOdontogramInput
  connect?: Unit42WhereUniqueInput
  update?: Unit42UpdateWithoutOdontogramDataInput
  upsert?: Unit42UpsertWithoutOdontogramInput
}

export type Unit43Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit43UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit43Updatewhat_was_updatedInput
}

export type Unit43UpsertWithoutOdontogramInput = {
  update: Unit43UpdateWithoutOdontogramDataInput
  create: Unit43CreateWithoutOdontogramInput
}

export type Unit43UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit43CreateWithoutOdontogramInput
  connect?: Unit43WhereUniqueInput
  update?: Unit43UpdateWithoutOdontogramDataInput
  upsert?: Unit43UpsertWithoutOdontogramInput
}

export type Unit44Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit44UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit44Updatewhat_was_updatedInput
}

export type Unit44UpsertWithoutOdontogramInput = {
  update: Unit44UpdateWithoutOdontogramDataInput
  create: Unit44CreateWithoutOdontogramInput
}

export type Unit44UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit44CreateWithoutOdontogramInput
  connect?: Unit44WhereUniqueInput
  update?: Unit44UpdateWithoutOdontogramDataInput
  upsert?: Unit44UpsertWithoutOdontogramInput
}

export type Unit45Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit45UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit45Updatewhat_was_updatedInput
}

export type Unit45UpsertWithoutOdontogramInput = {
  update: Unit45UpdateWithoutOdontogramDataInput
  create: Unit45CreateWithoutOdontogramInput
}

export type Unit45UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit45CreateWithoutOdontogramInput
  connect?: Unit45WhereUniqueInput
  update?: Unit45UpdateWithoutOdontogramDataInput
  upsert?: Unit45UpsertWithoutOdontogramInput
}

export type Unit46Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit46UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit46Updatewhat_was_updatedInput
}

export type Unit46UpsertWithoutOdontogramInput = {
  update: Unit46UpdateWithoutOdontogramDataInput
  create: Unit46CreateWithoutOdontogramInput
}

export type Unit46UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit46CreateWithoutOdontogramInput
  connect?: Unit46WhereUniqueInput
  update?: Unit46UpdateWithoutOdontogramDataInput
  upsert?: Unit46UpsertWithoutOdontogramInput
}

export type Unit47Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit47UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit47Updatewhat_was_updatedInput
}

export type Unit47UpsertWithoutOdontogramInput = {
  update: Unit47UpdateWithoutOdontogramDataInput
  create: Unit47CreateWithoutOdontogramInput
}

export type Unit47UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit47CreateWithoutOdontogramInput
  connect?: Unit47WhereUniqueInput
  update?: Unit47UpdateWithoutOdontogramDataInput
  upsert?: Unit47UpsertWithoutOdontogramInput
}

export type Unit48Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit48UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit48Updatewhat_was_updatedInput
}

export type Unit48UpsertWithoutOdontogramInput = {
  update: Unit48UpdateWithoutOdontogramDataInput
  create: Unit48CreateWithoutOdontogramInput
}

export type Unit48UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit48CreateWithoutOdontogramInput
  connect?: Unit48WhereUniqueInput
  update?: Unit48UpdateWithoutOdontogramDataInput
  upsert?: Unit48UpsertWithoutOdontogramInput
}

export type Unit51Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit51UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit51Updatewhat_was_updatedInput
}

export type Unit51UpsertWithoutOdontogramInput = {
  update: Unit51UpdateWithoutOdontogramDataInput
  create: Unit51CreateWithoutOdontogramInput
}

export type Unit51UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit51CreateWithoutOdontogramInput
  connect?: Unit51WhereUniqueInput
  update?: Unit51UpdateWithoutOdontogramDataInput
  upsert?: Unit51UpsertWithoutOdontogramInput
}

export type Unit52Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit52UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit52Updatewhat_was_updatedInput
}

export type Unit52UpsertWithoutOdontogramInput = {
  update: Unit52UpdateWithoutOdontogramDataInput
  create: Unit52CreateWithoutOdontogramInput
}

export type Unit52UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit52CreateWithoutOdontogramInput
  connect?: Unit52WhereUniqueInput
  update?: Unit52UpdateWithoutOdontogramDataInput
  upsert?: Unit52UpsertWithoutOdontogramInput
}

export type Unit53Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit53UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit53Updatewhat_was_updatedInput
}

export type Unit53UpsertWithoutOdontogramInput = {
  update: Unit53UpdateWithoutOdontogramDataInput
  create: Unit53CreateWithoutOdontogramInput
}

export type Unit53UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit53CreateWithoutOdontogramInput
  connect?: Unit53WhereUniqueInput
  update?: Unit53UpdateWithoutOdontogramDataInput
  upsert?: Unit53UpsertWithoutOdontogramInput
}

export type Unit54Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit54UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit54Updatewhat_was_updatedInput
}

export type Unit54UpsertWithoutOdontogramInput = {
  update: Unit54UpdateWithoutOdontogramDataInput
  create: Unit54CreateWithoutOdontogramInput
}

export type Unit54UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit54CreateWithoutOdontogramInput
  connect?: Unit54WhereUniqueInput
  update?: Unit54UpdateWithoutOdontogramDataInput
  upsert?: Unit54UpsertWithoutOdontogramInput
}

export type Unit55Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit55UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit55Updatewhat_was_updatedInput
}

export type Unit55UpsertWithoutOdontogramInput = {
  update: Unit55UpdateWithoutOdontogramDataInput
  create: Unit55CreateWithoutOdontogramInput
}

export type Unit55UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit55CreateWithoutOdontogramInput
  connect?: Unit55WhereUniqueInput
  update?: Unit55UpdateWithoutOdontogramDataInput
  upsert?: Unit55UpsertWithoutOdontogramInput
}

export type Unit61Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit61UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit61Updatewhat_was_updatedInput
}

export type Unit61UpsertWithoutOdontogramInput = {
  update: Unit61UpdateWithoutOdontogramDataInput
  create: Unit61CreateWithoutOdontogramInput
}

export type Unit61UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit61CreateWithoutOdontogramInput
  connect?: Unit61WhereUniqueInput
  update?: Unit61UpdateWithoutOdontogramDataInput
  upsert?: Unit61UpsertWithoutOdontogramInput
}

export type Unit62Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit62UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit62Updatewhat_was_updatedInput
}

export type Unit62UpsertWithoutOdontogramInput = {
  update: Unit62UpdateWithoutOdontogramDataInput
  create: Unit62CreateWithoutOdontogramInput
}

export type Unit62UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit62CreateWithoutOdontogramInput
  connect?: Unit62WhereUniqueInput
  update?: Unit62UpdateWithoutOdontogramDataInput
  upsert?: Unit62UpsertWithoutOdontogramInput
}

export type Unit63Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit63UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit63Updatewhat_was_updatedInput
}

export type Unit63UpsertWithoutOdontogramInput = {
  update: Unit63UpdateWithoutOdontogramDataInput
  create: Unit63CreateWithoutOdontogramInput
}

export type Unit63UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit63CreateWithoutOdontogramInput
  connect?: Unit63WhereUniqueInput
  update?: Unit63UpdateWithoutOdontogramDataInput
  upsert?: Unit63UpsertWithoutOdontogramInput
}

export type Unit64Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit64UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit64Updatewhat_was_updatedInput
}

export type Unit64UpsertWithoutOdontogramInput = {
  update: Unit64UpdateWithoutOdontogramDataInput
  create: Unit64CreateWithoutOdontogramInput
}

export type Unit64UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit64CreateWithoutOdontogramInput
  connect?: Unit64WhereUniqueInput
  update?: Unit64UpdateWithoutOdontogramDataInput
  upsert?: Unit64UpsertWithoutOdontogramInput
}

export type Unit65Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit65UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit65Updatewhat_was_updatedInput
}

export type Unit65UpsertWithoutOdontogramInput = {
  update: Unit65UpdateWithoutOdontogramDataInput
  create: Unit65CreateWithoutOdontogramInput
}

export type Unit65UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit65CreateWithoutOdontogramInput
  connect?: Unit65WhereUniqueInput
  update?: Unit65UpdateWithoutOdontogramDataInput
  upsert?: Unit65UpsertWithoutOdontogramInput
}

export type Unit71Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit71UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit71Updatewhat_was_updatedInput
}

export type Unit71UpsertWithoutOdontogramInput = {
  update: Unit71UpdateWithoutOdontogramDataInput
  create: Unit71CreateWithoutOdontogramInput
}

export type Unit71UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit71CreateWithoutOdontogramInput
  connect?: Unit71WhereUniqueInput
  update?: Unit71UpdateWithoutOdontogramDataInput
  upsert?: Unit71UpsertWithoutOdontogramInput
}

export type Unit72Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit72UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit72Updatewhat_was_updatedInput
}

export type Unit72UpsertWithoutOdontogramInput = {
  update: Unit72UpdateWithoutOdontogramDataInput
  create: Unit72CreateWithoutOdontogramInput
}

export type Unit72UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit72CreateWithoutOdontogramInput
  connect?: Unit72WhereUniqueInput
  update?: Unit72UpdateWithoutOdontogramDataInput
  upsert?: Unit72UpsertWithoutOdontogramInput
}

export type Unit73Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit73UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit73Updatewhat_was_updatedInput
}

export type Unit73UpsertWithoutOdontogramInput = {
  update: Unit73UpdateWithoutOdontogramDataInput
  create: Unit73CreateWithoutOdontogramInput
}

export type Unit73UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit73CreateWithoutOdontogramInput
  connect?: Unit73WhereUniqueInput
  update?: Unit73UpdateWithoutOdontogramDataInput
  upsert?: Unit73UpsertWithoutOdontogramInput
}

export type Unit74Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit74UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit74Updatewhat_was_updatedInput
}

export type Unit74UpsertWithoutOdontogramInput = {
  update: Unit74UpdateWithoutOdontogramDataInput
  create: Unit74CreateWithoutOdontogramInput
}

export type Unit74UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit74CreateWithoutOdontogramInput
  connect?: Unit74WhereUniqueInput
  update?: Unit74UpdateWithoutOdontogramDataInput
  upsert?: Unit74UpsertWithoutOdontogramInput
}

export type Unit75Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit75UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit75Updatewhat_was_updatedInput
}

export type Unit75UpsertWithoutOdontogramInput = {
  update: Unit75UpdateWithoutOdontogramDataInput
  create: Unit75CreateWithoutOdontogramInput
}

export type Unit75UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit75CreateWithoutOdontogramInput
  connect?: Unit75WhereUniqueInput
  update?: Unit75UpdateWithoutOdontogramDataInput
  upsert?: Unit75UpsertWithoutOdontogramInput
}

export type Unit81Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit81UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit81Updatewhat_was_updatedInput
}

export type Unit81UpsertWithoutOdontogramInput = {
  update: Unit81UpdateWithoutOdontogramDataInput
  create: Unit81CreateWithoutOdontogramInput
}

export type Unit81UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit81CreateWithoutOdontogramInput
  connect?: Unit81WhereUniqueInput
  update?: Unit81UpdateWithoutOdontogramDataInput
  upsert?: Unit81UpsertWithoutOdontogramInput
}

export type Unit82Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit82UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit82Updatewhat_was_updatedInput
}

export type Unit82UpsertWithoutOdontogramInput = {
  update: Unit82UpdateWithoutOdontogramDataInput
  create: Unit82CreateWithoutOdontogramInput
}

export type Unit82UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit82CreateWithoutOdontogramInput
  connect?: Unit82WhereUniqueInput
  update?: Unit82UpdateWithoutOdontogramDataInput
  upsert?: Unit82UpsertWithoutOdontogramInput
}

export type Unit83Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit83UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit83Updatewhat_was_updatedInput
}

export type Unit83UpsertWithoutOdontogramInput = {
  update: Unit83UpdateWithoutOdontogramDataInput
  create: Unit83CreateWithoutOdontogramInput
}

export type Unit83UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit83CreateWithoutOdontogramInput
  connect?: Unit83WhereUniqueInput
  update?: Unit83UpdateWithoutOdontogramDataInput
  upsert?: Unit83UpsertWithoutOdontogramInput
}

export type Unit84Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit84UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit84Updatewhat_was_updatedInput
}

export type Unit84UpsertWithoutOdontogramInput = {
  update: Unit84UpdateWithoutOdontogramDataInput
  create: Unit84CreateWithoutOdontogramInput
}

export type Unit84UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit84CreateWithoutOdontogramInput
  connect?: Unit84WhereUniqueInput
  update?: Unit84UpdateWithoutOdontogramDataInput
  upsert?: Unit84UpsertWithoutOdontogramInput
}

export type Unit85Updatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Unit85UpdateWithoutOdontogramDataInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit85Updatewhat_was_updatedInput
}

export type Unit85UpsertWithoutOdontogramInput = {
  update: Unit85UpdateWithoutOdontogramDataInput
  create: Unit85CreateWithoutOdontogramInput
}

export type Unit85UpdateOneRequiredWithoutOdontogramInput = {
  create?: Unit85CreateWithoutOdontogramInput
  connect?: Unit85WhereUniqueInput
  update?: Unit85UpdateWithoutOdontogramDataInput
  upsert?: Unit85UpsertWithoutOdontogramInput
}

export type OdontogramUpdateWithoutPatientDataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutPatientInput = {
  update: OdontogramUpdateWithoutPatientDataInput
  create: OdontogramCreateWithoutPatientInput
}

export type OdontogramUpdateOneWithoutPatientInput = {
  create?: OdontogramCreateWithoutPatientInput
  connect?: OdontogramWhereUniqueInput
  disconnect?: boolean
  delete?: boolean
  update?: OdontogramUpdateWithoutPatientDataInput
  upsert?: OdontogramUpsertWithoutPatientInput
}

export type Dont_know_questionsUpdateWithoutPatientDataInput = {
  id?: string
  question?: string
  questionnaire_id?: string
}

export type Dont_know_questionsUpsertWithoutPatientInput = {
  update: Dont_know_questionsUpdateWithoutPatientDataInput
  create: Dont_know_questionsCreateWithoutPatientInput
}

export type Dont_know_questionsUpdateOneWithoutPatientInput = {
  create?: Dont_know_questionsCreateWithoutPatientInput
  connect?: Dont_know_questionsWhereUniqueInput
  disconnect?: boolean
  delete?: boolean
  update?: Dont_know_questionsUpdateWithoutPatientDataInput
  upsert?: Dont_know_questionsUpsertWithoutPatientInput
}

export type Treatment_evolutionUpdatetreatment_procedures_idsInput = {
  set?: Enumerable<string> | null
}

export type Treatment_evolutionUpdatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type ScheduleUpdateWithoutTreatment_evolutionDataInput = {
  date?: Date | string
  hour?: Date | string
  createdAt?: Date | string
  updatedAt?: Date | string
  dentist?: DentistUpdateOneRequiredWithoutSheduleInput | null
  patient?: PatientUpdateOneWithoutScheduleInput | null
}

export type ScheduleUpsertWithoutTreatment_evolutionInput = {
  update: ScheduleUpdateWithoutTreatment_evolutionDataInput
  create: ScheduleCreateWithoutTreatment_evolutionInput
}

export type ScheduleUpdateOneRequiredWithoutTreatment_evolutionInput = {
  create?: ScheduleCreateWithoutTreatment_evolutionInput
  connect?: ScheduleWhereUniqueInput
  update?: ScheduleUpdateWithoutTreatment_evolutionDataInput
  upsert?: ScheduleUpsertWithoutTreatment_evolutionInput
}

export type Clinic_procedures_particular_valuesUpdateWithoutProcedure_CIDDataInput = {
  cust?: number
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type Clinic_procedures_particular_valuesUpsertWithoutProcedure_CIDInput = {
  update: Clinic_procedures_particular_valuesUpdateWithoutProcedure_CIDDataInput
  create: Clinic_procedures_particular_valuesCreateWithoutProcedure_CIDInput
}

export type Clinic_procedures_particular_valuesUpdateOneRequiredWithoutProcedure_CIDInput = {
  create?: Clinic_procedures_particular_valuesCreateWithoutProcedure_CIDInput
  connect?: Clinic_procedures_particular_valuesWhereUniqueInput
  update?: Clinic_procedures_particular_valuesUpdateWithoutProcedure_CIDDataInput
  upsert?: Clinic_procedures_particular_valuesUpsertWithoutProcedure_CIDInput
}

export type EmailUpdateWithoutLegal_responsibleDataInput = {
  id?: string
  email?: string
  clinic?: ClinicUpdateOneWithoutEmailsInput | null
  techinical_mananger?: TechnicalmanagerUpdateOneWithoutEmailInput | null
  dentist?: DentistUpdateOneWithoutEmailInput | null
  patient?: PatientUpdateOneWithoutEmailInput | null
  Technicalmanager?: TechnicalmanagerUpdateOneWithoutEmailInput | null
  Legalresponsible?: LegalresponsibleUpdateOneWithoutEmailInput | null
  Patient?: PatientUpdateOneWithoutEmailInput | null
  Dentist?: DentistUpdateOneWithoutEmailInput | null
}

export type EmailUpdateWithWhereUniqueWithoutLegal_responsibleInput = {
  where: EmailWhereUniqueInput
  data: EmailUpdateWithoutLegal_responsibleDataInput
}

export type EmailUpsertWithWhereUniqueWithoutLegal_responsibleInput = {
  where: EmailWhereUniqueInput
  update: EmailUpdateWithoutLegal_responsibleDataInput
  create: EmailCreateWithoutLegal_responsibleInput
}

export type EmailUpdateManyWithoutLegal_responsibleInput = {
  create?: Enumerable<EmailCreateWithoutLegal_responsibleInput>
  connect?: Enumerable<EmailWhereUniqueInput>
  set?: Enumerable<EmailWhereUniqueInput>
  disconnect?: Enumerable<EmailWhereUniqueInput>
  delete?: Enumerable<EmailWhereUniqueInput>
  update?: Enumerable<EmailUpdateWithWhereUniqueWithoutLegal_responsibleInput>
  updateMany?: Enumerable<EmailUpdateManyWithWhereNestedInput> | null
  deleteMany?: Enumerable<EmailScalarWhereInput>
  upsert?: Enumerable<EmailUpsertWithWhereUniqueWithoutLegal_responsibleInput>
}

export type LegalresponsibleUpdateWithoutClinicDataInput = {
  cpf?: string
  fullname?: string
  contactmeans?: Contact_means | null
  active?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: LegalresponsibleUpdatewhat_was_updatedInput
  email?: EmailUpdateManyWithoutLegalresponsibleInput | null
  Email?: EmailUpdateManyWithoutLegal_responsibleInput | null
}

export type LegalresponsibleUpsertWithoutClinicInput = {
  update: LegalresponsibleUpdateWithoutClinicDataInput
  create: LegalresponsibleCreateWithoutClinicInput
}

export type LegalresponsibleUpdateOneWithoutClinicInput = {
  create?: LegalresponsibleCreateWithoutClinicInput
  connect?: LegalresponsibleWhereUniqueInput
  disconnect?: boolean
  delete?: boolean
  update?: LegalresponsibleUpdateWithoutClinicDataInput
  upsert?: LegalresponsibleUpsertWithoutClinicInput
}

export type LogsUpdateWithoutClinicDataInput = {
  id?: number
  description?: string
  createdAt?: Date | string
}

export type LogsUpdateWithWhereUniqueWithoutClinicInput = {
  where: LogsWhereUniqueInput
  data: LogsUpdateWithoutClinicDataInput
}

export type LogsScalarWhereInput = {
  id?: number | IntFilter
  clinic_id?: string | StringFilter
  description?: string | StringFilter
  createdAt?: Date | string | DateTimeFilter
  AND?: Enumerable<LogsScalarWhereInput>
  OR?: Array<LogsScalarWhereInput>
  NOT?: Enumerable<LogsScalarWhereInput>
}

export type LogsUpdateManyDataInput = {
  id?: number
  description?: string
  createdAt?: Date | string
}

export type LogsUpdateManyWithWhereNestedInput = {
  where: LogsScalarWhereInput
  data: LogsUpdateManyDataInput
}

export type LogsUpsertWithWhereUniqueWithoutClinicInput = {
  where: LogsWhereUniqueInput
  update: LogsUpdateWithoutClinicDataInput
  create: LogsCreateWithoutClinicInput
}

export type LogsUpdateManyWithoutClinicInput = {
  create?: Enumerable<LogsCreateWithoutClinicInput>
  connect?: Enumerable<LogsWhereUniqueInput>
  set?: Enumerable<LogsWhereUniqueInput>
  disconnect?: Enumerable<LogsWhereUniqueInput>
  delete?: Enumerable<LogsWhereUniqueInput>
  update?: Enumerable<LogsUpdateWithWhereUniqueWithoutClinicInput>
  updateMany?: Enumerable<LogsUpdateManyWithWhereNestedInput> | null
  deleteMany?: Enumerable<LogsScalarWhereInput>
  upsert?: Enumerable<LogsUpsertWithWhereUniqueWithoutClinicInput>
}

export type Clinic_payment_informationUpdatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Clinic_payment_informationUpdateWithoutClinicDataInput = {
  id?: string
  payment_method?: Payment_method
  registered_credit_card?: boolean
  registered_debit_card?: boolean
  payment_day?: number | null
  next_payment?: Date | string | null
  credit_card_number?: string | null
  credit_card_CCV?: string | null
  credit_card_name?: string | null
  debit_card_number?: string | null
  debit_card_CCV?: string | null
  debit_card_name?: string | null
  delayed_payment?: boolean | null
  delayed_days?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Clinic_payment_informationUpdatewhat_was_updatedInput
}

export type Clinic_payment_informationUpdateWithWhereUniqueWithoutClinicInput = {
  where: Clinic_payment_informationWhereUniqueInput
  data: Clinic_payment_informationUpdateWithoutClinicDataInput
}

export type Clinic_payment_informationScalarWhereInput = {
  id?: string | StringFilter
  clinic_id?: string | StringFilter
  payment_method?: Payment_method | Payment_methodFilter
  registered_credit_card?: boolean | BooleanFilter
  registered_debit_card?: boolean | BooleanFilter
  payment_day?: number | NullableIntFilter | null
  next_payment?: Date | string | NullableDateTimeFilter | null
  credit_card_number?: string | NullableStringFilter | null
  credit_card_CCV?: string | NullableStringFilter | null
  credit_card_name?: string | NullableStringFilter | null
  debit_card_number?: string | NullableStringFilter | null
  debit_card_CCV?: string | NullableStringFilter | null
  debit_card_name?: string | NullableStringFilter | null
  delayed_payment?: boolean | NullableBooleanFilter | null
  delayed_days?: number | NullableIntFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Clinic_payment_informationScalarWhereInput>
  OR?: Array<Clinic_payment_informationScalarWhereInput>
  NOT?: Enumerable<Clinic_payment_informationScalarWhereInput>
}

export type Clinic_payment_informationUpdateManyDataInput = {
  id?: string
  payment_method?: Payment_method
  registered_credit_card?: boolean
  registered_debit_card?: boolean
  payment_day?: number | null
  next_payment?: Date | string | null
  credit_card_number?: string | null
  credit_card_CCV?: string | null
  credit_card_name?: string | null
  debit_card_number?: string | null
  debit_card_CCV?: string | null
  debit_card_name?: string | null
  delayed_payment?: boolean | null
  delayed_days?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Clinic_payment_informationUpdatewhat_was_updatedInput
}

export type Clinic_payment_informationUpdateManyWithWhereNestedInput = {
  where: Clinic_payment_informationScalarWhereInput
  data: Clinic_payment_informationUpdateManyDataInput
}

export type Clinic_payment_informationUpsertWithWhereUniqueWithoutClinicInput = {
  where: Clinic_payment_informationWhereUniqueInput
  update: Clinic_payment_informationUpdateWithoutClinicDataInput
  create: Clinic_payment_informationCreateWithoutClinicInput
}

export type Clinic_payment_informationUpdateManyWithoutClinicInput = {
  create?: Enumerable<Clinic_payment_informationCreateWithoutClinicInput>
  connect?: Enumerable<Clinic_payment_informationWhereUniqueInput>
  set?: Enumerable<Clinic_payment_informationWhereUniqueInput>
  disconnect?: Enumerable<Clinic_payment_informationWhereUniqueInput>
  delete?: Enumerable<Clinic_payment_informationWhereUniqueInput>
  update?: Enumerable<Clinic_payment_informationUpdateWithWhereUniqueWithoutClinicInput>
  updateMany?: Enumerable<Clinic_payment_informationUpdateManyWithWhereNestedInput> | null
  deleteMany?: Enumerable<Clinic_payment_informationScalarWhereInput>
  upsert?: Enumerable<Clinic_payment_informationUpsertWithWhereUniqueWithoutClinicInput>
}

export type Clinic_finance_optionsUpdatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Clinic_finance_optionsUpdateWithoutClinicDataInput = {
  calculation_hour_of_day?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Clinic_finance_optionsUpdatewhat_was_updatedInput
}

export type Clinic_finance_optionsUpdateWithWhereUniqueWithoutClinicInput = {
  where: Clinic_finance_optionsWhereUniqueInput
  data: Clinic_finance_optionsUpdateWithoutClinicDataInput
}

export type Clinic_finance_optionsScalarWhereInput = {
  id?: string | StringFilter
  calculation_hour_of_day?: number | IntFilter
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Clinic_finance_optionsScalarWhereInput>
  OR?: Array<Clinic_finance_optionsScalarWhereInput>
  NOT?: Enumerable<Clinic_finance_optionsScalarWhereInput>
}

export type Clinic_finance_optionsUpdateManyDataInput = {
  calculation_hour_of_day?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Clinic_finance_optionsUpdatewhat_was_updatedInput
}

export type Clinic_finance_optionsUpdateManyWithWhereNestedInput = {
  where: Clinic_finance_optionsScalarWhereInput
  data: Clinic_finance_optionsUpdateManyDataInput
}

export type Clinic_finance_optionsUpsertWithWhereUniqueWithoutClinicInput = {
  where: Clinic_finance_optionsWhereUniqueInput
  update: Clinic_finance_optionsUpdateWithoutClinicDataInput
  create: Clinic_finance_optionsCreateWithoutClinicInput
}

export type Clinic_finance_optionsUpdateManyWithoutClinicInput = {
  create?: Enumerable<Clinic_finance_optionsCreateWithoutClinicInput>
  connect?: Enumerable<Clinic_finance_optionsWhereUniqueInput>
  set?: Enumerable<Clinic_finance_optionsWhereUniqueInput>
  disconnect?: Enumerable<Clinic_finance_optionsWhereUniqueInput>
  delete?: Enumerable<Clinic_finance_optionsWhereUniqueInput>
  update?: Enumerable<Clinic_finance_optionsUpdateWithWhereUniqueWithoutClinicInput>
  updateMany?: Enumerable<Clinic_finance_optionsUpdateManyWithWhereNestedInput> | null
  deleteMany?: Enumerable<Clinic_finance_optionsScalarWhereInput>
  upsert?: Enumerable<Clinic_finance_optionsUpsertWithWhereUniqueWithoutClinicInput>
}

export type Clinic_finance_monthUpdatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Clinic_finance_monthUpdateWithoutClinicDataInput = {
  id?: string
  month?: number
  year?: number
  wage_payment_day?: number | null
  wages_paid?: boolean | null
  total_wage?: number | null
  dentists_comissions?: number | null
  month_all_profit?: number | null
  month_discounts?: number | null
  month_brute_profit?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Clinic_finance_monthUpdatewhat_was_updatedInput
}

export type Clinic_finance_monthUpdateWithWhereUniqueWithoutClinicInput = {
  where: Clinic_finance_monthWhereUniqueInput
  data: Clinic_finance_monthUpdateWithoutClinicDataInput
}

export type Clinic_finance_monthScalarWhereInput = {
  id?: string | StringFilter
  clinid_id?: string | StringFilter
  month?: number | IntFilter
  year?: number | IntFilter
  wage_payment_day?: number | NullableIntFilter | null
  wages_paid?: boolean | NullableBooleanFilter | null
  total_wage?: number | NullableFloatFilter | null
  dentists_comissions?: number | NullableFloatFilter | null
  month_all_profit?: number | NullableFloatFilter | null
  month_discounts?: number | NullableFloatFilter | null
  month_brute_profit?: number | NullableFloatFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Clinic_finance_monthScalarWhereInput>
  OR?: Array<Clinic_finance_monthScalarWhereInput>
  NOT?: Enumerable<Clinic_finance_monthScalarWhereInput>
}

export type Clinic_finance_monthUpdateManyDataInput = {
  id?: string
  month?: number
  year?: number
  wage_payment_day?: number | null
  wages_paid?: boolean | null
  total_wage?: number | null
  dentists_comissions?: number | null
  month_all_profit?: number | null
  month_discounts?: number | null
  month_brute_profit?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Clinic_finance_monthUpdatewhat_was_updatedInput
}

export type Clinic_finance_monthUpdateManyWithWhereNestedInput = {
  where: Clinic_finance_monthScalarWhereInput
  data: Clinic_finance_monthUpdateManyDataInput
}

export type Clinic_finance_monthUpsertWithWhereUniqueWithoutClinicInput = {
  where: Clinic_finance_monthWhereUniqueInput
  update: Clinic_finance_monthUpdateWithoutClinicDataInput
  create: Clinic_finance_monthCreateWithoutClinicInput
}

export type Clinic_finance_monthUpdateManyWithoutClinicInput = {
  create?: Enumerable<Clinic_finance_monthCreateWithoutClinicInput>
  connect?: Enumerable<Clinic_finance_monthWhereUniqueInput>
  set?: Enumerable<Clinic_finance_monthWhereUniqueInput>
  disconnect?: Enumerable<Clinic_finance_monthWhereUniqueInput>
  delete?: Enumerable<Clinic_finance_monthWhereUniqueInput>
  update?: Enumerable<Clinic_finance_monthUpdateWithWhereUniqueWithoutClinicInput>
  updateMany?: Enumerable<Clinic_finance_monthUpdateManyWithWhereNestedInput> | null
  deleteMany?: Enumerable<Clinic_finance_monthScalarWhereInput>
  upsert?: Enumerable<Clinic_finance_monthUpsertWithWhereUniqueWithoutClinicInput>
}

export type Clinic_finance_dayUpdatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Clinic_finance_dayUpdateWithoutClinicDataInput = {
  id?: string
  day?: number
  month?: number
  year?: number
  total_income?: number | null
  dentists_part?: number | null
  clinic_income?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Clinic_finance_dayUpdatewhat_was_updatedInput
}

export type Clinic_finance_dayUpdateWithWhereUniqueWithoutClinicInput = {
  where: Clinic_finance_dayWhereUniqueInput
  data: Clinic_finance_dayUpdateWithoutClinicDataInput
}

export type Clinic_finance_dayScalarWhereInput = {
  id?: string | StringFilter
  clinid_id?: string | StringFilter
  day?: number | IntFilter
  month?: number | IntFilter
  year?: number | IntFilter
  total_income?: number | NullableFloatFilter | null
  dentists_part?: number | NullableFloatFilter | null
  clinic_income?: number | NullableFloatFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Clinic_finance_dayScalarWhereInput>
  OR?: Array<Clinic_finance_dayScalarWhereInput>
  NOT?: Enumerable<Clinic_finance_dayScalarWhereInput>
}

export type Clinic_finance_dayUpdateManyDataInput = {
  id?: string
  day?: number
  month?: number
  year?: number
  total_income?: number | null
  dentists_part?: number | null
  clinic_income?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Clinic_finance_dayUpdatewhat_was_updatedInput
}

export type Clinic_finance_dayUpdateManyWithWhereNestedInput = {
  where: Clinic_finance_dayScalarWhereInput
  data: Clinic_finance_dayUpdateManyDataInput
}

export type Clinic_finance_dayUpsertWithWhereUniqueWithoutClinicInput = {
  where: Clinic_finance_dayWhereUniqueInput
  update: Clinic_finance_dayUpdateWithoutClinicDataInput
  create: Clinic_finance_dayCreateWithoutClinicInput
}

export type Clinic_finance_dayUpdateManyWithoutClinicInput = {
  create?: Enumerable<Clinic_finance_dayCreateWithoutClinicInput>
  connect?: Enumerable<Clinic_finance_dayWhereUniqueInput>
  set?: Enumerable<Clinic_finance_dayWhereUniqueInput>
  disconnect?: Enumerable<Clinic_finance_dayWhereUniqueInput>
  delete?: Enumerable<Clinic_finance_dayWhereUniqueInput>
  update?: Enumerable<Clinic_finance_dayUpdateWithWhereUniqueWithoutClinicInput>
  updateMany?: Enumerable<Clinic_finance_dayUpdateManyWithWhereNestedInput> | null
  deleteMany?: Enumerable<Clinic_finance_dayScalarWhereInput>
  upsert?: Enumerable<Clinic_finance_dayUpsertWithWhereUniqueWithoutClinicInput>
}

export type ChairsUpdatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Chair_finance_dayUpdatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type Clinic_finance_procedureUpdatewhat_was_updatedInput = {
  set?: Enumerable<string> | null
}

export type ClinicUpdateWithoutDestistsDataInput = {
  registered_id?: string
  cnpj?: string
  socialreason?: string
  fantasy_name?: string
  multipleclinics?: boolean
  numberofbranches?: number
  dentalchairs?: number | null
  averagepatientsperday?: number | null
  country?: string | null
  state?: string | null
  city?: string | null
  neighborhood?: string | null
  CEP?: string | null
  website?: string | null
  password?: string | null
  ssl_enabled?: boolean | null
  two_factor_autentication?: boolean | null
  access_blocked?: boolean | null
  free_trial?: boolean
  free_trial_days_left?: number
  language?: Language
  createdAt?: Date | string
  updatedAt?: Date | string
  emails?: EmailUpdateManyWithoutClinicInput | null
  clinic_phones?: Clinic_phonesUpdateManyWithoutClinicInput | null
  patients?: PatientUpdateManyWithoutClinicInput | null
  employeers?: EmployeerUpdateManyWithoutClinicInput | null
  technicalmanager?: TechnicalmanagerUpdateOneWithoutClinicInput | null
  legalresponsible?: LegalresponsibleUpdateOneWithoutClinicInput | null
  insuranses?: Dental_insuranceUpdateManyWithoutClinicInput | null
  logs?: LogsUpdateManyWithoutClinicInput | null
  Clinic_payment_information?: Clinic_payment_informationUpdateManyWithoutClinicInput | null
  Clinic_finance_options?: Clinic_finance_optionsUpdateManyWithoutClinicInput | null
  Clinic_finance_month?: Clinic_finance_monthUpdateManyWithoutClinicInput | null
  Clinic_finance_day?: Clinic_finance_dayUpdateManyWithoutClinicInput | null
  Chairs?: ChairsUpdateManyWithoutClinicInput | null
  Chair_finance_day?: Chair_finance_dayUpdateManyWithoutClinicInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureUpdateManyWithoutClinicInput | null
  Patient?: PatientUpdateManyWithoutClinicInput | null
  Dentist?: DentistUpdateManyWithoutClinicInput | null
}

export type ClinicUpsertWithoutDestistsInput = {
  update: ClinicUpdateWithoutDestistsDataInput
  create: ClinicCreateWithoutDestistsInput
}

export type ClinicUpdateOneWithoutDestistsInput = {
  create?: ClinicCreateWithoutDestistsInput
  connect?: ClinicWhereUniqueInput
  disconnect?: boolean
  delete?: boolean
  update?: ClinicUpdateWithoutDestistsDataInput
  upsert?: ClinicUpsertWithoutDestistsInput
}

export type DentistUpdateWithoutPatientsDataInput = {
  id?: string
  CRO_number?: string
  firstname?: string
  lastname?: string
  username?: string
  password?: string
  contactmeans?: Contact_means | null
  cellphone_number?: string | null
  active?: boolean
  comission?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: string
  shedule?: ScheduleUpdateOneRequiredWithoutDentistInput | null
  clinic?: ClinicUpdateOneRequiredWithoutDentistInput | null
  email?: EmailUpdateManyWithoutDentistInput | null
  specialization?: Clinic_specializationsUpdateManyWithoutDentistInput | null
  ortodontics_treatments?: OrtodonticsUpdateManyWithoutProfessionalsInput | null
  implantology_treatments?: ImplantologyUpdateManyWithoutProfessionalsInput | null
  Clinic?: ClinicUpdateOneWithoutDestistsInput | null
  Email?: EmailUpdateManyWithoutDentistInput | null
}

export type DentistUpdateWithWhereUniqueWithoutPatientsInput = {
  where: DentistWhereUniqueInput
  data: DentistUpdateWithoutPatientsDataInput
}

export type DentistScalarWhereInput = {
  id?: string | UUIDFilter
  CRO_number?: string | StringFilter
  firstname?: string | StringFilter
  lastname?: string | StringFilter
  username?: string | StringFilter
  password?: string | StringFilter
  contactmeans?: Contact_means | NullableContact_meansFilter | null
  cellphone_number?: string | NullableStringFilter | null
  clinic_id?: string | StringFilter
  email?: EmailFilter | null
  active?: boolean | BooleanFilter
  specialization?: Clinic_specializationsFilter | null
  ortodontics_treatments?: OrtodonticsFilter | null
  implantology_treatments?: ImplantologyFilter | null
  comission?: number | NullableFloatFilter | null
  patients?: PatientFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  role?: string | StringFilter
  clinicRegistered_id?: string | NullableStringFilter | null
  Email?: EmailFilter | null
  AND?: Enumerable<DentistScalarWhereInput>
  OR?: Array<DentistScalarWhereInput>
  NOT?: Enumerable<DentistScalarWhereInput>
}

export type DentistUpdateManyDataInput = {
  id?: string
  CRO_number?: string
  firstname?: string
  lastname?: string
  username?: string
  password?: string
  contactmeans?: Contact_means | null
  cellphone_number?: string | null
  active?: boolean
  comission?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: string
}

export type DentistUpdateManyWithWhereNestedInput = {
  where: DentistScalarWhereInput
  data: DentistUpdateManyDataInput
}

export type DentistUpsertWithWhereUniqueWithoutPatientsInput = {
  where: DentistWhereUniqueInput
  update: DentistUpdateWithoutPatientsDataInput
  create: DentistCreateWithoutPatientsInput
}

export type DentistUpdateManyWithoutPatientsInput = {
  create?: Enumerable<DentistCreateWithoutPatientsInput>
  connect?: Enumerable<DentistWhereUniqueInput>
  set?: Enumerable<DentistWhereUniqueInput>
  disconnect?: Enumerable<DentistWhereUniqueInput>
  delete?: Enumerable<DentistWhereUniqueInput>
  update?: Enumerable<DentistUpdateWithWhereUniqueWithoutPatientsInput>
  updateMany?: Enumerable<DentistUpdateManyWithWhereNestedInput> | null
  deleteMany?: Enumerable<DentistScalarWhereInput>
  upsert?: Enumerable<DentistUpsertWithWhereUniqueWithoutPatientsInput>
}

export type ClinicUpdateWithoutPatientsDataInput = {
  registered_id?: string
  cnpj?: string
  socialreason?: string
  fantasy_name?: string
  multipleclinics?: boolean
  numberofbranches?: number
  dentalchairs?: number | null
  averagepatientsperday?: number | null
  country?: string | null
  state?: string | null
  city?: string | null
  neighborhood?: string | null
  CEP?: string | null
  website?: string | null
  password?: string | null
  ssl_enabled?: boolean | null
  two_factor_autentication?: boolean | null
  access_blocked?: boolean | null
  free_trial?: boolean
  free_trial_days_left?: number
  language?: Language
  createdAt?: Date | string
  updatedAt?: Date | string
  emails?: EmailUpdateManyWithoutClinicInput | null
  clinic_phones?: Clinic_phonesUpdateManyWithoutClinicInput | null
  destists?: DentistUpdateManyWithoutClinicInput | null
  employeers?: EmployeerUpdateManyWithoutClinicInput | null
  technicalmanager?: TechnicalmanagerUpdateOneWithoutClinicInput | null
  legalresponsible?: LegalresponsibleUpdateOneWithoutClinicInput | null
  insuranses?: Dental_insuranceUpdateManyWithoutClinicInput | null
  logs?: LogsUpdateManyWithoutClinicInput | null
  Clinic_payment_information?: Clinic_payment_informationUpdateManyWithoutClinicInput | null
  Clinic_finance_options?: Clinic_finance_optionsUpdateManyWithoutClinicInput | null
  Clinic_finance_month?: Clinic_finance_monthUpdateManyWithoutClinicInput | null
  Clinic_finance_day?: Clinic_finance_dayUpdateManyWithoutClinicInput | null
  Chairs?: ChairsUpdateManyWithoutClinicInput | null
  Chair_finance_day?: Chair_finance_dayUpdateManyWithoutClinicInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureUpdateManyWithoutClinicInput | null
  Patient?: PatientUpdateManyWithoutClinicInput | null
  Dentist?: DentistUpdateManyWithoutClinicInput | null
}

export type ClinicUpsertWithoutPatientsInput = {
  update: ClinicUpdateWithoutPatientsDataInput
  create: ClinicCreateWithoutPatientsInput
}

export type ClinicUpdateOneWithoutPatientsInput = {
  create?: ClinicCreateWithoutPatientsInput
  connect?: ClinicWhereUniqueInput
  disconnect?: boolean
  delete?: boolean
  update?: ClinicUpdateWithoutPatientsDataInput
  upsert?: ClinicUpsertWithoutPatientsInput
}

export type PatientUpdateWithoutTreatment_evolutionDataInput = {
  id?: string
  clinic_prontuary_number?: number
  fullname?: string
  birth_date?: Date | string
  age?: number
  gender?: Gender
  brazilian_cpf?: string | null
  brazilian_rg?: string | null
  password?: string
  cellphone_number?: string | null
  contactmeans?: Contact_means | null
  last_visit_dentist?: Date | string
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: string
  what_was_updated?: PatientUpdatewhat_was_updatedInput
  clinic?: ClinicUpdateOneRequiredWithoutPatientInput | null
  schedule?: ScheduleUpdateOneWithoutPatientInput | null
  email?: EmailUpdateManyWithoutPatientInput | null
  anamnesis?: AnamnesisUpdateOneWithoutPatientInput | null
  implantology?: ImplantologyUpdateOneWithoutPatientInput | null
  ortodontics?: OrtodonticsUpdateOneWithoutPatientInput | null
  odontogram?: OdontogramUpdateOneWithoutPatientInput | null
  dont_know?: Dont_know_questionsUpdateOneWithoutPatientInput | null
  dentists?: DentistUpdateManyWithoutPatientsInput | null
  Clinic?: ClinicUpdateOneWithoutPatientsInput | null
  Email?: EmailUpdateManyWithoutPatientInput | null
}

export type PatientUpdateWithWhereUniqueWithoutTreatment_evolutionInput = {
  where: PatientWhereUniqueInput
  data: PatientUpdateWithoutTreatment_evolutionDataInput
}

export type PatientScalarWhereInput = {
  id?: string | UUIDFilter
  clinic_prontuary_number?: number | IntFilter
  fullname?: string | StringFilter
  birth_date?: Date | string | DateTimeFilter
  age?: number | IntFilter
  gender?: Gender | GenderFilter
  brazilian_cpf?: string | NullableStringFilter | null
  brazilian_rg?: string | NullableStringFilter | null
  password?: string | StringFilter
  clinic_id?: string | StringFilter
  cellphone_number?: string | NullableStringFilter | null
  email?: EmailFilter | null
  dont_know_id?: string | NullableStringFilter | null
  treatment_evolution_id?: string | NullableStringFilter | null
  dentists?: DentistFilter | null
  contactmeans?: Contact_means | NullableContact_meansFilter | null
  last_visit_dentist?: Date | string | DateTimeFilter
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  role?: string | StringFilter
  clinicRegistered_id?: string | NullableStringFilter | null
  Email?: EmailFilter | null
  AND?: Enumerable<PatientScalarWhereInput>
  OR?: Array<PatientScalarWhereInput>
  NOT?: Enumerable<PatientScalarWhereInput>
}

export type PatientUpdateManyDataInput = {
  id?: string
  clinic_prontuary_number?: number
  fullname?: string
  birth_date?: Date | string
  age?: number
  gender?: Gender
  brazilian_cpf?: string | null
  brazilian_rg?: string | null
  password?: string
  cellphone_number?: string | null
  contactmeans?: Contact_means | null
  last_visit_dentist?: Date | string
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: string
  what_was_updated?: PatientUpdatewhat_was_updatedInput
}

export type PatientUpdateManyWithWhereNestedInput = {
  where: PatientScalarWhereInput
  data: PatientUpdateManyDataInput
}

export type PatientUpsertWithWhereUniqueWithoutTreatment_evolutionInput = {
  where: PatientWhereUniqueInput
  update: PatientUpdateWithoutTreatment_evolutionDataInput
  create: PatientCreateWithoutTreatment_evolutionInput
}

export type PatientUpdateManyWithoutTreatment_evolutionInput = {
  create?: Enumerable<PatientCreateWithoutTreatment_evolutionInput>
  connect?: Enumerable<PatientWhereUniqueInput>
  set?: Enumerable<PatientWhereUniqueInput>
  disconnect?: Enumerable<PatientWhereUniqueInput>
  delete?: Enumerable<PatientWhereUniqueInput>
  update?: Enumerable<PatientUpdateWithWhereUniqueWithoutTreatment_evolutionInput>
  updateMany?: Enumerable<PatientUpdateManyWithWhereNestedInput> | null
  deleteMany?: Enumerable<PatientScalarWhereInput>
  upsert?: Enumerable<PatientUpsertWithWhereUniqueWithoutTreatment_evolutionInput>
}

export type Treatment_evolutionUpdateWithoutClinic_finance_procedureDataInput = {
  id?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  treatment_procedures_ids?: Treatment_evolutionUpdatetreatment_procedures_idsInput
  what_was_updated?: Treatment_evolutionUpdatewhat_was_updatedInput
  shedule?: ScheduleUpdateOneRequiredWithoutTreatment_evolutionInput | null
  treatment?: ProceduresUpdateManyWithoutTreatment_evolutionInput | null
  Patient?: PatientUpdateManyWithoutTreatment_evolutionInput | null
}

export type Treatment_evolutionUpsertWithoutClinic_finance_procedureInput = {
  update: Treatment_evolutionUpdateWithoutClinic_finance_procedureDataInput
  create: Treatment_evolutionCreateWithoutClinic_finance_procedureInput
}

export type Treatment_evolutionUpdateOneRequiredWithoutClinic_finance_procedureInput = {
  create?: Treatment_evolutionCreateWithoutClinic_finance_procedureInput
  connect?: Treatment_evolutionWhereUniqueInput
  update?: Treatment_evolutionUpdateWithoutClinic_finance_procedureDataInput
  upsert?: Treatment_evolutionUpsertWithoutClinic_finance_procedureInput
}

export type Clinic_finance_procedureUpdateWithoutClinicDataInput = {
  id?: string
  payment_status?: Payment_status
  client_payment_type?: Payment_method
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Clinic_finance_procedureUpdatewhat_was_updatedInput
  treatment?: Treatment_evolutionUpdateOneRequiredWithoutClinic_finance_procedureInput | null
}

export type Clinic_finance_procedureUpdateWithWhereUniqueWithoutClinicInput = {
  where: Clinic_finance_procedureWhereUniqueInput
  data: Clinic_finance_procedureUpdateWithoutClinicDataInput
}

export type Clinic_finance_procedureScalarWhereInput = {
  id?: string | StringFilter
  clinid_id?: string | StringFilter
  treatment_evolution_registry_id?: string | StringFilter
  payment_status?: Payment_status | Payment_statusFilter
  client_payment_type?: Payment_method | Payment_methodFilter
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Clinic_finance_procedureScalarWhereInput>
  OR?: Array<Clinic_finance_procedureScalarWhereInput>
  NOT?: Enumerable<Clinic_finance_procedureScalarWhereInput>
}

export type Clinic_finance_procedureUpdateManyDataInput = {
  id?: string
  payment_status?: Payment_status
  client_payment_type?: Payment_method
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Clinic_finance_procedureUpdatewhat_was_updatedInput
}

export type Clinic_finance_procedureUpdateManyWithWhereNestedInput = {
  where: Clinic_finance_procedureScalarWhereInput
  data: Clinic_finance_procedureUpdateManyDataInput
}

export type Clinic_finance_procedureUpsertWithWhereUniqueWithoutClinicInput = {
  where: Clinic_finance_procedureWhereUniqueInput
  update: Clinic_finance_procedureUpdateWithoutClinicDataInput
  create: Clinic_finance_procedureCreateWithoutClinicInput
}

export type Clinic_finance_procedureUpdateManyWithoutClinicInput = {
  create?: Enumerable<Clinic_finance_procedureCreateWithoutClinicInput>
  connect?: Enumerable<Clinic_finance_procedureWhereUniqueInput>
  set?: Enumerable<Clinic_finance_procedureWhereUniqueInput>
  disconnect?: Enumerable<Clinic_finance_procedureWhereUniqueInput>
  delete?: Enumerable<Clinic_finance_procedureWhereUniqueInput>
  update?: Enumerable<Clinic_finance_procedureUpdateWithWhereUniqueWithoutClinicInput>
  updateMany?: Enumerable<Clinic_finance_procedureUpdateManyWithWhereNestedInput> | null
  deleteMany?: Enumerable<Clinic_finance_procedureScalarWhereInput>
  upsert?: Enumerable<Clinic_finance_procedureUpsertWithWhereUniqueWithoutClinicInput>
}

export type ClinicUpdateWithoutChairsDataInput = {
  registered_id?: string
  cnpj?: string
  socialreason?: string
  fantasy_name?: string
  multipleclinics?: boolean
  numberofbranches?: number
  dentalchairs?: number | null
  averagepatientsperday?: number | null
  country?: string | null
  state?: string | null
  city?: string | null
  neighborhood?: string | null
  CEP?: string | null
  website?: string | null
  password?: string | null
  ssl_enabled?: boolean | null
  two_factor_autentication?: boolean | null
  access_blocked?: boolean | null
  free_trial?: boolean
  free_trial_days_left?: number
  language?: Language
  createdAt?: Date | string
  updatedAt?: Date | string
  emails?: EmailUpdateManyWithoutClinicInput | null
  clinic_phones?: Clinic_phonesUpdateManyWithoutClinicInput | null
  patients?: PatientUpdateManyWithoutClinicInput | null
  destists?: DentistUpdateManyWithoutClinicInput | null
  employeers?: EmployeerUpdateManyWithoutClinicInput | null
  technicalmanager?: TechnicalmanagerUpdateOneWithoutClinicInput | null
  legalresponsible?: LegalresponsibleUpdateOneWithoutClinicInput | null
  insuranses?: Dental_insuranceUpdateManyWithoutClinicInput | null
  logs?: LogsUpdateManyWithoutClinicInput | null
  Clinic_payment_information?: Clinic_payment_informationUpdateManyWithoutClinicInput | null
  Clinic_finance_options?: Clinic_finance_optionsUpdateManyWithoutClinicInput | null
  Clinic_finance_month?: Clinic_finance_monthUpdateManyWithoutClinicInput | null
  Clinic_finance_day?: Clinic_finance_dayUpdateManyWithoutClinicInput | null
  Chair_finance_day?: Chair_finance_dayUpdateManyWithoutClinicInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureUpdateManyWithoutClinicInput | null
  Patient?: PatientUpdateManyWithoutClinicInput | null
  Dentist?: DentistUpdateManyWithoutClinicInput | null
}

export type ClinicUpsertWithoutChairsInput = {
  update: ClinicUpdateWithoutChairsDataInput
  create: ClinicCreateWithoutChairsInput
}

export type ClinicUpdateOneRequiredWithoutChairsInput = {
  create?: ClinicCreateWithoutChairsInput
  connect?: ClinicWhereUniqueInput
  update?: ClinicUpdateWithoutChairsDataInput
  upsert?: ClinicUpsertWithoutChairsInput
}

export type ChairsUpdateWithoutChair_finance_dayDataInput = {
  id?: string
  name?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: ChairsUpdatewhat_was_updatedInput
  clinic?: ClinicUpdateOneRequiredWithoutChairsInput | null
}

export type ChairsUpsertWithoutChair_finance_dayInput = {
  update: ChairsUpdateWithoutChair_finance_dayDataInput
  create: ChairsCreateWithoutChair_finance_dayInput
}

export type ChairsUpdateOneRequiredWithoutChair_finance_dayInput = {
  create?: ChairsCreateWithoutChair_finance_dayInput
  connect?: ChairsWhereUniqueInput
  update?: ChairsUpdateWithoutChair_finance_dayDataInput
  upsert?: ChairsUpsertWithoutChair_finance_dayInput
}

export type Chair_finance_dayUpdateWithoutClinicDataInput = {
  day?: number
  month?: number
  year?: number
  total_income?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Chair_finance_dayUpdatewhat_was_updatedInput
  chair?: ChairsUpdateOneRequiredWithoutChair_finance_dayInput | null
}

export type Chair_finance_dayUpdateWithWhereUniqueWithoutClinicInput = {
  where: Chair_finance_dayWhereUniqueInput
  data: Chair_finance_dayUpdateWithoutClinicDataInput
}

export type Chair_finance_dayScalarWhereInput = {
  chair_id?: string | StringFilter
  clinid_id?: string | StringFilter
  day?: number | IntFilter
  month?: number | IntFilter
  year?: number | IntFilter
  total_income?: number | NullableFloatFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Chair_finance_dayScalarWhereInput>
  OR?: Array<Chair_finance_dayScalarWhereInput>
  NOT?: Enumerable<Chair_finance_dayScalarWhereInput>
}

export type Chair_finance_dayUpdateManyDataInput = {
  day?: number
  month?: number
  year?: number
  total_income?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Chair_finance_dayUpdatewhat_was_updatedInput
}

export type Chair_finance_dayUpdateManyWithWhereNestedInput = {
  where: Chair_finance_dayScalarWhereInput
  data: Chair_finance_dayUpdateManyDataInput
}

export type Chair_finance_dayUpsertWithWhereUniqueWithoutClinicInput = {
  where: Chair_finance_dayWhereUniqueInput
  update: Chair_finance_dayUpdateWithoutClinicDataInput
  create: Chair_finance_dayCreateWithoutClinicInput
}

export type Chair_finance_dayUpdateManyWithoutClinicInput = {
  create?: Enumerable<Chair_finance_dayCreateWithoutClinicInput>
  connect?: Enumerable<Chair_finance_dayWhereUniqueInput>
  set?: Enumerable<Chair_finance_dayWhereUniqueInput>
  disconnect?: Enumerable<Chair_finance_dayWhereUniqueInput>
  delete?: Enumerable<Chair_finance_dayWhereUniqueInput>
  update?: Enumerable<Chair_finance_dayUpdateWithWhereUniqueWithoutClinicInput>
  updateMany?: Enumerable<Chair_finance_dayUpdateManyWithWhereNestedInput> | null
  deleteMany?: Enumerable<Chair_finance_dayScalarWhereInput>
  upsert?: Enumerable<Chair_finance_dayUpsertWithWhereUniqueWithoutClinicInput>
}

export type ClinicUpdateWithoutClinic_finance_procedureDataInput = {
  registered_id?: string
  cnpj?: string
  socialreason?: string
  fantasy_name?: string
  multipleclinics?: boolean
  numberofbranches?: number
  dentalchairs?: number | null
  averagepatientsperday?: number | null
  country?: string | null
  state?: string | null
  city?: string | null
  neighborhood?: string | null
  CEP?: string | null
  website?: string | null
  password?: string | null
  ssl_enabled?: boolean | null
  two_factor_autentication?: boolean | null
  access_blocked?: boolean | null
  free_trial?: boolean
  free_trial_days_left?: number
  language?: Language
  createdAt?: Date | string
  updatedAt?: Date | string
  emails?: EmailUpdateManyWithoutClinicInput | null
  clinic_phones?: Clinic_phonesUpdateManyWithoutClinicInput | null
  patients?: PatientUpdateManyWithoutClinicInput | null
  destists?: DentistUpdateManyWithoutClinicInput | null
  employeers?: EmployeerUpdateManyWithoutClinicInput | null
  technicalmanager?: TechnicalmanagerUpdateOneWithoutClinicInput | null
  legalresponsible?: LegalresponsibleUpdateOneWithoutClinicInput | null
  insuranses?: Dental_insuranceUpdateManyWithoutClinicInput | null
  logs?: LogsUpdateManyWithoutClinicInput | null
  Clinic_payment_information?: Clinic_payment_informationUpdateManyWithoutClinicInput | null
  Clinic_finance_options?: Clinic_finance_optionsUpdateManyWithoutClinicInput | null
  Clinic_finance_month?: Clinic_finance_monthUpdateManyWithoutClinicInput | null
  Clinic_finance_day?: Clinic_finance_dayUpdateManyWithoutClinicInput | null
  Chairs?: ChairsUpdateManyWithoutClinicInput | null
  Chair_finance_day?: Chair_finance_dayUpdateManyWithoutClinicInput | null
  Patient?: PatientUpdateManyWithoutClinicInput | null
  Dentist?: DentistUpdateManyWithoutClinicInput | null
}

export type ClinicUpsertWithoutClinic_finance_procedureInput = {
  update: ClinicUpdateWithoutClinic_finance_procedureDataInput
  create: ClinicCreateWithoutClinic_finance_procedureInput
}

export type ClinicUpdateOneRequiredWithoutClinic_finance_procedureInput = {
  create?: ClinicCreateWithoutClinic_finance_procedureInput
  connect?: ClinicWhereUniqueInput
  update?: ClinicUpdateWithoutClinic_finance_procedureDataInput
  upsert?: ClinicUpsertWithoutClinic_finance_procedureInput
}

export type Clinic_finance_procedureUpdateWithoutTreatmentDataInput = {
  id?: string
  payment_status?: Payment_status
  client_payment_type?: Payment_method
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Clinic_finance_procedureUpdatewhat_was_updatedInput
  clinic?: ClinicUpdateOneRequiredWithoutClinic_finance_procedureInput | null
}

export type Clinic_finance_procedureUpdateWithWhereUniqueWithoutTreatmentInput = {
  where: Clinic_finance_procedureWhereUniqueInput
  data: Clinic_finance_procedureUpdateWithoutTreatmentDataInput
}

export type Clinic_finance_procedureUpsertWithWhereUniqueWithoutTreatmentInput = {
  where: Clinic_finance_procedureWhereUniqueInput
  update: Clinic_finance_procedureUpdateWithoutTreatmentDataInput
  create: Clinic_finance_procedureCreateWithoutTreatmentInput
}

export type Clinic_finance_procedureUpdateManyWithoutTreatmentInput = {
  create?: Enumerable<Clinic_finance_procedureCreateWithoutTreatmentInput>
  connect?: Enumerable<Clinic_finance_procedureWhereUniqueInput>
  set?: Enumerable<Clinic_finance_procedureWhereUniqueInput>
  disconnect?: Enumerable<Clinic_finance_procedureWhereUniqueInput>
  delete?: Enumerable<Clinic_finance_procedureWhereUniqueInput>
  update?: Enumerable<Clinic_finance_procedureUpdateWithWhereUniqueWithoutTreatmentInput>
  updateMany?: Enumerable<Clinic_finance_procedureUpdateManyWithWhereNestedInput> | null
  deleteMany?: Enumerable<Clinic_finance_procedureScalarWhereInput>
  upsert?: Enumerable<Clinic_finance_procedureUpsertWithWhereUniqueWithoutTreatmentInput>
}

export type Treatment_evolutionUpdateWithoutTreatmentDataInput = {
  id?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  treatment_procedures_ids?: Treatment_evolutionUpdatetreatment_procedures_idsInput
  what_was_updated?: Treatment_evolutionUpdatewhat_was_updatedInput
  shedule?: ScheduleUpdateOneRequiredWithoutTreatment_evolutionInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureUpdateManyWithoutTreatmentInput | null
  Patient?: PatientUpdateManyWithoutTreatment_evolutionInput | null
}

export type Treatment_evolutionUpdateWithWhereUniqueWithoutTreatmentInput = {
  where: Treatment_evolutionWhereUniqueInput
  data: Treatment_evolutionUpdateWithoutTreatmentDataInput
}

export type Treatment_evolutionScalarWhereInput = {
  id?: string | StringFilter
  hour?: Date | string | DateTimeFilter
  date?: Date | string | DateTimeFilter
  dentist_id?: string | StringFilter
  treatment?: ProceduresFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  Clinic_finance_procedure?: Clinic_finance_procedureFilter | null
  Patient?: PatientFilter | null
  AND?: Enumerable<Treatment_evolutionScalarWhereInput>
  OR?: Array<Treatment_evolutionScalarWhereInput>
  NOT?: Enumerable<Treatment_evolutionScalarWhereInput>
}

export type Treatment_evolutionUpdateManyDataInput = {
  id?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  treatment_procedures_ids?: Treatment_evolutionUpdatetreatment_procedures_idsInput
  what_was_updated?: Treatment_evolutionUpdatewhat_was_updatedInput
}

export type Treatment_evolutionUpdateManyWithWhereNestedInput = {
  where: Treatment_evolutionScalarWhereInput
  data: Treatment_evolutionUpdateManyDataInput
}

export type Treatment_evolutionUpsertWithWhereUniqueWithoutTreatmentInput = {
  where: Treatment_evolutionWhereUniqueInput
  update: Treatment_evolutionUpdateWithoutTreatmentDataInput
  create: Treatment_evolutionCreateWithoutTreatmentInput
}

export type Treatment_evolutionUpdateManyWithoutTreatmentInput = {
  create?: Enumerable<Treatment_evolutionCreateWithoutTreatmentInput>
  connect?: Enumerable<Treatment_evolutionWhereUniqueInput>
  set?: Enumerable<Treatment_evolutionWhereUniqueInput>
  disconnect?: Enumerable<Treatment_evolutionWhereUniqueInput>
  delete?: Enumerable<Treatment_evolutionWhereUniqueInput>
  update?: Enumerable<Treatment_evolutionUpdateWithWhereUniqueWithoutTreatmentInput>
  updateMany?: Enumerable<Treatment_evolutionUpdateManyWithWhereNestedInput> | null
  deleteMany?: Enumerable<Treatment_evolutionScalarWhereInput>
  upsert?: Enumerable<Treatment_evolutionUpsertWithWhereUniqueWithoutTreatmentInput>
}

export type ProceduresUpdateWithoutInsurance_procedures_valuesDataInput = {
  codigo_CID?: string
  name?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  treatment_evolution?: Treatment_evolutionUpdateManyWithoutTreatmentInput | null
  particular_procedures_values?: Clinic_procedures_particular_valuesUpdateOneRequiredWithoutProcedure_CIDInput | null
}

export type ProceduresUpsertWithoutInsurance_procedures_valuesInput = {
  update: ProceduresUpdateWithoutInsurance_procedures_valuesDataInput
  create: ProceduresCreateWithoutInsurance_procedures_valuesInput
}

export type ProceduresUpdateOneRequiredWithoutInsurance_procedures_valuesInput = {
  create?: ProceduresCreateWithoutInsurance_procedures_valuesInput
  connect?: ProceduresWhereUniqueInput
  update?: ProceduresUpdateWithoutInsurance_procedures_valuesDataInput
  upsert?: ProceduresUpsertWithoutInsurance_procedures_valuesInput
}

export type Clinic_procedures_insurance_valuesUpdateWithoutInsuranceDataInput = {
  cust?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  procedure_CID?: ProceduresUpdateOneRequiredWithoutInsurance_procedures_valuesInput | null
}

export type Clinic_procedures_insurance_valuesUpsertWithoutInsuranceInput = {
  update: Clinic_procedures_insurance_valuesUpdateWithoutInsuranceDataInput
  create: Clinic_procedures_insurance_valuesCreateWithoutInsuranceInput
}

export type Clinic_procedures_insurance_valuesUpdateOneRequiredWithoutInsuranceInput = {
  create?: Clinic_procedures_insurance_valuesCreateWithoutInsuranceInput
  connect?: Clinic_procedures_insurance_valuesWhereUniqueInput
  update?: Clinic_procedures_insurance_valuesUpdateWithoutInsuranceDataInput
  upsert?: Clinic_procedures_insurance_valuesUpsertWithoutInsuranceInput
}

export type Dental_insuranceUpdateWithoutClinicDataInput = {
  id?: string
  name?: string
  compensation_date?: number | null
  compensation_value?: number | null
  active?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  procedures_values?: Clinic_procedures_insurance_valuesUpdateOneRequiredWithoutInsuranceInput | null
}

export type Dental_insuranceUpdateWithWhereUniqueWithoutClinicInput = {
  where: Dental_insuranceWhereUniqueInput
  data: Dental_insuranceUpdateWithoutClinicDataInput
}

export type Dental_insuranceScalarWhereInput = {
  id?: string | StringFilter
  name?: string | StringFilter
  clinic?: ClinicFilter | null
  compensation_date?: number | NullableIntFilter | null
  compensation_value?: number | NullableIntFilter | null
  active?: boolean | BooleanFilter
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Dental_insuranceScalarWhereInput>
  OR?: Array<Dental_insuranceScalarWhereInput>
  NOT?: Enumerable<Dental_insuranceScalarWhereInput>
}

export type Dental_insuranceUpdateManyDataInput = {
  id?: string
  name?: string
  compensation_date?: number | null
  compensation_value?: number | null
  active?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type Dental_insuranceUpdateManyWithWhereNestedInput = {
  where: Dental_insuranceScalarWhereInput
  data: Dental_insuranceUpdateManyDataInput
}

export type Dental_insuranceUpsertWithWhereUniqueWithoutClinicInput = {
  where: Dental_insuranceWhereUniqueInput
  update: Dental_insuranceUpdateWithoutClinicDataInput
  create: Dental_insuranceCreateWithoutClinicInput
}

export type Dental_insuranceUpdateManyWithoutClinicInput = {
  create?: Enumerable<Dental_insuranceCreateWithoutClinicInput>
  connect?: Enumerable<Dental_insuranceWhereUniqueInput>
  set?: Enumerable<Dental_insuranceWhereUniqueInput>
  disconnect?: Enumerable<Dental_insuranceWhereUniqueInput>
  delete?: Enumerable<Dental_insuranceWhereUniqueInput>
  update?: Enumerable<Dental_insuranceUpdateWithWhereUniqueWithoutClinicInput>
  updateMany?: Enumerable<Dental_insuranceUpdateManyWithWhereNestedInput> | null
  deleteMany?: Enumerable<Dental_insuranceScalarWhereInput>
  upsert?: Enumerable<Dental_insuranceUpsertWithWhereUniqueWithoutClinicInput>
}

export type ClinicUpdateWithoutChair_finance_dayDataInput = {
  registered_id?: string
  cnpj?: string
  socialreason?: string
  fantasy_name?: string
  multipleclinics?: boolean
  numberofbranches?: number
  dentalchairs?: number | null
  averagepatientsperday?: number | null
  country?: string | null
  state?: string | null
  city?: string | null
  neighborhood?: string | null
  CEP?: string | null
  website?: string | null
  password?: string | null
  ssl_enabled?: boolean | null
  two_factor_autentication?: boolean | null
  access_blocked?: boolean | null
  free_trial?: boolean
  free_trial_days_left?: number
  language?: Language
  createdAt?: Date | string
  updatedAt?: Date | string
  emails?: EmailUpdateManyWithoutClinicInput | null
  clinic_phones?: Clinic_phonesUpdateManyWithoutClinicInput | null
  patients?: PatientUpdateManyWithoutClinicInput | null
  destists?: DentistUpdateManyWithoutClinicInput | null
  employeers?: EmployeerUpdateManyWithoutClinicInput | null
  technicalmanager?: TechnicalmanagerUpdateOneWithoutClinicInput | null
  legalresponsible?: LegalresponsibleUpdateOneWithoutClinicInput | null
  insuranses?: Dental_insuranceUpdateManyWithoutClinicInput | null
  logs?: LogsUpdateManyWithoutClinicInput | null
  Clinic_payment_information?: Clinic_payment_informationUpdateManyWithoutClinicInput | null
  Clinic_finance_options?: Clinic_finance_optionsUpdateManyWithoutClinicInput | null
  Clinic_finance_month?: Clinic_finance_monthUpdateManyWithoutClinicInput | null
  Clinic_finance_day?: Clinic_finance_dayUpdateManyWithoutClinicInput | null
  Chairs?: ChairsUpdateManyWithoutClinicInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureUpdateManyWithoutClinicInput | null
  Patient?: PatientUpdateManyWithoutClinicInput | null
  Dentist?: DentistUpdateManyWithoutClinicInput | null
}

export type ClinicUpsertWithoutChair_finance_dayInput = {
  update: ClinicUpdateWithoutChair_finance_dayDataInput
  create: ClinicCreateWithoutChair_finance_dayInput
}

export type ClinicUpdateOneRequiredWithoutChair_finance_dayInput = {
  create?: ClinicCreateWithoutChair_finance_dayInput
  connect?: ClinicWhereUniqueInput
  update?: ClinicUpdateWithoutChair_finance_dayDataInput
  upsert?: ClinicUpsertWithoutChair_finance_dayInput
}

export type Chair_finance_dayUpdateWithoutChairDataInput = {
  day?: number
  month?: number
  year?: number
  total_income?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Chair_finance_dayUpdatewhat_was_updatedInput
  clinic?: ClinicUpdateOneRequiredWithoutChair_finance_dayInput | null
}

export type Chair_finance_dayUpdateWithWhereUniqueWithoutChairInput = {
  where: Chair_finance_dayWhereUniqueInput
  data: Chair_finance_dayUpdateWithoutChairDataInput
}

export type Chair_finance_dayUpsertWithWhereUniqueWithoutChairInput = {
  where: Chair_finance_dayWhereUniqueInput
  update: Chair_finance_dayUpdateWithoutChairDataInput
  create: Chair_finance_dayCreateWithoutChairInput
}

export type Chair_finance_dayUpdateManyWithoutChairInput = {
  create?: Enumerable<Chair_finance_dayCreateWithoutChairInput>
  connect?: Enumerable<Chair_finance_dayWhereUniqueInput>
  set?: Enumerable<Chair_finance_dayWhereUniqueInput>
  disconnect?: Enumerable<Chair_finance_dayWhereUniqueInput>
  delete?: Enumerable<Chair_finance_dayWhereUniqueInput>
  update?: Enumerable<Chair_finance_dayUpdateWithWhereUniqueWithoutChairInput>
  updateMany?: Enumerable<Chair_finance_dayUpdateManyWithWhereNestedInput> | null
  deleteMany?: Enumerable<Chair_finance_dayScalarWhereInput>
  upsert?: Enumerable<Chair_finance_dayUpsertWithWhereUniqueWithoutChairInput>
}

export type ChairsUpdateWithoutClinicDataInput = {
  id?: string
  name?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: ChairsUpdatewhat_was_updatedInput
  Chair_finance_day?: Chair_finance_dayUpdateManyWithoutChairInput | null
}

export type ChairsUpdateWithWhereUniqueWithoutClinicInput = {
  where: ChairsWhereUniqueInput
  data: ChairsUpdateWithoutClinicDataInput
}

export type ChairsScalarWhereInput = {
  id?: string | StringFilter
  name?: string | StringFilter
  clinid_id?: string | StringFilter
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  Chair_finance_day?: Chair_finance_dayFilter | null
  AND?: Enumerable<ChairsScalarWhereInput>
  OR?: Array<ChairsScalarWhereInput>
  NOT?: Enumerable<ChairsScalarWhereInput>
}

export type ChairsUpdateManyDataInput = {
  id?: string
  name?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: ChairsUpdatewhat_was_updatedInput
}

export type ChairsUpdateManyWithWhereNestedInput = {
  where: ChairsScalarWhereInput
  data: ChairsUpdateManyDataInput
}

export type ChairsUpsertWithWhereUniqueWithoutClinicInput = {
  where: ChairsWhereUniqueInput
  update: ChairsUpdateWithoutClinicDataInput
  create: ChairsCreateWithoutClinicInput
}

export type ChairsUpdateManyWithoutClinicInput = {
  create?: Enumerable<ChairsCreateWithoutClinicInput>
  connect?: Enumerable<ChairsWhereUniqueInput>
  set?: Enumerable<ChairsWhereUniqueInput>
  disconnect?: Enumerable<ChairsWhereUniqueInput>
  delete?: Enumerable<ChairsWhereUniqueInput>
  update?: Enumerable<ChairsUpdateWithWhereUniqueWithoutClinicInput>
  updateMany?: Enumerable<ChairsUpdateManyWithWhereNestedInput> | null
  deleteMany?: Enumerable<ChairsScalarWhereInput>
  upsert?: Enumerable<ChairsUpsertWithWhereUniqueWithoutClinicInput>
}

export type ClinicUpdateWithoutInsuransesDataInput = {
  registered_id?: string
  cnpj?: string
  socialreason?: string
  fantasy_name?: string
  multipleclinics?: boolean
  numberofbranches?: number
  dentalchairs?: number | null
  averagepatientsperday?: number | null
  country?: string | null
  state?: string | null
  city?: string | null
  neighborhood?: string | null
  CEP?: string | null
  website?: string | null
  password?: string | null
  ssl_enabled?: boolean | null
  two_factor_autentication?: boolean | null
  access_blocked?: boolean | null
  free_trial?: boolean
  free_trial_days_left?: number
  language?: Language
  createdAt?: Date | string
  updatedAt?: Date | string
  emails?: EmailUpdateManyWithoutClinicInput | null
  clinic_phones?: Clinic_phonesUpdateManyWithoutClinicInput | null
  patients?: PatientUpdateManyWithoutClinicInput | null
  destists?: DentistUpdateManyWithoutClinicInput | null
  employeers?: EmployeerUpdateManyWithoutClinicInput | null
  technicalmanager?: TechnicalmanagerUpdateOneWithoutClinicInput | null
  legalresponsible?: LegalresponsibleUpdateOneWithoutClinicInput | null
  logs?: LogsUpdateManyWithoutClinicInput | null
  Clinic_payment_information?: Clinic_payment_informationUpdateManyWithoutClinicInput | null
  Clinic_finance_options?: Clinic_finance_optionsUpdateManyWithoutClinicInput | null
  Clinic_finance_month?: Clinic_finance_monthUpdateManyWithoutClinicInput | null
  Clinic_finance_day?: Clinic_finance_dayUpdateManyWithoutClinicInput | null
  Chairs?: ChairsUpdateManyWithoutClinicInput | null
  Chair_finance_day?: Chair_finance_dayUpdateManyWithoutClinicInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureUpdateManyWithoutClinicInput | null
  Patient?: PatientUpdateManyWithoutClinicInput | null
  Dentist?: DentistUpdateManyWithoutClinicInput | null
}

export type ClinicUpdateWithWhereUniqueWithoutInsuransesInput = {
  where: ClinicWhereUniqueInput
  data: ClinicUpdateWithoutInsuransesDataInput
}

export type ClinicScalarWhereInput = {
  registered_id?: string | UUIDFilter
  cnpj?: string | StringFilter
  socialreason?: string | StringFilter
  fantasy_name?: string | StringFilter
  multipleclinics?: boolean | BooleanFilter
  numberofbranches?: number | IntFilter
  dentalchairs?: number | NullableIntFilter | null
  averagepatientsperday?: number | NullableIntFilter | null
  country?: string | NullableStringFilter | null
  state?: string | NullableStringFilter | null
  city?: string | NullableStringFilter | null
  neighborhood?: string | NullableStringFilter | null
  CEP?: string | NullableStringFilter | null
  website?: string | NullableStringFilter | null
  emails?: EmailFilter | null
  clinic_phones?: Clinic_phonesFilter | null
  patients?: PatientFilter | null
  destists?: DentistFilter | null
  employeers?: EmployeerFilter | null
  password?: string | NullableStringFilter | null
  ssl_enabled?: boolean | NullableBooleanFilter | null
  two_factor_autentication?: boolean | NullableBooleanFilter | null
  insuranses?: Dental_insuranceFilter | null
  access_blocked?: boolean | NullableBooleanFilter | null
  free_trial?: boolean | BooleanFilter
  free_trial_days_left?: number | IntFilter
  language?: Language | LanguageFilter
  logs?: LogsFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  Clinic_payment_information?: Clinic_payment_informationFilter | null
  Clinic_finance_options?: Clinic_finance_optionsFilter | null
  Clinic_finance_month?: Clinic_finance_monthFilter | null
  Clinic_finance_day?: Clinic_finance_dayFilter | null
  Chairs?: ChairsFilter | null
  Chair_finance_day?: Chair_finance_dayFilter | null
  Clinic_finance_procedure?: Clinic_finance_procedureFilter | null
  Patient?: PatientFilter | null
  Dentist?: DentistFilter | null
  AND?: Enumerable<ClinicScalarWhereInput>
  OR?: Array<ClinicScalarWhereInput>
  NOT?: Enumerable<ClinicScalarWhereInput>
}

export type ClinicUpdateManyDataInput = {
  registered_id?: string
  cnpj?: string
  socialreason?: string
  fantasy_name?: string
  multipleclinics?: boolean
  numberofbranches?: number
  dentalchairs?: number | null
  averagepatientsperday?: number | null
  country?: string | null
  state?: string | null
  city?: string | null
  neighborhood?: string | null
  CEP?: string | null
  website?: string | null
  password?: string | null
  ssl_enabled?: boolean | null
  two_factor_autentication?: boolean | null
  access_blocked?: boolean | null
  free_trial?: boolean
  free_trial_days_left?: number
  language?: Language
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ClinicUpdateManyWithWhereNestedInput = {
  where: ClinicScalarWhereInput
  data: ClinicUpdateManyDataInput
}

export type ClinicUpsertWithWhereUniqueWithoutInsuransesInput = {
  where: ClinicWhereUniqueInput
  update: ClinicUpdateWithoutInsuransesDataInput
  create: ClinicCreateWithoutInsuransesInput
}

export type ClinicUpdateManyWithoutInsuransesInput = {
  create?: Enumerable<ClinicCreateWithoutInsuransesInput>
  connect?: Enumerable<ClinicWhereUniqueInput>
  set?: Enumerable<ClinicWhereUniqueInput>
  disconnect?: Enumerable<ClinicWhereUniqueInput>
  delete?: Enumerable<ClinicWhereUniqueInput>
  update?: Enumerable<ClinicUpdateWithWhereUniqueWithoutInsuransesInput>
  updateMany?: Enumerable<ClinicUpdateManyWithWhereNestedInput> | null
  deleteMany?: Enumerable<ClinicScalarWhereInput>
  upsert?: Enumerable<ClinicUpsertWithWhereUniqueWithoutInsuransesInput>
}

export type Dental_insuranceUpdateWithoutProcedures_valuesDataInput = {
  id?: string
  name?: string
  compensation_date?: number | null
  compensation_value?: number | null
  active?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  clinic?: ClinicUpdateManyWithoutInsuransesInput | null
}

export type Dental_insuranceUpsertWithoutProcedures_valuesInput = {
  update: Dental_insuranceUpdateWithoutProcedures_valuesDataInput
  create: Dental_insuranceCreateWithoutProcedures_valuesInput
}

export type Dental_insuranceUpdateOneRequiredWithoutProcedures_valuesInput = {
  create?: Dental_insuranceCreateWithoutProcedures_valuesInput
  connect?: Dental_insuranceWhereUniqueInput
  update?: Dental_insuranceUpdateWithoutProcedures_valuesDataInput
  upsert?: Dental_insuranceUpsertWithoutProcedures_valuesInput
}

export type Clinic_procedures_insurance_valuesUpdateWithoutProcedure_CIDDataInput = {
  cust?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  insurance?: Dental_insuranceUpdateOneRequiredWithoutProcedures_valuesInput | null
}

export type Clinic_procedures_insurance_valuesUpdateWithWhereUniqueWithoutProcedure_CIDInput = {
  where: Clinic_procedures_insurance_valuesWhereUniqueInput
  data: Clinic_procedures_insurance_valuesUpdateWithoutProcedure_CIDDataInput
}

export type Clinic_procedures_insurance_valuesScalarWhereInput = {
  procedure_id?: string | StringFilter
  insurance_id?: string | StringFilter
  cust?: number | FloatFilter
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<Clinic_procedures_insurance_valuesScalarWhereInput>
  OR?: Array<Clinic_procedures_insurance_valuesScalarWhereInput>
  NOT?: Enumerable<Clinic_procedures_insurance_valuesScalarWhereInput>
}

export type Clinic_procedures_insurance_valuesUpdateManyDataInput = {
  cust?: number
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type Clinic_procedures_insurance_valuesUpdateManyWithWhereNestedInput = {
  where: Clinic_procedures_insurance_valuesScalarWhereInput
  data: Clinic_procedures_insurance_valuesUpdateManyDataInput
}

export type Clinic_procedures_insurance_valuesUpsertWithWhereUniqueWithoutProcedure_CIDInput = {
  where: Clinic_procedures_insurance_valuesWhereUniqueInput
  update: Clinic_procedures_insurance_valuesUpdateWithoutProcedure_CIDDataInput
  create: Clinic_procedures_insurance_valuesCreateWithoutProcedure_CIDInput
}

export type Clinic_procedures_insurance_valuesUpdateManyWithoutProcedure_CIDInput = {
  create?: Enumerable<Clinic_procedures_insurance_valuesCreateWithoutProcedure_CIDInput>
  connect?: Enumerable<Clinic_procedures_insurance_valuesWhereUniqueInput>
  set?: Enumerable<Clinic_procedures_insurance_valuesWhereUniqueInput>
  disconnect?: Enumerable<Clinic_procedures_insurance_valuesWhereUniqueInput>
  delete?: Enumerable<Clinic_procedures_insurance_valuesWhereUniqueInput>
  update?: Enumerable<Clinic_procedures_insurance_valuesUpdateWithWhereUniqueWithoutProcedure_CIDInput>
  updateMany?: Enumerable<Clinic_procedures_insurance_valuesUpdateManyWithWhereNestedInput> | null
  deleteMany?: Enumerable<Clinic_procedures_insurance_valuesScalarWhereInput>
  upsert?: Enumerable<Clinic_procedures_insurance_valuesUpsertWithWhereUniqueWithoutProcedure_CIDInput>
}

export type ProceduresUpdateWithoutTreatment_evolutionDataInput = {
  codigo_CID?: string
  name?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  particular_procedures_values?: Clinic_procedures_particular_valuesUpdateOneRequiredWithoutProcedure_CIDInput | null
  insurance_procedures_values?: Clinic_procedures_insurance_valuesUpdateManyWithoutProcedure_CIDInput | null
}

export type ProceduresUpdateWithWhereUniqueWithoutTreatment_evolutionInput = {
  where: ProceduresWhereUniqueInput
  data: ProceduresUpdateWithoutTreatment_evolutionDataInput
}

export type ProceduresScalarWhereInput = {
  codigo_CID?: string | StringFilter
  treatment_evolution?: Treatment_evolutionFilter | null
  insurance_procedures_values?: Clinic_procedures_insurance_valuesFilter | null
  name?: string | StringFilter
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<ProceduresScalarWhereInput>
  OR?: Array<ProceduresScalarWhereInput>
  NOT?: Enumerable<ProceduresScalarWhereInput>
}

export type ProceduresUpdateManyDataInput = {
  codigo_CID?: string
  name?: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ProceduresUpdateManyWithWhereNestedInput = {
  where: ProceduresScalarWhereInput
  data: ProceduresUpdateManyDataInput
}

export type ProceduresUpsertWithWhereUniqueWithoutTreatment_evolutionInput = {
  where: ProceduresWhereUniqueInput
  update: ProceduresUpdateWithoutTreatment_evolutionDataInput
  create: ProceduresCreateWithoutTreatment_evolutionInput
}

export type ProceduresUpdateManyWithoutTreatment_evolutionInput = {
  create?: Enumerable<ProceduresCreateWithoutTreatment_evolutionInput>
  connect?: Enumerable<ProceduresWhereUniqueInput>
  set?: Enumerable<ProceduresWhereUniqueInput>
  disconnect?: Enumerable<ProceduresWhereUniqueInput>
  delete?: Enumerable<ProceduresWhereUniqueInput>
  update?: Enumerable<ProceduresUpdateWithWhereUniqueWithoutTreatment_evolutionInput>
  updateMany?: Enumerable<ProceduresUpdateManyWithWhereNestedInput> | null
  deleteMany?: Enumerable<ProceduresScalarWhereInput>
  upsert?: Enumerable<ProceduresUpsertWithWhereUniqueWithoutTreatment_evolutionInput>
}

export type Treatment_evolutionUpdateWithoutPatientDataInput = {
  id?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  treatment_procedures_ids?: Treatment_evolutionUpdatetreatment_procedures_idsInput
  what_was_updated?: Treatment_evolutionUpdatewhat_was_updatedInput
  shedule?: ScheduleUpdateOneRequiredWithoutTreatment_evolutionInput | null
  treatment?: ProceduresUpdateManyWithoutTreatment_evolutionInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureUpdateManyWithoutTreatmentInput | null
}

export type Treatment_evolutionUpsertWithoutPatientInput = {
  update: Treatment_evolutionUpdateWithoutPatientDataInput
  create: Treatment_evolutionCreateWithoutPatientInput
}

export type Treatment_evolutionUpdateOneWithoutPatientInput = {
  create?: Treatment_evolutionCreateWithoutPatientInput
  connect?: Treatment_evolutionWhereUniqueInput
  disconnect?: boolean
  delete?: boolean
  update?: Treatment_evolutionUpdateWithoutPatientDataInput
  upsert?: Treatment_evolutionUpsertWithoutPatientInput
}

export type PatientUpdateWithoutImplantologyDataInput = {
  id?: string
  clinic_prontuary_number?: number
  fullname?: string
  birth_date?: Date | string
  age?: number
  gender?: Gender
  brazilian_cpf?: string | null
  brazilian_rg?: string | null
  password?: string
  cellphone_number?: string | null
  contactmeans?: Contact_means | null
  last_visit_dentist?: Date | string
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: string
  what_was_updated?: PatientUpdatewhat_was_updatedInput
  clinic?: ClinicUpdateOneRequiredWithoutPatientInput | null
  schedule?: ScheduleUpdateOneWithoutPatientInput | null
  email?: EmailUpdateManyWithoutPatientInput | null
  anamnesis?: AnamnesisUpdateOneWithoutPatientInput | null
  ortodontics?: OrtodonticsUpdateOneWithoutPatientInput | null
  odontogram?: OdontogramUpdateOneWithoutPatientInput | null
  dont_know?: Dont_know_questionsUpdateOneWithoutPatientInput | null
  treatment_evolution?: Treatment_evolutionUpdateOneWithoutPatientInput | null
  dentists?: DentistUpdateManyWithoutPatientsInput | null
  Clinic?: ClinicUpdateOneWithoutPatientsInput | null
  Email?: EmailUpdateManyWithoutPatientInput | null
}

export type PatientUpsertWithoutImplantologyInput = {
  update: PatientUpdateWithoutImplantologyDataInput
  create: PatientCreateWithoutImplantologyInput
}

export type PatientUpdateOneRequiredWithoutImplantologyInput = {
  create?: PatientCreateWithoutImplantologyInput
  connect?: PatientWhereUniqueInput
  update?: PatientUpdateWithoutImplantologyDataInput
  upsert?: PatientUpsertWithoutImplantologyInput
}

export type ImplantologyUpdateWithoutProfessionalsDataInput = {
  id?: string
  implant_type?: Implant_types
  if_type_multiple_instaled_implants_number?: number | null
  next_review_consult?: Date | string
  notes?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  professional_ids?: ImplantologyUpdateprofessional_idsInput
  if_type_unitary_dental_units_reabilited?: ImplantologyUpdateif_type_unitary_dental_units_reabilitedInput
  if_type_multiple_dental_units_reabilited?: ImplantologyUpdateif_type_multiple_dental_units_reabilitedInput
  what_was_updated?: ImplantologyUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutImplantologyInput | null
  implantology_questionnaire?: Implantology_questionnaireUpdateOneRequiredWithoutImplantology_questionnaireInput | null
}

export type ImplantologyUpdateWithWhereUniqueWithoutProfessionalsInput = {
  where: ImplantologyWhereUniqueInput
  data: ImplantologyUpdateWithoutProfessionalsDataInput
}

export type ImplantologyScalarWhereInput = {
  id?: string | StringFilter
  patient_id?: string | StringFilter
  professionals?: DentistFilter | null
  implant_type?: Implant_types | Implant_typesFilter
  if_type_multiple_instaled_implants_number?: number | NullableIntFilter | null
  next_review_consult?: Date | string | DateTimeFilter
  notes?: string | NullableStringFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<ImplantologyScalarWhereInput>
  OR?: Array<ImplantologyScalarWhereInput>
  NOT?: Enumerable<ImplantologyScalarWhereInput>
}

export type ImplantologyUpdateManyDataInput = {
  id?: string
  implant_type?: Implant_types
  if_type_multiple_instaled_implants_number?: number | null
  next_review_consult?: Date | string
  notes?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  professional_ids?: ImplantologyUpdateprofessional_idsInput
  if_type_unitary_dental_units_reabilited?: ImplantologyUpdateif_type_unitary_dental_units_reabilitedInput
  if_type_multiple_dental_units_reabilited?: ImplantologyUpdateif_type_multiple_dental_units_reabilitedInput
  what_was_updated?: ImplantologyUpdatewhat_was_updatedInput
}

export type ImplantologyUpdateManyWithWhereNestedInput = {
  where: ImplantologyScalarWhereInput
  data: ImplantologyUpdateManyDataInput
}

export type ImplantologyUpsertWithWhereUniqueWithoutProfessionalsInput = {
  where: ImplantologyWhereUniqueInput
  update: ImplantologyUpdateWithoutProfessionalsDataInput
  create: ImplantologyCreateWithoutProfessionalsInput
}

export type ImplantologyUpdateManyWithoutProfessionalsInput = {
  create?: Enumerable<ImplantologyCreateWithoutProfessionalsInput>
  connect?: Enumerable<ImplantologyWhereUniqueInput>
  set?: Enumerable<ImplantologyWhereUniqueInput>
  disconnect?: Enumerable<ImplantologyWhereUniqueInput>
  delete?: Enumerable<ImplantologyWhereUniqueInput>
  update?: Enumerable<ImplantologyUpdateWithWhereUniqueWithoutProfessionalsInput>
  updateMany?: Enumerable<ImplantologyUpdateManyWithWhereNestedInput> | null
  deleteMany?: Enumerable<ImplantologyScalarWhereInput>
  upsert?: Enumerable<ImplantologyUpsertWithWhereUniqueWithoutProfessionalsInput>
}

export type DentistUpdateWithoutOrtodontics_treatmentsDataInput = {
  id?: string
  CRO_number?: string
  firstname?: string
  lastname?: string
  username?: string
  password?: string
  contactmeans?: Contact_means | null
  cellphone_number?: string | null
  active?: boolean
  comission?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: string
  shedule?: ScheduleUpdateOneRequiredWithoutDentistInput | null
  clinic?: ClinicUpdateOneRequiredWithoutDentistInput | null
  email?: EmailUpdateManyWithoutDentistInput | null
  specialization?: Clinic_specializationsUpdateManyWithoutDentistInput | null
  implantology_treatments?: ImplantologyUpdateManyWithoutProfessionalsInput | null
  patients?: PatientUpdateManyWithoutDentistsInput | null
  Clinic?: ClinicUpdateOneWithoutDestistsInput | null
  Email?: EmailUpdateManyWithoutDentistInput | null
}

export type DentistUpdateWithWhereUniqueWithoutOrtodontics_treatmentsInput = {
  where: DentistWhereUniqueInput
  data: DentistUpdateWithoutOrtodontics_treatmentsDataInput
}

export type DentistUpsertWithWhereUniqueWithoutOrtodontics_treatmentsInput = {
  where: DentistWhereUniqueInput
  update: DentistUpdateWithoutOrtodontics_treatmentsDataInput
  create: DentistCreateWithoutOrtodontics_treatmentsInput
}

export type DentistUpdateManyWithoutOrtodontics_treatmentsInput = {
  create?: Enumerable<DentistCreateWithoutOrtodontics_treatmentsInput>
  connect?: Enumerable<DentistWhereUniqueInput>
  set?: Enumerable<DentistWhereUniqueInput>
  disconnect?: Enumerable<DentistWhereUniqueInput>
  delete?: Enumerable<DentistWhereUniqueInput>
  update?: Enumerable<DentistUpdateWithWhereUniqueWithoutOrtodontics_treatmentsInput>
  updateMany?: Enumerable<DentistUpdateManyWithWhereNestedInput> | null
  deleteMany?: Enumerable<DentistScalarWhereInput>
  upsert?: Enumerable<DentistUpsertWithWhereUniqueWithoutOrtodontics_treatmentsInput>
}

export type OrtodonticsUpdateWithoutPatientDataInput = {
  id?: string
  face_profile?: string | null
  face_simetrics?: string | null
  bite?: string | null
  class?: string | null
  ideal_occlusion?: yes_no | null
  if_no_whats_wrong_in_oclusion?: string | null
  spee?: string | null
  overbite?: string | null
  overjet?: string | null
  prevision_of_end?: string | null
  ortodontics_treatment_type?: Ortodontic_treatment_type | null
  notes?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  professional_ids?: OrtodonticsUpdateprofessional_idsInput
  what_was_updated?: OrtodonticsUpdatewhat_was_updatedInput
  ortodontic_questionnaire?: Ortodontics_questionnaireUpdateOneRequiredWithoutOrtodontic_prontuaryInput | null
  TMJ_questionnaire?: TMJ_problems_questionnaireUpdateOneRequiredWithoutOrtodontic_prontuaryInput | null
  professionals?: DentistUpdateManyWithoutOrtodontics_treatmentsInput | null
}

export type OrtodonticsUpsertWithoutPatientInput = {
  update: OrtodonticsUpdateWithoutPatientDataInput
  create: OrtodonticsCreateWithoutPatientInput
}

export type OrtodonticsUpdateOneWithoutPatientInput = {
  create?: OrtodonticsCreateWithoutPatientInput
  connect?: OrtodonticsWhereUniqueInput
  disconnect?: boolean
  delete?: boolean
  update?: OrtodonticsUpdateWithoutPatientDataInput
  upsert?: OrtodonticsUpsertWithoutPatientInput
}

export type PatientUpdateWithoutDentistsDataInput = {
  id?: string
  clinic_prontuary_number?: number
  fullname?: string
  birth_date?: Date | string
  age?: number
  gender?: Gender
  brazilian_cpf?: string | null
  brazilian_rg?: string | null
  password?: string
  cellphone_number?: string | null
  contactmeans?: Contact_means | null
  last_visit_dentist?: Date | string
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: string
  what_was_updated?: PatientUpdatewhat_was_updatedInput
  clinic?: ClinicUpdateOneRequiredWithoutPatientInput | null
  schedule?: ScheduleUpdateOneWithoutPatientInput | null
  email?: EmailUpdateManyWithoutPatientInput | null
  anamnesis?: AnamnesisUpdateOneWithoutPatientInput | null
  implantology?: ImplantologyUpdateOneWithoutPatientInput | null
  ortodontics?: OrtodonticsUpdateOneWithoutPatientInput | null
  odontogram?: OdontogramUpdateOneWithoutPatientInput | null
  dont_know?: Dont_know_questionsUpdateOneWithoutPatientInput | null
  treatment_evolution?: Treatment_evolutionUpdateOneWithoutPatientInput | null
  Clinic?: ClinicUpdateOneWithoutPatientsInput | null
  Email?: EmailUpdateManyWithoutPatientInput | null
}

export type PatientUpdateWithWhereUniqueWithoutDentistsInput = {
  where: PatientWhereUniqueInput
  data: PatientUpdateWithoutDentistsDataInput
}

export type PatientUpsertWithWhereUniqueWithoutDentistsInput = {
  where: PatientWhereUniqueInput
  update: PatientUpdateWithoutDentistsDataInput
  create: PatientCreateWithoutDentistsInput
}

export type PatientUpdateManyWithoutDentistsInput = {
  create?: Enumerable<PatientCreateWithoutDentistsInput>
  connect?: Enumerable<PatientWhereUniqueInput>
  set?: Enumerable<PatientWhereUniqueInput>
  disconnect?: Enumerable<PatientWhereUniqueInput>
  delete?: Enumerable<PatientWhereUniqueInput>
  update?: Enumerable<PatientUpdateWithWhereUniqueWithoutDentistsInput>
  updateMany?: Enumerable<PatientUpdateManyWithWhereNestedInput> | null
  deleteMany?: Enumerable<PatientScalarWhereInput>
  upsert?: Enumerable<PatientUpsertWithWhereUniqueWithoutDentistsInput>
}

export type DentistUpdateWithoutImplantology_treatmentsDataInput = {
  id?: string
  CRO_number?: string
  firstname?: string
  lastname?: string
  username?: string
  password?: string
  contactmeans?: Contact_means | null
  cellphone_number?: string | null
  active?: boolean
  comission?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: string
  shedule?: ScheduleUpdateOneRequiredWithoutDentistInput | null
  clinic?: ClinicUpdateOneRequiredWithoutDentistInput | null
  email?: EmailUpdateManyWithoutDentistInput | null
  specialization?: Clinic_specializationsUpdateManyWithoutDentistInput | null
  ortodontics_treatments?: OrtodonticsUpdateManyWithoutProfessionalsInput | null
  patients?: PatientUpdateManyWithoutDentistsInput | null
  Clinic?: ClinicUpdateOneWithoutDestistsInput | null
  Email?: EmailUpdateManyWithoutDentistInput | null
}

export type DentistUpdateWithWhereUniqueWithoutImplantology_treatmentsInput = {
  where: DentistWhereUniqueInput
  data: DentistUpdateWithoutImplantology_treatmentsDataInput
}

export type DentistUpsertWithWhereUniqueWithoutImplantology_treatmentsInput = {
  where: DentistWhereUniqueInput
  update: DentistUpdateWithoutImplantology_treatmentsDataInput
  create: DentistCreateWithoutImplantology_treatmentsInput
}

export type DentistUpdateManyWithoutImplantology_treatmentsInput = {
  create?: Enumerable<DentistCreateWithoutImplantology_treatmentsInput>
  connect?: Enumerable<DentistWhereUniqueInput>
  set?: Enumerable<DentistWhereUniqueInput>
  disconnect?: Enumerable<DentistWhereUniqueInput>
  delete?: Enumerable<DentistWhereUniqueInput>
  update?: Enumerable<DentistUpdateWithWhereUniqueWithoutImplantology_treatmentsInput>
  updateMany?: Enumerable<DentistUpdateManyWithWhereNestedInput> | null
  deleteMany?: Enumerable<DentistScalarWhereInput>
  upsert?: Enumerable<DentistUpsertWithWhereUniqueWithoutImplantology_treatmentsInput>
}

export type ImplantologyUpdateWithoutPatientDataInput = {
  id?: string
  implant_type?: Implant_types
  if_type_multiple_instaled_implants_number?: number | null
  next_review_consult?: Date | string
  notes?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  professional_ids?: ImplantologyUpdateprofessional_idsInput
  if_type_unitary_dental_units_reabilited?: ImplantologyUpdateif_type_unitary_dental_units_reabilitedInput
  if_type_multiple_dental_units_reabilited?: ImplantologyUpdateif_type_multiple_dental_units_reabilitedInput
  what_was_updated?: ImplantologyUpdatewhat_was_updatedInput
  implantology_questionnaire?: Implantology_questionnaireUpdateOneRequiredWithoutImplantology_questionnaireInput | null
  professionals?: DentistUpdateManyWithoutImplantology_treatmentsInput | null
}

export type ImplantologyUpsertWithoutPatientInput = {
  update: ImplantologyUpdateWithoutPatientDataInput
  create: ImplantologyCreateWithoutPatientInput
}

export type ImplantologyUpdateOneWithoutPatientInput = {
  create?: ImplantologyCreateWithoutPatientInput
  connect?: ImplantologyWhereUniqueInput
  disconnect?: boolean
  delete?: boolean
  update?: ImplantologyUpdateWithoutPatientDataInput
  upsert?: ImplantologyUpsertWithoutPatientInput
}

export type PatientUpdateWithoutOrtodonticsDataInput = {
  id?: string
  clinic_prontuary_number?: number
  fullname?: string
  birth_date?: Date | string
  age?: number
  gender?: Gender
  brazilian_cpf?: string | null
  brazilian_rg?: string | null
  password?: string
  cellphone_number?: string | null
  contactmeans?: Contact_means | null
  last_visit_dentist?: Date | string
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: string
  what_was_updated?: PatientUpdatewhat_was_updatedInput
  clinic?: ClinicUpdateOneRequiredWithoutPatientInput | null
  schedule?: ScheduleUpdateOneWithoutPatientInput | null
  email?: EmailUpdateManyWithoutPatientInput | null
  anamnesis?: AnamnesisUpdateOneWithoutPatientInput | null
  implantology?: ImplantologyUpdateOneWithoutPatientInput | null
  odontogram?: OdontogramUpdateOneWithoutPatientInput | null
  dont_know?: Dont_know_questionsUpdateOneWithoutPatientInput | null
  treatment_evolution?: Treatment_evolutionUpdateOneWithoutPatientInput | null
  dentists?: DentistUpdateManyWithoutPatientsInput | null
  Clinic?: ClinicUpdateOneWithoutPatientsInput | null
  Email?: EmailUpdateManyWithoutPatientInput | null
}

export type PatientUpsertWithoutOrtodonticsInput = {
  update: PatientUpdateWithoutOrtodonticsDataInput
  create: PatientCreateWithoutOrtodonticsInput
}

export type PatientUpdateOneRequiredWithoutOrtodonticsInput = {
  create?: PatientCreateWithoutOrtodonticsInput
  connect?: PatientWhereUniqueInput
  update?: PatientUpdateWithoutOrtodonticsDataInput
  upsert?: PatientUpsertWithoutOrtodonticsInput
}

export type OrtodonticsUpdateWithoutProfessionalsDataInput = {
  id?: string
  face_profile?: string | null
  face_simetrics?: string | null
  bite?: string | null
  class?: string | null
  ideal_occlusion?: yes_no | null
  if_no_whats_wrong_in_oclusion?: string | null
  spee?: string | null
  overbite?: string | null
  overjet?: string | null
  prevision_of_end?: string | null
  ortodontics_treatment_type?: Ortodontic_treatment_type | null
  notes?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  professional_ids?: OrtodonticsUpdateprofessional_idsInput
  what_was_updated?: OrtodonticsUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOrtodonticsInput | null
  ortodontic_questionnaire?: Ortodontics_questionnaireUpdateOneRequiredWithoutOrtodontic_prontuaryInput | null
  TMJ_questionnaire?: TMJ_problems_questionnaireUpdateOneRequiredWithoutOrtodontic_prontuaryInput | null
}

export type OrtodonticsUpdateWithWhereUniqueWithoutProfessionalsInput = {
  where: OrtodonticsWhereUniqueInput
  data: OrtodonticsUpdateWithoutProfessionalsDataInput
}

export type OrtodonticsScalarWhereInput = {
  id?: string | StringFilter
  patient_id?: string | StringFilter
  professionals?: DentistFilter | null
  face_profile?: string | NullableStringFilter | null
  face_simetrics?: string | NullableStringFilter | null
  bite?: string | NullableStringFilter | null
  class?: string | NullableStringFilter | null
  ideal_occlusion?: yes_no | Nullableyes_noFilter | null
  if_no_whats_wrong_in_oclusion?: string | NullableStringFilter | null
  spee?: string | NullableStringFilter | null
  overbite?: string | NullableStringFilter | null
  overjet?: string | NullableStringFilter | null
  prevision_of_end?: string | NullableStringFilter | null
  ortodontics_treatment_type?: Ortodontic_treatment_type | NullableOrtodontic_treatment_typeFilter | null
  notes?: string | NullableStringFilter | null
  createdAt?: Date | string | DateTimeFilter
  updatedAt?: Date | string | DateTimeFilter
  AND?: Enumerable<OrtodonticsScalarWhereInput>
  OR?: Array<OrtodonticsScalarWhereInput>
  NOT?: Enumerable<OrtodonticsScalarWhereInput>
}

export type OrtodonticsUpdateManyDataInput = {
  id?: string
  face_profile?: string | null
  face_simetrics?: string | null
  bite?: string | null
  class?: string | null
  ideal_occlusion?: yes_no | null
  if_no_whats_wrong_in_oclusion?: string | null
  spee?: string | null
  overbite?: string | null
  overjet?: string | null
  prevision_of_end?: string | null
  ortodontics_treatment_type?: Ortodontic_treatment_type | null
  notes?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  professional_ids?: OrtodonticsUpdateprofessional_idsInput
  what_was_updated?: OrtodonticsUpdatewhat_was_updatedInput
}

export type OrtodonticsUpdateManyWithWhereNestedInput = {
  where: OrtodonticsScalarWhereInput
  data: OrtodonticsUpdateManyDataInput
}

export type OrtodonticsUpsertWithWhereUniqueWithoutProfessionalsInput = {
  where: OrtodonticsWhereUniqueInput
  update: OrtodonticsUpdateWithoutProfessionalsDataInput
  create: OrtodonticsCreateWithoutProfessionalsInput
}

export type OrtodonticsUpdateManyWithoutProfessionalsInput = {
  create?: Enumerable<OrtodonticsCreateWithoutProfessionalsInput>
  connect?: Enumerable<OrtodonticsWhereUniqueInput>
  set?: Enumerable<OrtodonticsWhereUniqueInput>
  disconnect?: Enumerable<OrtodonticsWhereUniqueInput>
  delete?: Enumerable<OrtodonticsWhereUniqueInput>
  update?: Enumerable<OrtodonticsUpdateWithWhereUniqueWithoutProfessionalsInput>
  updateMany?: Enumerable<OrtodonticsUpdateManyWithWhereNestedInput> | null
  deleteMany?: Enumerable<OrtodonticsScalarWhereInput>
  upsert?: Enumerable<OrtodonticsUpsertWithWhereUniqueWithoutProfessionalsInput>
}

export type DentistUpdateWithoutSheduleDataInput = {
  id?: string
  CRO_number?: string
  firstname?: string
  lastname?: string
  username?: string
  password?: string
  contactmeans?: Contact_means | null
  cellphone_number?: string | null
  active?: boolean
  comission?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: string
  clinic?: ClinicUpdateOneRequiredWithoutDentistInput | null
  email?: EmailUpdateManyWithoutDentistInput | null
  specialization?: Clinic_specializationsUpdateManyWithoutDentistInput | null
  ortodontics_treatments?: OrtodonticsUpdateManyWithoutProfessionalsInput | null
  implantology_treatments?: ImplantologyUpdateManyWithoutProfessionalsInput | null
  patients?: PatientUpdateManyWithoutDentistsInput | null
  Clinic?: ClinicUpdateOneWithoutDestistsInput | null
  Email?: EmailUpdateManyWithoutDentistInput | null
}

export type DentistUpsertWithoutSheduleInput = {
  update: DentistUpdateWithoutSheduleDataInput
  create: DentistCreateWithoutSheduleInput
}

export type DentistUpdateOneRequiredWithoutSheduleInput = {
  create?: DentistCreateWithoutSheduleInput
  connect?: DentistWhereUniqueInput
  update?: DentistUpdateWithoutSheduleDataInput
  upsert?: DentistUpsertWithoutSheduleInput
}

export type Treatment_evolutionUpdateWithoutSheduleDataInput = {
  id?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  treatment_procedures_ids?: Treatment_evolutionUpdatetreatment_procedures_idsInput
  what_was_updated?: Treatment_evolutionUpdatewhat_was_updatedInput
  treatment?: ProceduresUpdateManyWithoutTreatment_evolutionInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureUpdateManyWithoutTreatmentInput | null
  Patient?: PatientUpdateManyWithoutTreatment_evolutionInput | null
}

export type Treatment_evolutionUpsertWithoutSheduleInput = {
  update: Treatment_evolutionUpdateWithoutSheduleDataInput
  create: Treatment_evolutionCreateWithoutSheduleInput
}

export type Treatment_evolutionUpdateOneRequiredWithoutSheduleInput = {
  create?: Treatment_evolutionCreateWithoutSheduleInput
  connect?: Treatment_evolutionWhereUniqueInput
  update?: Treatment_evolutionUpdateWithoutSheduleDataInput
  upsert?: Treatment_evolutionUpsertWithoutSheduleInput
}

export type ScheduleUpdateWithoutPatientDataInput = {
  date?: Date | string
  hour?: Date | string
  createdAt?: Date | string
  updatedAt?: Date | string
  dentist?: DentistUpdateOneRequiredWithoutSheduleInput | null
  treatment_evolution?: Treatment_evolutionUpdateOneRequiredWithoutSheduleInput | null
}

export type ScheduleUpsertWithoutPatientInput = {
  update: ScheduleUpdateWithoutPatientDataInput
  create: ScheduleCreateWithoutPatientInput
}

export type ScheduleUpdateOneWithoutPatientInput = {
  create?: ScheduleCreateWithoutPatientInput
  connect?: ScheduleWhereUniqueInput
  disconnect?: boolean
  delete?: boolean
  update?: ScheduleUpdateWithoutPatientDataInput
  upsert?: ScheduleUpsertWithoutPatientInput
}

export type PatientUpdateWithoutEmailDataInput = {
  id?: string
  clinic_prontuary_number?: number
  fullname?: string
  birth_date?: Date | string
  age?: number
  gender?: Gender
  brazilian_cpf?: string | null
  brazilian_rg?: string | null
  password?: string
  cellphone_number?: string | null
  contactmeans?: Contact_means | null
  last_visit_dentist?: Date | string
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: string
  what_was_updated?: PatientUpdatewhat_was_updatedInput
  clinic?: ClinicUpdateOneRequiredWithoutPatientInput | null
  schedule?: ScheduleUpdateOneWithoutPatientInput | null
  email?: EmailUpdateManyWithoutPatientInput | null
  anamnesis?: AnamnesisUpdateOneWithoutPatientInput | null
  implantology?: ImplantologyUpdateOneWithoutPatientInput | null
  ortodontics?: OrtodonticsUpdateOneWithoutPatientInput | null
  odontogram?: OdontogramUpdateOneWithoutPatientInput | null
  dont_know?: Dont_know_questionsUpdateOneWithoutPatientInput | null
  treatment_evolution?: Treatment_evolutionUpdateOneWithoutPatientInput | null
  dentists?: DentistUpdateManyWithoutPatientsInput | null
  Clinic?: ClinicUpdateOneWithoutPatientsInput | null
}

export type PatientUpsertWithoutEmailInput = {
  update: PatientUpdateWithoutEmailDataInput
  create: PatientCreateWithoutEmailInput
}

export type PatientUpdateOneWithoutEmailInput = {
  create?: PatientCreateWithoutEmailInput
  connect?: PatientWhereUniqueInput
  disconnect?: boolean
  delete?: boolean
  update?: PatientUpdateWithoutEmailDataInput
  upsert?: PatientUpsertWithoutEmailInput
}

export type EmailUpdateWithoutTechinical_manangerDataInput = {
  id?: string
  email?: string
  clinic?: ClinicUpdateOneWithoutEmailsInput | null
  legal_responsible?: LegalresponsibleUpdateOneWithoutEmailInput | null
  dentist?: DentistUpdateOneWithoutEmailInput | null
  patient?: PatientUpdateOneWithoutEmailInput | null
  Technicalmanager?: TechnicalmanagerUpdateOneWithoutEmailInput | null
  Legalresponsible?: LegalresponsibleUpdateOneWithoutEmailInput | null
  Patient?: PatientUpdateOneWithoutEmailInput | null
  Dentist?: DentistUpdateOneWithoutEmailInput | null
}

export type EmailUpdateWithWhereUniqueWithoutTechinical_manangerInput = {
  where: EmailWhereUniqueInput
  data: EmailUpdateWithoutTechinical_manangerDataInput
}

export type EmailUpsertWithWhereUniqueWithoutTechinical_manangerInput = {
  where: EmailWhereUniqueInput
  update: EmailUpdateWithoutTechinical_manangerDataInput
  create: EmailCreateWithoutTechinical_manangerInput
}

export type EmailUpdateManyWithoutTechinical_manangerInput = {
  create?: Enumerable<EmailCreateWithoutTechinical_manangerInput>
  connect?: Enumerable<EmailWhereUniqueInput>
  set?: Enumerable<EmailWhereUniqueInput>
  disconnect?: Enumerable<EmailWhereUniqueInput>
  delete?: Enumerable<EmailWhereUniqueInput>
  update?: Enumerable<EmailUpdateWithWhereUniqueWithoutTechinical_manangerInput>
  updateMany?: Enumerable<EmailUpdateManyWithWhereNestedInput> | null
  deleteMany?: Enumerable<EmailScalarWhereInput>
  upsert?: Enumerable<EmailUpsertWithWhereUniqueWithoutTechinical_manangerInput>
}

export type TechnicalmanagerUpdateWithoutClinicDataInput = {
  cpf?: string
  fullname?: string
  contactmeans?: Contact_means
  active?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: TechnicalmanagerUpdatewhat_was_updatedInput
  email?: EmailUpdateManyWithoutTechnicalmanagerInput | null
  Email?: EmailUpdateManyWithoutTechinical_manangerInput | null
}

export type TechnicalmanagerUpsertWithoutClinicInput = {
  update: TechnicalmanagerUpdateWithoutClinicDataInput
  create: TechnicalmanagerCreateWithoutClinicInput
}

export type TechnicalmanagerUpdateOneWithoutClinicInput = {
  create?: TechnicalmanagerCreateWithoutClinicInput
  connect?: TechnicalmanagerWhereUniqueInput
  disconnect?: boolean
  delete?: boolean
  update?: TechnicalmanagerUpdateWithoutClinicDataInput
  upsert?: TechnicalmanagerUpsertWithoutClinicInput
}

export type ClinicUpdateWithoutDentistDataInput = {
  registered_id?: string
  cnpj?: string
  socialreason?: string
  fantasy_name?: string
  multipleclinics?: boolean
  numberofbranches?: number
  dentalchairs?: number | null
  averagepatientsperday?: number | null
  country?: string | null
  state?: string | null
  city?: string | null
  neighborhood?: string | null
  CEP?: string | null
  website?: string | null
  password?: string | null
  ssl_enabled?: boolean | null
  two_factor_autentication?: boolean | null
  access_blocked?: boolean | null
  free_trial?: boolean
  free_trial_days_left?: number
  language?: Language
  createdAt?: Date | string
  updatedAt?: Date | string
  emails?: EmailUpdateManyWithoutClinicInput | null
  clinic_phones?: Clinic_phonesUpdateManyWithoutClinicInput | null
  patients?: PatientUpdateManyWithoutClinicInput | null
  destists?: DentistUpdateManyWithoutClinicInput | null
  employeers?: EmployeerUpdateManyWithoutClinicInput | null
  technicalmanager?: TechnicalmanagerUpdateOneWithoutClinicInput | null
  legalresponsible?: LegalresponsibleUpdateOneWithoutClinicInput | null
  insuranses?: Dental_insuranceUpdateManyWithoutClinicInput | null
  logs?: LogsUpdateManyWithoutClinicInput | null
  Clinic_payment_information?: Clinic_payment_informationUpdateManyWithoutClinicInput | null
  Clinic_finance_options?: Clinic_finance_optionsUpdateManyWithoutClinicInput | null
  Clinic_finance_month?: Clinic_finance_monthUpdateManyWithoutClinicInput | null
  Clinic_finance_day?: Clinic_finance_dayUpdateManyWithoutClinicInput | null
  Chairs?: ChairsUpdateManyWithoutClinicInput | null
  Chair_finance_day?: Chair_finance_dayUpdateManyWithoutClinicInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureUpdateManyWithoutClinicInput | null
  Patient?: PatientUpdateManyWithoutClinicInput | null
}

export type ClinicUpsertWithoutDentistInput = {
  update: ClinicUpdateWithoutDentistDataInput
  create: ClinicCreateWithoutDentistInput
}

export type ClinicUpdateOneRequiredWithoutDentistInput = {
  create?: ClinicCreateWithoutDentistInput
  connect?: ClinicWhereUniqueInput
  update?: ClinicUpdateWithoutDentistDataInput
  upsert?: ClinicUpsertWithoutDentistInput
}

export type DentistUpdateWithoutEmailDataInput = {
  id?: string
  CRO_number?: string
  firstname?: string
  lastname?: string
  username?: string
  password?: string
  contactmeans?: Contact_means | null
  cellphone_number?: string | null
  active?: boolean
  comission?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: string
  shedule?: ScheduleUpdateOneRequiredWithoutDentistInput | null
  clinic?: ClinicUpdateOneRequiredWithoutDentistInput | null
  email?: EmailUpdateManyWithoutDentistInput | null
  specialization?: Clinic_specializationsUpdateManyWithoutDentistInput | null
  ortodontics_treatments?: OrtodonticsUpdateManyWithoutProfessionalsInput | null
  implantology_treatments?: ImplantologyUpdateManyWithoutProfessionalsInput | null
  patients?: PatientUpdateManyWithoutDentistsInput | null
  Clinic?: ClinicUpdateOneWithoutDestistsInput | null
}

export type DentistUpsertWithoutEmailInput = {
  update: DentistUpdateWithoutEmailDataInput
  create: DentistCreateWithoutEmailInput
}

export type DentistUpdateOneWithoutEmailInput = {
  create?: DentistCreateWithoutEmailInput
  connect?: DentistWhereUniqueInput
  disconnect?: boolean
  delete?: boolean
  update?: DentistUpdateWithoutEmailDataInput
  upsert?: DentistUpsertWithoutEmailInput
}

export type EmailUpdateWithoutLegalresponsibleDataInput = {
  id?: string
  email?: string
  clinic?: ClinicUpdateOneWithoutEmailsInput | null
  techinical_mananger?: TechnicalmanagerUpdateOneWithoutEmailInput | null
  legal_responsible?: LegalresponsibleUpdateOneWithoutEmailInput | null
  dentist?: DentistUpdateOneWithoutEmailInput | null
  patient?: PatientUpdateOneWithoutEmailInput | null
  Technicalmanager?: TechnicalmanagerUpdateOneWithoutEmailInput | null
  Patient?: PatientUpdateOneWithoutEmailInput | null
  Dentist?: DentistUpdateOneWithoutEmailInput | null
}

export type EmailUpdateWithWhereUniqueWithoutLegalresponsibleInput = {
  where: EmailWhereUniqueInput
  data: EmailUpdateWithoutLegalresponsibleDataInput
}

export type EmailUpsertWithWhereUniqueWithoutLegalresponsibleInput = {
  where: EmailWhereUniqueInput
  update: EmailUpdateWithoutLegalresponsibleDataInput
  create: EmailCreateWithoutLegalresponsibleInput
}

export type EmailUpdateManyWithoutLegalresponsibleInput = {
  create?: Enumerable<EmailCreateWithoutLegalresponsibleInput>
  connect?: Enumerable<EmailWhereUniqueInput>
  set?: Enumerable<EmailWhereUniqueInput>
  disconnect?: Enumerable<EmailWhereUniqueInput>
  delete?: Enumerable<EmailWhereUniqueInput>
  update?: Enumerable<EmailUpdateWithWhereUniqueWithoutLegalresponsibleInput>
  updateMany?: Enumerable<EmailUpdateManyWithWhereNestedInput> | null
  deleteMany?: Enumerable<EmailScalarWhereInput>
  upsert?: Enumerable<EmailUpsertWithWhereUniqueWithoutLegalresponsibleInput>
}

export type ClinicUpdateWithoutLegalresponsibleDataInput = {
  registered_id?: string
  cnpj?: string
  socialreason?: string
  fantasy_name?: string
  multipleclinics?: boolean
  numberofbranches?: number
  dentalchairs?: number | null
  averagepatientsperday?: number | null
  country?: string | null
  state?: string | null
  city?: string | null
  neighborhood?: string | null
  CEP?: string | null
  website?: string | null
  password?: string | null
  ssl_enabled?: boolean | null
  two_factor_autentication?: boolean | null
  access_blocked?: boolean | null
  free_trial?: boolean
  free_trial_days_left?: number
  language?: Language
  createdAt?: Date | string
  updatedAt?: Date | string
  emails?: EmailUpdateManyWithoutClinicInput | null
  clinic_phones?: Clinic_phonesUpdateManyWithoutClinicInput | null
  patients?: PatientUpdateManyWithoutClinicInput | null
  destists?: DentistUpdateManyWithoutClinicInput | null
  employeers?: EmployeerUpdateManyWithoutClinicInput | null
  technicalmanager?: TechnicalmanagerUpdateOneWithoutClinicInput | null
  insuranses?: Dental_insuranceUpdateManyWithoutClinicInput | null
  logs?: LogsUpdateManyWithoutClinicInput | null
  Clinic_payment_information?: Clinic_payment_informationUpdateManyWithoutClinicInput | null
  Clinic_finance_options?: Clinic_finance_optionsUpdateManyWithoutClinicInput | null
  Clinic_finance_month?: Clinic_finance_monthUpdateManyWithoutClinicInput | null
  Clinic_finance_day?: Clinic_finance_dayUpdateManyWithoutClinicInput | null
  Chairs?: ChairsUpdateManyWithoutClinicInput | null
  Chair_finance_day?: Chair_finance_dayUpdateManyWithoutClinicInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureUpdateManyWithoutClinicInput | null
  Patient?: PatientUpdateManyWithoutClinicInput | null
  Dentist?: DentistUpdateManyWithoutClinicInput | null
}

export type ClinicUpsertWithoutLegalresponsibleInput = {
  update: ClinicUpdateWithoutLegalresponsibleDataInput
  create: ClinicCreateWithoutLegalresponsibleInput
}

export type ClinicUpdateOneRequiredWithoutLegalresponsibleInput = {
  create?: ClinicCreateWithoutLegalresponsibleInput
  connect?: ClinicWhereUniqueInput
  update?: ClinicUpdateWithoutLegalresponsibleDataInput
  upsert?: ClinicUpsertWithoutLegalresponsibleInput
}

export type LegalresponsibleUpdateWithoutEmailDataInput = {
  cpf?: string
  fullname?: string
  contactmeans?: Contact_means | null
  active?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: LegalresponsibleUpdatewhat_was_updatedInput
  email?: EmailUpdateManyWithoutLegalresponsibleInput | null
  clinic?: ClinicUpdateOneRequiredWithoutLegalresponsibleInput | null
}

export type LegalresponsibleUpsertWithoutEmailInput = {
  update: LegalresponsibleUpdateWithoutEmailDataInput
  create: LegalresponsibleCreateWithoutEmailInput
}

export type LegalresponsibleUpdateOneWithoutEmailInput = {
  create?: LegalresponsibleCreateWithoutEmailInput
  connect?: LegalresponsibleWhereUniqueInput
  disconnect?: boolean
  delete?: boolean
  update?: LegalresponsibleUpdateWithoutEmailDataInput
  upsert?: LegalresponsibleUpsertWithoutEmailInput
}

export type EmailUpdateWithoutPatientDataInput = {
  id?: string
  email?: string
  clinic?: ClinicUpdateOneWithoutEmailsInput | null
  techinical_mananger?: TechnicalmanagerUpdateOneWithoutEmailInput | null
  legal_responsible?: LegalresponsibleUpdateOneWithoutEmailInput | null
  dentist?: DentistUpdateOneWithoutEmailInput | null
  patient?: PatientUpdateOneWithoutEmailInput | null
  Technicalmanager?: TechnicalmanagerUpdateOneWithoutEmailInput | null
  Legalresponsible?: LegalresponsibleUpdateOneWithoutEmailInput | null
  Dentist?: DentistUpdateOneWithoutEmailInput | null
}

export type EmailUpdateWithWhereUniqueWithoutPatientInput = {
  where: EmailWhereUniqueInput
  data: EmailUpdateWithoutPatientDataInput
}

export type EmailUpsertWithWhereUniqueWithoutPatientInput = {
  where: EmailWhereUniqueInput
  update: EmailUpdateWithoutPatientDataInput
  create: EmailCreateWithoutPatientInput
}

export type EmailUpdateManyWithoutPatientInput = {
  create?: Enumerable<EmailCreateWithoutPatientInput>
  connect?: Enumerable<EmailWhereUniqueInput>
  set?: Enumerable<EmailWhereUniqueInput>
  disconnect?: Enumerable<EmailWhereUniqueInput>
  delete?: Enumerable<EmailWhereUniqueInput>
  update?: Enumerable<EmailUpdateWithWhereUniqueWithoutPatientInput>
  updateMany?: Enumerable<EmailUpdateManyWithWhereNestedInput> | null
  deleteMany?: Enumerable<EmailScalarWhereInput>
  upsert?: Enumerable<EmailUpsertWithWhereUniqueWithoutPatientInput>
}

export type PatientUpdateWithoutScheduleDataInput = {
  id?: string
  clinic_prontuary_number?: number
  fullname?: string
  birth_date?: Date | string
  age?: number
  gender?: Gender
  brazilian_cpf?: string | null
  brazilian_rg?: string | null
  password?: string
  cellphone_number?: string | null
  contactmeans?: Contact_means | null
  last_visit_dentist?: Date | string
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: string
  what_was_updated?: PatientUpdatewhat_was_updatedInput
  clinic?: ClinicUpdateOneRequiredWithoutPatientInput | null
  email?: EmailUpdateManyWithoutPatientInput | null
  anamnesis?: AnamnesisUpdateOneWithoutPatientInput | null
  implantology?: ImplantologyUpdateOneWithoutPatientInput | null
  ortodontics?: OrtodonticsUpdateOneWithoutPatientInput | null
  odontogram?: OdontogramUpdateOneWithoutPatientInput | null
  dont_know?: Dont_know_questionsUpdateOneWithoutPatientInput | null
  treatment_evolution?: Treatment_evolutionUpdateOneWithoutPatientInput | null
  dentists?: DentistUpdateManyWithoutPatientsInput | null
  Clinic?: ClinicUpdateOneWithoutPatientsInput | null
  Email?: EmailUpdateManyWithoutPatientInput | null
}

export type PatientUpsertWithoutScheduleInput = {
  update: PatientUpdateWithoutScheduleDataInput
  create: PatientCreateWithoutScheduleInput
}

export type PatientUpdateOneWithoutScheduleInput = {
  create?: PatientCreateWithoutScheduleInput
  connect?: PatientWhereUniqueInput
  disconnect?: boolean
  delete?: boolean
  update?: PatientUpdateWithoutScheduleDataInput
  upsert?: PatientUpsertWithoutScheduleInput
}

export type ScheduleUpdateWithoutDentistDataInput = {
  date?: Date | string
  hour?: Date | string
  createdAt?: Date | string
  updatedAt?: Date | string
  patient?: PatientUpdateOneWithoutScheduleInput | null
  treatment_evolution?: Treatment_evolutionUpdateOneRequiredWithoutSheduleInput | null
}

export type ScheduleUpsertWithoutDentistInput = {
  update: ScheduleUpdateWithoutDentistDataInput
  create: ScheduleCreateWithoutDentistInput
}

export type ScheduleUpdateOneRequiredWithoutDentistInput = {
  create?: ScheduleCreateWithoutDentistInput
  connect?: ScheduleWhereUniqueInput
  update?: ScheduleUpdateWithoutDentistDataInput
  upsert?: ScheduleUpsertWithoutDentistInput
}

export type DentistUpdateWithoutClinicDataInput = {
  id?: string
  CRO_number?: string
  firstname?: string
  lastname?: string
  username?: string
  password?: string
  contactmeans?: Contact_means | null
  cellphone_number?: string | null
  active?: boolean
  comission?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: string
  shedule?: ScheduleUpdateOneRequiredWithoutDentistInput | null
  clinic?: ClinicUpdateOneRequiredWithoutDentistInput | null
  email?: EmailUpdateManyWithoutDentistInput | null
  specialization?: Clinic_specializationsUpdateManyWithoutDentistInput | null
  ortodontics_treatments?: OrtodonticsUpdateManyWithoutProfessionalsInput | null
  implantology_treatments?: ImplantologyUpdateManyWithoutProfessionalsInput | null
  patients?: PatientUpdateManyWithoutDentistsInput | null
  Email?: EmailUpdateManyWithoutDentistInput | null
}

export type DentistUpdateWithWhereUniqueWithoutClinicInput = {
  where: DentistWhereUniqueInput
  data: DentistUpdateWithoutClinicDataInput
}

export type DentistUpsertWithWhereUniqueWithoutClinicInput = {
  where: DentistWhereUniqueInput
  update: DentistUpdateWithoutClinicDataInput
  create: DentistCreateWithoutClinicInput
}

export type DentistUpdateManyWithoutClinicInput = {
  create?: Enumerable<DentistCreateWithoutClinicInput>
  connect?: Enumerable<DentistWhereUniqueInput>
  set?: Enumerable<DentistWhereUniqueInput>
  disconnect?: Enumerable<DentistWhereUniqueInput>
  delete?: Enumerable<DentistWhereUniqueInput>
  update?: Enumerable<DentistUpdateWithWhereUniqueWithoutClinicInput>
  updateMany?: Enumerable<DentistUpdateManyWithWhereNestedInput> | null
  deleteMany?: Enumerable<DentistScalarWhereInput>
  upsert?: Enumerable<DentistUpsertWithWhereUniqueWithoutClinicInput>
}

export type ClinicUpdateWithoutPatientDataInput = {
  registered_id?: string
  cnpj?: string
  socialreason?: string
  fantasy_name?: string
  multipleclinics?: boolean
  numberofbranches?: number
  dentalchairs?: number | null
  averagepatientsperday?: number | null
  country?: string | null
  state?: string | null
  city?: string | null
  neighborhood?: string | null
  CEP?: string | null
  website?: string | null
  password?: string | null
  ssl_enabled?: boolean | null
  two_factor_autentication?: boolean | null
  access_blocked?: boolean | null
  free_trial?: boolean
  free_trial_days_left?: number
  language?: Language
  createdAt?: Date | string
  updatedAt?: Date | string
  emails?: EmailUpdateManyWithoutClinicInput | null
  clinic_phones?: Clinic_phonesUpdateManyWithoutClinicInput | null
  patients?: PatientUpdateManyWithoutClinicInput | null
  destists?: DentistUpdateManyWithoutClinicInput | null
  employeers?: EmployeerUpdateManyWithoutClinicInput | null
  technicalmanager?: TechnicalmanagerUpdateOneWithoutClinicInput | null
  legalresponsible?: LegalresponsibleUpdateOneWithoutClinicInput | null
  insuranses?: Dental_insuranceUpdateManyWithoutClinicInput | null
  logs?: LogsUpdateManyWithoutClinicInput | null
  Clinic_payment_information?: Clinic_payment_informationUpdateManyWithoutClinicInput | null
  Clinic_finance_options?: Clinic_finance_optionsUpdateManyWithoutClinicInput | null
  Clinic_finance_month?: Clinic_finance_monthUpdateManyWithoutClinicInput | null
  Clinic_finance_day?: Clinic_finance_dayUpdateManyWithoutClinicInput | null
  Chairs?: ChairsUpdateManyWithoutClinicInput | null
  Chair_finance_day?: Chair_finance_dayUpdateManyWithoutClinicInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureUpdateManyWithoutClinicInput | null
  Dentist?: DentistUpdateManyWithoutClinicInput | null
}

export type ClinicUpsertWithoutPatientInput = {
  update: ClinicUpdateWithoutPatientDataInput
  create: ClinicCreateWithoutPatientInput
}

export type ClinicUpdateOneRequiredWithoutPatientInput = {
  create?: ClinicCreateWithoutPatientInput
  connect?: ClinicWhereUniqueInput
  update?: ClinicUpdateWithoutPatientDataInput
  upsert?: ClinicUpsertWithoutPatientInput
}

export type PatientUpdateWithoutClinicDataInput = {
  id?: string
  clinic_prontuary_number?: number
  fullname?: string
  birth_date?: Date | string
  age?: number
  gender?: Gender
  brazilian_cpf?: string | null
  brazilian_rg?: string | null
  password?: string
  cellphone_number?: string | null
  contactmeans?: Contact_means | null
  last_visit_dentist?: Date | string
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: string
  what_was_updated?: PatientUpdatewhat_was_updatedInput
  clinic?: ClinicUpdateOneRequiredWithoutPatientInput | null
  schedule?: ScheduleUpdateOneWithoutPatientInput | null
  email?: EmailUpdateManyWithoutPatientInput | null
  anamnesis?: AnamnesisUpdateOneWithoutPatientInput | null
  implantology?: ImplantologyUpdateOneWithoutPatientInput | null
  ortodontics?: OrtodonticsUpdateOneWithoutPatientInput | null
  odontogram?: OdontogramUpdateOneWithoutPatientInput | null
  dont_know?: Dont_know_questionsUpdateOneWithoutPatientInput | null
  treatment_evolution?: Treatment_evolutionUpdateOneWithoutPatientInput | null
  dentists?: DentistUpdateManyWithoutPatientsInput | null
  Email?: EmailUpdateManyWithoutPatientInput | null
}

export type PatientUpdateWithWhereUniqueWithoutClinicInput = {
  where: PatientWhereUniqueInput
  data: PatientUpdateWithoutClinicDataInput
}

export type PatientUpsertWithWhereUniqueWithoutClinicInput = {
  where: PatientWhereUniqueInput
  update: PatientUpdateWithoutClinicDataInput
  create: PatientCreateWithoutClinicInput
}

export type PatientUpdateManyWithoutClinicInput = {
  create?: Enumerable<PatientCreateWithoutClinicInput>
  connect?: Enumerable<PatientWhereUniqueInput>
  set?: Enumerable<PatientWhereUniqueInput>
  disconnect?: Enumerable<PatientWhereUniqueInput>
  delete?: Enumerable<PatientWhereUniqueInput>
  update?: Enumerable<PatientUpdateWithWhereUniqueWithoutClinicInput>
  updateMany?: Enumerable<PatientUpdateManyWithWhereNestedInput> | null
  deleteMany?: Enumerable<PatientScalarWhereInput>
  upsert?: Enumerable<PatientUpsertWithWhereUniqueWithoutClinicInput>
}

export type ClinicUpdateWithoutEmailsDataInput = {
  registered_id?: string
  cnpj?: string
  socialreason?: string
  fantasy_name?: string
  multipleclinics?: boolean
  numberofbranches?: number
  dentalchairs?: number | null
  averagepatientsperday?: number | null
  country?: string | null
  state?: string | null
  city?: string | null
  neighborhood?: string | null
  CEP?: string | null
  website?: string | null
  password?: string | null
  ssl_enabled?: boolean | null
  two_factor_autentication?: boolean | null
  access_blocked?: boolean | null
  free_trial?: boolean
  free_trial_days_left?: number
  language?: Language
  createdAt?: Date | string
  updatedAt?: Date | string
  clinic_phones?: Clinic_phonesUpdateManyWithoutClinicInput | null
  patients?: PatientUpdateManyWithoutClinicInput | null
  destists?: DentistUpdateManyWithoutClinicInput | null
  employeers?: EmployeerUpdateManyWithoutClinicInput | null
  technicalmanager?: TechnicalmanagerUpdateOneWithoutClinicInput | null
  legalresponsible?: LegalresponsibleUpdateOneWithoutClinicInput | null
  insuranses?: Dental_insuranceUpdateManyWithoutClinicInput | null
  logs?: LogsUpdateManyWithoutClinicInput | null
  Clinic_payment_information?: Clinic_payment_informationUpdateManyWithoutClinicInput | null
  Clinic_finance_options?: Clinic_finance_optionsUpdateManyWithoutClinicInput | null
  Clinic_finance_month?: Clinic_finance_monthUpdateManyWithoutClinicInput | null
  Clinic_finance_day?: Clinic_finance_dayUpdateManyWithoutClinicInput | null
  Chairs?: ChairsUpdateManyWithoutClinicInput | null
  Chair_finance_day?: Chair_finance_dayUpdateManyWithoutClinicInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureUpdateManyWithoutClinicInput | null
  Patient?: PatientUpdateManyWithoutClinicInput | null
  Dentist?: DentistUpdateManyWithoutClinicInput | null
}

export type ClinicUpsertWithoutEmailsInput = {
  update: ClinicUpdateWithoutEmailsDataInput
  create: ClinicCreateWithoutEmailsInput
}

export type ClinicUpdateOneWithoutEmailsInput = {
  create?: ClinicCreateWithoutEmailsInput
  connect?: ClinicWhereUniqueInput
  disconnect?: boolean
  delete?: boolean
  update?: ClinicUpdateWithoutEmailsDataInput
  upsert?: ClinicUpsertWithoutEmailsInput
}

export type EmailUpdateWithoutTechnicalmanagerDataInput = {
  id?: string
  email?: string
  clinic?: ClinicUpdateOneWithoutEmailsInput | null
  techinical_mananger?: TechnicalmanagerUpdateOneWithoutEmailInput | null
  legal_responsible?: LegalresponsibleUpdateOneWithoutEmailInput | null
  dentist?: DentistUpdateOneWithoutEmailInput | null
  patient?: PatientUpdateOneWithoutEmailInput | null
  Legalresponsible?: LegalresponsibleUpdateOneWithoutEmailInput | null
  Patient?: PatientUpdateOneWithoutEmailInput | null
  Dentist?: DentistUpdateOneWithoutEmailInput | null
}

export type EmailUpdateWithWhereUniqueWithoutTechnicalmanagerInput = {
  where: EmailWhereUniqueInput
  data: EmailUpdateWithoutTechnicalmanagerDataInput
}

export type EmailUpsertWithWhereUniqueWithoutTechnicalmanagerInput = {
  where: EmailWhereUniqueInput
  update: EmailUpdateWithoutTechnicalmanagerDataInput
  create: EmailCreateWithoutTechnicalmanagerInput
}

export type EmailUpdateManyWithoutTechnicalmanagerInput = {
  create?: Enumerable<EmailCreateWithoutTechnicalmanagerInput>
  connect?: Enumerable<EmailWhereUniqueInput>
  set?: Enumerable<EmailWhereUniqueInput>
  disconnect?: Enumerable<EmailWhereUniqueInput>
  delete?: Enumerable<EmailWhereUniqueInput>
  update?: Enumerable<EmailUpdateWithWhereUniqueWithoutTechnicalmanagerInput>
  updateMany?: Enumerable<EmailUpdateManyWithWhereNestedInput> | null
  deleteMany?: Enumerable<EmailScalarWhereInput>
  upsert?: Enumerable<EmailUpsertWithWhereUniqueWithoutTechnicalmanagerInput>
}

export type ClinicUpdateWithoutTechnicalmanagerDataInput = {
  registered_id?: string
  cnpj?: string
  socialreason?: string
  fantasy_name?: string
  multipleclinics?: boolean
  numberofbranches?: number
  dentalchairs?: number | null
  averagepatientsperday?: number | null
  country?: string | null
  state?: string | null
  city?: string | null
  neighborhood?: string | null
  CEP?: string | null
  website?: string | null
  password?: string | null
  ssl_enabled?: boolean | null
  two_factor_autentication?: boolean | null
  access_blocked?: boolean | null
  free_trial?: boolean
  free_trial_days_left?: number
  language?: Language
  createdAt?: Date | string
  updatedAt?: Date | string
  emails?: EmailUpdateManyWithoutClinicInput | null
  clinic_phones?: Clinic_phonesUpdateManyWithoutClinicInput | null
  patients?: PatientUpdateManyWithoutClinicInput | null
  destists?: DentistUpdateManyWithoutClinicInput | null
  employeers?: EmployeerUpdateManyWithoutClinicInput | null
  legalresponsible?: LegalresponsibleUpdateOneWithoutClinicInput | null
  insuranses?: Dental_insuranceUpdateManyWithoutClinicInput | null
  logs?: LogsUpdateManyWithoutClinicInput | null
  Clinic_payment_information?: Clinic_payment_informationUpdateManyWithoutClinicInput | null
  Clinic_finance_options?: Clinic_finance_optionsUpdateManyWithoutClinicInput | null
  Clinic_finance_month?: Clinic_finance_monthUpdateManyWithoutClinicInput | null
  Clinic_finance_day?: Clinic_finance_dayUpdateManyWithoutClinicInput | null
  Chairs?: ChairsUpdateManyWithoutClinicInput | null
  Chair_finance_day?: Chair_finance_dayUpdateManyWithoutClinicInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureUpdateManyWithoutClinicInput | null
  Patient?: PatientUpdateManyWithoutClinicInput | null
  Dentist?: DentistUpdateManyWithoutClinicInput | null
}

export type ClinicUpsertWithoutTechnicalmanagerInput = {
  update: ClinicUpdateWithoutTechnicalmanagerDataInput
  create: ClinicCreateWithoutTechnicalmanagerInput
}

export type ClinicUpdateOneRequiredWithoutTechnicalmanagerInput = {
  create?: ClinicCreateWithoutTechnicalmanagerInput
  connect?: ClinicWhereUniqueInput
  update?: ClinicUpdateWithoutTechnicalmanagerDataInput
  upsert?: ClinicUpsertWithoutTechnicalmanagerInput
}

export type TechnicalmanagerUpdateWithoutEmailDataInput = {
  cpf?: string
  fullname?: string
  contactmeans?: Contact_means
  active?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: TechnicalmanagerUpdatewhat_was_updatedInput
  email?: EmailUpdateManyWithoutTechnicalmanagerInput | null
  clinic?: ClinicUpdateOneRequiredWithoutTechnicalmanagerInput | null
}

export type TechnicalmanagerUpsertWithoutEmailInput = {
  update: TechnicalmanagerUpdateWithoutEmailDataInput
  create: TechnicalmanagerCreateWithoutEmailInput
}

export type TechnicalmanagerUpdateOneWithoutEmailInput = {
  create?: TechnicalmanagerCreateWithoutEmailInput
  connect?: TechnicalmanagerWhereUniqueInput
  disconnect?: boolean
  delete?: boolean
  update?: TechnicalmanagerUpdateWithoutEmailDataInput
  upsert?: TechnicalmanagerUpsertWithoutEmailInput
}

export type EmailUpdateWithoutClinicDataInput = {
  id?: string
  email?: string
  techinical_mananger?: TechnicalmanagerUpdateOneWithoutEmailInput | null
  legal_responsible?: LegalresponsibleUpdateOneWithoutEmailInput | null
  dentist?: DentistUpdateOneWithoutEmailInput | null
  patient?: PatientUpdateOneWithoutEmailInput | null
  Technicalmanager?: TechnicalmanagerUpdateOneWithoutEmailInput | null
  Legalresponsible?: LegalresponsibleUpdateOneWithoutEmailInput | null
  Patient?: PatientUpdateOneWithoutEmailInput | null
  Dentist?: DentistUpdateOneWithoutEmailInput | null
}

export type EmailUpdateWithWhereUniqueWithoutClinicInput = {
  where: EmailWhereUniqueInput
  data: EmailUpdateWithoutClinicDataInput
}

export type EmailUpsertWithWhereUniqueWithoutClinicInput = {
  where: EmailWhereUniqueInput
  update: EmailUpdateWithoutClinicDataInput
  create: EmailCreateWithoutClinicInput
}

export type EmailUpdateManyWithoutClinicInput = {
  create?: Enumerable<EmailCreateWithoutClinicInput>
  connect?: Enumerable<EmailWhereUniqueInput>
  set?: Enumerable<EmailWhereUniqueInput>
  disconnect?: Enumerable<EmailWhereUniqueInput>
  delete?: Enumerable<EmailWhereUniqueInput>
  update?: Enumerable<EmailUpdateWithWhereUniqueWithoutClinicInput>
  updateMany?: Enumerable<EmailUpdateManyWithWhereNestedInput> | null
  deleteMany?: Enumerable<EmailScalarWhereInput>
  upsert?: Enumerable<EmailUpsertWithWhereUniqueWithoutClinicInput>
}

export type ClinicUpdateInput = {
  registered_id?: string
  cnpj?: string
  socialreason?: string
  fantasy_name?: string
  multipleclinics?: boolean
  numberofbranches?: number
  dentalchairs?: number | null
  averagepatientsperday?: number | null
  country?: string | null
  state?: string | null
  city?: string | null
  neighborhood?: string | null
  CEP?: string | null
  website?: string | null
  password?: string | null
  ssl_enabled?: boolean | null
  two_factor_autentication?: boolean | null
  access_blocked?: boolean | null
  free_trial?: boolean
  free_trial_days_left?: number
  language?: Language
  createdAt?: Date | string
  updatedAt?: Date | string
  emails?: EmailUpdateManyWithoutClinicInput | null
  clinic_phones?: Clinic_phonesUpdateManyWithoutClinicInput | null
  patients?: PatientUpdateManyWithoutClinicInput | null
  destists?: DentistUpdateManyWithoutClinicInput | null
  employeers?: EmployeerUpdateManyWithoutClinicInput | null
  technicalmanager?: TechnicalmanagerUpdateOneWithoutClinicInput | null
  legalresponsible?: LegalresponsibleUpdateOneWithoutClinicInput | null
  insuranses?: Dental_insuranceUpdateManyWithoutClinicInput | null
  logs?: LogsUpdateManyWithoutClinicInput | null
  Clinic_payment_information?: Clinic_payment_informationUpdateManyWithoutClinicInput | null
  Clinic_finance_options?: Clinic_finance_optionsUpdateManyWithoutClinicInput | null
  Clinic_finance_month?: Clinic_finance_monthUpdateManyWithoutClinicInput | null
  Clinic_finance_day?: Clinic_finance_dayUpdateManyWithoutClinicInput | null
  Chairs?: ChairsUpdateManyWithoutClinicInput | null
  Chair_finance_day?: Chair_finance_dayUpdateManyWithoutClinicInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureUpdateManyWithoutClinicInput | null
  Patient?: PatientUpdateManyWithoutClinicInput | null
  Dentist?: DentistUpdateManyWithoutClinicInput | null
}

export type ClinicUpdateManyMutationInput = {
  registered_id?: string
  cnpj?: string
  socialreason?: string
  fantasy_name?: string
  multipleclinics?: boolean
  numberofbranches?: number
  dentalchairs?: number | null
  averagepatientsperday?: number | null
  country?: string | null
  state?: string | null
  city?: string | null
  neighborhood?: string | null
  CEP?: string | null
  website?: string | null
  password?: string | null
  ssl_enabled?: boolean | null
  two_factor_autentication?: boolean | null
  access_blocked?: boolean | null
  free_trial?: boolean
  free_trial_days_left?: number
  language?: Language
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ClinicCreateWithoutClinic_payment_informationInput = {
  registered_id?: string
  cnpj: string
  socialreason: string
  fantasy_name: string
  multipleclinics?: boolean
  numberofbranches?: number
  dentalchairs?: number | null
  averagepatientsperday?: number | null
  country?: string | null
  state?: string | null
  city?: string | null
  neighborhood?: string | null
  CEP?: string | null
  website?: string | null
  password?: string | null
  ssl_enabled?: boolean | null
  two_factor_autentication?: boolean | null
  access_blocked?: boolean | null
  free_trial?: boolean
  free_trial_days_left?: number
  language?: Language
  createdAt?: Date | string
  updatedAt?: Date | string
  emails?: EmailCreateManyWithoutClinicInput | null
  clinic_phones?: Clinic_phonesCreateManyWithoutClinicInput | null
  patients?: PatientCreateManyWithoutClinicInput | null
  destists?: DentistCreateManyWithoutClinicInput | null
  employeers?: EmployeerCreateManyWithoutClinicInput | null
  technicalmanager?: TechnicalmanagerCreateOneWithoutClinicInput | null
  legalresponsible?: LegalresponsibleCreateOneWithoutClinicInput | null
  insuranses?: Dental_insuranceCreateManyWithoutClinicInput | null
  logs?: LogsCreateManyWithoutClinicInput | null
  Clinic_finance_options?: Clinic_finance_optionsCreateManyWithoutClinicInput | null
  Clinic_finance_month?: Clinic_finance_monthCreateManyWithoutClinicInput | null
  Clinic_finance_day?: Clinic_finance_dayCreateManyWithoutClinicInput | null
  Chairs?: ChairsCreateManyWithoutClinicInput | null
  Chair_finance_day?: Chair_finance_dayCreateManyWithoutClinicInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureCreateManyWithoutClinicInput | null
  Patient?: PatientCreateManyWithoutClinicInput | null
  Dentist?: DentistCreateManyWithoutClinicInput | null
}

export type ClinicCreateOneWithoutClinic_payment_informationInput = {
  create?: ClinicCreateWithoutClinic_payment_informationInput
  connect?: ClinicWhereUniqueInput
}

export type Clinic_payment_informationCreateInput = {
  id?: string
  payment_method: Payment_method
  registered_credit_card: boolean
  registered_debit_card: boolean
  payment_day?: number | null
  next_payment?: Date | string | null
  credit_card_number?: string | null
  credit_card_CCV?: string | null
  credit_card_name?: string | null
  debit_card_number?: string | null
  debit_card_CCV?: string | null
  debit_card_name?: string | null
  delayed_payment?: boolean | null
  delayed_days?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Clinic_payment_informationCreatewhat_was_updatedInput
  clinic: ClinicCreateOneWithoutClinic_payment_informationInput
}

export type ClinicUpdateWithoutClinic_payment_informationDataInput = {
  registered_id?: string
  cnpj?: string
  socialreason?: string
  fantasy_name?: string
  multipleclinics?: boolean
  numberofbranches?: number
  dentalchairs?: number | null
  averagepatientsperday?: number | null
  country?: string | null
  state?: string | null
  city?: string | null
  neighborhood?: string | null
  CEP?: string | null
  website?: string | null
  password?: string | null
  ssl_enabled?: boolean | null
  two_factor_autentication?: boolean | null
  access_blocked?: boolean | null
  free_trial?: boolean
  free_trial_days_left?: number
  language?: Language
  createdAt?: Date | string
  updatedAt?: Date | string
  emails?: EmailUpdateManyWithoutClinicInput | null
  clinic_phones?: Clinic_phonesUpdateManyWithoutClinicInput | null
  patients?: PatientUpdateManyWithoutClinicInput | null
  destists?: DentistUpdateManyWithoutClinicInput | null
  employeers?: EmployeerUpdateManyWithoutClinicInput | null
  technicalmanager?: TechnicalmanagerUpdateOneWithoutClinicInput | null
  legalresponsible?: LegalresponsibleUpdateOneWithoutClinicInput | null
  insuranses?: Dental_insuranceUpdateManyWithoutClinicInput | null
  logs?: LogsUpdateManyWithoutClinicInput | null
  Clinic_finance_options?: Clinic_finance_optionsUpdateManyWithoutClinicInput | null
  Clinic_finance_month?: Clinic_finance_monthUpdateManyWithoutClinicInput | null
  Clinic_finance_day?: Clinic_finance_dayUpdateManyWithoutClinicInput | null
  Chairs?: ChairsUpdateManyWithoutClinicInput | null
  Chair_finance_day?: Chair_finance_dayUpdateManyWithoutClinicInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureUpdateManyWithoutClinicInput | null
  Patient?: PatientUpdateManyWithoutClinicInput | null
  Dentist?: DentistUpdateManyWithoutClinicInput | null
}

export type ClinicUpsertWithoutClinic_payment_informationInput = {
  update: ClinicUpdateWithoutClinic_payment_informationDataInput
  create: ClinicCreateWithoutClinic_payment_informationInput
}

export type ClinicUpdateOneRequiredWithoutClinic_payment_informationInput = {
  create?: ClinicCreateWithoutClinic_payment_informationInput
  connect?: ClinicWhereUniqueInput
  update?: ClinicUpdateWithoutClinic_payment_informationDataInput
  upsert?: ClinicUpsertWithoutClinic_payment_informationInput
}

export type Clinic_payment_informationUpdateInput = {
  id?: string
  payment_method?: Payment_method
  registered_credit_card?: boolean
  registered_debit_card?: boolean
  payment_day?: number | null
  next_payment?: Date | string | null
  credit_card_number?: string | null
  credit_card_CCV?: string | null
  credit_card_name?: string | null
  debit_card_number?: string | null
  debit_card_CCV?: string | null
  debit_card_name?: string | null
  delayed_payment?: boolean | null
  delayed_days?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Clinic_payment_informationUpdatewhat_was_updatedInput
  clinic?: ClinicUpdateOneRequiredWithoutClinic_payment_informationInput | null
}

export type Clinic_payment_informationUpdateManyMutationInput = {
  id?: string
  payment_method?: Payment_method
  registered_credit_card?: boolean
  registered_debit_card?: boolean
  payment_day?: number | null
  next_payment?: Date | string | null
  credit_card_number?: string | null
  credit_card_CCV?: string | null
  credit_card_name?: string | null
  debit_card_number?: string | null
  debit_card_CCV?: string | null
  debit_card_name?: string | null
  delayed_payment?: boolean | null
  delayed_days?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Clinic_payment_informationUpdatewhat_was_updatedInput
}

export type ClinicCreateWithoutClinic_finance_optionsInput = {
  registered_id?: string
  cnpj: string
  socialreason: string
  fantasy_name: string
  multipleclinics?: boolean
  numberofbranches?: number
  dentalchairs?: number | null
  averagepatientsperday?: number | null
  country?: string | null
  state?: string | null
  city?: string | null
  neighborhood?: string | null
  CEP?: string | null
  website?: string | null
  password?: string | null
  ssl_enabled?: boolean | null
  two_factor_autentication?: boolean | null
  access_blocked?: boolean | null
  free_trial?: boolean
  free_trial_days_left?: number
  language?: Language
  createdAt?: Date | string
  updatedAt?: Date | string
  emails?: EmailCreateManyWithoutClinicInput | null
  clinic_phones?: Clinic_phonesCreateManyWithoutClinicInput | null
  patients?: PatientCreateManyWithoutClinicInput | null
  destists?: DentistCreateManyWithoutClinicInput | null
  employeers?: EmployeerCreateManyWithoutClinicInput | null
  technicalmanager?: TechnicalmanagerCreateOneWithoutClinicInput | null
  legalresponsible?: LegalresponsibleCreateOneWithoutClinicInput | null
  insuranses?: Dental_insuranceCreateManyWithoutClinicInput | null
  logs?: LogsCreateManyWithoutClinicInput | null
  Clinic_payment_information?: Clinic_payment_informationCreateManyWithoutClinicInput | null
  Clinic_finance_month?: Clinic_finance_monthCreateManyWithoutClinicInput | null
  Clinic_finance_day?: Clinic_finance_dayCreateManyWithoutClinicInput | null
  Chairs?: ChairsCreateManyWithoutClinicInput | null
  Chair_finance_day?: Chair_finance_dayCreateManyWithoutClinicInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureCreateManyWithoutClinicInput | null
  Patient?: PatientCreateManyWithoutClinicInput | null
  Dentist?: DentistCreateManyWithoutClinicInput | null
}

export type ClinicCreateOneWithoutClinic_finance_optionsInput = {
  create?: ClinicCreateWithoutClinic_finance_optionsInput
  connect?: ClinicWhereUniqueInput
}

export type Clinic_finance_optionsCreateInput = {
  calculation_hour_of_day: number
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Clinic_finance_optionsCreatewhat_was_updatedInput
  clinic: ClinicCreateOneWithoutClinic_finance_optionsInput
}

export type ClinicUpdateWithoutClinic_finance_optionsDataInput = {
  registered_id?: string
  cnpj?: string
  socialreason?: string
  fantasy_name?: string
  multipleclinics?: boolean
  numberofbranches?: number
  dentalchairs?: number | null
  averagepatientsperday?: number | null
  country?: string | null
  state?: string | null
  city?: string | null
  neighborhood?: string | null
  CEP?: string | null
  website?: string | null
  password?: string | null
  ssl_enabled?: boolean | null
  two_factor_autentication?: boolean | null
  access_blocked?: boolean | null
  free_trial?: boolean
  free_trial_days_left?: number
  language?: Language
  createdAt?: Date | string
  updatedAt?: Date | string
  emails?: EmailUpdateManyWithoutClinicInput | null
  clinic_phones?: Clinic_phonesUpdateManyWithoutClinicInput | null
  patients?: PatientUpdateManyWithoutClinicInput | null
  destists?: DentistUpdateManyWithoutClinicInput | null
  employeers?: EmployeerUpdateManyWithoutClinicInput | null
  technicalmanager?: TechnicalmanagerUpdateOneWithoutClinicInput | null
  legalresponsible?: LegalresponsibleUpdateOneWithoutClinicInput | null
  insuranses?: Dental_insuranceUpdateManyWithoutClinicInput | null
  logs?: LogsUpdateManyWithoutClinicInput | null
  Clinic_payment_information?: Clinic_payment_informationUpdateManyWithoutClinicInput | null
  Clinic_finance_month?: Clinic_finance_monthUpdateManyWithoutClinicInput | null
  Clinic_finance_day?: Clinic_finance_dayUpdateManyWithoutClinicInput | null
  Chairs?: ChairsUpdateManyWithoutClinicInput | null
  Chair_finance_day?: Chair_finance_dayUpdateManyWithoutClinicInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureUpdateManyWithoutClinicInput | null
  Patient?: PatientUpdateManyWithoutClinicInput | null
  Dentist?: DentistUpdateManyWithoutClinicInput | null
}

export type ClinicUpsertWithoutClinic_finance_optionsInput = {
  update: ClinicUpdateWithoutClinic_finance_optionsDataInput
  create: ClinicCreateWithoutClinic_finance_optionsInput
}

export type ClinicUpdateOneRequiredWithoutClinic_finance_optionsInput = {
  create?: ClinicCreateWithoutClinic_finance_optionsInput
  connect?: ClinicWhereUniqueInput
  update?: ClinicUpdateWithoutClinic_finance_optionsDataInput
  upsert?: ClinicUpsertWithoutClinic_finance_optionsInput
}

export type Clinic_finance_optionsUpdateInput = {
  calculation_hour_of_day?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Clinic_finance_optionsUpdatewhat_was_updatedInput
  clinic?: ClinicUpdateOneRequiredWithoutClinic_finance_optionsInput | null
}

export type Clinic_finance_optionsUpdateManyMutationInput = {
  calculation_hour_of_day?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Clinic_finance_optionsUpdatewhat_was_updatedInput
}

export type ClinicCreateWithoutClinic_finance_monthInput = {
  registered_id?: string
  cnpj: string
  socialreason: string
  fantasy_name: string
  multipleclinics?: boolean
  numberofbranches?: number
  dentalchairs?: number | null
  averagepatientsperday?: number | null
  country?: string | null
  state?: string | null
  city?: string | null
  neighborhood?: string | null
  CEP?: string | null
  website?: string | null
  password?: string | null
  ssl_enabled?: boolean | null
  two_factor_autentication?: boolean | null
  access_blocked?: boolean | null
  free_trial?: boolean
  free_trial_days_left?: number
  language?: Language
  createdAt?: Date | string
  updatedAt?: Date | string
  emails?: EmailCreateManyWithoutClinicInput | null
  clinic_phones?: Clinic_phonesCreateManyWithoutClinicInput | null
  patients?: PatientCreateManyWithoutClinicInput | null
  destists?: DentistCreateManyWithoutClinicInput | null
  employeers?: EmployeerCreateManyWithoutClinicInput | null
  technicalmanager?: TechnicalmanagerCreateOneWithoutClinicInput | null
  legalresponsible?: LegalresponsibleCreateOneWithoutClinicInput | null
  insuranses?: Dental_insuranceCreateManyWithoutClinicInput | null
  logs?: LogsCreateManyWithoutClinicInput | null
  Clinic_payment_information?: Clinic_payment_informationCreateManyWithoutClinicInput | null
  Clinic_finance_options?: Clinic_finance_optionsCreateManyWithoutClinicInput | null
  Clinic_finance_day?: Clinic_finance_dayCreateManyWithoutClinicInput | null
  Chairs?: ChairsCreateManyWithoutClinicInput | null
  Chair_finance_day?: Chair_finance_dayCreateManyWithoutClinicInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureCreateManyWithoutClinicInput | null
  Patient?: PatientCreateManyWithoutClinicInput | null
  Dentist?: DentistCreateManyWithoutClinicInput | null
}

export type ClinicCreateOneWithoutClinic_finance_monthInput = {
  create?: ClinicCreateWithoutClinic_finance_monthInput
  connect?: ClinicWhereUniqueInput
}

export type Clinic_finance_monthCreateInput = {
  id?: string
  month: number
  year: number
  wage_payment_day?: number | null
  wages_paid?: boolean | null
  total_wage?: number | null
  dentists_comissions?: number | null
  month_all_profit?: number | null
  month_discounts?: number | null
  month_brute_profit?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Clinic_finance_monthCreatewhat_was_updatedInput
  clinic: ClinicCreateOneWithoutClinic_finance_monthInput
}

export type ClinicUpdateWithoutClinic_finance_monthDataInput = {
  registered_id?: string
  cnpj?: string
  socialreason?: string
  fantasy_name?: string
  multipleclinics?: boolean
  numberofbranches?: number
  dentalchairs?: number | null
  averagepatientsperday?: number | null
  country?: string | null
  state?: string | null
  city?: string | null
  neighborhood?: string | null
  CEP?: string | null
  website?: string | null
  password?: string | null
  ssl_enabled?: boolean | null
  two_factor_autentication?: boolean | null
  access_blocked?: boolean | null
  free_trial?: boolean
  free_trial_days_left?: number
  language?: Language
  createdAt?: Date | string
  updatedAt?: Date | string
  emails?: EmailUpdateManyWithoutClinicInput | null
  clinic_phones?: Clinic_phonesUpdateManyWithoutClinicInput | null
  patients?: PatientUpdateManyWithoutClinicInput | null
  destists?: DentistUpdateManyWithoutClinicInput | null
  employeers?: EmployeerUpdateManyWithoutClinicInput | null
  technicalmanager?: TechnicalmanagerUpdateOneWithoutClinicInput | null
  legalresponsible?: LegalresponsibleUpdateOneWithoutClinicInput | null
  insuranses?: Dental_insuranceUpdateManyWithoutClinicInput | null
  logs?: LogsUpdateManyWithoutClinicInput | null
  Clinic_payment_information?: Clinic_payment_informationUpdateManyWithoutClinicInput | null
  Clinic_finance_options?: Clinic_finance_optionsUpdateManyWithoutClinicInput | null
  Clinic_finance_day?: Clinic_finance_dayUpdateManyWithoutClinicInput | null
  Chairs?: ChairsUpdateManyWithoutClinicInput | null
  Chair_finance_day?: Chair_finance_dayUpdateManyWithoutClinicInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureUpdateManyWithoutClinicInput | null
  Patient?: PatientUpdateManyWithoutClinicInput | null
  Dentist?: DentistUpdateManyWithoutClinicInput | null
}

export type ClinicUpsertWithoutClinic_finance_monthInput = {
  update: ClinicUpdateWithoutClinic_finance_monthDataInput
  create: ClinicCreateWithoutClinic_finance_monthInput
}

export type ClinicUpdateOneRequiredWithoutClinic_finance_monthInput = {
  create?: ClinicCreateWithoutClinic_finance_monthInput
  connect?: ClinicWhereUniqueInput
  update?: ClinicUpdateWithoutClinic_finance_monthDataInput
  upsert?: ClinicUpsertWithoutClinic_finance_monthInput
}

export type Clinic_finance_monthUpdateInput = {
  id?: string
  month?: number
  year?: number
  wage_payment_day?: number | null
  wages_paid?: boolean | null
  total_wage?: number | null
  dentists_comissions?: number | null
  month_all_profit?: number | null
  month_discounts?: number | null
  month_brute_profit?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Clinic_finance_monthUpdatewhat_was_updatedInput
  clinic?: ClinicUpdateOneRequiredWithoutClinic_finance_monthInput | null
}

export type Clinic_finance_monthUpdateManyMutationInput = {
  id?: string
  month?: number
  year?: number
  wage_payment_day?: number | null
  wages_paid?: boolean | null
  total_wage?: number | null
  dentists_comissions?: number | null
  month_all_profit?: number | null
  month_discounts?: number | null
  month_brute_profit?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Clinic_finance_monthUpdatewhat_was_updatedInput
}

export type ClinicCreateWithoutClinic_finance_dayInput = {
  registered_id?: string
  cnpj: string
  socialreason: string
  fantasy_name: string
  multipleclinics?: boolean
  numberofbranches?: number
  dentalchairs?: number | null
  averagepatientsperday?: number | null
  country?: string | null
  state?: string | null
  city?: string | null
  neighborhood?: string | null
  CEP?: string | null
  website?: string | null
  password?: string | null
  ssl_enabled?: boolean | null
  two_factor_autentication?: boolean | null
  access_blocked?: boolean | null
  free_trial?: boolean
  free_trial_days_left?: number
  language?: Language
  createdAt?: Date | string
  updatedAt?: Date | string
  emails?: EmailCreateManyWithoutClinicInput | null
  clinic_phones?: Clinic_phonesCreateManyWithoutClinicInput | null
  patients?: PatientCreateManyWithoutClinicInput | null
  destists?: DentistCreateManyWithoutClinicInput | null
  employeers?: EmployeerCreateManyWithoutClinicInput | null
  technicalmanager?: TechnicalmanagerCreateOneWithoutClinicInput | null
  legalresponsible?: LegalresponsibleCreateOneWithoutClinicInput | null
  insuranses?: Dental_insuranceCreateManyWithoutClinicInput | null
  logs?: LogsCreateManyWithoutClinicInput | null
  Clinic_payment_information?: Clinic_payment_informationCreateManyWithoutClinicInput | null
  Clinic_finance_options?: Clinic_finance_optionsCreateManyWithoutClinicInput | null
  Clinic_finance_month?: Clinic_finance_monthCreateManyWithoutClinicInput | null
  Chairs?: ChairsCreateManyWithoutClinicInput | null
  Chair_finance_day?: Chair_finance_dayCreateManyWithoutClinicInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureCreateManyWithoutClinicInput | null
  Patient?: PatientCreateManyWithoutClinicInput | null
  Dentist?: DentistCreateManyWithoutClinicInput | null
}

export type ClinicCreateOneWithoutClinic_finance_dayInput = {
  create?: ClinicCreateWithoutClinic_finance_dayInput
  connect?: ClinicWhereUniqueInput
}

export type Clinic_finance_dayCreateInput = {
  id?: string
  day: number
  month: number
  year: number
  total_income?: number | null
  dentists_part?: number | null
  clinic_income?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Clinic_finance_dayCreatewhat_was_updatedInput
  clinic: ClinicCreateOneWithoutClinic_finance_dayInput
}

export type ClinicUpdateWithoutClinic_finance_dayDataInput = {
  registered_id?: string
  cnpj?: string
  socialreason?: string
  fantasy_name?: string
  multipleclinics?: boolean
  numberofbranches?: number
  dentalchairs?: number | null
  averagepatientsperday?: number | null
  country?: string | null
  state?: string | null
  city?: string | null
  neighborhood?: string | null
  CEP?: string | null
  website?: string | null
  password?: string | null
  ssl_enabled?: boolean | null
  two_factor_autentication?: boolean | null
  access_blocked?: boolean | null
  free_trial?: boolean
  free_trial_days_left?: number
  language?: Language
  createdAt?: Date | string
  updatedAt?: Date | string
  emails?: EmailUpdateManyWithoutClinicInput | null
  clinic_phones?: Clinic_phonesUpdateManyWithoutClinicInput | null
  patients?: PatientUpdateManyWithoutClinicInput | null
  destists?: DentistUpdateManyWithoutClinicInput | null
  employeers?: EmployeerUpdateManyWithoutClinicInput | null
  technicalmanager?: TechnicalmanagerUpdateOneWithoutClinicInput | null
  legalresponsible?: LegalresponsibleUpdateOneWithoutClinicInput | null
  insuranses?: Dental_insuranceUpdateManyWithoutClinicInput | null
  logs?: LogsUpdateManyWithoutClinicInput | null
  Clinic_payment_information?: Clinic_payment_informationUpdateManyWithoutClinicInput | null
  Clinic_finance_options?: Clinic_finance_optionsUpdateManyWithoutClinicInput | null
  Clinic_finance_month?: Clinic_finance_monthUpdateManyWithoutClinicInput | null
  Chairs?: ChairsUpdateManyWithoutClinicInput | null
  Chair_finance_day?: Chair_finance_dayUpdateManyWithoutClinicInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureUpdateManyWithoutClinicInput | null
  Patient?: PatientUpdateManyWithoutClinicInput | null
  Dentist?: DentistUpdateManyWithoutClinicInput | null
}

export type ClinicUpsertWithoutClinic_finance_dayInput = {
  update: ClinicUpdateWithoutClinic_finance_dayDataInput
  create: ClinicCreateWithoutClinic_finance_dayInput
}

export type ClinicUpdateOneRequiredWithoutClinic_finance_dayInput = {
  create?: ClinicCreateWithoutClinic_finance_dayInput
  connect?: ClinicWhereUniqueInput
  update?: ClinicUpdateWithoutClinic_finance_dayDataInput
  upsert?: ClinicUpsertWithoutClinic_finance_dayInput
}

export type Clinic_finance_dayUpdateInput = {
  id?: string
  day?: number
  month?: number
  year?: number
  total_income?: number | null
  dentists_part?: number | null
  clinic_income?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Clinic_finance_dayUpdatewhat_was_updatedInput
  clinic?: ClinicUpdateOneRequiredWithoutClinic_finance_dayInput | null
}

export type Clinic_finance_dayUpdateManyMutationInput = {
  id?: string
  day?: number
  month?: number
  year?: number
  total_income?: number | null
  dentists_part?: number | null
  clinic_income?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Clinic_finance_dayUpdatewhat_was_updatedInput
}

export type ChairsCreateInput = {
  id?: string
  name: string
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: ChairsCreatewhat_was_updatedInput
  clinic: ClinicCreateOneWithoutChairsInput
  Chair_finance_day?: Chair_finance_dayCreateManyWithoutChairInput | null
}

export type ChairsUpdateInput = {
  id?: string
  name?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: ChairsUpdatewhat_was_updatedInput
  clinic?: ClinicUpdateOneRequiredWithoutChairsInput | null
  Chair_finance_day?: Chair_finance_dayUpdateManyWithoutChairInput | null
}

export type ChairsUpdateManyMutationInput = {
  id?: string
  name?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: ChairsUpdatewhat_was_updatedInput
}

export type Chair_finance_dayCreateInput = {
  day: number
  month: number
  year: number
  total_income?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Chair_finance_dayCreatewhat_was_updatedInput
  chair: ChairsCreateOneWithoutChair_finance_dayInput
  clinic: ClinicCreateOneWithoutChair_finance_dayInput
}

export type Chair_finance_dayUpdateInput = {
  day?: number
  month?: number
  year?: number
  total_income?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Chair_finance_dayUpdatewhat_was_updatedInput
  chair?: ChairsUpdateOneRequiredWithoutChair_finance_dayInput | null
  clinic?: ClinicUpdateOneRequiredWithoutChair_finance_dayInput | null
}

export type Chair_finance_dayUpdateManyMutationInput = {
  day?: number
  month?: number
  year?: number
  total_income?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Chair_finance_dayUpdatewhat_was_updatedInput
}

export type Clinic_finance_procedureCreateInput = {
  id?: string
  payment_status: Payment_status
  client_payment_type: Payment_method
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Clinic_finance_procedureCreatewhat_was_updatedInput
  clinic: ClinicCreateOneWithoutClinic_finance_procedureInput
  treatment: Treatment_evolutionCreateOneWithoutClinic_finance_procedureInput
}

export type Clinic_finance_procedureUpdateInput = {
  id?: string
  payment_status?: Payment_status
  client_payment_type?: Payment_method
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Clinic_finance_procedureUpdatewhat_was_updatedInput
  clinic?: ClinicUpdateOneRequiredWithoutClinic_finance_procedureInput | null
  treatment?: Treatment_evolutionUpdateOneRequiredWithoutClinic_finance_procedureInput | null
}

export type Clinic_finance_procedureUpdateManyMutationInput = {
  id?: string
  payment_status?: Payment_status
  client_payment_type?: Payment_method
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Clinic_finance_procedureUpdatewhat_was_updatedInput
}

export type EmailCreateInput = {
  id?: string
  email: string
  clinic?: ClinicCreateOneWithoutEmailsInput | null
  techinical_mananger?: TechnicalmanagerCreateOneWithoutEmailInput | null
  legal_responsible?: LegalresponsibleCreateOneWithoutEmailInput | null
  dentist?: DentistCreateOneWithoutEmailInput | null
  patient?: PatientCreateOneWithoutEmailInput | null
  Technicalmanager?: TechnicalmanagerCreateOneWithoutEmailInput | null
  Legalresponsible?: LegalresponsibleCreateOneWithoutEmailInput | null
  Patient?: PatientCreateOneWithoutEmailInput | null
  Dentist?: DentistCreateOneWithoutEmailInput | null
}

export type EmailUpdateInput = {
  id?: string
  email?: string
  clinic?: ClinicUpdateOneWithoutEmailsInput | null
  techinical_mananger?: TechnicalmanagerUpdateOneWithoutEmailInput | null
  legal_responsible?: LegalresponsibleUpdateOneWithoutEmailInput | null
  dentist?: DentistUpdateOneWithoutEmailInput | null
  patient?: PatientUpdateOneWithoutEmailInput | null
  Technicalmanager?: TechnicalmanagerUpdateOneWithoutEmailInput | null
  Legalresponsible?: LegalresponsibleUpdateOneWithoutEmailInput | null
  Patient?: PatientUpdateOneWithoutEmailInput | null
  Dentist?: DentistUpdateOneWithoutEmailInput | null
}

export type EmailUpdateManyMutationInput = {
  id?: string
  email?: string
}

export type ClinicCreateWithoutLogsInput = {
  registered_id?: string
  cnpj: string
  socialreason: string
  fantasy_name: string
  multipleclinics?: boolean
  numberofbranches?: number
  dentalchairs?: number | null
  averagepatientsperday?: number | null
  country?: string | null
  state?: string | null
  city?: string | null
  neighborhood?: string | null
  CEP?: string | null
  website?: string | null
  password?: string | null
  ssl_enabled?: boolean | null
  two_factor_autentication?: boolean | null
  access_blocked?: boolean | null
  free_trial?: boolean
  free_trial_days_left?: number
  language?: Language
  createdAt?: Date | string
  updatedAt?: Date | string
  emails?: EmailCreateManyWithoutClinicInput | null
  clinic_phones?: Clinic_phonesCreateManyWithoutClinicInput | null
  patients?: PatientCreateManyWithoutClinicInput | null
  destists?: DentistCreateManyWithoutClinicInput | null
  employeers?: EmployeerCreateManyWithoutClinicInput | null
  technicalmanager?: TechnicalmanagerCreateOneWithoutClinicInput | null
  legalresponsible?: LegalresponsibleCreateOneWithoutClinicInput | null
  insuranses?: Dental_insuranceCreateManyWithoutClinicInput | null
  Clinic_payment_information?: Clinic_payment_informationCreateManyWithoutClinicInput | null
  Clinic_finance_options?: Clinic_finance_optionsCreateManyWithoutClinicInput | null
  Clinic_finance_month?: Clinic_finance_monthCreateManyWithoutClinicInput | null
  Clinic_finance_day?: Clinic_finance_dayCreateManyWithoutClinicInput | null
  Chairs?: ChairsCreateManyWithoutClinicInput | null
  Chair_finance_day?: Chair_finance_dayCreateManyWithoutClinicInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureCreateManyWithoutClinicInput | null
  Patient?: PatientCreateManyWithoutClinicInput | null
  Dentist?: DentistCreateManyWithoutClinicInput | null
}

export type ClinicCreateOneWithoutLogsInput = {
  create?: ClinicCreateWithoutLogsInput
  connect?: ClinicWhereUniqueInput
}

export type LogsCreateInput = {
  description: string
  createdAt?: Date | string
  clinic: ClinicCreateOneWithoutLogsInput
}

export type ClinicUpdateWithoutLogsDataInput = {
  registered_id?: string
  cnpj?: string
  socialreason?: string
  fantasy_name?: string
  multipleclinics?: boolean
  numberofbranches?: number
  dentalchairs?: number | null
  averagepatientsperday?: number | null
  country?: string | null
  state?: string | null
  city?: string | null
  neighborhood?: string | null
  CEP?: string | null
  website?: string | null
  password?: string | null
  ssl_enabled?: boolean | null
  two_factor_autentication?: boolean | null
  access_blocked?: boolean | null
  free_trial?: boolean
  free_trial_days_left?: number
  language?: Language
  createdAt?: Date | string
  updatedAt?: Date | string
  emails?: EmailUpdateManyWithoutClinicInput | null
  clinic_phones?: Clinic_phonesUpdateManyWithoutClinicInput | null
  patients?: PatientUpdateManyWithoutClinicInput | null
  destists?: DentistUpdateManyWithoutClinicInput | null
  employeers?: EmployeerUpdateManyWithoutClinicInput | null
  technicalmanager?: TechnicalmanagerUpdateOneWithoutClinicInput | null
  legalresponsible?: LegalresponsibleUpdateOneWithoutClinicInput | null
  insuranses?: Dental_insuranceUpdateManyWithoutClinicInput | null
  Clinic_payment_information?: Clinic_payment_informationUpdateManyWithoutClinicInput | null
  Clinic_finance_options?: Clinic_finance_optionsUpdateManyWithoutClinicInput | null
  Clinic_finance_month?: Clinic_finance_monthUpdateManyWithoutClinicInput | null
  Clinic_finance_day?: Clinic_finance_dayUpdateManyWithoutClinicInput | null
  Chairs?: ChairsUpdateManyWithoutClinicInput | null
  Chair_finance_day?: Chair_finance_dayUpdateManyWithoutClinicInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureUpdateManyWithoutClinicInput | null
  Patient?: PatientUpdateManyWithoutClinicInput | null
  Dentist?: DentistUpdateManyWithoutClinicInput | null
}

export type ClinicUpsertWithoutLogsInput = {
  update: ClinicUpdateWithoutLogsDataInput
  create: ClinicCreateWithoutLogsInput
}

export type ClinicUpdateOneRequiredWithoutLogsInput = {
  create?: ClinicCreateWithoutLogsInput
  connect?: ClinicWhereUniqueInput
  update?: ClinicUpdateWithoutLogsDataInput
  upsert?: ClinicUpsertWithoutLogsInput
}

export type LogsUpdateInput = {
  id?: number
  description?: string
  createdAt?: Date | string
  clinic?: ClinicUpdateOneRequiredWithoutLogsInput | null
}

export type LogsUpdateManyMutationInput = {
  id?: number
  description?: string
  createdAt?: Date | string
}

export type ClinicCreateWithoutClinic_phonesInput = {
  registered_id?: string
  cnpj: string
  socialreason: string
  fantasy_name: string
  multipleclinics?: boolean
  numberofbranches?: number
  dentalchairs?: number | null
  averagepatientsperday?: number | null
  country?: string | null
  state?: string | null
  city?: string | null
  neighborhood?: string | null
  CEP?: string | null
  website?: string | null
  password?: string | null
  ssl_enabled?: boolean | null
  two_factor_autentication?: boolean | null
  access_blocked?: boolean | null
  free_trial?: boolean
  free_trial_days_left?: number
  language?: Language
  createdAt?: Date | string
  updatedAt?: Date | string
  emails?: EmailCreateManyWithoutClinicInput | null
  patients?: PatientCreateManyWithoutClinicInput | null
  destists?: DentistCreateManyWithoutClinicInput | null
  employeers?: EmployeerCreateManyWithoutClinicInput | null
  technicalmanager?: TechnicalmanagerCreateOneWithoutClinicInput | null
  legalresponsible?: LegalresponsibleCreateOneWithoutClinicInput | null
  insuranses?: Dental_insuranceCreateManyWithoutClinicInput | null
  logs?: LogsCreateManyWithoutClinicInput | null
  Clinic_payment_information?: Clinic_payment_informationCreateManyWithoutClinicInput | null
  Clinic_finance_options?: Clinic_finance_optionsCreateManyWithoutClinicInput | null
  Clinic_finance_month?: Clinic_finance_monthCreateManyWithoutClinicInput | null
  Clinic_finance_day?: Clinic_finance_dayCreateManyWithoutClinicInput | null
  Chairs?: ChairsCreateManyWithoutClinicInput | null
  Chair_finance_day?: Chair_finance_dayCreateManyWithoutClinicInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureCreateManyWithoutClinicInput | null
  Patient?: PatientCreateManyWithoutClinicInput | null
  Dentist?: DentistCreateManyWithoutClinicInput | null
}

export type ClinicCreateOneWithoutClinic_phonesInput = {
  create?: ClinicCreateWithoutClinic_phonesInput
  connect?: ClinicWhereUniqueInput
}

export type Clinic_phonesCreateInput = {
  id?: string
  phonetype: Phonetypes
  phone_number: string
  clinic: ClinicCreateOneWithoutClinic_phonesInput
}

export type ClinicUpdateWithoutClinic_phonesDataInput = {
  registered_id?: string
  cnpj?: string
  socialreason?: string
  fantasy_name?: string
  multipleclinics?: boolean
  numberofbranches?: number
  dentalchairs?: number | null
  averagepatientsperday?: number | null
  country?: string | null
  state?: string | null
  city?: string | null
  neighborhood?: string | null
  CEP?: string | null
  website?: string | null
  password?: string | null
  ssl_enabled?: boolean | null
  two_factor_autentication?: boolean | null
  access_blocked?: boolean | null
  free_trial?: boolean
  free_trial_days_left?: number
  language?: Language
  createdAt?: Date | string
  updatedAt?: Date | string
  emails?: EmailUpdateManyWithoutClinicInput | null
  patients?: PatientUpdateManyWithoutClinicInput | null
  destists?: DentistUpdateManyWithoutClinicInput | null
  employeers?: EmployeerUpdateManyWithoutClinicInput | null
  technicalmanager?: TechnicalmanagerUpdateOneWithoutClinicInput | null
  legalresponsible?: LegalresponsibleUpdateOneWithoutClinicInput | null
  insuranses?: Dental_insuranceUpdateManyWithoutClinicInput | null
  logs?: LogsUpdateManyWithoutClinicInput | null
  Clinic_payment_information?: Clinic_payment_informationUpdateManyWithoutClinicInput | null
  Clinic_finance_options?: Clinic_finance_optionsUpdateManyWithoutClinicInput | null
  Clinic_finance_month?: Clinic_finance_monthUpdateManyWithoutClinicInput | null
  Clinic_finance_day?: Clinic_finance_dayUpdateManyWithoutClinicInput | null
  Chairs?: ChairsUpdateManyWithoutClinicInput | null
  Chair_finance_day?: Chair_finance_dayUpdateManyWithoutClinicInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureUpdateManyWithoutClinicInput | null
  Patient?: PatientUpdateManyWithoutClinicInput | null
  Dentist?: DentistUpdateManyWithoutClinicInput | null
}

export type ClinicUpsertWithoutClinic_phonesInput = {
  update: ClinicUpdateWithoutClinic_phonesDataInput
  create: ClinicCreateWithoutClinic_phonesInput
}

export type ClinicUpdateOneRequiredWithoutClinic_phonesInput = {
  create?: ClinicCreateWithoutClinic_phonesInput
  connect?: ClinicWhereUniqueInput
  update?: ClinicUpdateWithoutClinic_phonesDataInput
  upsert?: ClinicUpsertWithoutClinic_phonesInput
}

export type Clinic_phonesUpdateInput = {
  id?: string
  phonetype?: Phonetypes
  phone_number?: string
  clinic?: ClinicUpdateOneRequiredWithoutClinic_phonesInput | null
}

export type Clinic_phonesUpdateManyMutationInput = {
  id?: string
  phonetype?: Phonetypes
  phone_number?: string
}

export type ProceduresCreateWithoutParticular_procedures_valuesInput = {
  codigo_CID: string
  name: string
  createdAt?: Date | string
  updatedAt?: Date | string
  treatment_evolution?: Treatment_evolutionCreateManyWithoutTreatmentInput | null
  insurance_procedures_values?: Clinic_procedures_insurance_valuesCreateManyWithoutProcedure_CIDInput | null
}

export type ProceduresCreateOneWithoutParticular_procedures_valuesInput = {
  create?: ProceduresCreateWithoutParticular_procedures_valuesInput
  connect?: ProceduresWhereUniqueInput
}

export type Clinic_procedures_particular_valuesCreateInput = {
  cust: number
  createdAt?: Date | string
  updatedAt?: Date | string
  procedure_CID: ProceduresCreateOneWithoutParticular_procedures_valuesInput
}

export type ProceduresUpdateWithoutParticular_procedures_valuesDataInput = {
  codigo_CID?: string
  name?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  treatment_evolution?: Treatment_evolutionUpdateManyWithoutTreatmentInput | null
  insurance_procedures_values?: Clinic_procedures_insurance_valuesUpdateManyWithoutProcedure_CIDInput | null
}

export type ProceduresUpsertWithoutParticular_procedures_valuesInput = {
  update: ProceduresUpdateWithoutParticular_procedures_valuesDataInput
  create: ProceduresCreateWithoutParticular_procedures_valuesInput
}

export type ProceduresUpdateOneRequiredWithoutParticular_procedures_valuesInput = {
  create?: ProceduresCreateWithoutParticular_procedures_valuesInput
  connect?: ProceduresWhereUniqueInput
  update?: ProceduresUpdateWithoutParticular_procedures_valuesDataInput
  upsert?: ProceduresUpsertWithoutParticular_procedures_valuesInput
}

export type Clinic_procedures_particular_valuesUpdateInput = {
  cust?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  procedure_CID?: ProceduresUpdateOneRequiredWithoutParticular_procedures_valuesInput | null
}

export type Clinic_procedures_particular_valuesUpdateManyMutationInput = {
  cust?: number
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type Clinic_procedures_insurance_valuesCreateInput = {
  cust: number
  createdAt?: Date | string
  updatedAt?: Date | string
  procedure_CID: ProceduresCreateOneWithoutInsurance_procedures_valuesInput
  insurance: Dental_insuranceCreateOneWithoutProcedures_valuesInput
}

export type Clinic_procedures_insurance_valuesUpdateInput = {
  cust?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  procedure_CID?: ProceduresUpdateOneRequiredWithoutInsurance_procedures_valuesInput | null
  insurance?: Dental_insuranceUpdateOneRequiredWithoutProcedures_valuesInput | null
}

export type Clinic_procedures_insurance_valuesUpdateManyMutationInput = {
  cust?: number
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ScheduleCreateInput = {
  date: Date | string
  hour: Date | string
  createdAt?: Date | string
  updatedAt?: Date | string
  dentist: DentistCreateOneWithoutSheduleInput
  patient?: PatientCreateOneWithoutScheduleInput | null
  treatment_evolution: Treatment_evolutionCreateOneWithoutSheduleInput
}

export type ScheduleUpdateInput = {
  date?: Date | string
  hour?: Date | string
  createdAt?: Date | string
  updatedAt?: Date | string
  dentist?: DentistUpdateOneRequiredWithoutSheduleInput | null
  patient?: PatientUpdateOneWithoutScheduleInput | null
  treatment_evolution?: Treatment_evolutionUpdateOneRequiredWithoutSheduleInput | null
}

export type ScheduleUpdateManyMutationInput = {
  date?: Date | string
  hour?: Date | string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type Treatment_evolutionCreateInput = {
  id?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  treatment_procedures_ids?: Treatment_evolutionCreatetreatment_procedures_idsInput
  what_was_updated?: Treatment_evolutionCreatewhat_was_updatedInput
  shedule: ScheduleCreateOneWithoutTreatment_evolutionInput
  treatment?: ProceduresCreateManyWithoutTreatment_evolutionInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureCreateManyWithoutTreatmentInput | null
  Patient?: PatientCreateManyWithoutTreatment_evolutionInput | null
}

export type Treatment_evolutionUpdateInput = {
  id?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  treatment_procedures_ids?: Treatment_evolutionUpdatetreatment_procedures_idsInput
  what_was_updated?: Treatment_evolutionUpdatewhat_was_updatedInput
  shedule?: ScheduleUpdateOneRequiredWithoutTreatment_evolutionInput | null
  treatment?: ProceduresUpdateManyWithoutTreatment_evolutionInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureUpdateManyWithoutTreatmentInput | null
  Patient?: PatientUpdateManyWithoutTreatment_evolutionInput | null
}

export type Treatment_evolutionUpdateManyMutationInput = {
  id?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  treatment_procedures_ids?: Treatment_evolutionUpdatetreatment_procedures_idsInput
  what_was_updated?: Treatment_evolutionUpdatewhat_was_updatedInput
}

export type ProceduresCreateInput = {
  codigo_CID: string
  name: string
  createdAt?: Date | string
  updatedAt?: Date | string
  treatment_evolution?: Treatment_evolutionCreateManyWithoutTreatmentInput | null
  particular_procedures_values: Clinic_procedures_particular_valuesCreateOneWithoutProcedure_CIDInput
  insurance_procedures_values?: Clinic_procedures_insurance_valuesCreateManyWithoutProcedure_CIDInput | null
}

export type ProceduresUpdateInput = {
  codigo_CID?: string
  name?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  treatment_evolution?: Treatment_evolutionUpdateManyWithoutTreatmentInput | null
  particular_procedures_values?: Clinic_procedures_particular_valuesUpdateOneRequiredWithoutProcedure_CIDInput | null
  insurance_procedures_values?: Clinic_procedures_insurance_valuesUpdateManyWithoutProcedure_CIDInput | null
}

export type ProceduresUpdateManyMutationInput = {
  codigo_CID?: string
  name?: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type TechnicalmanagerCreateInput = {
  cpf: string
  fullname: string
  contactmeans: Contact_means
  active?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: TechnicalmanagerCreatewhat_was_updatedInput
  email?: EmailCreateManyWithoutTechnicalmanagerInput | null
  clinic: ClinicCreateOneWithoutTechnicalmanagerInput
  Email?: EmailCreateManyWithoutTechinical_manangerInput | null
}

export type TechnicalmanagerUpdateInput = {
  cpf?: string
  fullname?: string
  contactmeans?: Contact_means
  active?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: TechnicalmanagerUpdatewhat_was_updatedInput
  email?: EmailUpdateManyWithoutTechnicalmanagerInput | null
  clinic?: ClinicUpdateOneRequiredWithoutTechnicalmanagerInput | null
  Email?: EmailUpdateManyWithoutTechinical_manangerInput | null
}

export type TechnicalmanagerUpdateManyMutationInput = {
  cpf?: string
  fullname?: string
  contactmeans?: Contact_means
  active?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: TechnicalmanagerUpdatewhat_was_updatedInput
}

export type LegalresponsibleCreateInput = {
  cpf: string
  fullname: string
  contactmeans?: Contact_means | null
  active?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: LegalresponsibleCreatewhat_was_updatedInput
  email?: EmailCreateManyWithoutLegalresponsibleInput | null
  clinic: ClinicCreateOneWithoutLegalresponsibleInput
  Email?: EmailCreateManyWithoutLegal_responsibleInput | null
}

export type LegalresponsibleUpdateInput = {
  cpf?: string
  fullname?: string
  contactmeans?: Contact_means | null
  active?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: LegalresponsibleUpdatewhat_was_updatedInput
  email?: EmailUpdateManyWithoutLegalresponsibleInput | null
  clinic?: ClinicUpdateOneRequiredWithoutLegalresponsibleInput | null
  Email?: EmailUpdateManyWithoutLegal_responsibleInput | null
}

export type LegalresponsibleUpdateManyMutationInput = {
  cpf?: string
  fullname?: string
  contactmeans?: Contact_means | null
  active?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: LegalresponsibleUpdatewhat_was_updatedInput
}

export type PatientCreateInput = {
  id?: string
  clinic_prontuary_number: number
  fullname: string
  birth_date: Date | string
  age: number
  gender: Gender
  brazilian_cpf?: string | null
  brazilian_rg?: string | null
  password: string
  cellphone_number?: string | null
  contactmeans?: Contact_means | null
  last_visit_dentist: Date | string
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: string
  what_was_updated?: PatientCreatewhat_was_updatedInput
  clinic: ClinicCreateOneWithoutPatientInput
  schedule?: ScheduleCreateOneWithoutPatientInput | null
  email?: EmailCreateManyWithoutPatientInput | null
  anamnesis?: AnamnesisCreateOneWithoutPatientInput | null
  implantology?: ImplantologyCreateOneWithoutPatientInput | null
  ortodontics?: OrtodonticsCreateOneWithoutPatientInput | null
  odontogram?: OdontogramCreateOneWithoutPatientInput | null
  dont_know?: Dont_know_questionsCreateOneWithoutPatientInput | null
  treatment_evolution?: Treatment_evolutionCreateOneWithoutPatientInput | null
  dentists?: DentistCreateManyWithoutPatientsInput | null
  Clinic?: ClinicCreateOneWithoutPatientsInput | null
  Email?: EmailCreateManyWithoutPatientInput | null
}

export type PatientUpdateInput = {
  id?: string
  clinic_prontuary_number?: number
  fullname?: string
  birth_date?: Date | string
  age?: number
  gender?: Gender
  brazilian_cpf?: string | null
  brazilian_rg?: string | null
  password?: string
  cellphone_number?: string | null
  contactmeans?: Contact_means | null
  last_visit_dentist?: Date | string
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: string
  what_was_updated?: PatientUpdatewhat_was_updatedInput
  clinic?: ClinicUpdateOneRequiredWithoutPatientInput | null
  schedule?: ScheduleUpdateOneWithoutPatientInput | null
  email?: EmailUpdateManyWithoutPatientInput | null
  anamnesis?: AnamnesisUpdateOneWithoutPatientInput | null
  implantology?: ImplantologyUpdateOneWithoutPatientInput | null
  ortodontics?: OrtodonticsUpdateOneWithoutPatientInput | null
  odontogram?: OdontogramUpdateOneWithoutPatientInput | null
  dont_know?: Dont_know_questionsUpdateOneWithoutPatientInput | null
  treatment_evolution?: Treatment_evolutionUpdateOneWithoutPatientInput | null
  dentists?: DentistUpdateManyWithoutPatientsInput | null
  Clinic?: ClinicUpdateOneWithoutPatientsInput | null
  Email?: EmailUpdateManyWithoutPatientInput | null
}

export type PatientUpdateManyMutationInput = {
  id?: string
  clinic_prontuary_number?: number
  fullname?: string
  birth_date?: Date | string
  age?: number
  gender?: Gender
  brazilian_cpf?: string | null
  brazilian_rg?: string | null
  password?: string
  cellphone_number?: string | null
  contactmeans?: Contact_means | null
  last_visit_dentist?: Date | string
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: string
  what_was_updated?: PatientUpdatewhat_was_updatedInput
}

export type PatientCreateWithoutOdontogramInput = {
  id?: string
  clinic_prontuary_number: number
  fullname: string
  birth_date: Date | string
  age: number
  gender: Gender
  brazilian_cpf?: string | null
  brazilian_rg?: string | null
  password: string
  cellphone_number?: string | null
  contactmeans?: Contact_means | null
  last_visit_dentist: Date | string
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: string
  what_was_updated?: PatientCreatewhat_was_updatedInput
  clinic: ClinicCreateOneWithoutPatientInput
  schedule?: ScheduleCreateOneWithoutPatientInput | null
  email?: EmailCreateManyWithoutPatientInput | null
  anamnesis?: AnamnesisCreateOneWithoutPatientInput | null
  implantology?: ImplantologyCreateOneWithoutPatientInput | null
  ortodontics?: OrtodonticsCreateOneWithoutPatientInput | null
  dont_know?: Dont_know_questionsCreateOneWithoutPatientInput | null
  treatment_evolution?: Treatment_evolutionCreateOneWithoutPatientInput | null
  dentists?: DentistCreateManyWithoutPatientsInput | null
  Clinic?: ClinicCreateOneWithoutPatientsInput | null
  Email?: EmailCreateManyWithoutPatientInput | null
}

export type PatientCreateOneWithoutOdontogramInput = {
  create?: PatientCreateWithoutOdontogramInput
  connect?: PatientWhereUniqueInput
}

export type OdontogramCreateInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type PatientUpdateWithoutOdontogramDataInput = {
  id?: string
  clinic_prontuary_number?: number
  fullname?: string
  birth_date?: Date | string
  age?: number
  gender?: Gender
  brazilian_cpf?: string | null
  brazilian_rg?: string | null
  password?: string
  cellphone_number?: string | null
  contactmeans?: Contact_means | null
  last_visit_dentist?: Date | string
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: string
  what_was_updated?: PatientUpdatewhat_was_updatedInput
  clinic?: ClinicUpdateOneRequiredWithoutPatientInput | null
  schedule?: ScheduleUpdateOneWithoutPatientInput | null
  email?: EmailUpdateManyWithoutPatientInput | null
  anamnesis?: AnamnesisUpdateOneWithoutPatientInput | null
  implantology?: ImplantologyUpdateOneWithoutPatientInput | null
  ortodontics?: OrtodonticsUpdateOneWithoutPatientInput | null
  dont_know?: Dont_know_questionsUpdateOneWithoutPatientInput | null
  treatment_evolution?: Treatment_evolutionUpdateOneWithoutPatientInput | null
  dentists?: DentistUpdateManyWithoutPatientsInput | null
  Clinic?: ClinicUpdateOneWithoutPatientsInput | null
  Email?: EmailUpdateManyWithoutPatientInput | null
}

export type PatientUpsertWithoutOdontogramInput = {
  update: PatientUpdateWithoutOdontogramDataInput
  create: PatientCreateWithoutOdontogramInput
}

export type PatientUpdateOneRequiredWithoutOdontogramInput = {
  create?: PatientCreateWithoutOdontogramInput
  connect?: PatientWhereUniqueInput
  update?: PatientUpdateWithoutOdontogramDataInput
  upsert?: PatientUpsertWithoutOdontogramInput
}

export type OdontogramUpdateInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpdateManyMutationInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_11Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_11Input = {
  create?: OdontogramCreateWithoutUnit_11Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit11CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit11Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_11Input
}

export type OdontogramUpdateWithoutUnit_11DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_11Input = {
  update: OdontogramUpdateWithoutUnit_11DataInput
  create: OdontogramCreateWithoutUnit_11Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_11Input = {
  create?: OdontogramCreateWithoutUnit_11Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_11DataInput
  upsert?: OdontogramUpsertWithoutUnit_11Input
}

export type Unit11UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit11Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_11Input | null
}

export type Unit11UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit11Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_12Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_12Input = {
  create?: OdontogramCreateWithoutUnit_12Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit12CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit12Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_12Input
}

export type OdontogramUpdateWithoutUnit_12DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_12Input = {
  update: OdontogramUpdateWithoutUnit_12DataInput
  create: OdontogramCreateWithoutUnit_12Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_12Input = {
  create?: OdontogramCreateWithoutUnit_12Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_12DataInput
  upsert?: OdontogramUpsertWithoutUnit_12Input
}

export type Unit12UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit12Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_12Input | null
}

export type Unit12UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit12Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_13Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_13Input = {
  create?: OdontogramCreateWithoutUnit_13Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit13CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit13Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_13Input
}

export type OdontogramUpdateWithoutUnit_13DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_13Input = {
  update: OdontogramUpdateWithoutUnit_13DataInput
  create: OdontogramCreateWithoutUnit_13Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_13Input = {
  create?: OdontogramCreateWithoutUnit_13Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_13DataInput
  upsert?: OdontogramUpsertWithoutUnit_13Input
}

export type Unit13UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit13Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_13Input | null
}

export type Unit13UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit13Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_14Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_14Input = {
  create?: OdontogramCreateWithoutUnit_14Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit14CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit14Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_14Input
}

export type OdontogramUpdateWithoutUnit_14DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_14Input = {
  update: OdontogramUpdateWithoutUnit_14DataInput
  create: OdontogramCreateWithoutUnit_14Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_14Input = {
  create?: OdontogramCreateWithoutUnit_14Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_14DataInput
  upsert?: OdontogramUpsertWithoutUnit_14Input
}

export type Unit14UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit14Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_14Input | null
}

export type Unit14UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit14Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_15Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_15Input = {
  create?: OdontogramCreateWithoutUnit_15Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit15CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit15Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_15Input
}

export type OdontogramUpdateWithoutUnit_15DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_15Input = {
  update: OdontogramUpdateWithoutUnit_15DataInput
  create: OdontogramCreateWithoutUnit_15Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_15Input = {
  create?: OdontogramCreateWithoutUnit_15Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_15DataInput
  upsert?: OdontogramUpsertWithoutUnit_15Input
}

export type Unit15UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit15Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_15Input | null
}

export type Unit15UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit15Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_16Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_16Input = {
  create?: OdontogramCreateWithoutUnit_16Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit16CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit16Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_16Input
}

export type OdontogramUpdateWithoutUnit_16DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_16Input = {
  update: OdontogramUpdateWithoutUnit_16DataInput
  create: OdontogramCreateWithoutUnit_16Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_16Input = {
  create?: OdontogramCreateWithoutUnit_16Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_16DataInput
  upsert?: OdontogramUpsertWithoutUnit_16Input
}

export type Unit16UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit16Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_16Input | null
}

export type Unit16UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit16Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_17Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_17Input = {
  create?: OdontogramCreateWithoutUnit_17Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit17CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit17Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_17Input
}

export type OdontogramUpdateWithoutUnit_17DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_17Input = {
  update: OdontogramUpdateWithoutUnit_17DataInput
  create: OdontogramCreateWithoutUnit_17Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_17Input = {
  create?: OdontogramCreateWithoutUnit_17Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_17DataInput
  upsert?: OdontogramUpsertWithoutUnit_17Input
}

export type Unit17UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit17Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_17Input | null
}

export type Unit17UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit17Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_18Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_18Input = {
  create?: OdontogramCreateWithoutUnit_18Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit18CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit18Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_18Input
}

export type OdontogramUpdateWithoutUnit_18DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_18Input = {
  update: OdontogramUpdateWithoutUnit_18DataInput
  create: OdontogramCreateWithoutUnit_18Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_18Input = {
  create?: OdontogramCreateWithoutUnit_18Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_18DataInput
  upsert?: OdontogramUpsertWithoutUnit_18Input
}

export type Unit18UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit18Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_18Input | null
}

export type Unit18UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit18Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_21Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_21Input = {
  create?: OdontogramCreateWithoutUnit_21Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit21CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit21Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_21Input
}

export type OdontogramUpdateWithoutUnit_21DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_21Input = {
  update: OdontogramUpdateWithoutUnit_21DataInput
  create: OdontogramCreateWithoutUnit_21Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_21Input = {
  create?: OdontogramCreateWithoutUnit_21Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_21DataInput
  upsert?: OdontogramUpsertWithoutUnit_21Input
}

export type Unit21UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit21Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_21Input | null
}

export type Unit21UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit21Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_22Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_22Input = {
  create?: OdontogramCreateWithoutUnit_22Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit22CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit22Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_22Input
}

export type OdontogramUpdateWithoutUnit_22DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_22Input = {
  update: OdontogramUpdateWithoutUnit_22DataInput
  create: OdontogramCreateWithoutUnit_22Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_22Input = {
  create?: OdontogramCreateWithoutUnit_22Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_22DataInput
  upsert?: OdontogramUpsertWithoutUnit_22Input
}

export type Unit22UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit22Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_22Input | null
}

export type Unit22UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit22Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_23Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_23Input = {
  create?: OdontogramCreateWithoutUnit_23Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit23CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit23Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_23Input
}

export type OdontogramUpdateWithoutUnit_23DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_23Input = {
  update: OdontogramUpdateWithoutUnit_23DataInput
  create: OdontogramCreateWithoutUnit_23Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_23Input = {
  create?: OdontogramCreateWithoutUnit_23Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_23DataInput
  upsert?: OdontogramUpsertWithoutUnit_23Input
}

export type Unit23UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit23Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_23Input | null
}

export type Unit23UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit23Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_24Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_24Input = {
  create?: OdontogramCreateWithoutUnit_24Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit24CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit24Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_24Input
}

export type OdontogramUpdateWithoutUnit_24DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_24Input = {
  update: OdontogramUpdateWithoutUnit_24DataInput
  create: OdontogramCreateWithoutUnit_24Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_24Input = {
  create?: OdontogramCreateWithoutUnit_24Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_24DataInput
  upsert?: OdontogramUpsertWithoutUnit_24Input
}

export type Unit24UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit24Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_24Input | null
}

export type Unit24UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit24Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_25Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_25Input = {
  create?: OdontogramCreateWithoutUnit_25Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit25CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit25Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_25Input
}

export type OdontogramUpdateWithoutUnit_25DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_25Input = {
  update: OdontogramUpdateWithoutUnit_25DataInput
  create: OdontogramCreateWithoutUnit_25Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_25Input = {
  create?: OdontogramCreateWithoutUnit_25Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_25DataInput
  upsert?: OdontogramUpsertWithoutUnit_25Input
}

export type Unit25UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit25Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_25Input | null
}

export type Unit25UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit25Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_26Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_26Input = {
  create?: OdontogramCreateWithoutUnit_26Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit26CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit26Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_26Input
}

export type OdontogramUpdateWithoutUnit_26DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_26Input = {
  update: OdontogramUpdateWithoutUnit_26DataInput
  create: OdontogramCreateWithoutUnit_26Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_26Input = {
  create?: OdontogramCreateWithoutUnit_26Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_26DataInput
  upsert?: OdontogramUpsertWithoutUnit_26Input
}

export type Unit26UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit26Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_26Input | null
}

export type Unit26UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit26Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_27Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_27Input = {
  create?: OdontogramCreateWithoutUnit_27Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit27CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit27Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_27Input
}

export type OdontogramUpdateWithoutUnit_27DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_27Input = {
  update: OdontogramUpdateWithoutUnit_27DataInput
  create: OdontogramCreateWithoutUnit_27Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_27Input = {
  create?: OdontogramCreateWithoutUnit_27Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_27DataInput
  upsert?: OdontogramUpsertWithoutUnit_27Input
}

export type Unit27UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit27Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_27Input | null
}

export type Unit27UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit27Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_28Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_28Input = {
  create?: OdontogramCreateWithoutUnit_28Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit28CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit28Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_28Input
}

export type OdontogramUpdateWithoutUnit_28DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_28Input = {
  update: OdontogramUpdateWithoutUnit_28DataInput
  create: OdontogramCreateWithoutUnit_28Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_28Input = {
  create?: OdontogramCreateWithoutUnit_28Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_28DataInput
  upsert?: OdontogramUpsertWithoutUnit_28Input
}

export type Unit28UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit28Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_28Input | null
}

export type Unit28UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit28Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_31Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_31Input = {
  create?: OdontogramCreateWithoutUnit_31Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit31CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit31Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_31Input
}

export type OdontogramUpdateWithoutUnit_31DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_31Input = {
  update: OdontogramUpdateWithoutUnit_31DataInput
  create: OdontogramCreateWithoutUnit_31Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_31Input = {
  create?: OdontogramCreateWithoutUnit_31Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_31DataInput
  upsert?: OdontogramUpsertWithoutUnit_31Input
}

export type Unit31UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit31Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_31Input | null
}

export type Unit31UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit31Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_32Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_32Input = {
  create?: OdontogramCreateWithoutUnit_32Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit32CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit32Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_32Input
}

export type OdontogramUpdateWithoutUnit_32DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_32Input = {
  update: OdontogramUpdateWithoutUnit_32DataInput
  create: OdontogramCreateWithoutUnit_32Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_32Input = {
  create?: OdontogramCreateWithoutUnit_32Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_32DataInput
  upsert?: OdontogramUpsertWithoutUnit_32Input
}

export type Unit32UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit32Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_32Input | null
}

export type Unit32UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit32Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_33Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_33Input = {
  create?: OdontogramCreateWithoutUnit_33Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit33CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit33Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_33Input
}

export type OdontogramUpdateWithoutUnit_33DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_33Input = {
  update: OdontogramUpdateWithoutUnit_33DataInput
  create: OdontogramCreateWithoutUnit_33Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_33Input = {
  create?: OdontogramCreateWithoutUnit_33Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_33DataInput
  upsert?: OdontogramUpsertWithoutUnit_33Input
}

export type Unit33UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit33Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_33Input | null
}

export type Unit33UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit33Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_34Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_34Input = {
  create?: OdontogramCreateWithoutUnit_34Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit34CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit34Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_34Input
}

export type OdontogramUpdateWithoutUnit_34DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_34Input = {
  update: OdontogramUpdateWithoutUnit_34DataInput
  create: OdontogramCreateWithoutUnit_34Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_34Input = {
  create?: OdontogramCreateWithoutUnit_34Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_34DataInput
  upsert?: OdontogramUpsertWithoutUnit_34Input
}

export type Unit34UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit34Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_34Input | null
}

export type Unit34UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit34Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_35Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_35Input = {
  create?: OdontogramCreateWithoutUnit_35Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit35CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit35Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_35Input
}

export type OdontogramUpdateWithoutUnit_35DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_35Input = {
  update: OdontogramUpdateWithoutUnit_35DataInput
  create: OdontogramCreateWithoutUnit_35Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_35Input = {
  create?: OdontogramCreateWithoutUnit_35Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_35DataInput
  upsert?: OdontogramUpsertWithoutUnit_35Input
}

export type Unit35UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit35Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_35Input | null
}

export type Unit35UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit35Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_36Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_36Input = {
  create?: OdontogramCreateWithoutUnit_36Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit36CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit36Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_36Input
}

export type OdontogramUpdateWithoutUnit_36DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_36Input = {
  update: OdontogramUpdateWithoutUnit_36DataInput
  create: OdontogramCreateWithoutUnit_36Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_36Input = {
  create?: OdontogramCreateWithoutUnit_36Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_36DataInput
  upsert?: OdontogramUpsertWithoutUnit_36Input
}

export type Unit36UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit36Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_36Input | null
}

export type Unit36UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit36Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_37Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_37Input = {
  create?: OdontogramCreateWithoutUnit_37Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit37CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit37Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_37Input
}

export type OdontogramUpdateWithoutUnit_37DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_37Input = {
  update: OdontogramUpdateWithoutUnit_37DataInput
  create: OdontogramCreateWithoutUnit_37Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_37Input = {
  create?: OdontogramCreateWithoutUnit_37Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_37DataInput
  upsert?: OdontogramUpsertWithoutUnit_37Input
}

export type Unit37UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit37Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_37Input | null
}

export type Unit37UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit37Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_38Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_38Input = {
  create?: OdontogramCreateWithoutUnit_38Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit38CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit38Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_38Input
}

export type OdontogramUpdateWithoutUnit_38DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_38Input = {
  update: OdontogramUpdateWithoutUnit_38DataInput
  create: OdontogramCreateWithoutUnit_38Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_38Input = {
  create?: OdontogramCreateWithoutUnit_38Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_38DataInput
  upsert?: OdontogramUpsertWithoutUnit_38Input
}

export type Unit38UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit38Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_38Input | null
}

export type Unit38UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit38Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_41Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_41Input = {
  create?: OdontogramCreateWithoutUnit_41Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit41CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit41Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_41Input
}

export type OdontogramUpdateWithoutUnit_41DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_41Input = {
  update: OdontogramUpdateWithoutUnit_41DataInput
  create: OdontogramCreateWithoutUnit_41Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_41Input = {
  create?: OdontogramCreateWithoutUnit_41Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_41DataInput
  upsert?: OdontogramUpsertWithoutUnit_41Input
}

export type Unit41UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit41Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_41Input | null
}

export type Unit41UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit41Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_42Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_42Input = {
  create?: OdontogramCreateWithoutUnit_42Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit42CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit42Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_42Input
}

export type OdontogramUpdateWithoutUnit_42DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_42Input = {
  update: OdontogramUpdateWithoutUnit_42DataInput
  create: OdontogramCreateWithoutUnit_42Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_42Input = {
  create?: OdontogramCreateWithoutUnit_42Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_42DataInput
  upsert?: OdontogramUpsertWithoutUnit_42Input
}

export type Unit42UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit42Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_42Input | null
}

export type Unit42UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit42Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_43Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_43Input = {
  create?: OdontogramCreateWithoutUnit_43Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit43CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit43Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_43Input
}

export type OdontogramUpdateWithoutUnit_43DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_43Input = {
  update: OdontogramUpdateWithoutUnit_43DataInput
  create: OdontogramCreateWithoutUnit_43Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_43Input = {
  create?: OdontogramCreateWithoutUnit_43Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_43DataInput
  upsert?: OdontogramUpsertWithoutUnit_43Input
}

export type Unit43UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit43Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_43Input | null
}

export type Unit43UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit43Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_44Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_44Input = {
  create?: OdontogramCreateWithoutUnit_44Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit44CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit44Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_44Input
}

export type OdontogramUpdateWithoutUnit_44DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_44Input = {
  update: OdontogramUpdateWithoutUnit_44DataInput
  create: OdontogramCreateWithoutUnit_44Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_44Input = {
  create?: OdontogramCreateWithoutUnit_44Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_44DataInput
  upsert?: OdontogramUpsertWithoutUnit_44Input
}

export type Unit44UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit44Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_44Input | null
}

export type Unit44UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit44Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_45Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_45Input = {
  create?: OdontogramCreateWithoutUnit_45Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit45CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit45Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_45Input
}

export type OdontogramUpdateWithoutUnit_45DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_45Input = {
  update: OdontogramUpdateWithoutUnit_45DataInput
  create: OdontogramCreateWithoutUnit_45Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_45Input = {
  create?: OdontogramCreateWithoutUnit_45Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_45DataInput
  upsert?: OdontogramUpsertWithoutUnit_45Input
}

export type Unit45UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit45Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_45Input | null
}

export type Unit45UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit45Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_46Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_46Input = {
  create?: OdontogramCreateWithoutUnit_46Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit46CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit46Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_46Input
}

export type OdontogramUpdateWithoutUnit_46DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_46Input = {
  update: OdontogramUpdateWithoutUnit_46DataInput
  create: OdontogramCreateWithoutUnit_46Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_46Input = {
  create?: OdontogramCreateWithoutUnit_46Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_46DataInput
  upsert?: OdontogramUpsertWithoutUnit_46Input
}

export type Unit46UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit46Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_46Input | null
}

export type Unit46UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit46Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_47Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_47Input = {
  create?: OdontogramCreateWithoutUnit_47Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit47CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit47Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_47Input
}

export type OdontogramUpdateWithoutUnit_47DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_47Input = {
  update: OdontogramUpdateWithoutUnit_47DataInput
  create: OdontogramCreateWithoutUnit_47Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_47Input = {
  create?: OdontogramCreateWithoutUnit_47Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_47DataInput
  upsert?: OdontogramUpsertWithoutUnit_47Input
}

export type Unit47UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit47Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_47Input | null
}

export type Unit47UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit47Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_48Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_48Input = {
  create?: OdontogramCreateWithoutUnit_48Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit48CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit48Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_48Input
}

export type OdontogramUpdateWithoutUnit_48DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_48Input = {
  update: OdontogramUpdateWithoutUnit_48DataInput
  create: OdontogramCreateWithoutUnit_48Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_48Input = {
  create?: OdontogramCreateWithoutUnit_48Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_48DataInput
  upsert?: OdontogramUpsertWithoutUnit_48Input
}

export type Unit48UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit48Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_48Input | null
}

export type Unit48UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit48Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_51Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_51Input = {
  create?: OdontogramCreateWithoutUnit_51Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit51CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit51Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_51Input
}

export type OdontogramUpdateWithoutUnit_51DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_51Input = {
  update: OdontogramUpdateWithoutUnit_51DataInput
  create: OdontogramCreateWithoutUnit_51Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_51Input = {
  create?: OdontogramCreateWithoutUnit_51Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_51DataInput
  upsert?: OdontogramUpsertWithoutUnit_51Input
}

export type Unit51UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit51Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_51Input | null
}

export type Unit51UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit51Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_52Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_52Input = {
  create?: OdontogramCreateWithoutUnit_52Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit52CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit52Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_52Input
}

export type OdontogramUpdateWithoutUnit_52DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_52Input = {
  update: OdontogramUpdateWithoutUnit_52DataInput
  create: OdontogramCreateWithoutUnit_52Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_52Input = {
  create?: OdontogramCreateWithoutUnit_52Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_52DataInput
  upsert?: OdontogramUpsertWithoutUnit_52Input
}

export type Unit52UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit52Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_52Input | null
}

export type Unit52UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit52Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_53Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_53Input = {
  create?: OdontogramCreateWithoutUnit_53Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit53CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit53Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_53Input
}

export type OdontogramUpdateWithoutUnit_53DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_53Input = {
  update: OdontogramUpdateWithoutUnit_53DataInput
  create: OdontogramCreateWithoutUnit_53Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_53Input = {
  create?: OdontogramCreateWithoutUnit_53Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_53DataInput
  upsert?: OdontogramUpsertWithoutUnit_53Input
}

export type Unit53UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit53Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_53Input | null
}

export type Unit53UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit53Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_54Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_54Input = {
  create?: OdontogramCreateWithoutUnit_54Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit54CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit54Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_54Input
}

export type OdontogramUpdateWithoutUnit_54DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_54Input = {
  update: OdontogramUpdateWithoutUnit_54DataInput
  create: OdontogramCreateWithoutUnit_54Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_54Input = {
  create?: OdontogramCreateWithoutUnit_54Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_54DataInput
  upsert?: OdontogramUpsertWithoutUnit_54Input
}

export type Unit54UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit54Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_54Input | null
}

export type Unit54UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit54Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_55Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_55Input = {
  create?: OdontogramCreateWithoutUnit_55Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit55CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit55Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_55Input
}

export type OdontogramUpdateWithoutUnit_55DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_55Input = {
  update: OdontogramUpdateWithoutUnit_55DataInput
  create: OdontogramCreateWithoutUnit_55Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_55Input = {
  create?: OdontogramCreateWithoutUnit_55Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_55DataInput
  upsert?: OdontogramUpsertWithoutUnit_55Input
}

export type Unit55UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit55Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_55Input | null
}

export type Unit55UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit55Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_61Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_61Input = {
  create?: OdontogramCreateWithoutUnit_61Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit61CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit61Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_61Input
}

export type OdontogramUpdateWithoutUnit_61DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_61Input = {
  update: OdontogramUpdateWithoutUnit_61DataInput
  create: OdontogramCreateWithoutUnit_61Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_61Input = {
  create?: OdontogramCreateWithoutUnit_61Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_61DataInput
  upsert?: OdontogramUpsertWithoutUnit_61Input
}

export type Unit61UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit61Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_61Input | null
}

export type Unit61UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit61Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_62Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_62Input = {
  create?: OdontogramCreateWithoutUnit_62Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit62CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit62Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_62Input
}

export type OdontogramUpdateWithoutUnit_62DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_62Input = {
  update: OdontogramUpdateWithoutUnit_62DataInput
  create: OdontogramCreateWithoutUnit_62Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_62Input = {
  create?: OdontogramCreateWithoutUnit_62Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_62DataInput
  upsert?: OdontogramUpsertWithoutUnit_62Input
}

export type Unit62UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit62Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_62Input | null
}

export type Unit62UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit62Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_63Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_63Input = {
  create?: OdontogramCreateWithoutUnit_63Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit63CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit63Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_63Input
}

export type OdontogramUpdateWithoutUnit_63DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_63Input = {
  update: OdontogramUpdateWithoutUnit_63DataInput
  create: OdontogramCreateWithoutUnit_63Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_63Input = {
  create?: OdontogramCreateWithoutUnit_63Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_63DataInput
  upsert?: OdontogramUpsertWithoutUnit_63Input
}

export type Unit63UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit63Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_63Input | null
}

export type Unit63UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit63Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_64Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_64Input = {
  create?: OdontogramCreateWithoutUnit_64Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit64CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit64Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_64Input
}

export type OdontogramUpdateWithoutUnit_64DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_64Input = {
  update: OdontogramUpdateWithoutUnit_64DataInput
  create: OdontogramCreateWithoutUnit_64Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_64Input = {
  create?: OdontogramCreateWithoutUnit_64Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_64DataInput
  upsert?: OdontogramUpsertWithoutUnit_64Input
}

export type Unit64UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit64Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_64Input | null
}

export type Unit64UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit64Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_65Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_65Input = {
  create?: OdontogramCreateWithoutUnit_65Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit65CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit65Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_65Input
}

export type OdontogramUpdateWithoutUnit_65DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_65Input = {
  update: OdontogramUpdateWithoutUnit_65DataInput
  create: OdontogramCreateWithoutUnit_65Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_65Input = {
  create?: OdontogramCreateWithoutUnit_65Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_65DataInput
  upsert?: OdontogramUpsertWithoutUnit_65Input
}

export type Unit65UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit65Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_65Input | null
}

export type Unit65UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit65Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_71Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_71Input = {
  create?: OdontogramCreateWithoutUnit_71Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit71CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit71Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_71Input
}

export type OdontogramUpdateWithoutUnit_71DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_71Input = {
  update: OdontogramUpdateWithoutUnit_71DataInput
  create: OdontogramCreateWithoutUnit_71Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_71Input = {
  create?: OdontogramCreateWithoutUnit_71Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_71DataInput
  upsert?: OdontogramUpsertWithoutUnit_71Input
}

export type Unit71UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit71Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_71Input | null
}

export type Unit71UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit71Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_72Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_72Input = {
  create?: OdontogramCreateWithoutUnit_72Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit72CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit72Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_72Input
}

export type OdontogramUpdateWithoutUnit_72DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_72Input = {
  update: OdontogramUpdateWithoutUnit_72DataInput
  create: OdontogramCreateWithoutUnit_72Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_72Input = {
  create?: OdontogramCreateWithoutUnit_72Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_72DataInput
  upsert?: OdontogramUpsertWithoutUnit_72Input
}

export type Unit72UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit72Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_72Input | null
}

export type Unit72UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit72Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_73Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_73Input = {
  create?: OdontogramCreateWithoutUnit_73Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit73CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit73Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_73Input
}

export type OdontogramUpdateWithoutUnit_73DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_73Input = {
  update: OdontogramUpdateWithoutUnit_73DataInput
  create: OdontogramCreateWithoutUnit_73Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_73Input = {
  create?: OdontogramCreateWithoutUnit_73Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_73DataInput
  upsert?: OdontogramUpsertWithoutUnit_73Input
}

export type Unit73UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit73Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_73Input | null
}

export type Unit73UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit73Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_74Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_74Input = {
  create?: OdontogramCreateWithoutUnit_74Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit74CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit74Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_74Input
}

export type OdontogramUpdateWithoutUnit_74DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_74Input = {
  update: OdontogramUpdateWithoutUnit_74DataInput
  create: OdontogramCreateWithoutUnit_74Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_74Input = {
  create?: OdontogramCreateWithoutUnit_74Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_74DataInput
  upsert?: OdontogramUpsertWithoutUnit_74Input
}

export type Unit74UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit74Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_74Input | null
}

export type Unit74UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit74Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_75Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_75Input = {
  create?: OdontogramCreateWithoutUnit_75Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit75CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit75Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_75Input
}

export type OdontogramUpdateWithoutUnit_75DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_75Input = {
  update: OdontogramUpdateWithoutUnit_75DataInput
  create: OdontogramCreateWithoutUnit_75Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_75Input = {
  create?: OdontogramCreateWithoutUnit_75Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_75DataInput
  upsert?: OdontogramUpsertWithoutUnit_75Input
}

export type Unit75UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit75Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_75Input | null
}

export type Unit75UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit75Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_81Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_81Input = {
  create?: OdontogramCreateWithoutUnit_81Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit81CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit81Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_81Input
}

export type OdontogramUpdateWithoutUnit_81DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_81Input = {
  update: OdontogramUpdateWithoutUnit_81DataInput
  create: OdontogramCreateWithoutUnit_81Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_81Input = {
  create?: OdontogramCreateWithoutUnit_81Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_81DataInput
  upsert?: OdontogramUpsertWithoutUnit_81Input
}

export type Unit81UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit81Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_81Input | null
}

export type Unit81UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit81Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_82Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_82Input = {
  create?: OdontogramCreateWithoutUnit_82Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit82CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit82Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_82Input
}

export type OdontogramUpdateWithoutUnit_82DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_82Input = {
  update: OdontogramUpdateWithoutUnit_82DataInput
  create: OdontogramCreateWithoutUnit_82Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_82Input = {
  create?: OdontogramCreateWithoutUnit_82Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_82DataInput
  upsert?: OdontogramUpsertWithoutUnit_82Input
}

export type Unit82UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit82Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_82Input | null
}

export type Unit82UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit82Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_83Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_83Input = {
  create?: OdontogramCreateWithoutUnit_83Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit83CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit83Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_83Input
}

export type OdontogramUpdateWithoutUnit_83DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_83Input = {
  update: OdontogramUpdateWithoutUnit_83DataInput
  create: OdontogramCreateWithoutUnit_83Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_83Input = {
  create?: OdontogramCreateWithoutUnit_83Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_83DataInput
  upsert?: OdontogramUpsertWithoutUnit_83Input
}

export type Unit83UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit83Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_83Input | null
}

export type Unit83UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit83Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_84Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_85: Unit85CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_84Input = {
  create?: OdontogramCreateWithoutUnit_84Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit84CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit84Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_84Input
}

export type OdontogramUpdateWithoutUnit_84DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_85?: Unit85UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_84Input = {
  update: OdontogramUpdateWithoutUnit_84DataInput
  create: OdontogramCreateWithoutUnit_84Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_84Input = {
  create?: OdontogramCreateWithoutUnit_84Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_84DataInput
  upsert?: OdontogramUpsertWithoutUnit_84Input
}

export type Unit84UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit84Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_84Input | null
}

export type Unit84UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit84Updatewhat_was_updatedInput
}

export type OdontogramCreateWithoutUnit_85Input = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramCreatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramCreatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramCreatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramCreatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramCreatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramCreatesixth_sextant_notesInput
  what_was_updated?: OdontogramCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOdontogramInput
  unit_11: Unit11CreateOneWithoutOdontogramInput
  unit_12: Unit12CreateOneWithoutOdontogramInput
  unit_13: Unit13CreateOneWithoutOdontogramInput
  unit_14: Unit14CreateOneWithoutOdontogramInput
  unit_15: Unit15CreateOneWithoutOdontogramInput
  unit_16: Unit16CreateOneWithoutOdontogramInput
  unit_17: Unit17CreateOneWithoutOdontogramInput
  unit_18: Unit18CreateOneWithoutOdontogramInput
  unit_21: Unit21CreateOneWithoutOdontogramInput
  unit_22: Unit22CreateOneWithoutOdontogramInput
  unit_23: Unit23CreateOneWithoutOdontogramInput
  unit_24: Unit24CreateOneWithoutOdontogramInput
  unit_25: Unit25CreateOneWithoutOdontogramInput
  unit_26: Unit26CreateOneWithoutOdontogramInput
  unit_27: Unit27CreateOneWithoutOdontogramInput
  unit_28: Unit28CreateOneWithoutOdontogramInput
  unit_31: Unit31CreateOneWithoutOdontogramInput
  unit_32: Unit32CreateOneWithoutOdontogramInput
  unit_33: Unit33CreateOneWithoutOdontogramInput
  unit_34: Unit34CreateOneWithoutOdontogramInput
  unit_35: Unit35CreateOneWithoutOdontogramInput
  unit_36: Unit36CreateOneWithoutOdontogramInput
  unit_37: Unit37CreateOneWithoutOdontogramInput
  unit_38: Unit38CreateOneWithoutOdontogramInput
  unit_41: Unit41CreateOneWithoutOdontogramInput
  unit_42: Unit42CreateOneWithoutOdontogramInput
  unit_43: Unit43CreateOneWithoutOdontogramInput
  unit_44: Unit44CreateOneWithoutOdontogramInput
  unit_45: Unit45CreateOneWithoutOdontogramInput
  unit_46: Unit46CreateOneWithoutOdontogramInput
  unit_47: Unit47CreateOneWithoutOdontogramInput
  unit_48: Unit48CreateOneWithoutOdontogramInput
  unit_51: Unit51CreateOneWithoutOdontogramInput
  unit_52: Unit52CreateOneWithoutOdontogramInput
  unit_53: Unit53CreateOneWithoutOdontogramInput
  unit_54: Unit54CreateOneWithoutOdontogramInput
  unit_55: Unit55CreateOneWithoutOdontogramInput
  unit_61: Unit61CreateOneWithoutOdontogramInput
  unit_62: Unit62CreateOneWithoutOdontogramInput
  unit_63: Unit63CreateOneWithoutOdontogramInput
  unit_64: Unit64CreateOneWithoutOdontogramInput
  unit_65: Unit65CreateOneWithoutOdontogramInput
  unit_71: Unit71CreateOneWithoutOdontogramInput
  unit_72: Unit72CreateOneWithoutOdontogramInput
  unit_73: Unit73CreateOneWithoutOdontogramInput
  unit_74: Unit74CreateOneWithoutOdontogramInput
  unit_75: Unit75CreateOneWithoutOdontogramInput
  unit_81: Unit81CreateOneWithoutOdontogramInput
  unit_82: Unit82CreateOneWithoutOdontogramInput
  unit_83: Unit83CreateOneWithoutOdontogramInput
  unit_84: Unit84CreateOneWithoutOdontogramInput
}

export type OdontogramCreateOneWithoutUnit_85Input = {
  create?: OdontogramCreateWithoutUnit_85Input
  connect?: OdontogramWhereUniqueInput
}

export type Unit85CreateInput = {
  id?: string
  abscent: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit85Createwhat_was_updatedInput
  odontogram: OdontogramCreateOneWithoutUnit_85Input
}

export type OdontogramUpdateWithoutUnit_85DataInput = {
  id?: string
  PSR_maded?: boolean | null
  PSR_date?: Date | string | null
  first_sextant?: number | null
  second_sextant?: number | null
  third_sextant?: number | null
  fourth_sextant?: number | null
  fifth_sextant?: number | null
  sixth_sextant?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  first_sextant_notes?: OdontogramUpdatefirst_sextant_notesInput
  second_sextant_notes?: OdontogramUpdatesecond_sextant_notesInput
  third_sextant_notes?: OdontogramUpdatethird_sextant_notesInput
  fourth_sextant_notes?: OdontogramUpdatefourth_sextant_notesInput
  fifth_sextant_notes?: OdontogramUpdatefifth_sextant_notesInput
  sixth_sextant_notes?: OdontogramUpdatesixth_sextant_notesInput
  what_was_updated?: OdontogramUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOdontogramInput | null
  unit_11?: Unit11UpdateOneRequiredWithoutOdontogramInput | null
  unit_12?: Unit12UpdateOneRequiredWithoutOdontogramInput | null
  unit_13?: Unit13UpdateOneRequiredWithoutOdontogramInput | null
  unit_14?: Unit14UpdateOneRequiredWithoutOdontogramInput | null
  unit_15?: Unit15UpdateOneRequiredWithoutOdontogramInput | null
  unit_16?: Unit16UpdateOneRequiredWithoutOdontogramInput | null
  unit_17?: Unit17UpdateOneRequiredWithoutOdontogramInput | null
  unit_18?: Unit18UpdateOneRequiredWithoutOdontogramInput | null
  unit_21?: Unit21UpdateOneRequiredWithoutOdontogramInput | null
  unit_22?: Unit22UpdateOneRequiredWithoutOdontogramInput | null
  unit_23?: Unit23UpdateOneRequiredWithoutOdontogramInput | null
  unit_24?: Unit24UpdateOneRequiredWithoutOdontogramInput | null
  unit_25?: Unit25UpdateOneRequiredWithoutOdontogramInput | null
  unit_26?: Unit26UpdateOneRequiredWithoutOdontogramInput | null
  unit_27?: Unit27UpdateOneRequiredWithoutOdontogramInput | null
  unit_28?: Unit28UpdateOneRequiredWithoutOdontogramInput | null
  unit_31?: Unit31UpdateOneRequiredWithoutOdontogramInput | null
  unit_32?: Unit32UpdateOneRequiredWithoutOdontogramInput | null
  unit_33?: Unit33UpdateOneRequiredWithoutOdontogramInput | null
  unit_34?: Unit34UpdateOneRequiredWithoutOdontogramInput | null
  unit_35?: Unit35UpdateOneRequiredWithoutOdontogramInput | null
  unit_36?: Unit36UpdateOneRequiredWithoutOdontogramInput | null
  unit_37?: Unit37UpdateOneRequiredWithoutOdontogramInput | null
  unit_38?: Unit38UpdateOneRequiredWithoutOdontogramInput | null
  unit_41?: Unit41UpdateOneRequiredWithoutOdontogramInput | null
  unit_42?: Unit42UpdateOneRequiredWithoutOdontogramInput | null
  unit_43?: Unit43UpdateOneRequiredWithoutOdontogramInput | null
  unit_44?: Unit44UpdateOneRequiredWithoutOdontogramInput | null
  unit_45?: Unit45UpdateOneRequiredWithoutOdontogramInput | null
  unit_46?: Unit46UpdateOneRequiredWithoutOdontogramInput | null
  unit_47?: Unit47UpdateOneRequiredWithoutOdontogramInput | null
  unit_48?: Unit48UpdateOneRequiredWithoutOdontogramInput | null
  unit_51?: Unit51UpdateOneRequiredWithoutOdontogramInput | null
  unit_52?: Unit52UpdateOneRequiredWithoutOdontogramInput | null
  unit_53?: Unit53UpdateOneRequiredWithoutOdontogramInput | null
  unit_54?: Unit54UpdateOneRequiredWithoutOdontogramInput | null
  unit_55?: Unit55UpdateOneRequiredWithoutOdontogramInput | null
  unit_61?: Unit61UpdateOneRequiredWithoutOdontogramInput | null
  unit_62?: Unit62UpdateOneRequiredWithoutOdontogramInput | null
  unit_63?: Unit63UpdateOneRequiredWithoutOdontogramInput | null
  unit_64?: Unit64UpdateOneRequiredWithoutOdontogramInput | null
  unit_65?: Unit65UpdateOneRequiredWithoutOdontogramInput | null
  unit_71?: Unit71UpdateOneRequiredWithoutOdontogramInput | null
  unit_72?: Unit72UpdateOneRequiredWithoutOdontogramInput | null
  unit_73?: Unit73UpdateOneRequiredWithoutOdontogramInput | null
  unit_74?: Unit74UpdateOneRequiredWithoutOdontogramInput | null
  unit_75?: Unit75UpdateOneRequiredWithoutOdontogramInput | null
  unit_81?: Unit81UpdateOneRequiredWithoutOdontogramInput | null
  unit_82?: Unit82UpdateOneRequiredWithoutOdontogramInput | null
  unit_83?: Unit83UpdateOneRequiredWithoutOdontogramInput | null
  unit_84?: Unit84UpdateOneRequiredWithoutOdontogramInput | null
}

export type OdontogramUpsertWithoutUnit_85Input = {
  update: OdontogramUpdateWithoutUnit_85DataInput
  create: OdontogramCreateWithoutUnit_85Input
}

export type OdontogramUpdateOneRequiredWithoutUnit_85Input = {
  create?: OdontogramCreateWithoutUnit_85Input
  connect?: OdontogramWhereUniqueInput
  update?: OdontogramUpdateWithoutUnit_85DataInput
  upsert?: OdontogramUpsertWithoutUnit_85Input
}

export type Unit85UpdateInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit85Updatewhat_was_updatedInput
  odontogram?: OdontogramUpdateOneRequiredWithoutUnit_85Input | null
}

export type Unit85UpdateManyMutationInput = {
  id?: string
  abscent?: boolean
  notes?: string | null
  mesial_vestibular_depth?: number | null
  mesial_vestibular_gmh?: number | null
  mesial_vestibular_lci?: number | null
  mesial_vestibular_probing_bleeding?: boolean | null
  medial_vestibular_depth?: number | null
  medial_vestibular_gmh?: number | null
  medial_vestibular_lci?: number | null
  medial_vestibular_probing_bleeding?: boolean | null
  distal_vestibular_depth?: number | null
  distal_vestibular_gmh?: number | null
  distal_vestibular_lci?: number | null
  distal_vestibular_probing_bleeding?: boolean | null
  mesial_lingual_depth?: number | null
  mesial_lingual_gmh?: number | null
  mesial_lingual_lci?: number | null
  mesial_lingual_probing_bleeding?: boolean | null
  medial_lingual_depth?: number | null
  medial_lingual_gmh?: number | null
  medial_lingual_lci?: number | null
  medial_lingual_probing_bleeding?: boolean | null
  distal_lingual_depth?: number | null
  distal_lingual_gmh?: number | null
  distal_lingual_lci?: number | null
  distal_lingual_probing_bleeding?: boolean | null
  mobility?: boolean | null
  if_yes_mobility_level?: string | null
  periogram_date?: Date | string | null
  higid?: boolean | null
  vestibular_biofilm?: boolean | null
  palatin_biofilm?: boolean | null
  oclusal_biofilm?: boolean | null
  mesial_biofilm?: boolean | null
  distal_biofilm?: boolean | null
  poor_restoration?: boolean | null
  if_yes_what_type_of_restoration?: Restorations_types | null
  caries_white_spot_lesion?: boolean | null
  if_yes_where_white_lesion?: string | null
  active_carie?: boolean | null
  inative_carie?: boolean | null
  cavity_caries_lesion?: boolean | null
  if_yes_where_cavity_lesion?: string | null
  if_yes_depth?: number | null
  extense_carie_lesion?: boolean | null
  fluorosis_white_lesions?: boolean | null
  if_yes_fuorosis_level?: string | null
  black_hash?: boolean | null
  enamel_fissure?: boolean | null
  dentin_fissure?: boolean | null
  if_yes_fissure_direction?: string | null
  enamel_fracture?: boolean | null
  if_yes_fracture_size?: string | null
  dental_erosion?: boolean | null
  dental_abfraction?: boolean | null
  dental_atriction?: boolean | null
  dental_abrasion?: boolean | null
  dental_anomaly?: boolean | null
  if_yes_anomaly_description?: string | null
  initial_radiograph?: boolean | null
  final_radiograph?: boolean | null
  pulp_status?: Pulp_states | null
  canal_calcifications?: boolean | null
  atresic_pulp_chamber?: boolean | null
  canal_depth_probing?: boolean | null
  canal_depth_in_mm?: number | null
  number_of_roots?: number | null
  number_of_canals?: number | null
  acessory_canal?: boolean | null
  lateral_canal?: boolean | null
  hiper_cementosis?: boolean | null
  bone_petrosis?: boolean | null
  root_dilacerations?: boolean | null
  cirurgy_indication?: boolean | null
  reason_of_indication?: string | null
  simple_removal?: boolean | null
  difficult_removal?: boolean | null
  antibiotcs_prevention_needed?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Unit85Updatewhat_was_updatedInput
}

export type PatientCreateWithoutAnamnesisInput = {
  id?: string
  clinic_prontuary_number: number
  fullname: string
  birth_date: Date | string
  age: number
  gender: Gender
  brazilian_cpf?: string | null
  brazilian_rg?: string | null
  password: string
  cellphone_number?: string | null
  contactmeans?: Contact_means | null
  last_visit_dentist: Date | string
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: string
  what_was_updated?: PatientCreatewhat_was_updatedInput
  clinic: ClinicCreateOneWithoutPatientInput
  schedule?: ScheduleCreateOneWithoutPatientInput | null
  email?: EmailCreateManyWithoutPatientInput | null
  implantology?: ImplantologyCreateOneWithoutPatientInput | null
  ortodontics?: OrtodonticsCreateOneWithoutPatientInput | null
  odontogram?: OdontogramCreateOneWithoutPatientInput | null
  dont_know?: Dont_know_questionsCreateOneWithoutPatientInput | null
  treatment_evolution?: Treatment_evolutionCreateOneWithoutPatientInput | null
  dentists?: DentistCreateManyWithoutPatientsInput | null
  Clinic?: ClinicCreateOneWithoutPatientsInput | null
  Email?: EmailCreateManyWithoutPatientInput | null
}

export type PatientCreateOneWithoutAnamnesisInput = {
  create?: PatientCreateWithoutAnamnesisInput
  connect?: PatientWhereUniqueInput
}

export type AnamnesisCreateInput = {
  id?: string
  last_dentist_visit: Date | string
  last_procedure: Date | string
  what_was_done?: string | null
  treatment_is_planed?: boolean
  What_treatment_is_planed?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  anamnesis_type?: AnamnesisCreateanamnesis_typeInput
  what_was_updated?: AnamnesisCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutAnamnesisInput
  main_anamnesis_questionnaire?: Main_anamnesis_questionnaireCreateOneWithoutAnamnesis_prontuaryInput | null
  vital_signs_questionnaire?: Vital_signs_questionnaireCreateOneWithoutAnamnesis_prontuaryInput | null
  oral_health_questionnaire?: Oral_health_questionnaireCreateOneWithoutAnamnesis_prontuaryInput | null
  Diet_questionnaire?: Diet_questionnaireCreateManyWithoutAnamnesis_prontuaryInput | null
}

export type PatientUpdateWithoutAnamnesisDataInput = {
  id?: string
  clinic_prontuary_number?: number
  fullname?: string
  birth_date?: Date | string
  age?: number
  gender?: Gender
  brazilian_cpf?: string | null
  brazilian_rg?: string | null
  password?: string
  cellphone_number?: string | null
  contactmeans?: Contact_means | null
  last_visit_dentist?: Date | string
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: string
  what_was_updated?: PatientUpdatewhat_was_updatedInput
  clinic?: ClinicUpdateOneRequiredWithoutPatientInput | null
  schedule?: ScheduleUpdateOneWithoutPatientInput | null
  email?: EmailUpdateManyWithoutPatientInput | null
  implantology?: ImplantologyUpdateOneWithoutPatientInput | null
  ortodontics?: OrtodonticsUpdateOneWithoutPatientInput | null
  odontogram?: OdontogramUpdateOneWithoutPatientInput | null
  dont_know?: Dont_know_questionsUpdateOneWithoutPatientInput | null
  treatment_evolution?: Treatment_evolutionUpdateOneWithoutPatientInput | null
  dentists?: DentistUpdateManyWithoutPatientsInput | null
  Clinic?: ClinicUpdateOneWithoutPatientsInput | null
  Email?: EmailUpdateManyWithoutPatientInput | null
}

export type PatientUpsertWithoutAnamnesisInput = {
  update: PatientUpdateWithoutAnamnesisDataInput
  create: PatientCreateWithoutAnamnesisInput
}

export type PatientUpdateOneRequiredWithoutAnamnesisInput = {
  create?: PatientCreateWithoutAnamnesisInput
  connect?: PatientWhereUniqueInput
  update?: PatientUpdateWithoutAnamnesisDataInput
  upsert?: PatientUpsertWithoutAnamnesisInput
}

export type AnamnesisUpdateInput = {
  id?: string
  last_dentist_visit?: Date | string
  last_procedure?: Date | string
  what_was_done?: string | null
  treatment_is_planed?: boolean
  What_treatment_is_planed?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  anamnesis_type?: AnamnesisUpdateanamnesis_typeInput
  what_was_updated?: AnamnesisUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutAnamnesisInput | null
  main_anamnesis_questionnaire?: Main_anamnesis_questionnaireUpdateOneWithoutAnamnesis_prontuaryInput | null
  vital_signs_questionnaire?: Vital_signs_questionnaireUpdateOneWithoutAnamnesis_prontuaryInput | null
  oral_health_questionnaire?: Oral_health_questionnaireUpdateOneWithoutAnamnesis_prontuaryInput | null
  Diet_questionnaire?: Diet_questionnaireUpdateManyWithoutAnamnesis_prontuaryInput | null
}

export type AnamnesisUpdateManyMutationInput = {
  id?: string
  last_dentist_visit?: Date | string
  last_procedure?: Date | string
  what_was_done?: string | null
  treatment_is_planed?: boolean
  What_treatment_is_planed?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  anamnesis_type?: AnamnesisUpdateanamnesis_typeInput
  what_was_updated?: AnamnesisUpdatewhat_was_updatedInput
}

export type ImplantologyCreateInput = {
  id?: string
  implant_type: Implant_types
  if_type_multiple_instaled_implants_number?: number | null
  next_review_consult: Date | string
  notes?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  professional_ids?: ImplantologyCreateprofessional_idsInput
  if_type_unitary_dental_units_reabilited?: ImplantologyCreateif_type_unitary_dental_units_reabilitedInput
  if_type_multiple_dental_units_reabilited?: ImplantologyCreateif_type_multiple_dental_units_reabilitedInput
  what_was_updated?: ImplantologyCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutImplantologyInput
  implantology_questionnaire: Implantology_questionnaireCreateOneWithoutImplantology_questionnaireInput
  professionals?: DentistCreateManyWithoutImplantology_treatmentsInput | null
}

export type ImplantologyUpdateInput = {
  id?: string
  implant_type?: Implant_types
  if_type_multiple_instaled_implants_number?: number | null
  next_review_consult?: Date | string
  notes?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  professional_ids?: ImplantologyUpdateprofessional_idsInput
  if_type_unitary_dental_units_reabilited?: ImplantologyUpdateif_type_unitary_dental_units_reabilitedInput
  if_type_multiple_dental_units_reabilited?: ImplantologyUpdateif_type_multiple_dental_units_reabilitedInput
  what_was_updated?: ImplantologyUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutImplantologyInput | null
  implantology_questionnaire?: Implantology_questionnaireUpdateOneRequiredWithoutImplantology_questionnaireInput | null
  professionals?: DentistUpdateManyWithoutImplantology_treatmentsInput | null
}

export type ImplantologyUpdateManyMutationInput = {
  id?: string
  implant_type?: Implant_types
  if_type_multiple_instaled_implants_number?: number | null
  next_review_consult?: Date | string
  notes?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  professional_ids?: ImplantologyUpdateprofessional_idsInput
  if_type_unitary_dental_units_reabilited?: ImplantologyUpdateif_type_unitary_dental_units_reabilitedInput
  if_type_multiple_dental_units_reabilited?: ImplantologyUpdateif_type_multiple_dental_units_reabilitedInput
  what_was_updated?: ImplantologyUpdatewhat_was_updatedInput
}

export type ImplantologyCreateWithoutImplantology_questionnaireInput = {
  id?: string
  implant_type: Implant_types
  if_type_multiple_instaled_implants_number?: number | null
  next_review_consult: Date | string
  notes?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  professional_ids?: ImplantologyCreateprofessional_idsInput
  if_type_unitary_dental_units_reabilited?: ImplantologyCreateif_type_unitary_dental_units_reabilitedInput
  if_type_multiple_dental_units_reabilited?: ImplantologyCreateif_type_multiple_dental_units_reabilitedInput
  what_was_updated?: ImplantologyCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutImplantologyInput
  professionals?: DentistCreateManyWithoutImplantology_treatmentsInput | null
}

export type ImplantologyCreateOneWithoutImplantology_questionnaireInput = {
  create?: ImplantologyCreateWithoutImplantology_questionnaireInput
  connect?: ImplantologyWhereUniqueInput
}

export type Implantology_questionnaireCreateInput = {
  id?: string
  have_implant: boolean
  if_yes_when_puted?: string | null
  if_yes_last_review_consult?: string | null
  if_yes_the_cirurgy_needed_bone_graft?: boolean | null
  want_to_put_implants: boolean
  if_yes_why_do_you_want?: string | null
  if_yes_already_looked_for_professional?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Implantology_questionnaireCreatewhat_was_updatedInput
  implantology_questionnaire: ImplantologyCreateOneWithoutImplantology_questionnaireInput
}

export type ImplantologyUpdateWithoutImplantology_questionnaireDataInput = {
  id?: string
  implant_type?: Implant_types
  if_type_multiple_instaled_implants_number?: number | null
  next_review_consult?: Date | string
  notes?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  professional_ids?: ImplantologyUpdateprofessional_idsInput
  if_type_unitary_dental_units_reabilited?: ImplantologyUpdateif_type_unitary_dental_units_reabilitedInput
  if_type_multiple_dental_units_reabilited?: ImplantologyUpdateif_type_multiple_dental_units_reabilitedInput
  what_was_updated?: ImplantologyUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutImplantologyInput | null
  professionals?: DentistUpdateManyWithoutImplantology_treatmentsInput | null
}

export type ImplantologyUpsertWithoutImplantology_questionnaireInput = {
  update: ImplantologyUpdateWithoutImplantology_questionnaireDataInput
  create: ImplantologyCreateWithoutImplantology_questionnaireInput
}

export type ImplantologyUpdateOneRequiredWithoutImplantology_questionnaireInput = {
  create?: ImplantologyCreateWithoutImplantology_questionnaireInput
  connect?: ImplantologyWhereUniqueInput
  update?: ImplantologyUpdateWithoutImplantology_questionnaireDataInput
  upsert?: ImplantologyUpsertWithoutImplantology_questionnaireInput
}

export type Implantology_questionnaireUpdateInput = {
  id?: string
  have_implant?: boolean
  if_yes_when_puted?: string | null
  if_yes_last_review_consult?: string | null
  if_yes_the_cirurgy_needed_bone_graft?: boolean | null
  want_to_put_implants?: boolean
  if_yes_why_do_you_want?: string | null
  if_yes_already_looked_for_professional?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Implantology_questionnaireUpdatewhat_was_updatedInput
  implantology_questionnaire?: ImplantologyUpdateOneRequiredWithoutImplantology_questionnaireInput | null
}

export type Implantology_questionnaireUpdateManyMutationInput = {
  id?: string
  have_implant?: boolean
  if_yes_when_puted?: string | null
  if_yes_last_review_consult?: string | null
  if_yes_the_cirurgy_needed_bone_graft?: boolean | null
  want_to_put_implants?: boolean
  if_yes_why_do_you_want?: string | null
  if_yes_already_looked_for_professional?: boolean | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Implantology_questionnaireUpdatewhat_was_updatedInput
}

export type OrtodonticsCreateInput = {
  id?: string
  face_profile?: string | null
  face_simetrics?: string | null
  bite?: string | null
  class?: string | null
  ideal_occlusion?: yes_no | null
  if_no_whats_wrong_in_oclusion?: string | null
  spee?: string | null
  overbite?: string | null
  overjet?: string | null
  prevision_of_end?: string | null
  ortodontics_treatment_type?: Ortodontic_treatment_type | null
  notes?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  professional_ids?: OrtodonticsCreateprofessional_idsInput
  what_was_updated?: OrtodonticsCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOrtodonticsInput
  ortodontic_questionnaire: Ortodontics_questionnaireCreateOneWithoutOrtodontic_prontuaryInput
  TMJ_questionnaire: TMJ_problems_questionnaireCreateOneWithoutOrtodontic_prontuaryInput
  professionals?: DentistCreateManyWithoutOrtodontics_treatmentsInput | null
}

export type OrtodonticsUpdateInput = {
  id?: string
  face_profile?: string | null
  face_simetrics?: string | null
  bite?: string | null
  class?: string | null
  ideal_occlusion?: yes_no | null
  if_no_whats_wrong_in_oclusion?: string | null
  spee?: string | null
  overbite?: string | null
  overjet?: string | null
  prevision_of_end?: string | null
  ortodontics_treatment_type?: Ortodontic_treatment_type | null
  notes?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  professional_ids?: OrtodonticsUpdateprofessional_idsInput
  what_was_updated?: OrtodonticsUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOrtodonticsInput | null
  ortodontic_questionnaire?: Ortodontics_questionnaireUpdateOneRequiredWithoutOrtodontic_prontuaryInput | null
  TMJ_questionnaire?: TMJ_problems_questionnaireUpdateOneRequiredWithoutOrtodontic_prontuaryInput | null
  professionals?: DentistUpdateManyWithoutOrtodontics_treatmentsInput | null
}

export type OrtodonticsUpdateManyMutationInput = {
  id?: string
  face_profile?: string | null
  face_simetrics?: string | null
  bite?: string | null
  class?: string | null
  ideal_occlusion?: yes_no | null
  if_no_whats_wrong_in_oclusion?: string | null
  spee?: string | null
  overbite?: string | null
  overjet?: string | null
  prevision_of_end?: string | null
  ortodontics_treatment_type?: Ortodontic_treatment_type | null
  notes?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  professional_ids?: OrtodonticsUpdateprofessional_idsInput
  what_was_updated?: OrtodonticsUpdatewhat_was_updatedInput
}

export type OrtodonticsCreateWithoutOrtodontic_questionnaireInput = {
  id?: string
  face_profile?: string | null
  face_simetrics?: string | null
  bite?: string | null
  class?: string | null
  ideal_occlusion?: yes_no | null
  if_no_whats_wrong_in_oclusion?: string | null
  spee?: string | null
  overbite?: string | null
  overjet?: string | null
  prevision_of_end?: string | null
  ortodontics_treatment_type?: Ortodontic_treatment_type | null
  notes?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  professional_ids?: OrtodonticsCreateprofessional_idsInput
  what_was_updated?: OrtodonticsCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOrtodonticsInput
  TMJ_questionnaire: TMJ_problems_questionnaireCreateOneWithoutOrtodontic_prontuaryInput
  professionals?: DentistCreateManyWithoutOrtodontics_treatmentsInput | null
}

export type OrtodonticsCreateOneWithoutOrtodontic_questionnaireInput = {
  create?: OrtodonticsCreateWithoutOrtodontic_questionnaireInput
  connect?: OrtodonticsWhereUniqueInput
}

export type Ortodontics_questionnaireCreateInput = {
  id?: string
  reason_for_tratment: string
  already_have_in_treatment: yes_no
  if_yes_how_long_takes_previus_treatment?: string | null
  if_yes_you_have_panoramic_radiography?: yes_no | null
  if_yes_when_panoramic_radiography_was_taken?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Ortodontics_questionnaireCreatewhat_was_updatedInput
  ortodontic_prontuary: OrtodonticsCreateOneWithoutOrtodontic_questionnaireInput
}

export type OrtodonticsUpdateWithoutOrtodontic_questionnaireDataInput = {
  id?: string
  face_profile?: string | null
  face_simetrics?: string | null
  bite?: string | null
  class?: string | null
  ideal_occlusion?: yes_no | null
  if_no_whats_wrong_in_oclusion?: string | null
  spee?: string | null
  overbite?: string | null
  overjet?: string | null
  prevision_of_end?: string | null
  ortodontics_treatment_type?: Ortodontic_treatment_type | null
  notes?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  professional_ids?: OrtodonticsUpdateprofessional_idsInput
  what_was_updated?: OrtodonticsUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOrtodonticsInput | null
  TMJ_questionnaire?: TMJ_problems_questionnaireUpdateOneRequiredWithoutOrtodontic_prontuaryInput | null
  professionals?: DentistUpdateManyWithoutOrtodontics_treatmentsInput | null
}

export type OrtodonticsUpsertWithoutOrtodontic_questionnaireInput = {
  update: OrtodonticsUpdateWithoutOrtodontic_questionnaireDataInput
  create: OrtodonticsCreateWithoutOrtodontic_questionnaireInput
}

export type OrtodonticsUpdateOneRequiredWithoutOrtodontic_questionnaireInput = {
  create?: OrtodonticsCreateWithoutOrtodontic_questionnaireInput
  connect?: OrtodonticsWhereUniqueInput
  update?: OrtodonticsUpdateWithoutOrtodontic_questionnaireDataInput
  upsert?: OrtodonticsUpsertWithoutOrtodontic_questionnaireInput
}

export type Ortodontics_questionnaireUpdateInput = {
  id?: string
  reason_for_tratment?: string
  already_have_in_treatment?: yes_no
  if_yes_how_long_takes_previus_treatment?: string | null
  if_yes_you_have_panoramic_radiography?: yes_no | null
  if_yes_when_panoramic_radiography_was_taken?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Ortodontics_questionnaireUpdatewhat_was_updatedInput
  ortodontic_prontuary?: OrtodonticsUpdateOneRequiredWithoutOrtodontic_questionnaireInput | null
}

export type Ortodontics_questionnaireUpdateManyMutationInput = {
  id?: string
  reason_for_tratment?: string
  already_have_in_treatment?: yes_no
  if_yes_how_long_takes_previus_treatment?: string | null
  if_yes_you_have_panoramic_radiography?: yes_no | null
  if_yes_when_panoramic_radiography_was_taken?: Date | string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Ortodontics_questionnaireUpdatewhat_was_updatedInput
}

export type AnamnesisCreateWithoutOral_health_questionnaireInput = {
  id?: string
  last_dentist_visit: Date | string
  last_procedure: Date | string
  what_was_done?: string | null
  treatment_is_planed?: boolean
  What_treatment_is_planed?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  anamnesis_type?: AnamnesisCreateanamnesis_typeInput
  what_was_updated?: AnamnesisCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutAnamnesisInput
  main_anamnesis_questionnaire?: Main_anamnesis_questionnaireCreateOneWithoutAnamnesis_prontuaryInput | null
  vital_signs_questionnaire?: Vital_signs_questionnaireCreateOneWithoutAnamnesis_prontuaryInput | null
  Diet_questionnaire?: Diet_questionnaireCreateManyWithoutAnamnesis_prontuaryInput | null
}

export type AnamnesisCreateOneWithoutOral_health_questionnaireInput = {
  create?: AnamnesisCreateWithoutOral_health_questionnaireInput
  connect?: AnamnesisWhereUniqueInput
}

export type Oral_health_questionnaireCreateInput = {
  id?: string
  you_use_anykind_protesis: yes_no
  whats_the_protesis?: string | null
  type_of_teeth_brush?: string | null
  how_many_times_by_day?: number | null
  you_floss?: yes_no | null
  if_yes_how_many_times?: number | null
  you_use_any_mouthwash?: yes_no | null
  if_yes_how_often?: How_often | null
  dental_clenching: yes_no
  if_yes_when_in_day?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Oral_health_questionnaireCreatewhat_was_updatedInput
  anamnesis_prontuary: AnamnesisCreateOneWithoutOral_health_questionnaireInput
}

export type AnamnesisUpdateWithoutOral_health_questionnaireDataInput = {
  id?: string
  last_dentist_visit?: Date | string
  last_procedure?: Date | string
  what_was_done?: string | null
  treatment_is_planed?: boolean
  What_treatment_is_planed?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  anamnesis_type?: AnamnesisUpdateanamnesis_typeInput
  what_was_updated?: AnamnesisUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutAnamnesisInput | null
  main_anamnesis_questionnaire?: Main_anamnesis_questionnaireUpdateOneWithoutAnamnesis_prontuaryInput | null
  vital_signs_questionnaire?: Vital_signs_questionnaireUpdateOneWithoutAnamnesis_prontuaryInput | null
  Diet_questionnaire?: Diet_questionnaireUpdateManyWithoutAnamnesis_prontuaryInput | null
}

export type AnamnesisUpsertWithoutOral_health_questionnaireInput = {
  update: AnamnesisUpdateWithoutOral_health_questionnaireDataInput
  create: AnamnesisCreateWithoutOral_health_questionnaireInput
}

export type AnamnesisUpdateOneRequiredWithoutOral_health_questionnaireInput = {
  create?: AnamnesisCreateWithoutOral_health_questionnaireInput
  connect?: AnamnesisWhereUniqueInput
  update?: AnamnesisUpdateWithoutOral_health_questionnaireDataInput
  upsert?: AnamnesisUpsertWithoutOral_health_questionnaireInput
}

export type Oral_health_questionnaireUpdateInput = {
  id?: string
  you_use_anykind_protesis?: yes_no
  whats_the_protesis?: string | null
  type_of_teeth_brush?: string | null
  how_many_times_by_day?: number | null
  you_floss?: yes_no | null
  if_yes_how_many_times?: number | null
  you_use_any_mouthwash?: yes_no | null
  if_yes_how_often?: How_often | null
  dental_clenching?: yes_no
  if_yes_when_in_day?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Oral_health_questionnaireUpdatewhat_was_updatedInput
  anamnesis_prontuary?: AnamnesisUpdateOneRequiredWithoutOral_health_questionnaireInput | null
}

export type Oral_health_questionnaireUpdateManyMutationInput = {
  id?: string
  you_use_anykind_protesis?: yes_no
  whats_the_protesis?: string | null
  type_of_teeth_brush?: string | null
  how_many_times_by_day?: number | null
  you_floss?: yes_no | null
  if_yes_how_many_times?: number | null
  you_use_any_mouthwash?: yes_no | null
  if_yes_how_often?: How_often | null
  dental_clenching?: yes_no
  if_yes_when_in_day?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Oral_health_questionnaireUpdatewhat_was_updatedInput
}

export type OrtodonticsCreateWithoutTMJ_questionnaireInput = {
  id?: string
  face_profile?: string | null
  face_simetrics?: string | null
  bite?: string | null
  class?: string | null
  ideal_occlusion?: yes_no | null
  if_no_whats_wrong_in_oclusion?: string | null
  spee?: string | null
  overbite?: string | null
  overjet?: string | null
  prevision_of_end?: string | null
  ortodontics_treatment_type?: Ortodontic_treatment_type | null
  notes?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  professional_ids?: OrtodonticsCreateprofessional_idsInput
  what_was_updated?: OrtodonticsCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutOrtodonticsInput
  ortodontic_questionnaire: Ortodontics_questionnaireCreateOneWithoutOrtodontic_prontuaryInput
  professionals?: DentistCreateManyWithoutOrtodontics_treatmentsInput | null
}

export type OrtodonticsCreateOneWithoutTMJ_questionnaireInput = {
  create?: OrtodonticsCreateWithoutTMJ_questionnaireInput
  connect?: OrtodonticsWhereUniqueInput
}

export type TMJ_problems_questionnaireCreateInput = {
  id?: string
  you_consider_have_TMJ_problem: yes_no
  when_the_simptoms_start?: string | null
  difficulty_opening_your_mouth: yes_no
  pain_when_opening_closing_mouth: yes_no
  crackles_when_opening_closing_mouth: yes_no
  if_yes_one_or_both_sides?: string | null
  if_one_whats_side_crackles?: string | null
  TMJ_pain_at_rest: yes_no
  already_looked_for_profissional_treatment: yes_no
  if_yes_when_was_treated?: string | null
  if_yes_you_made_any_image_exams?: yes_no | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: TMJ_problems_questionnaireCreatewhat_was_updatedInput
  ortodontic_prontuary: OrtodonticsCreateOneWithoutTMJ_questionnaireInput
}

export type OrtodonticsUpdateWithoutTMJ_questionnaireDataInput = {
  id?: string
  face_profile?: string | null
  face_simetrics?: string | null
  bite?: string | null
  class?: string | null
  ideal_occlusion?: yes_no | null
  if_no_whats_wrong_in_oclusion?: string | null
  spee?: string | null
  overbite?: string | null
  overjet?: string | null
  prevision_of_end?: string | null
  ortodontics_treatment_type?: Ortodontic_treatment_type | null
  notes?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  professional_ids?: OrtodonticsUpdateprofessional_idsInput
  what_was_updated?: OrtodonticsUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutOrtodonticsInput | null
  ortodontic_questionnaire?: Ortodontics_questionnaireUpdateOneRequiredWithoutOrtodontic_prontuaryInput | null
  professionals?: DentistUpdateManyWithoutOrtodontics_treatmentsInput | null
}

export type OrtodonticsUpsertWithoutTMJ_questionnaireInput = {
  update: OrtodonticsUpdateWithoutTMJ_questionnaireDataInput
  create: OrtodonticsCreateWithoutTMJ_questionnaireInput
}

export type OrtodonticsUpdateOneRequiredWithoutTMJ_questionnaireInput = {
  create?: OrtodonticsCreateWithoutTMJ_questionnaireInput
  connect?: OrtodonticsWhereUniqueInput
  update?: OrtodonticsUpdateWithoutTMJ_questionnaireDataInput
  upsert?: OrtodonticsUpsertWithoutTMJ_questionnaireInput
}

export type TMJ_problems_questionnaireUpdateInput = {
  id?: string
  you_consider_have_TMJ_problem?: yes_no
  when_the_simptoms_start?: string | null
  difficulty_opening_your_mouth?: yes_no
  pain_when_opening_closing_mouth?: yes_no
  crackles_when_opening_closing_mouth?: yes_no
  if_yes_one_or_both_sides?: string | null
  if_one_whats_side_crackles?: string | null
  TMJ_pain_at_rest?: yes_no
  already_looked_for_profissional_treatment?: yes_no
  if_yes_when_was_treated?: string | null
  if_yes_you_made_any_image_exams?: yes_no | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: TMJ_problems_questionnaireUpdatewhat_was_updatedInput
  ortodontic_prontuary?: OrtodonticsUpdateOneRequiredWithoutTMJ_questionnaireInput | null
}

export type TMJ_problems_questionnaireUpdateManyMutationInput = {
  id?: string
  you_consider_have_TMJ_problem?: yes_no
  when_the_simptoms_start?: string | null
  difficulty_opening_your_mouth?: yes_no
  pain_when_opening_closing_mouth?: yes_no
  crackles_when_opening_closing_mouth?: yes_no
  if_yes_one_or_both_sides?: string | null
  if_one_whats_side_crackles?: string | null
  TMJ_pain_at_rest?: yes_no
  already_looked_for_profissional_treatment?: yes_no
  if_yes_when_was_treated?: string | null
  if_yes_you_made_any_image_exams?: yes_no | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: TMJ_problems_questionnaireUpdatewhat_was_updatedInput
}

export type AnamnesisCreateWithoutVital_signs_questionnaireInput = {
  id?: string
  last_dentist_visit: Date | string
  last_procedure: Date | string
  what_was_done?: string | null
  treatment_is_planed?: boolean
  What_treatment_is_planed?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  anamnesis_type?: AnamnesisCreateanamnesis_typeInput
  what_was_updated?: AnamnesisCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutAnamnesisInput
  main_anamnesis_questionnaire?: Main_anamnesis_questionnaireCreateOneWithoutAnamnesis_prontuaryInput | null
  oral_health_questionnaire?: Oral_health_questionnaireCreateOneWithoutAnamnesis_prontuaryInput | null
  Diet_questionnaire?: Diet_questionnaireCreateManyWithoutAnamnesis_prontuaryInput | null
}

export type AnamnesisCreateOneWithoutVital_signs_questionnaireInput = {
  create?: AnamnesisCreateWithoutVital_signs_questionnaireInput
  connect?: AnamnesisWhereUniqueInput
}

export type Vital_signs_questionnaireCreateInput = {
  id?: string
  heart_beats_per_minute?: number | null
  arterial_pressure?: string | null
  breaths_per_minute?: number | null
  temperature_in_celcius?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_is_updated?: Vital_signs_questionnaireCreatewhat_is_updatedInput
  anamnesis_prontuary: AnamnesisCreateOneWithoutVital_signs_questionnaireInput
}

export type AnamnesisUpdateWithoutVital_signs_questionnaireDataInput = {
  id?: string
  last_dentist_visit?: Date | string
  last_procedure?: Date | string
  what_was_done?: string | null
  treatment_is_planed?: boolean
  What_treatment_is_planed?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  anamnesis_type?: AnamnesisUpdateanamnesis_typeInput
  what_was_updated?: AnamnesisUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutAnamnesisInput | null
  main_anamnesis_questionnaire?: Main_anamnesis_questionnaireUpdateOneWithoutAnamnesis_prontuaryInput | null
  oral_health_questionnaire?: Oral_health_questionnaireUpdateOneWithoutAnamnesis_prontuaryInput | null
  Diet_questionnaire?: Diet_questionnaireUpdateManyWithoutAnamnesis_prontuaryInput | null
}

export type AnamnesisUpsertWithoutVital_signs_questionnaireInput = {
  update: AnamnesisUpdateWithoutVital_signs_questionnaireDataInput
  create: AnamnesisCreateWithoutVital_signs_questionnaireInput
}

export type AnamnesisUpdateOneRequiredWithoutVital_signs_questionnaireInput = {
  create?: AnamnesisCreateWithoutVital_signs_questionnaireInput
  connect?: AnamnesisWhereUniqueInput
  update?: AnamnesisUpdateWithoutVital_signs_questionnaireDataInput
  upsert?: AnamnesisUpsertWithoutVital_signs_questionnaireInput
}

export type Vital_signs_questionnaireUpdateInput = {
  id?: string
  heart_beats_per_minute?: number | null
  arterial_pressure?: string | null
  breaths_per_minute?: number | null
  temperature_in_celcius?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_is_updated?: Vital_signs_questionnaireUpdatewhat_is_updatedInput
  anamnesis_prontuary?: AnamnesisUpdateOneRequiredWithoutVital_signs_questionnaireInput | null
}

export type Vital_signs_questionnaireUpdateManyMutationInput = {
  id?: string
  heart_beats_per_minute?: number | null
  arterial_pressure?: string | null
  breaths_per_minute?: number | null
  temperature_in_celcius?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  what_is_updated?: Vital_signs_questionnaireUpdatewhat_is_updatedInput
}

export type AnamnesisCreateWithoutDiet_questionnaireInput = {
  id?: string
  last_dentist_visit: Date | string
  last_procedure: Date | string
  what_was_done?: string | null
  treatment_is_planed?: boolean
  What_treatment_is_planed?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  anamnesis_type?: AnamnesisCreateanamnesis_typeInput
  what_was_updated?: AnamnesisCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutAnamnesisInput
  main_anamnesis_questionnaire?: Main_anamnesis_questionnaireCreateOneWithoutAnamnesis_prontuaryInput | null
  vital_signs_questionnaire?: Vital_signs_questionnaireCreateOneWithoutAnamnesis_prontuaryInput | null
  oral_health_questionnaire?: Oral_health_questionnaireCreateOneWithoutAnamnesis_prontuaryInput | null
}

export type AnamnesisCreateOneWithoutDiet_questionnaireInput = {
  create?: AnamnesisCreateWithoutDiet_questionnaireInput
  connect?: AnamnesisWhereUniqueInput
}

export type Diet_questionnaireCreateInput = {
  id?: string
  already_instructed_in_diet_by_a_CD: yes_no
  if_yes_what_the_instructions?: string | null
  importance_of_diet_in_oral_health: yes_no
  createdAt?: Date | string
  updatedAt?: Date | string
  what_is_updated?: Diet_questionnaireCreatewhat_is_updatedInput
  anamnesis_prontuary: AnamnesisCreateOneWithoutDiet_questionnaireInput
}

export type AnamnesisUpdateWithoutDiet_questionnaireDataInput = {
  id?: string
  last_dentist_visit?: Date | string
  last_procedure?: Date | string
  what_was_done?: string | null
  treatment_is_planed?: boolean
  What_treatment_is_planed?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  anamnesis_type?: AnamnesisUpdateanamnesis_typeInput
  what_was_updated?: AnamnesisUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutAnamnesisInput | null
  main_anamnesis_questionnaire?: Main_anamnesis_questionnaireUpdateOneWithoutAnamnesis_prontuaryInput | null
  vital_signs_questionnaire?: Vital_signs_questionnaireUpdateOneWithoutAnamnesis_prontuaryInput | null
  oral_health_questionnaire?: Oral_health_questionnaireUpdateOneWithoutAnamnesis_prontuaryInput | null
}

export type AnamnesisUpsertWithoutDiet_questionnaireInput = {
  update: AnamnesisUpdateWithoutDiet_questionnaireDataInput
  create: AnamnesisCreateWithoutDiet_questionnaireInput
}

export type AnamnesisUpdateOneRequiredWithoutDiet_questionnaireInput = {
  create?: AnamnesisCreateWithoutDiet_questionnaireInput
  connect?: AnamnesisWhereUniqueInput
  update?: AnamnesisUpdateWithoutDiet_questionnaireDataInput
  upsert?: AnamnesisUpsertWithoutDiet_questionnaireInput
}

export type Diet_questionnaireUpdateInput = {
  id?: string
  already_instructed_in_diet_by_a_CD?: yes_no
  if_yes_what_the_instructions?: string | null
  importance_of_diet_in_oral_health?: yes_no
  createdAt?: Date | string
  updatedAt?: Date | string
  what_is_updated?: Diet_questionnaireUpdatewhat_is_updatedInput
  anamnesis_prontuary?: AnamnesisUpdateOneRequiredWithoutDiet_questionnaireInput | null
}

export type Diet_questionnaireUpdateManyMutationInput = {
  id?: string
  already_instructed_in_diet_by_a_CD?: yes_no
  if_yes_what_the_instructions?: string | null
  importance_of_diet_in_oral_health?: yes_no
  createdAt?: Date | string
  updatedAt?: Date | string
  what_is_updated?: Diet_questionnaireUpdatewhat_is_updatedInput
}

export type AnamnesisCreateWithoutMain_anamnesis_questionnaireInput = {
  id?: string
  last_dentist_visit: Date | string
  last_procedure: Date | string
  what_was_done?: string | null
  treatment_is_planed?: boolean
  What_treatment_is_planed?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  anamnesis_type?: AnamnesisCreateanamnesis_typeInput
  what_was_updated?: AnamnesisCreatewhat_was_updatedInput
  patient: PatientCreateOneWithoutAnamnesisInput
  vital_signs_questionnaire?: Vital_signs_questionnaireCreateOneWithoutAnamnesis_prontuaryInput | null
  oral_health_questionnaire?: Oral_health_questionnaireCreateOneWithoutAnamnesis_prontuaryInput | null
  Diet_questionnaire?: Diet_questionnaireCreateManyWithoutAnamnesis_prontuaryInput | null
}

export type AnamnesisCreateOneWithoutMain_anamnesis_questionnaireInput = {
  create?: AnamnesisCreateWithoutMain_anamnesis_questionnaireInput
  connect?: AnamnesisWhereUniqueInput
}

export type Main_anamnesis_questionnaireCreateInput = {
  id?: string
  main_issue: string
  recent_disease_history: string
  undergoing_medical_treatment: yes_no
  if_yes_what_treatment?: string | null
  taking_any_medication: yes_no
  if_yes_what_medication?: string | null
  already_used_local_anestesics: yes_no
  you_presented_reaction: yes_no
  allergic_to_any_medicine: yes_no
  if_yes_what_medicine?: string | null
  allergic_to_latex: yes_no
  has_any_know_blood_issues: yes_no
  use_acetil_salicilic_acid: yes_no
  if_yes_for_what?: string | null
  you_have_already_made_blood_testing: yes_no
  if_yes_when_made_it?: Date | string | null
  has_any_importanting_bleeding: yes_no
  if_yes_when?: Date | string | null
  if_yes_how_long_to_stop: string
  have_problems_with_healing: yes_no
  has_any_know_tireoids_issues: yes_no
  has_any_know_hormonal_issues: yes_no
  you_are_using_any_corticosteroids: yes_no
  diabetes_mellitus: yes_no
  if_yes_any_treatment_for_diabetes?: string | null
  any_heart_problems: yes_no
  if_yes_what_hearth_problem?: string | null
  arterial_hypertension: yes_no
  if_yes_any_treatment_for_hypertension?: string | null
  breathing_problems: yes_no
  if_yes_what_breathing_problem?: string | null
  kidney_damage: yes_no
  if_yes_what_kidney_problem?: string | null
  gastric_problems: yes_no
  if_yes_you_looked_for_gastric_doctor?: yes_no | null
  if_yes_what_gastric_problems?: string | null
  have_rheumatic_fever: yes_no
  joints_problems_or_reumatics: yes_no
  if_yes_you_looked_for_reaumatics_doctor?: string | null
  use_drugs: yes_no
  if_yes_what_drug?: string | null
  smoker: yes_no
  if_yes_how_many_cigarretes_perday?: number | null
  consider_a_alcolic_addicted: yes_no
  if_yes_when_was_the_last_drink?: string | null
  family_background: yes_no
  if_yes_what_familys_problems?: string | null
  preagnant: yes_no
  if_yes_how_many_months?: string | null
  take_contraceptives: yes_no
  what_contraceptives?: string | null
  are_breastfeeding: yes_no
  entered_the_process_of_menopause: yes_no
  if_yes_guided_by_the_gynecologist?: yes_no | null
  take_hormone: yes_no
  take_calcium: yes_no
  terms_readed: yes_no
  patient_signed: yes_no
  signed_date: Date | string
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Main_anamnesis_questionnaireCreatewhat_was_updatedInput
  anamnesis_prontuary: AnamnesisCreateOneWithoutMain_anamnesis_questionnaireInput
}

export type AnamnesisUpdateWithoutMain_anamnesis_questionnaireDataInput = {
  id?: string
  last_dentist_visit?: Date | string
  last_procedure?: Date | string
  what_was_done?: string | null
  treatment_is_planed?: boolean
  What_treatment_is_planed?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  anamnesis_type?: AnamnesisUpdateanamnesis_typeInput
  what_was_updated?: AnamnesisUpdatewhat_was_updatedInput
  patient?: PatientUpdateOneRequiredWithoutAnamnesisInput | null
  vital_signs_questionnaire?: Vital_signs_questionnaireUpdateOneWithoutAnamnesis_prontuaryInput | null
  oral_health_questionnaire?: Oral_health_questionnaireUpdateOneWithoutAnamnesis_prontuaryInput | null
  Diet_questionnaire?: Diet_questionnaireUpdateManyWithoutAnamnesis_prontuaryInput | null
}

export type AnamnesisUpsertWithoutMain_anamnesis_questionnaireInput = {
  update: AnamnesisUpdateWithoutMain_anamnesis_questionnaireDataInput
  create: AnamnesisCreateWithoutMain_anamnesis_questionnaireInput
}

export type AnamnesisUpdateOneRequiredWithoutMain_anamnesis_questionnaireInput = {
  create?: AnamnesisCreateWithoutMain_anamnesis_questionnaireInput
  connect?: AnamnesisWhereUniqueInput
  update?: AnamnesisUpdateWithoutMain_anamnesis_questionnaireDataInput
  upsert?: AnamnesisUpsertWithoutMain_anamnesis_questionnaireInput
}

export type Main_anamnesis_questionnaireUpdateInput = {
  id?: string
  main_issue?: string
  recent_disease_history?: string
  undergoing_medical_treatment?: yes_no
  if_yes_what_treatment?: string | null
  taking_any_medication?: yes_no
  if_yes_what_medication?: string | null
  already_used_local_anestesics?: yes_no
  you_presented_reaction?: yes_no
  allergic_to_any_medicine?: yes_no
  if_yes_what_medicine?: string | null
  allergic_to_latex?: yes_no
  has_any_know_blood_issues?: yes_no
  use_acetil_salicilic_acid?: yes_no
  if_yes_for_what?: string | null
  you_have_already_made_blood_testing?: yes_no
  if_yes_when_made_it?: Date | string | null
  has_any_importanting_bleeding?: yes_no
  if_yes_when?: Date | string | null
  if_yes_how_long_to_stop?: string
  have_problems_with_healing?: yes_no
  has_any_know_tireoids_issues?: yes_no
  has_any_know_hormonal_issues?: yes_no
  you_are_using_any_corticosteroids?: yes_no
  diabetes_mellitus?: yes_no
  if_yes_any_treatment_for_diabetes?: string | null
  any_heart_problems?: yes_no
  if_yes_what_hearth_problem?: string | null
  arterial_hypertension?: yes_no
  if_yes_any_treatment_for_hypertension?: string | null
  breathing_problems?: yes_no
  if_yes_what_breathing_problem?: string | null
  kidney_damage?: yes_no
  if_yes_what_kidney_problem?: string | null
  gastric_problems?: yes_no
  if_yes_you_looked_for_gastric_doctor?: yes_no | null
  if_yes_what_gastric_problems?: string | null
  have_rheumatic_fever?: yes_no
  joints_problems_or_reumatics?: yes_no
  if_yes_you_looked_for_reaumatics_doctor?: string | null
  use_drugs?: yes_no
  if_yes_what_drug?: string | null
  smoker?: yes_no
  if_yes_how_many_cigarretes_perday?: number | null
  consider_a_alcolic_addicted?: yes_no
  if_yes_when_was_the_last_drink?: string | null
  family_background?: yes_no
  if_yes_what_familys_problems?: string | null
  preagnant?: yes_no
  if_yes_how_many_months?: string | null
  take_contraceptives?: yes_no
  what_contraceptives?: string | null
  are_breastfeeding?: yes_no
  entered_the_process_of_menopause?: yes_no
  if_yes_guided_by_the_gynecologist?: yes_no | null
  take_hormone?: yes_no
  take_calcium?: yes_no
  terms_readed?: yes_no
  patient_signed?: yes_no
  signed_date?: Date | string
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Main_anamnesis_questionnaireUpdatewhat_was_updatedInput
  anamnesis_prontuary?: AnamnesisUpdateOneRequiredWithoutMain_anamnesis_questionnaireInput | null
}

export type Main_anamnesis_questionnaireUpdateManyMutationInput = {
  id?: string
  main_issue?: string
  recent_disease_history?: string
  undergoing_medical_treatment?: yes_no
  if_yes_what_treatment?: string | null
  taking_any_medication?: yes_no
  if_yes_what_medication?: string | null
  already_used_local_anestesics?: yes_no
  you_presented_reaction?: yes_no
  allergic_to_any_medicine?: yes_no
  if_yes_what_medicine?: string | null
  allergic_to_latex?: yes_no
  has_any_know_blood_issues?: yes_no
  use_acetil_salicilic_acid?: yes_no
  if_yes_for_what?: string | null
  you_have_already_made_blood_testing?: yes_no
  if_yes_when_made_it?: Date | string | null
  has_any_importanting_bleeding?: yes_no
  if_yes_when?: Date | string | null
  if_yes_how_long_to_stop?: string
  have_problems_with_healing?: yes_no
  has_any_know_tireoids_issues?: yes_no
  has_any_know_hormonal_issues?: yes_no
  you_are_using_any_corticosteroids?: yes_no
  diabetes_mellitus?: yes_no
  if_yes_any_treatment_for_diabetes?: string | null
  any_heart_problems?: yes_no
  if_yes_what_hearth_problem?: string | null
  arterial_hypertension?: yes_no
  if_yes_any_treatment_for_hypertension?: string | null
  breathing_problems?: yes_no
  if_yes_what_breathing_problem?: string | null
  kidney_damage?: yes_no
  if_yes_what_kidney_problem?: string | null
  gastric_problems?: yes_no
  if_yes_you_looked_for_gastric_doctor?: yes_no | null
  if_yes_what_gastric_problems?: string | null
  have_rheumatic_fever?: yes_no
  joints_problems_or_reumatics?: yes_no
  if_yes_you_looked_for_reaumatics_doctor?: string | null
  use_drugs?: yes_no
  if_yes_what_drug?: string | null
  smoker?: yes_no
  if_yes_how_many_cigarretes_perday?: number | null
  consider_a_alcolic_addicted?: yes_no
  if_yes_when_was_the_last_drink?: string | null
  family_background?: yes_no
  if_yes_what_familys_problems?: string | null
  preagnant?: yes_no
  if_yes_how_many_months?: string | null
  take_contraceptives?: yes_no
  what_contraceptives?: string | null
  are_breastfeeding?: yes_no
  entered_the_process_of_menopause?: yes_no
  if_yes_guided_by_the_gynecologist?: yes_no | null
  take_hormone?: yes_no
  take_calcium?: yes_no
  terms_readed?: yes_no
  patient_signed?: yes_no
  signed_date?: Date | string
  createdAt?: Date | string
  updatedAt?: Date | string
  what_was_updated?: Main_anamnesis_questionnaireUpdatewhat_was_updatedInput
}

export type PatientCreateWithoutDont_knowInput = {
  id?: string
  clinic_prontuary_number: number
  fullname: string
  birth_date: Date | string
  age: number
  gender: Gender
  brazilian_cpf?: string | null
  brazilian_rg?: string | null
  password: string
  cellphone_number?: string | null
  contactmeans?: Contact_means | null
  last_visit_dentist: Date | string
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: string
  what_was_updated?: PatientCreatewhat_was_updatedInput
  clinic: ClinicCreateOneWithoutPatientInput
  schedule?: ScheduleCreateOneWithoutPatientInput | null
  email?: EmailCreateManyWithoutPatientInput | null
  anamnesis?: AnamnesisCreateOneWithoutPatientInput | null
  implantology?: ImplantologyCreateOneWithoutPatientInput | null
  ortodontics?: OrtodonticsCreateOneWithoutPatientInput | null
  odontogram?: OdontogramCreateOneWithoutPatientInput | null
  treatment_evolution?: Treatment_evolutionCreateOneWithoutPatientInput | null
  dentists?: DentistCreateManyWithoutPatientsInput | null
  Clinic?: ClinicCreateOneWithoutPatientsInput | null
  Email?: EmailCreateManyWithoutPatientInput | null
}

export type PatientCreateManyWithoutDont_knowInput = {
  create?: Enumerable<PatientCreateWithoutDont_knowInput>
  connect?: Enumerable<PatientWhereUniqueInput>
}

export type Dont_know_questionsCreateInput = {
  id?: string
  question: string
  questionnaire_id: string
  Patient?: PatientCreateManyWithoutDont_knowInput | null
}

export type PatientUpdateWithoutDont_knowDataInput = {
  id?: string
  clinic_prontuary_number?: number
  fullname?: string
  birth_date?: Date | string
  age?: number
  gender?: Gender
  brazilian_cpf?: string | null
  brazilian_rg?: string | null
  password?: string
  cellphone_number?: string | null
  contactmeans?: Contact_means | null
  last_visit_dentist?: Date | string
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: string
  what_was_updated?: PatientUpdatewhat_was_updatedInput
  clinic?: ClinicUpdateOneRequiredWithoutPatientInput | null
  schedule?: ScheduleUpdateOneWithoutPatientInput | null
  email?: EmailUpdateManyWithoutPatientInput | null
  anamnesis?: AnamnesisUpdateOneWithoutPatientInput | null
  implantology?: ImplantologyUpdateOneWithoutPatientInput | null
  ortodontics?: OrtodonticsUpdateOneWithoutPatientInput | null
  odontogram?: OdontogramUpdateOneWithoutPatientInput | null
  treatment_evolution?: Treatment_evolutionUpdateOneWithoutPatientInput | null
  dentists?: DentistUpdateManyWithoutPatientsInput | null
  Clinic?: ClinicUpdateOneWithoutPatientsInput | null
  Email?: EmailUpdateManyWithoutPatientInput | null
}

export type PatientUpdateWithWhereUniqueWithoutDont_knowInput = {
  where: PatientWhereUniqueInput
  data: PatientUpdateWithoutDont_knowDataInput
}

export type PatientUpsertWithWhereUniqueWithoutDont_knowInput = {
  where: PatientWhereUniqueInput
  update: PatientUpdateWithoutDont_knowDataInput
  create: PatientCreateWithoutDont_knowInput
}

export type PatientUpdateManyWithoutDont_knowInput = {
  create?: Enumerable<PatientCreateWithoutDont_knowInput>
  connect?: Enumerable<PatientWhereUniqueInput>
  set?: Enumerable<PatientWhereUniqueInput>
  disconnect?: Enumerable<PatientWhereUniqueInput>
  delete?: Enumerable<PatientWhereUniqueInput>
  update?: Enumerable<PatientUpdateWithWhereUniqueWithoutDont_knowInput>
  updateMany?: Enumerable<PatientUpdateManyWithWhereNestedInput> | null
  deleteMany?: Enumerable<PatientScalarWhereInput>
  upsert?: Enumerable<PatientUpsertWithWhereUniqueWithoutDont_knowInput>
}

export type Dont_know_questionsUpdateInput = {
  id?: string
  question?: string
  questionnaire_id?: string
  Patient?: PatientUpdateManyWithoutDont_knowInput | null
}

export type Dont_know_questionsUpdateManyMutationInput = {
  id?: string
  question?: string
  questionnaire_id?: string
}

export type DentistCreateInput = {
  id?: string
  CRO_number: string
  firstname: string
  lastname: string
  username?: string
  password?: string
  contactmeans?: Contact_means | null
  cellphone_number?: string | null
  active?: boolean
  comission?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: string
  shedule: ScheduleCreateOneWithoutDentistInput
  clinic: ClinicCreateOneWithoutDentistInput
  email?: EmailCreateManyWithoutDentistInput | null
  specialization?: Clinic_specializationsCreateManyWithoutDentistInput | null
  ortodontics_treatments?: OrtodonticsCreateManyWithoutProfessionalsInput | null
  implantology_treatments?: ImplantologyCreateManyWithoutProfessionalsInput | null
  patients?: PatientCreateManyWithoutDentistsInput | null
  Clinic?: ClinicCreateOneWithoutDestistsInput | null
  Email?: EmailCreateManyWithoutDentistInput | null
}

export type DentistUpdateInput = {
  id?: string
  CRO_number?: string
  firstname?: string
  lastname?: string
  username?: string
  password?: string
  contactmeans?: Contact_means | null
  cellphone_number?: string | null
  active?: boolean
  comission?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: string
  shedule?: ScheduleUpdateOneRequiredWithoutDentistInput | null
  clinic?: ClinicUpdateOneRequiredWithoutDentistInput | null
  email?: EmailUpdateManyWithoutDentistInput | null
  specialization?: Clinic_specializationsUpdateManyWithoutDentistInput | null
  ortodontics_treatments?: OrtodonticsUpdateManyWithoutProfessionalsInput | null
  implantology_treatments?: ImplantologyUpdateManyWithoutProfessionalsInput | null
  patients?: PatientUpdateManyWithoutDentistsInput | null
  Clinic?: ClinicUpdateOneWithoutDestistsInput | null
  Email?: EmailUpdateManyWithoutDentistInput | null
}

export type DentistUpdateManyMutationInput = {
  id?: string
  CRO_number?: string
  firstname?: string
  lastname?: string
  username?: string
  password?: string
  contactmeans?: Contact_means | null
  cellphone_number?: string | null
  active?: boolean
  comission?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: string
}

export type DentistCreateWithoutSpecializationInput = {
  id?: string
  CRO_number: string
  firstname: string
  lastname: string
  username?: string
  password?: string
  contactmeans?: Contact_means | null
  cellphone_number?: string | null
  active?: boolean
  comission?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: string
  shedule: ScheduleCreateOneWithoutDentistInput
  clinic: ClinicCreateOneWithoutDentistInput
  email?: EmailCreateManyWithoutDentistInput | null
  ortodontics_treatments?: OrtodonticsCreateManyWithoutProfessionalsInput | null
  implantology_treatments?: ImplantologyCreateManyWithoutProfessionalsInput | null
  patients?: PatientCreateManyWithoutDentistsInput | null
  Clinic?: ClinicCreateOneWithoutDestistsInput | null
  Email?: EmailCreateManyWithoutDentistInput | null
}

export type DentistCreateOneWithoutSpecializationInput = {
  create?: DentistCreateWithoutSpecializationInput
  connect?: DentistWhereUniqueInput
}

export type Clinic_specializationsCreateInput = {
  specialization: Specializations
  createdAt?: Date | string
  updatedAt?: Date | string
  Dentist?: DentistCreateOneWithoutSpecializationInput | null
}

export type DentistUpdateWithoutSpecializationDataInput = {
  id?: string
  CRO_number?: string
  firstname?: string
  lastname?: string
  username?: string
  password?: string
  contactmeans?: Contact_means | null
  cellphone_number?: string | null
  active?: boolean
  comission?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  role?: string
  shedule?: ScheduleUpdateOneRequiredWithoutDentistInput | null
  clinic?: ClinicUpdateOneRequiredWithoutDentistInput | null
  email?: EmailUpdateManyWithoutDentistInput | null
  ortodontics_treatments?: OrtodonticsUpdateManyWithoutProfessionalsInput | null
  implantology_treatments?: ImplantologyUpdateManyWithoutProfessionalsInput | null
  patients?: PatientUpdateManyWithoutDentistsInput | null
  Clinic?: ClinicUpdateOneWithoutDestistsInput | null
  Email?: EmailUpdateManyWithoutDentistInput | null
}

export type DentistUpsertWithoutSpecializationInput = {
  update: DentistUpdateWithoutSpecializationDataInput
  create: DentistCreateWithoutSpecializationInput
}

export type DentistUpdateOneWithoutSpecializationInput = {
  create?: DentistCreateWithoutSpecializationInput
  connect?: DentistWhereUniqueInput
  disconnect?: boolean
  delete?: boolean
  update?: DentistUpdateWithoutSpecializationDataInput
  upsert?: DentistUpsertWithoutSpecializationInput
}

export type Clinic_specializationsUpdateInput = {
  id?: number
  specialization?: Specializations
  createdAt?: Date | string
  updatedAt?: Date | string
  Dentist?: DentistUpdateOneWithoutSpecializationInput | null
}

export type Clinic_specializationsUpdateManyMutationInput = {
  id?: number
  specialization?: Specializations
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ClinicCreateWithoutEmployeersInput = {
  registered_id?: string
  cnpj: string
  socialreason: string
  fantasy_name: string
  multipleclinics?: boolean
  numberofbranches?: number
  dentalchairs?: number | null
  averagepatientsperday?: number | null
  country?: string | null
  state?: string | null
  city?: string | null
  neighborhood?: string | null
  CEP?: string | null
  website?: string | null
  password?: string | null
  ssl_enabled?: boolean | null
  two_factor_autentication?: boolean | null
  access_blocked?: boolean | null
  free_trial?: boolean
  free_trial_days_left?: number
  language?: Language
  createdAt?: Date | string
  updatedAt?: Date | string
  emails?: EmailCreateManyWithoutClinicInput | null
  clinic_phones?: Clinic_phonesCreateManyWithoutClinicInput | null
  patients?: PatientCreateManyWithoutClinicInput | null
  destists?: DentistCreateManyWithoutClinicInput | null
  technicalmanager?: TechnicalmanagerCreateOneWithoutClinicInput | null
  legalresponsible?: LegalresponsibleCreateOneWithoutClinicInput | null
  insuranses?: Dental_insuranceCreateManyWithoutClinicInput | null
  logs?: LogsCreateManyWithoutClinicInput | null
  Clinic_payment_information?: Clinic_payment_informationCreateManyWithoutClinicInput | null
  Clinic_finance_options?: Clinic_finance_optionsCreateManyWithoutClinicInput | null
  Clinic_finance_month?: Clinic_finance_monthCreateManyWithoutClinicInput | null
  Clinic_finance_day?: Clinic_finance_dayCreateManyWithoutClinicInput | null
  Chairs?: ChairsCreateManyWithoutClinicInput | null
  Chair_finance_day?: Chair_finance_dayCreateManyWithoutClinicInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureCreateManyWithoutClinicInput | null
  Patient?: PatientCreateManyWithoutClinicInput | null
  Dentist?: DentistCreateManyWithoutClinicInput | null
}

export type ClinicCreateOneWithoutEmployeersInput = {
  create?: ClinicCreateWithoutEmployeersInput
  connect?: ClinicWhereUniqueInput
}

export type EmployeerCreateInput = {
  id?: string
  firstname: string
  lastname: string
  username?: string
  password?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  clinic: ClinicCreateOneWithoutEmployeersInput
  role: Clinic_RolesCreateOneWithoutEmployerInput
}

export type ClinicUpdateWithoutEmployeersDataInput = {
  registered_id?: string
  cnpj?: string
  socialreason?: string
  fantasy_name?: string
  multipleclinics?: boolean
  numberofbranches?: number
  dentalchairs?: number | null
  averagepatientsperday?: number | null
  country?: string | null
  state?: string | null
  city?: string | null
  neighborhood?: string | null
  CEP?: string | null
  website?: string | null
  password?: string | null
  ssl_enabled?: boolean | null
  two_factor_autentication?: boolean | null
  access_blocked?: boolean | null
  free_trial?: boolean
  free_trial_days_left?: number
  language?: Language
  createdAt?: Date | string
  updatedAt?: Date | string
  emails?: EmailUpdateManyWithoutClinicInput | null
  clinic_phones?: Clinic_phonesUpdateManyWithoutClinicInput | null
  patients?: PatientUpdateManyWithoutClinicInput | null
  destists?: DentistUpdateManyWithoutClinicInput | null
  technicalmanager?: TechnicalmanagerUpdateOneWithoutClinicInput | null
  legalresponsible?: LegalresponsibleUpdateOneWithoutClinicInput | null
  insuranses?: Dental_insuranceUpdateManyWithoutClinicInput | null
  logs?: LogsUpdateManyWithoutClinicInput | null
  Clinic_payment_information?: Clinic_payment_informationUpdateManyWithoutClinicInput | null
  Clinic_finance_options?: Clinic_finance_optionsUpdateManyWithoutClinicInput | null
  Clinic_finance_month?: Clinic_finance_monthUpdateManyWithoutClinicInput | null
  Clinic_finance_day?: Clinic_finance_dayUpdateManyWithoutClinicInput | null
  Chairs?: ChairsUpdateManyWithoutClinicInput | null
  Chair_finance_day?: Chair_finance_dayUpdateManyWithoutClinicInput | null
  Clinic_finance_procedure?: Clinic_finance_procedureUpdateManyWithoutClinicInput | null
  Patient?: PatientUpdateManyWithoutClinicInput | null
  Dentist?: DentistUpdateManyWithoutClinicInput | null
}

export type ClinicUpsertWithoutEmployeersInput = {
  update: ClinicUpdateWithoutEmployeersDataInput
  create: ClinicCreateWithoutEmployeersInput
}

export type ClinicUpdateOneRequiredWithoutEmployeersInput = {
  create?: ClinicCreateWithoutEmployeersInput
  connect?: ClinicWhereUniqueInput
  update?: ClinicUpdateWithoutEmployeersDataInput
  upsert?: ClinicUpsertWithoutEmployeersInput
}

export type EmployeerUpdateInput = {
  id?: string
  firstname?: string
  lastname?: string
  username?: string
  password?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  clinic?: ClinicUpdateOneRequiredWithoutEmployeersInput | null
  role?: Clinic_RolesUpdateOneRequiredWithoutEmployerInput | null
}

export type EmployeerUpdateManyMutationInput = {
  id?: string
  firstname?: string
  lastname?: string
  username?: string
  password?: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type EmployeerCreateWithoutRoleInput = {
  id?: string
  firstname: string
  lastname: string
  username?: string
  password?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  clinic: ClinicCreateOneWithoutEmployeersInput
}

export type EmployeerCreateManyWithoutRoleInput = {
  create?: Enumerable<EmployeerCreateWithoutRoleInput>
  connect?: Enumerable<EmployeerWhereUniqueInput>
}

export type Clinic_RolesCreateInput = {
  id?: string
  name: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  employer?: EmployeerCreateManyWithoutRoleInput | null
}

export type EmployeerUpdateWithoutRoleDataInput = {
  id?: string
  firstname?: string
  lastname?: string
  username?: string
  password?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  clinic?: ClinicUpdateOneRequiredWithoutEmployeersInput | null
}

export type EmployeerUpdateWithWhereUniqueWithoutRoleInput = {
  where: EmployeerWhereUniqueInput
  data: EmployeerUpdateWithoutRoleDataInput
}

export type EmployeerUpsertWithWhereUniqueWithoutRoleInput = {
  where: EmployeerWhereUniqueInput
  update: EmployeerUpdateWithoutRoleDataInput
  create: EmployeerCreateWithoutRoleInput
}

export type EmployeerUpdateManyWithoutRoleInput = {
  create?: Enumerable<EmployeerCreateWithoutRoleInput>
  connect?: Enumerable<EmployeerWhereUniqueInput>
  set?: Enumerable<EmployeerWhereUniqueInput>
  disconnect?: Enumerable<EmployeerWhereUniqueInput>
  delete?: Enumerable<EmployeerWhereUniqueInput>
  update?: Enumerable<EmployeerUpdateWithWhereUniqueWithoutRoleInput>
  updateMany?: Enumerable<EmployeerUpdateManyWithWhereNestedInput> | null
  deleteMany?: Enumerable<EmployeerScalarWhereInput>
  upsert?: Enumerable<EmployeerUpsertWithWhereUniqueWithoutRoleInput>
}

export type Clinic_RolesUpdateInput = {
  id?: string
  name?: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  employer?: EmployeerUpdateManyWithoutRoleInput | null
}

export type Clinic_RolesUpdateManyMutationInput = {
  id?: string
  name?: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type Dental_insuranceCreateInput = {
  id?: string
  name: string
  compensation_date?: number | null
  compensation_value?: number | null
  active?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  clinic?: ClinicCreateManyWithoutInsuransesInput | null
  procedures_values: Clinic_procedures_insurance_valuesCreateOneWithoutInsuranceInput
}

export type Dental_insuranceUpdateInput = {
  id?: string
  name?: string
  compensation_date?: number | null
  compensation_value?: number | null
  active?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  clinic?: ClinicUpdateManyWithoutInsuransesInput | null
  procedures_values?: Clinic_procedures_insurance_valuesUpdateOneRequiredWithoutInsuranceInput | null
}

export type Dental_insuranceUpdateManyMutationInput = {
  id?: string
  name?: string
  compensation_date?: number | null
  compensation_value?: number | null
  active?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type StringFilter = {
  equals?: string
  not?: string | StringFilter
  in?: Enumerable<string>
  notIn?: Enumerable<string>
  lt?: string
  lte?: string
  gt?: string
  gte?: string
  contains?: string
  startsWith?: string
  endsWith?: string
}

export type Contact_meansFilter = {
  equals?: Contact_means
  not?: Contact_means | Contact_meansFilter
  in?: Enumerable<Contact_means>
  notIn?: Enumerable<Contact_means>
}

export type BooleanFilter = {
  equals?: boolean
  not?: boolean | BooleanFilter
}

export type EmailFilter = {
  every?: EmailWhereInput
  some?: EmailWhereInput
  none?: EmailWhereInput
}

export type DateTimeFilter = {
  equals?: Date | string
  not?: Date | string | DateTimeFilter
  in?: Enumerable<Date | string>
  notIn?: Enumerable<Date | string>
  lt?: Date | string
  lte?: Date | string
  gt?: Date | string
  gte?: Date | string
}

export type NullableContact_meansFilter = {
  equals?: Contact_means | null
  not?: Contact_means | null | NullableContact_meansFilter
  in?: Enumerable<Contact_means> | null
  notIn?: Enumerable<Contact_means> | null
}

export type yes_noFilter = {
  equals?: yes_no
  not?: yes_no | yes_noFilter
  in?: Enumerable<yes_no>
  notIn?: Enumerable<yes_no>
}

export type NullableStringFilter = {
  equals?: string | null
  not?: string | null | NullableStringFilter
  in?: Enumerable<string> | null
  notIn?: Enumerable<string> | null
  lt?: string | null
  lte?: string | null
  gt?: string | null
  gte?: string | null
  contains?: string | null
  startsWith?: string | null
  endsWith?: string | null
}

export type NullableDateTimeFilter = {
  equals?: Date | string | null
  not?: Date | string | null | NullableDateTimeFilter
  in?: Enumerable<Date | string> | null
  notIn?: Enumerable<Date | string> | null
  lt?: Date | string | null
  lte?: Date | string | null
  gt?: Date | string | null
  gte?: Date | string | null
}

export type Nullableyes_noFilter = {
  equals?: yes_no | null
  not?: yes_no | null | Nullableyes_noFilter
  in?: Enumerable<yes_no> | null
  notIn?: Enumerable<yes_no> | null
}

export type NullableIntFilter = {
  equals?: number | null
  not?: number | null | NullableIntFilter
  in?: Enumerable<number> | null
  notIn?: Enumerable<number> | null
  lt?: number | null
  lte?: number | null
  gt?: number | null
  gte?: number | null
}

export type NullableHow_oftenFilter = {
  equals?: How_often | null
  not?: How_often | null | NullableHow_oftenFilter
  in?: Enumerable<How_often> | null
  notIn?: Enumerable<How_often> | null
}

export type Diet_questionnaireFilter = {
  every?: Diet_questionnaireWhereInput
  some?: Diet_questionnaireWhereInput
  none?: Diet_questionnaireWhereInput
}

export type NullableBooleanFilter = {
  equals?: boolean | null
  not?: boolean | null | NullableBooleanFilter
}

export type DentistFilter = {
  every?: DentistWhereInput
  some?: DentistWhereInput
  none?: DentistWhereInput
}

export type Implant_typesFilter = {
  equals?: Implant_types
  not?: Implant_types | Implant_typesFilter
  in?: Enumerable<Implant_types>
  notIn?: Enumerable<Implant_types>
}

export type NullableOrtodontic_treatment_typeFilter = {
  equals?: Ortodontic_treatment_type | null
  not?: Ortodontic_treatment_type | null | NullableOrtodontic_treatment_typeFilter
  in?: Enumerable<Ortodontic_treatment_type> | null
  notIn?: Enumerable<Ortodontic_treatment_type> | null
}

export type NullableFloatFilter = {
  equals?: number | null
  not?: number | null | NullableFloatFilter
  in?: Enumerable<number> | null
  notIn?: Enumerable<number> | null
  lt?: number | null
  lte?: number | null
  gt?: number | null
  gte?: number | null
}

export type NullableRestorations_typesFilter = {
  equals?: Restorations_types | null
  not?: Restorations_types | null | NullableRestorations_typesFilter
  in?: Enumerable<Restorations_types> | null
  notIn?: Enumerable<Restorations_types> | null
}

export type NullablePulp_statesFilter = {
  equals?: Pulp_states | null
  not?: Pulp_states | null | NullablePulp_statesFilter
  in?: Enumerable<Pulp_states> | null
  notIn?: Enumerable<Pulp_states> | null
}

export type PatientFilter = {
  every?: PatientWhereInput
  some?: PatientWhereInput
  none?: PatientWhereInput
}

export type FloatFilter = {
  equals?: number
  not?: number | FloatFilter
  in?: Enumerable<number>
  notIn?: Enumerable<number>
  lt?: number
  lte?: number
  gt?: number
  gte?: number
}

export type ClinicFilter = {
  every?: ClinicWhereInput
  some?: ClinicWhereInput
  none?: ClinicWhereInput
}

export type Treatment_evolutionFilter = {
  every?: Treatment_evolutionWhereInput
  some?: Treatment_evolutionWhereInput
  none?: Treatment_evolutionWhereInput
}

export type Clinic_procedures_insurance_valuesFilter = {
  every?: Clinic_procedures_insurance_valuesWhereInput
  some?: Clinic_procedures_insurance_valuesWhereInput
  none?: Clinic_procedures_insurance_valuesWhereInput
}

export type Payment_statusFilter = {
  equals?: Payment_status
  not?: Payment_status | Payment_statusFilter
  in?: Enumerable<Payment_status>
  notIn?: Enumerable<Payment_status>
}

export type Payment_methodFilter = {
  equals?: Payment_method
  not?: Payment_method | Payment_methodFilter
  in?: Enumerable<Payment_method>
  notIn?: Enumerable<Payment_method>
}

export type ProceduresFilter = {
  every?: ProceduresWhereInput
  some?: ProceduresWhereInput
  none?: ProceduresWhereInput
}

export type Clinic_finance_procedureFilter = {
  every?: Clinic_finance_procedureWhereInput
  some?: Clinic_finance_procedureWhereInput
  none?: Clinic_finance_procedureWhereInput
}

export type UUIDFilter = {
  equals?: string
  not?: string | UUIDFilter
  in?: Enumerable<string>
  notIn?: Enumerable<string>
  lt?: string
  lte?: string
  gt?: string
  gte?: string
  contains?: string
  startsWith?: string
  endsWith?: string
}

export type IntFilter = {
  equals?: number
  not?: number | IntFilter
  in?: Enumerable<number>
  notIn?: Enumerable<number>
  lt?: number
  lte?: number
  gt?: number
  gte?: number
}

export type GenderFilter = {
  equals?: Gender
  not?: Gender | GenderFilter
  in?: Enumerable<Gender>
  notIn?: Enumerable<Gender>
}

export type SpecializationsFilter = {
  equals?: Specializations
  not?: Specializations | SpecializationsFilter
  in?: Enumerable<Specializations>
  notIn?: Enumerable<Specializations>
}

export type Clinic_specializationsFilter = {
  every?: Clinic_specializationsWhereInput
  some?: Clinic_specializationsWhereInput
  none?: Clinic_specializationsWhereInput
}

export type OrtodonticsFilter = {
  every?: OrtodonticsWhereInput
  some?: OrtodonticsWhereInput
  none?: OrtodonticsWhereInput
}

export type ImplantologyFilter = {
  every?: ImplantologyWhereInput
  some?: ImplantologyWhereInput
  none?: ImplantologyWhereInput
}

export type PhonetypesFilter = {
  equals?: Phonetypes
  not?: Phonetypes | PhonetypesFilter
  in?: Enumerable<Phonetypes>
  notIn?: Enumerable<Phonetypes>
}

export type EmployeerFilter = {
  every?: EmployeerWhereInput
  some?: EmployeerWhereInput
  none?: EmployeerWhereInput
}

export type Chair_finance_dayFilter = {
  every?: Chair_finance_dayWhereInput
  some?: Chair_finance_dayWhereInput
  none?: Chair_finance_dayWhereInput
}

export type Clinic_phonesFilter = {
  every?: Clinic_phonesWhereInput
  some?: Clinic_phonesWhereInput
  none?: Clinic_phonesWhereInput
}

export type Dental_insuranceFilter = {
  every?: Dental_insuranceWhereInput
  some?: Dental_insuranceWhereInput
  none?: Dental_insuranceWhereInput
}

export type LanguageFilter = {
  equals?: Language
  not?: Language | LanguageFilter
  in?: Enumerable<Language>
  notIn?: Enumerable<Language>
}

export type LogsFilter = {
  every?: LogsWhereInput
  some?: LogsWhereInput
  none?: LogsWhereInput
}

export type Clinic_payment_informationFilter = {
  every?: Clinic_payment_informationWhereInput
  some?: Clinic_payment_informationWhereInput
  none?: Clinic_payment_informationWhereInput
}

export type Clinic_finance_optionsFilter = {
  every?: Clinic_finance_optionsWhereInput
  some?: Clinic_finance_optionsWhereInput
  none?: Clinic_finance_optionsWhereInput
}

export type Clinic_finance_monthFilter = {
  every?: Clinic_finance_monthWhereInput
  some?: Clinic_finance_monthWhereInput
  none?: Clinic_finance_monthWhereInput
}

export type Clinic_finance_dayFilter = {
  every?: Clinic_finance_dayWhereInput
  some?: Clinic_finance_dayWhereInput
  none?: Clinic_finance_dayWhereInput
}

export type ChairsFilter = {
  every?: ChairsWhereInput
  some?: ChairsWhereInput
  none?: ChairsWhereInput
}

export type ClinicOrderByInput = {
  registered_id?: OrderByArg | null
  cnpj?: OrderByArg | null
  socialreason?: OrderByArg | null
  fantasy_name?: OrderByArg | null
  multipleclinics?: OrderByArg | null
  numberofbranches?: OrderByArg | null
  dentalchairs?: OrderByArg | null
  averagepatientsperday?: OrderByArg | null
  country?: OrderByArg | null
  state?: OrderByArg | null
  city?: OrderByArg | null
  neighborhood?: OrderByArg | null
  CEP?: OrderByArg | null
  website?: OrderByArg | null
  password?: OrderByArg | null
  ssl_enabled?: OrderByArg | null
  two_factor_autentication?: OrderByArg | null
  access_blocked?: OrderByArg | null
  free_trial?: OrderByArg | null
  free_trial_days_left?: OrderByArg | null
  language?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type EmailOrderByInput = {
  id?: OrderByArg | null
  email?: OrderByArg | null
  clinid_id?: OrderByArg | null
  techinical_mananger_id?: OrderByArg | null
  legal_responsible_id?: OrderByArg | null
  dentist_id?: OrderByArg | null
  patient_id?: OrderByArg | null
  technicalmanagerCpf?: OrderByArg | null
  legalresponsibleCpf?: OrderByArg | null
  patientId?: OrderByArg | null
  dentistId?: OrderByArg | null
}

export type Diet_questionnaireOrderByInput = {
  id?: OrderByArg | null
  anamnesis_prontuary_id?: OrderByArg | null
  already_instructed_in_diet_by_a_CD?: OrderByArg | null
  if_yes_what_the_instructions?: OrderByArg | null
  importance_of_diet_in_oral_health?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type DentistOrderByInput = {
  id?: OrderByArg | null
  CRO_number?: OrderByArg | null
  firstname?: OrderByArg | null
  lastname?: OrderByArg | null
  username?: OrderByArg | null
  password?: OrderByArg | null
  contactmeans?: OrderByArg | null
  cellphone_number?: OrderByArg | null
  clinic_id?: OrderByArg | null
  active?: OrderByArg | null
  comission?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
  role?: OrderByArg | null
  clinicRegistered_id?: OrderByArg | null
}

export type PatientOrderByInput = {
  id?: OrderByArg | null
  clinic_prontuary_number?: OrderByArg | null
  fullname?: OrderByArg | null
  birth_date?: OrderByArg | null
  age?: OrderByArg | null
  gender?: OrderByArg | null
  brazilian_cpf?: OrderByArg | null
  brazilian_rg?: OrderByArg | null
  password?: OrderByArg | null
  clinic_id?: OrderByArg | null
  cellphone_number?: OrderByArg | null
  dont_know_id?: OrderByArg | null
  treatment_evolution_id?: OrderByArg | null
  contactmeans?: OrderByArg | null
  last_visit_dentist?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
  role?: OrderByArg | null
  clinicRegistered_id?: OrderByArg | null
}

export type ProceduresOrderByInput = {
  codigo_CID?: OrderByArg | null
  name?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Treatment_evolutionOrderByInput = {
  id?: OrderByArg | null
  hour?: OrderByArg | null
  date?: OrderByArg | null
  dentist_id?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Clinic_procedures_insurance_valuesOrderByInput = {
  procedure_id?: OrderByArg | null
  insurance_id?: OrderByArg | null
  cust?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Clinic_finance_procedureOrderByInput = {
  id?: OrderByArg | null
  clinid_id?: OrderByArg | null
  treatment_evolution_registry_id?: OrderByArg | null
  payment_status?: OrderByArg | null
  client_payment_type?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Clinic_specializationsOrderByInput = {
  id?: OrderByArg | null
  specialization?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
  dentistId?: OrderByArg | null
}

export type OrtodonticsOrderByInput = {
  id?: OrderByArg | null
  patient_id?: OrderByArg | null
  face_profile?: OrderByArg | null
  face_simetrics?: OrderByArg | null
  bite?: OrderByArg | null
  class?: OrderByArg | null
  ideal_occlusion?: OrderByArg | null
  if_no_whats_wrong_in_oclusion?: OrderByArg | null
  spee?: OrderByArg | null
  overbite?: OrderByArg | null
  overjet?: OrderByArg | null
  prevision_of_end?: OrderByArg | null
  ortodontics_treatment_type?: OrderByArg | null
  notes?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type ImplantologyOrderByInput = {
  id?: OrderByArg | null
  patient_id?: OrderByArg | null
  implant_type?: OrderByArg | null
  if_type_multiple_instaled_implants_number?: OrderByArg | null
  next_review_consult?: OrderByArg | null
  notes?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Clinic_phonesOrderByInput = {
  id?: OrderByArg | null
  clinic_id?: OrderByArg | null
  phonetype?: OrderByArg | null
  phone_number?: OrderByArg | null
}

export type EmployeerOrderByInput = {
  id?: OrderByArg | null
  firstname?: OrderByArg | null
  lastname?: OrderByArg | null
  username?: OrderByArg | null
  password?: OrderByArg | null
  clinic_id?: OrderByArg | null
  role_id?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Dental_insuranceOrderByInput = {
  id?: OrderByArg | null
  name?: OrderByArg | null
  compensation_date?: OrderByArg | null
  compensation_value?: OrderByArg | null
  active?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type LogsOrderByInput = {
  id?: OrderByArg | null
  clinic_id?: OrderByArg | null
  description?: OrderByArg | null
  createdAt?: OrderByArg | null
}

export type Clinic_payment_informationOrderByInput = {
  id?: OrderByArg | null
  clinic_id?: OrderByArg | null
  payment_method?: OrderByArg | null
  registered_credit_card?: OrderByArg | null
  registered_debit_card?: OrderByArg | null
  payment_day?: OrderByArg | null
  next_payment?: OrderByArg | null
  credit_card_number?: OrderByArg | null
  credit_card_CCV?: OrderByArg | null
  credit_card_name?: OrderByArg | null
  debit_card_number?: OrderByArg | null
  debit_card_CCV?: OrderByArg | null
  debit_card_name?: OrderByArg | null
  delayed_payment?: OrderByArg | null
  delayed_days?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Clinic_finance_optionsOrderByInput = {
  id?: OrderByArg | null
  calculation_hour_of_day?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Clinic_finance_monthOrderByInput = {
  id?: OrderByArg | null
  clinid_id?: OrderByArg | null
  month?: OrderByArg | null
  year?: OrderByArg | null
  wage_payment_day?: OrderByArg | null
  wages_paid?: OrderByArg | null
  total_wage?: OrderByArg | null
  dentists_comissions?: OrderByArg | null
  month_all_profit?: OrderByArg | null
  month_discounts?: OrderByArg | null
  month_brute_profit?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Clinic_finance_dayOrderByInput = {
  id?: OrderByArg | null
  clinid_id?: OrderByArg | null
  day?: OrderByArg | null
  month?: OrderByArg | null
  year?: OrderByArg | null
  total_income?: OrderByArg | null
  dentists_part?: OrderByArg | null
  clinic_income?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type ChairsOrderByInput = {
  id?: OrderByArg | null
  name?: OrderByArg | null
  clinid_id?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Chair_finance_dayOrderByInput = {
  chair_id?: OrderByArg | null
  clinid_id?: OrderByArg | null
  day?: OrderByArg | null
  month?: OrderByArg | null
  year?: OrderByArg | null
  total_income?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Clinic_procedures_particular_valuesOrderByInput = {
  procedure_id?: OrderByArg | null
  cust?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type ScheduleOrderByInput = {
  date?: OrderByArg | null
  hour?: OrderByArg | null
  dentist_id?: OrderByArg | null
  patient_id?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type TechnicalmanagerOrderByInput = {
  cpf?: OrderByArg | null
  fullname?: OrderByArg | null
  contactmeans?: OrderByArg | null
  active?: OrderByArg | null
  clinid_id?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type LegalresponsibleOrderByInput = {
  cpf?: OrderByArg | null
  fullname?: OrderByArg | null
  contactmeans?: OrderByArg | null
  active?: OrderByArg | null
  clinid_id?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type OdontogramOrderByInput = {
  id?: OrderByArg | null
  patient_id?: OrderByArg | null
  PSR_maded?: OrderByArg | null
  PSR_date?: OrderByArg | null
  first_sextant?: OrderByArg | null
  second_sextant?: OrderByArg | null
  third_sextant?: OrderByArg | null
  fourth_sextant?: OrderByArg | null
  fifth_sextant?: OrderByArg | null
  sixth_sextant?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit11OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit12OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit13OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit14OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit15OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit16OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit17OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit18OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit21OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit22OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit23OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit24OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit25OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit26OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit27OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit28OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit31OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit32OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit33OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit34OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit35OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit36OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit37OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit38OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit41OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit42OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit43OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit44OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit45OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit46OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit47OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit48OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit51OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit52OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit53OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit54OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit55OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit61OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit62OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit63OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit64OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit65OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit71OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit72OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit73OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit74OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit75OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit81OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit82OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit83OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit84OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Unit85OrderByInput = {
  id?: OrderByArg | null
  odontogram_id?: OrderByArg | null
  abscent?: OrderByArg | null
  notes?: OrderByArg | null
  mesial_vestibular_depth?: OrderByArg | null
  mesial_vestibular_gmh?: OrderByArg | null
  mesial_vestibular_lci?: OrderByArg | null
  mesial_vestibular_probing_bleeding?: OrderByArg | null
  medial_vestibular_depth?: OrderByArg | null
  medial_vestibular_gmh?: OrderByArg | null
  medial_vestibular_lci?: OrderByArg | null
  medial_vestibular_probing_bleeding?: OrderByArg | null
  distal_vestibular_depth?: OrderByArg | null
  distal_vestibular_gmh?: OrderByArg | null
  distal_vestibular_lci?: OrderByArg | null
  distal_vestibular_probing_bleeding?: OrderByArg | null
  mesial_lingual_depth?: OrderByArg | null
  mesial_lingual_gmh?: OrderByArg | null
  mesial_lingual_lci?: OrderByArg | null
  mesial_lingual_probing_bleeding?: OrderByArg | null
  medial_lingual_depth?: OrderByArg | null
  medial_lingual_gmh?: OrderByArg | null
  medial_lingual_lci?: OrderByArg | null
  medial_lingual_probing_bleeding?: OrderByArg | null
  distal_lingual_depth?: OrderByArg | null
  distal_lingual_gmh?: OrderByArg | null
  distal_lingual_lci?: OrderByArg | null
  distal_lingual_probing_bleeding?: OrderByArg | null
  mobility?: OrderByArg | null
  if_yes_mobility_level?: OrderByArg | null
  periogram_date?: OrderByArg | null
  higid?: OrderByArg | null
  vestibular_biofilm?: OrderByArg | null
  palatin_biofilm?: OrderByArg | null
  oclusal_biofilm?: OrderByArg | null
  mesial_biofilm?: OrderByArg | null
  distal_biofilm?: OrderByArg | null
  poor_restoration?: OrderByArg | null
  if_yes_what_type_of_restoration?: OrderByArg | null
  caries_white_spot_lesion?: OrderByArg | null
  if_yes_where_white_lesion?: OrderByArg | null
  active_carie?: OrderByArg | null
  inative_carie?: OrderByArg | null
  cavity_caries_lesion?: OrderByArg | null
  if_yes_where_cavity_lesion?: OrderByArg | null
  if_yes_depth?: OrderByArg | null
  extense_carie_lesion?: OrderByArg | null
  fluorosis_white_lesions?: OrderByArg | null
  if_yes_fuorosis_level?: OrderByArg | null
  black_hash?: OrderByArg | null
  enamel_fissure?: OrderByArg | null
  dentin_fissure?: OrderByArg | null
  if_yes_fissure_direction?: OrderByArg | null
  enamel_fracture?: OrderByArg | null
  if_yes_fracture_size?: OrderByArg | null
  dental_erosion?: OrderByArg | null
  dental_abfraction?: OrderByArg | null
  dental_atriction?: OrderByArg | null
  dental_abrasion?: OrderByArg | null
  dental_anomaly?: OrderByArg | null
  if_yes_anomaly_description?: OrderByArg | null
  initial_radiograph?: OrderByArg | null
  final_radiograph?: OrderByArg | null
  pulp_status?: OrderByArg | null
  canal_calcifications?: OrderByArg | null
  atresic_pulp_chamber?: OrderByArg | null
  canal_depth_probing?: OrderByArg | null
  canal_depth_in_mm?: OrderByArg | null
  number_of_roots?: OrderByArg | null
  number_of_canals?: OrderByArg | null
  acessory_canal?: OrderByArg | null
  lateral_canal?: OrderByArg | null
  hiper_cementosis?: OrderByArg | null
  bone_petrosis?: OrderByArg | null
  root_dilacerations?: OrderByArg | null
  cirurgy_indication?: OrderByArg | null
  reason_of_indication?: OrderByArg | null
  simple_removal?: OrderByArg | null
  difficult_removal?: OrderByArg | null
  antibiotcs_prevention_needed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type AnamnesisOrderByInput = {
  id?: OrderByArg | null
  patient_id?: OrderByArg | null
  last_dentist_visit?: OrderByArg | null
  last_procedure?: OrderByArg | null
  what_was_done?: OrderByArg | null
  treatment_is_planed?: OrderByArg | null
  What_treatment_is_planed?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Implantology_questionnaireOrderByInput = {
  id?: OrderByArg | null
  implantology_questionnaire_id?: OrderByArg | null
  have_implant?: OrderByArg | null
  if_yes_when_puted?: OrderByArg | null
  if_yes_last_review_consult?: OrderByArg | null
  if_yes_the_cirurgy_needed_bone_graft?: OrderByArg | null
  want_to_put_implants?: OrderByArg | null
  if_yes_why_do_you_want?: OrderByArg | null
  if_yes_already_looked_for_professional?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Ortodontics_questionnaireOrderByInput = {
  id?: OrderByArg | null
  ortodontic_prontuary_id?: OrderByArg | null
  reason_for_tratment?: OrderByArg | null
  already_have_in_treatment?: OrderByArg | null
  if_yes_how_long_takes_previus_treatment?: OrderByArg | null
  if_yes_you_have_panoramic_radiography?: OrderByArg | null
  if_yes_when_panoramic_radiography_was_taken?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Oral_health_questionnaireOrderByInput = {
  id?: OrderByArg | null
  anamnesis_prontuary_id?: OrderByArg | null
  you_use_anykind_protesis?: OrderByArg | null
  whats_the_protesis?: OrderByArg | null
  type_of_teeth_brush?: OrderByArg | null
  how_many_times_by_day?: OrderByArg | null
  you_floss?: OrderByArg | null
  if_yes_how_many_times?: OrderByArg | null
  you_use_any_mouthwash?: OrderByArg | null
  if_yes_how_often?: OrderByArg | null
  dental_clenching?: OrderByArg | null
  if_yes_when_in_day?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type TMJ_problems_questionnaireOrderByInput = {
  id?: OrderByArg | null
  ortodontic_prontuary_id?: OrderByArg | null
  you_consider_have_TMJ_problem?: OrderByArg | null
  when_the_simptoms_start?: OrderByArg | null
  difficulty_opening_your_mouth?: OrderByArg | null
  pain_when_opening_closing_mouth?: OrderByArg | null
  crackles_when_opening_closing_mouth?: OrderByArg | null
  if_yes_one_or_both_sides?: OrderByArg | null
  if_one_whats_side_crackles?: OrderByArg | null
  TMJ_pain_at_rest?: OrderByArg | null
  already_looked_for_profissional_treatment?: OrderByArg | null
  if_yes_when_was_treated?: OrderByArg | null
  if_yes_you_made_any_image_exams?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Vital_signs_questionnaireOrderByInput = {
  id?: OrderByArg | null
  anamnesis_prontuary_id?: OrderByArg | null
  heart_beats_per_minute?: OrderByArg | null
  arterial_pressure?: OrderByArg | null
  breaths_per_minute?: OrderByArg | null
  temperature_in_celcius?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Main_anamnesis_questionnaireOrderByInput = {
  id?: OrderByArg | null
  anamnesis_prontuary_id?: OrderByArg | null
  main_issue?: OrderByArg | null
  recent_disease_history?: OrderByArg | null
  undergoing_medical_treatment?: OrderByArg | null
  if_yes_what_treatment?: OrderByArg | null
  taking_any_medication?: OrderByArg | null
  if_yes_what_medication?: OrderByArg | null
  already_used_local_anestesics?: OrderByArg | null
  you_presented_reaction?: OrderByArg | null
  allergic_to_any_medicine?: OrderByArg | null
  if_yes_what_medicine?: OrderByArg | null
  allergic_to_latex?: OrderByArg | null
  has_any_know_blood_issues?: OrderByArg | null
  use_acetil_salicilic_acid?: OrderByArg | null
  if_yes_for_what?: OrderByArg | null
  you_have_already_made_blood_testing?: OrderByArg | null
  if_yes_when_made_it?: OrderByArg | null
  has_any_importanting_bleeding?: OrderByArg | null
  if_yes_when?: OrderByArg | null
  if_yes_how_long_to_stop?: OrderByArg | null
  have_problems_with_healing?: OrderByArg | null
  has_any_know_tireoids_issues?: OrderByArg | null
  has_any_know_hormonal_issues?: OrderByArg | null
  you_are_using_any_corticosteroids?: OrderByArg | null
  diabetes_mellitus?: OrderByArg | null
  if_yes_any_treatment_for_diabetes?: OrderByArg | null
  any_heart_problems?: OrderByArg | null
  if_yes_what_hearth_problem?: OrderByArg | null
  arterial_hypertension?: OrderByArg | null
  if_yes_any_treatment_for_hypertension?: OrderByArg | null
  breathing_problems?: OrderByArg | null
  if_yes_what_breathing_problem?: OrderByArg | null
  kidney_damage?: OrderByArg | null
  if_yes_what_kidney_problem?: OrderByArg | null
  gastric_problems?: OrderByArg | null
  if_yes_you_looked_for_gastric_doctor?: OrderByArg | null
  if_yes_what_gastric_problems?: OrderByArg | null
  have_rheumatic_fever?: OrderByArg | null
  joints_problems_or_reumatics?: OrderByArg | null
  if_yes_you_looked_for_reaumatics_doctor?: OrderByArg | null
  use_drugs?: OrderByArg | null
  if_yes_what_drug?: OrderByArg | null
  smoker?: OrderByArg | null
  if_yes_how_many_cigarretes_perday?: OrderByArg | null
  consider_a_alcolic_addicted?: OrderByArg | null
  if_yes_when_was_the_last_drink?: OrderByArg | null
  family_background?: OrderByArg | null
  if_yes_what_familys_problems?: OrderByArg | null
  preagnant?: OrderByArg | null
  if_yes_how_many_months?: OrderByArg | null
  take_contraceptives?: OrderByArg | null
  what_contraceptives?: OrderByArg | null
  are_breastfeeding?: OrderByArg | null
  entered_the_process_of_menopause?: OrderByArg | null
  if_yes_guided_by_the_gynecologist?: OrderByArg | null
  take_hormone?: OrderByArg | null
  take_calcium?: OrderByArg | null
  terms_readed?: OrderByArg | null
  patient_signed?: OrderByArg | null
  signed_date?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

export type Dont_know_questionsOrderByInput = {
  id?: OrderByArg | null
  question?: OrderByArg | null
  questionnaire_id?: OrderByArg | null
}

export type Clinic_RolesOrderByInput = {
  id?: OrderByArg | null
  name?: OrderByArg | null
  description?: OrderByArg | null
  createdAt?: OrderByArg | null
  updatedAt?: OrderByArg | null
}

/**
 * Batch Payload for updateMany & deleteMany
 */

export type BatchPayload = {
  count: number
}

/**
 * DMMF
 */
export declare const dmmf: DMMF.Document;
export {};
